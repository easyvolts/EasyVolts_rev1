

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Nov 03 18:45:30 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    22                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    23                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1
    27                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1
    28                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1
    29                           	psect	bssBANK11,global,class=BANK11,space=1,delta=1
    30                           	psect	clrtext,global,class=CODE,delta=2
    31                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    32                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    34                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2
    37                           	psect	text2,local,class=CODE,merge=1,delta=2
    38                           	psect	text3,local,class=CODE,merge=1,delta=2
    39                           	psect	text4,local,class=CODE,merge=1,delta=2
    40                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text6,local,class=CODE,merge=1,delta=2
    42                           	psect	text7,local,class=CODE,merge=1,delta=2
    43                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text10,local,class=CODE,merge=1,delta=2
    46                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text12,local,class=CODE,merge=1,delta=2
    48                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text16,local,class=CODE,merge=1,delta=2
    52                           	psect	text17,local,class=CODE,merge=1,delta=2
    53                           	psect	text18,local,class=CODE,merge=1,delta=2
    54                           	psect	text19,local,class=CODE,merge=1,delta=2
    55                           	psect	text20,local,class=CODE,merge=1,delta=2
    56                           	psect	text21,local,class=CODE,merge=1,delta=2
    57                           	psect	text22,local,class=CODE,merge=1,delta=2
    58                           	psect	text23,local,class=CODE,merge=1,delta=2
    59                           	psect	text24,local,class=CODE,merge=1,delta=2
    60                           	psect	text25,local,class=CODE,merge=1,delta=2
    61                           	psect	text26,local,class=CODE,merge=1,delta=2
    62                           	psect	text27,local,class=CODE,merge=1,delta=2
    63                           	psect	text28,local,class=CODE,merge=1,delta=2
    64                           	psect	text29,local,class=CODE,merge=1,delta=2
    65                           	psect	text30,local,class=CODE,merge=1,delta=2
    66                           	psect	text31,local,class=CODE,merge=1,delta=2
    67                           	psect	text32,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	psect	text34,local,class=CODE,merge=1,delta=2
    70                           	psect	text35,local,class=CODE,merge=1,delta=2
    71                           	psect	text36,local,class=CODE,merge=1,delta=2
    72                           	psect	text37,local,class=CODE,merge=1,delta=2
    73                           	psect	text38,local,class=CODE,merge=1,delta=2
    74                           	psect	text39,local,class=CODE,merge=1,delta=2
    75                           	psect	text40,local,class=CODE,merge=1,delta=2
    76                           	psect	text41,local,class=CODE,merge=1,delta=2
    77                           	psect	text42,local,class=CODE,merge=1,delta=2
    78                           	psect	text43,local,class=CODE,merge=1,delta=2
    79                           	psect	text44,local,class=CODE,merge=1,delta=2
    80                           	psect	text45,local,class=CODE,merge=1,delta=2
    81                           	psect	text46,local,class=CODE,merge=1,delta=2
    82                           	psect	text47,local,class=CODE,merge=1,delta=2
    83                           	psect	text48,local,class=CODE,merge=1,delta=2
    84                           	psect	text49,local,class=CODE,merge=1,delta=2
    85                           	psect	text50,local,class=CODE,merge=1,delta=2
    86                           	psect	text51,local,class=CODE,merge=1,delta=2
    87                           	psect	text52,local,class=CODE,merge=1,delta=2
    88                           	psect	swtext1,local,class=CONST,delta=2
    89                           	psect	text53,local,class=CODE,merge=1,delta=2
    90                           	psect	text54,local,class=CODE,merge=1,delta=2
    91                           	psect	text55,local,class=CODE,merge=1,delta=2
    92                           	psect	text56,local,class=CODE,merge=1,delta=2
    93                           	psect	text57,local,class=CODE,merge=1,delta=2
    94                           	psect	text58,local,class=CODE,merge=1,delta=2
    95                           	psect	text59,local,class=CODE,merge=1,delta=2
    96                           	psect	text60,local,class=CODE,merge=1,delta=2
    97                           	psect	text61,local,class=CODE,merge=1,delta=2
    98                           	psect	text62,local,class=CODE,merge=1,delta=2
    99                           	psect	text63,local,class=CODE,merge=1,delta=2
   100                           	psect	text64,local,class=CODE,merge=1,delta=2
   101                           	psect	text65,local,class=CODE,merge=1,delta=2
   102                           	psect	text66,local,class=CODE,merge=1,delta=2
   103                           	psect	text67,local,class=CODE,merge=1,delta=2
   104                           	psect	text68,local,class=CODE,merge=1,delta=2
   105                           	psect	text69,local,class=CODE,merge=1,delta=2
   106                           	psect	text70,local,class=CODE,merge=1,delta=2
   107                           	psect	text71,local,class=CODE,merge=1,delta=2
   108                           	psect	text72,local,class=CODE,merge=1,delta=2
   109                           	psect	text73,local,class=CODE,merge=1,delta=2
   110                           	psect	text74,local,class=CODE,merge=1,delta=2
   111                           	psect	text75,local,class=CODE,merge=1,delta=2
   112                           	psect	text76,local,class=CODE,merge=1,delta=2
   113                           	psect	text77,local,class=CODE,merge=1,delta=2
   114                           	psect	text78,local,class=CODE,merge=1,delta=2
   115                           	dabs	1,0x20,80,_BDT
   116                           	dabs	1,0x120,64,_cdc_data_rx2
   117                           	dabs	1,0xA0,64,_cdc_data_tx2
   118                           	dabs	1,0xA0,64,_cdc_data_tx
   119                           	dabs	1,0xA8,8,_CtrlTrfData
   120                           	dabs	1,0xA0,8,_SetupPkt
   121                           	dabs	1,0x120,64,_cdc_data_rx
   122                           	dabs	1,0x7E,2
   123  0000                     
   124                           ; Version 1.44
   125                           ; Generated 14/09/2017 GMT
   126                           ; 
   127                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC16F1455 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000E                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  008C                     	;# 
   184  008E                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  010C                     	;# 
   200  010E                     	;# 
   201  0111                     	;# 
   202  0112                     	;# 
   203  0113                     	;# 
   204  0114                     	;# 
   205  0115                     	;# 
   206  0116                     	;# 
   207  0117                     	;# 
   208  0118                     	;# 
   209  0119                     	;# 
   210  011D                     	;# 
   211  018C                     	;# 
   212  018E                     	;# 
   213  0191                     	;# 
   214  0191                     	;# 
   215  0192                     	;# 
   216  0193                     	;# 
   217  0193                     	;# 
   218  0194                     	;# 
   219  0195                     	;# 
   220  0196                     	;# 
   221  0197                     	;# 
   222  0199                     	;# 
   223  019A                     	;# 
   224  019B                     	;# 
   225  019B                     	;# 
   226  019C                     	;# 
   227  019D                     	;# 
   228  019E                     	;# 
   229  019F                     	;# 
   230  020C                     	;# 
   231  0211                     	;# 
   232  0211                     	;# 
   233  0212                     	;# 
   234  0212                     	;# 
   235  0213                     	;# 
   236  0213                     	;# 
   237  0214                     	;# 
   238  0214                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0216                     	;# 
   243  0216                     	;# 
   244  0217                     	;# 
   245  0217                     	;# 
   246  0391                     	;# 
   247  0392                     	;# 
   248  0393                     	;# 
   249  039A                     	;# 
   250  039B                     	;# 
   251  0611                     	;# 
   252  0612                     	;# 
   253  0613                     	;# 
   254  0613                     	;# 
   255  0614                     	;# 
   256  0615                     	;# 
   257  0616                     	;# 
   258  0616                     	;# 
   259  0691                     	;# 
   260  0692                     	;# 
   261  0693                     	;# 
   262  0694                     	;# 
   263  0695                     	;# 
   264  0E8E                     	;# 
   265  0E8F                     	;# 
   266  0E90                     	;# 
   267  0E91                     	;# 
   268  0E92                     	;# 
   269  0E93                     	;# 
   270  0E94                     	;# 
   271  0E94                     	;# 
   272  0E95                     	;# 
   273  0E96                     	;# 
   274  0E97                     	;# 
   275  0E98                     	;# 
   276  0E99                     	;# 
   277  0E9A                     	;# 
   278  0E9B                     	;# 
   279  0E9C                     	;# 
   280  0E9D                     	;# 
   281  0E9E                     	;# 
   282  0E9F                     	;# 
   283  0FE4                     	;# 
   284  0FE5                     	;# 
   285  0FE6                     	;# 
   286  0FE7                     	;# 
   287  0FE8                     	;# 
   288  0FE9                     	;# 
   289  0FEA                     	;# 
   290  0FEB                     	;# 
   291  0FED                     	;# 
   292  0FEE                     	;# 
   293  0FEF                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000E                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  008C                     	;# 
   320  008E                     	;# 
   321  0091                     	;# 
   322  0092                     	;# 
   323  0095                     	;# 
   324  0096                     	;# 
   325  0097                     	;# 
   326  0098                     	;# 
   327  0099                     	;# 
   328  009A                     	;# 
   329  009B                     	;# 
   330  009B                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009E                     	;# 
   334  009F                     	;# 
   335  010C                     	;# 
   336  010E                     	;# 
   337  0111                     	;# 
   338  0112                     	;# 
   339  0113                     	;# 
   340  0114                     	;# 
   341  0115                     	;# 
   342  0116                     	;# 
   343  0117                     	;# 
   344  0118                     	;# 
   345  0119                     	;# 
   346  011D                     	;# 
   347  018C                     	;# 
   348  018E                     	;# 
   349  0191                     	;# 
   350  0191                     	;# 
   351  0192                     	;# 
   352  0193                     	;# 
   353  0193                     	;# 
   354  0194                     	;# 
   355  0195                     	;# 
   356  0196                     	;# 
   357  0197                     	;# 
   358  0199                     	;# 
   359  019A                     	;# 
   360  019B                     	;# 
   361  019B                     	;# 
   362  019C                     	;# 
   363  019D                     	;# 
   364  019E                     	;# 
   365  019F                     	;# 
   366  020C                     	;# 
   367  0211                     	;# 
   368  0211                     	;# 
   369  0212                     	;# 
   370  0212                     	;# 
   371  0213                     	;# 
   372  0213                     	;# 
   373  0214                     	;# 
   374  0214                     	;# 
   375  0215                     	;# 
   376  0215                     	;# 
   377  0215                     	;# 
   378  0216                     	;# 
   379  0216                     	;# 
   380  0217                     	;# 
   381  0217                     	;# 
   382  0391                     	;# 
   383  0392                     	;# 
   384  0393                     	;# 
   385  039A                     	;# 
   386  039B                     	;# 
   387  0611                     	;# 
   388  0612                     	;# 
   389  0613                     	;# 
   390  0613                     	;# 
   391  0614                     	;# 
   392  0615                     	;# 
   393  0616                     	;# 
   394  0616                     	;# 
   395  0691                     	;# 
   396  0692                     	;# 
   397  0693                     	;# 
   398  0694                     	;# 
   399  0695                     	;# 
   400  0E8E                     	;# 
   401  0E8F                     	;# 
   402  0E90                     	;# 
   403  0E91                     	;# 
   404  0E92                     	;# 
   405  0E93                     	;# 
   406  0E94                     	;# 
   407  0E94                     	;# 
   408  0E95                     	;# 
   409  0E96                     	;# 
   410  0E97                     	;# 
   411  0E98                     	;# 
   412  0E99                     	;# 
   413  0E9A                     	;# 
   414  0E9B                     	;# 
   415  0E9C                     	;# 
   416  0E9D                     	;# 
   417  0E9E                     	;# 
   418  0E9F                     	;# 
   419  0FE4                     	;# 
   420  0FE5                     	;# 
   421  0FE6                     	;# 
   422  0FE7                     	;# 
   423  0FE8                     	;# 
   424  0FE9                     	;# 
   425  0FEA                     	;# 
   426  0FEB                     	;# 
   427  0FED                     	;# 
   428  0FEE                     	;# 
   429  0FEF                     	;# 
   430  0000                     	;# 
   431  0001                     	;# 
   432  0002                     	;# 
   433  0003                     	;# 
   434  0004                     	;# 
   435  0005                     	;# 
   436  0006                     	;# 
   437  0007                     	;# 
   438  0008                     	;# 
   439  0009                     	;# 
   440  000A                     	;# 
   441  000B                     	;# 
   442  000C                     	;# 
   443  000E                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0015                     	;# 
   447  0016                     	;# 
   448  0016                     	;# 
   449  0017                     	;# 
   450  0018                     	;# 
   451  0019                     	;# 
   452  001A                     	;# 
   453  001B                     	;# 
   454  001C                     	;# 
   455  008C                     	;# 
   456  008E                     	;# 
   457  0091                     	;# 
   458  0092                     	;# 
   459  0095                     	;# 
   460  0096                     	;# 
   461  0097                     	;# 
   462  0098                     	;# 
   463  0099                     	;# 
   464  009A                     	;# 
   465  009B                     	;# 
   466  009B                     	;# 
   467  009C                     	;# 
   468  009D                     	;# 
   469  009E                     	;# 
   470  009F                     	;# 
   471  010C                     	;# 
   472  010E                     	;# 
   473  0111                     	;# 
   474  0112                     	;# 
   475  0113                     	;# 
   476  0114                     	;# 
   477  0115                     	;# 
   478  0116                     	;# 
   479  0117                     	;# 
   480  0118                     	;# 
   481  0119                     	;# 
   482  011D                     	;# 
   483  018C                     	;# 
   484  018E                     	;# 
   485  0191                     	;# 
   486  0191                     	;# 
   487  0192                     	;# 
   488  0193                     	;# 
   489  0193                     	;# 
   490  0194                     	;# 
   491  0195                     	;# 
   492  0196                     	;# 
   493  0197                     	;# 
   494  0199                     	;# 
   495  019A                     	;# 
   496  019B                     	;# 
   497  019B                     	;# 
   498  019C                     	;# 
   499  019D                     	;# 
   500  019E                     	;# 
   501  019F                     	;# 
   502  020C                     	;# 
   503  0211                     	;# 
   504  0211                     	;# 
   505  0212                     	;# 
   506  0212                     	;# 
   507  0213                     	;# 
   508  0213                     	;# 
   509  0214                     	;# 
   510  0214                     	;# 
   511  0215                     	;# 
   512  0215                     	;# 
   513  0215                     	;# 
   514  0216                     	;# 
   515  0216                     	;# 
   516  0217                     	;# 
   517  0217                     	;# 
   518  0391                     	;# 
   519  0392                     	;# 
   520  0393                     	;# 
   521  039A                     	;# 
   522  039B                     	;# 
   523  0611                     	;# 
   524  0612                     	;# 
   525  0613                     	;# 
   526  0613                     	;# 
   527  0614                     	;# 
   528  0615                     	;# 
   529  0616                     	;# 
   530  0616                     	;# 
   531  0691                     	;# 
   532  0692                     	;# 
   533  0693                     	;# 
   534  0694                     	;# 
   535  0695                     	;# 
   536  0E8E                     	;# 
   537  0E8F                     	;# 
   538  0E90                     	;# 
   539  0E91                     	;# 
   540  0E92                     	;# 
   541  0E93                     	;# 
   542  0E94                     	;# 
   543  0E94                     	;# 
   544  0E95                     	;# 
   545  0E96                     	;# 
   546  0E97                     	;# 
   547  0E98                     	;# 
   548  0E99                     	;# 
   549  0E9A                     	;# 
   550  0E9B                     	;# 
   551  0E9C                     	;# 
   552  0E9D                     	;# 
   553  0E9E                     	;# 
   554  0E9F                     	;# 
   555  0FE4                     	;# 
   556  0FE5                     	;# 
   557  0FE6                     	;# 
   558  0FE7                     	;# 
   559  0FE8                     	;# 
   560  0FE9                     	;# 
   561  0FEA                     	;# 
   562  0FEB                     	;# 
   563  0FED                     	;# 
   564  0FEE                     	;# 
   565  0FEF                     	;# 
   566  0000                     	;# 
   567  0001                     	;# 
   568  0002                     	;# 
   569  0003                     	;# 
   570  0004                     	;# 
   571  0005                     	;# 
   572  0006                     	;# 
   573  0007                     	;# 
   574  0008                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000E                     	;# 
   580  0011                     	;# 
   581  0012                     	;# 
   582  0015                     	;# 
   583  0016                     	;# 
   584  0016                     	;# 
   585  0017                     	;# 
   586  0018                     	;# 
   587  0019                     	;# 
   588  001A                     	;# 
   589  001B                     	;# 
   590  001C                     	;# 
   591  008C                     	;# 
   592  008E                     	;# 
   593  0091                     	;# 
   594  0092                     	;# 
   595  0095                     	;# 
   596  0096                     	;# 
   597  0097                     	;# 
   598  0098                     	;# 
   599  0099                     	;# 
   600  009A                     	;# 
   601  009B                     	;# 
   602  009B                     	;# 
   603  009C                     	;# 
   604  009D                     	;# 
   605  009E                     	;# 
   606  009F                     	;# 
   607  010C                     	;# 
   608  010E                     	;# 
   609  0111                     	;# 
   610  0112                     	;# 
   611  0113                     	;# 
   612  0114                     	;# 
   613  0115                     	;# 
   614  0116                     	;# 
   615  0117                     	;# 
   616  0118                     	;# 
   617  0119                     	;# 
   618  011D                     	;# 
   619  018C                     	;# 
   620  018E                     	;# 
   621  0191                     	;# 
   622  0191                     	;# 
   623  0192                     	;# 
   624  0193                     	;# 
   625  0193                     	;# 
   626  0194                     	;# 
   627  0195                     	;# 
   628  0196                     	;# 
   629  0197                     	;# 
   630  0199                     	;# 
   631  019A                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019C                     	;# 
   635  019D                     	;# 
   636  019E                     	;# 
   637  019F                     	;# 
   638  020C                     	;# 
   639  0211                     	;# 
   640  0211                     	;# 
   641  0212                     	;# 
   642  0212                     	;# 
   643  0213                     	;# 
   644  0213                     	;# 
   645  0214                     	;# 
   646  0214                     	;# 
   647  0215                     	;# 
   648  0215                     	;# 
   649  0215                     	;# 
   650  0216                     	;# 
   651  0216                     	;# 
   652  0217                     	;# 
   653  0217                     	;# 
   654  0391                     	;# 
   655  0392                     	;# 
   656  0393                     	;# 
   657  039A                     	;# 
   658  039B                     	;# 
   659  0611                     	;# 
   660  0612                     	;# 
   661  0613                     	;# 
   662  0613                     	;# 
   663  0614                     	;# 
   664  0615                     	;# 
   665  0616                     	;# 
   666  0616                     	;# 
   667  0691                     	;# 
   668  0692                     	;# 
   669  0693                     	;# 
   670  0694                     	;# 
   671  0695                     	;# 
   672  0E8E                     	;# 
   673  0E8F                     	;# 
   674  0E90                     	;# 
   675  0E91                     	;# 
   676  0E92                     	;# 
   677  0E93                     	;# 
   678  0E94                     	;# 
   679  0E94                     	;# 
   680  0E95                     	;# 
   681  0E96                     	;# 
   682  0E97                     	;# 
   683  0E98                     	;# 
   684  0E99                     	;# 
   685  0E9A                     	;# 
   686  0E9B                     	;# 
   687  0E9C                     	;# 
   688  0E9D                     	;# 
   689  0E9E                     	;# 
   690  0E9F                     	;# 
   691  0FE4                     	;# 
   692  0FE5                     	;# 
   693  0FE6                     	;# 
   694  0FE7                     	;# 
   695  0FE8                     	;# 
   696  0FE9                     	;# 
   697  0FEA                     	;# 
   698  0FEB                     	;# 
   699  0FED                     	;# 
   700  0FEE                     	;# 
   701  0FEF                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0008                     	;# 
   711  0009                     	;# 
   712  000A                     	;# 
   713  000B                     	;# 
   714  000C                     	;# 
   715  000E                     	;# 
   716  0011                     	;# 
   717  0012                     	;# 
   718  0015                     	;# 
   719  0016                     	;# 
   720  0016                     	;# 
   721  0017                     	;# 
   722  0018                     	;# 
   723  0019                     	;# 
   724  001A                     	;# 
   725  001B                     	;# 
   726  001C                     	;# 
   727  008C                     	;# 
   728  008E                     	;# 
   729  0091                     	;# 
   730  0092                     	;# 
   731  0095                     	;# 
   732  0096                     	;# 
   733  0097                     	;# 
   734  0098                     	;# 
   735  0099                     	;# 
   736  009A                     	;# 
   737  009B                     	;# 
   738  009B                     	;# 
   739  009C                     	;# 
   740  009D                     	;# 
   741  009E                     	;# 
   742  009F                     	;# 
   743  010C                     	;# 
   744  010E                     	;# 
   745  0111                     	;# 
   746  0112                     	;# 
   747  0113                     	;# 
   748  0114                     	;# 
   749  0115                     	;# 
   750  0116                     	;# 
   751  0117                     	;# 
   752  0118                     	;# 
   753  0119                     	;# 
   754  011D                     	;# 
   755  018C                     	;# 
   756  018E                     	;# 
   757  0191                     	;# 
   758  0191                     	;# 
   759  0192                     	;# 
   760  0193                     	;# 
   761  0193                     	;# 
   762  0194                     	;# 
   763  0195                     	;# 
   764  0196                     	;# 
   765  0197                     	;# 
   766  0199                     	;# 
   767  019A                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019C                     	;# 
   771  019D                     	;# 
   772  019E                     	;# 
   773  019F                     	;# 
   774  020C                     	;# 
   775  0211                     	;# 
   776  0211                     	;# 
   777  0212                     	;# 
   778  0212                     	;# 
   779  0213                     	;# 
   780  0213                     	;# 
   781  0214                     	;# 
   782  0214                     	;# 
   783  0215                     	;# 
   784  0215                     	;# 
   785  0215                     	;# 
   786  0216                     	;# 
   787  0216                     	;# 
   788  0217                     	;# 
   789  0217                     	;# 
   790  0391                     	;# 
   791  0392                     	;# 
   792  0393                     	;# 
   793  039A                     	;# 
   794  039B                     	;# 
   795  0611                     	;# 
   796  0612                     	;# 
   797  0613                     	;# 
   798  0613                     	;# 
   799  0614                     	;# 
   800  0615                     	;# 
   801  0616                     	;# 
   802  0616                     	;# 
   803  0691                     	;# 
   804  0692                     	;# 
   805  0693                     	;# 
   806  0694                     	;# 
   807  0695                     	;# 
   808  0E8E                     	;# 
   809  0E8F                     	;# 
   810  0E90                     	;# 
   811  0E91                     	;# 
   812  0E92                     	;# 
   813  0E93                     	;# 
   814  0E94                     	;# 
   815  0E94                     	;# 
   816  0E95                     	;# 
   817  0E96                     	;# 
   818  0E97                     	;# 
   819  0E98                     	;# 
   820  0E99                     	;# 
   821  0E9A                     	;# 
   822  0E9B                     	;# 
   823  0E9C                     	;# 
   824  0E9D                     	;# 
   825  0E9E                     	;# 
   826  0E9F                     	;# 
   827  0FE4                     	;# 
   828  0FE5                     	;# 
   829  0FE6                     	;# 
   830  0FE7                     	;# 
   831  0FE8                     	;# 
   832  0FE9                     	;# 
   833  0FEA                     	;# 
   834  0FEB                     	;# 
   835  0FED                     	;# 
   836  0FEE                     	;# 
   837  0FEF                     	;# 
   838  0000                     	;# 
   839  0001                     	;# 
   840  0002                     	;# 
   841  0003                     	;# 
   842  0004                     	;# 
   843  0005                     	;# 
   844  0006                     	;# 
   845  0007                     	;# 
   846  0008                     	;# 
   847  0009                     	;# 
   848  000A                     	;# 
   849  000B                     	;# 
   850  000C                     	;# 
   851  000E                     	;# 
   852  0011                     	;# 
   853  0012                     	;# 
   854  0015                     	;# 
   855  0016                     	;# 
   856  0016                     	;# 
   857  0017                     	;# 
   858  0018                     	;# 
   859  0019                     	;# 
   860  001A                     	;# 
   861  001B                     	;# 
   862  001C                     	;# 
   863  008C                     	;# 
   864  008E                     	;# 
   865  0091                     	;# 
   866  0092                     	;# 
   867  0095                     	;# 
   868  0096                     	;# 
   869  0097                     	;# 
   870  0098                     	;# 
   871  0099                     	;# 
   872  009A                     	;# 
   873  009B                     	;# 
   874  009B                     	;# 
   875  009C                     	;# 
   876  009D                     	;# 
   877  009E                     	;# 
   878  009F                     	;# 
   879  010C                     	;# 
   880  010E                     	;# 
   881  0111                     	;# 
   882  0112                     	;# 
   883  0113                     	;# 
   884  0114                     	;# 
   885  0115                     	;# 
   886  0116                     	;# 
   887  0117                     	;# 
   888  0118                     	;# 
   889  0119                     	;# 
   890  011D                     	;# 
   891  018C                     	;# 
   892  018E                     	;# 
   893  0191                     	;# 
   894  0191                     	;# 
   895  0192                     	;# 
   896  0193                     	;# 
   897  0193                     	;# 
   898  0194                     	;# 
   899  0195                     	;# 
   900  0196                     	;# 
   901  0197                     	;# 
   902  0199                     	;# 
   903  019A                     	;# 
   904  019B                     	;# 
   905  019B                     	;# 
   906  019C                     	;# 
   907  019D                     	;# 
   908  019E                     	;# 
   909  019F                     	;# 
   910  020C                     	;# 
   911  0211                     	;# 
   912  0211                     	;# 
   913  0212                     	;# 
   914  0212                     	;# 
   915  0213                     	;# 
   916  0213                     	;# 
   917  0214                     	;# 
   918  0214                     	;# 
   919  0215                     	;# 
   920  0215                     	;# 
   921  0215                     	;# 
   922  0216                     	;# 
   923  0216                     	;# 
   924  0217                     	;# 
   925  0217                     	;# 
   926  0391                     	;# 
   927  0392                     	;# 
   928  0393                     	;# 
   929  039A                     	;# 
   930  039B                     	;# 
   931  0611                     	;# 
   932  0612                     	;# 
   933  0613                     	;# 
   934  0613                     	;# 
   935  0614                     	;# 
   936  0615                     	;# 
   937  0616                     	;# 
   938  0616                     	;# 
   939  0691                     	;# 
   940  0692                     	;# 
   941  0693                     	;# 
   942  0694                     	;# 
   943  0695                     	;# 
   944  0E8E                     	;# 
   945  0E8F                     	;# 
   946  0E90                     	;# 
   947  0E91                     	;# 
   948  0E92                     	;# 
   949  0E93                     	;# 
   950  0E94                     	;# 
   951  0E94                     	;# 
   952  0E95                     	;# 
   953  0E96                     	;# 
   954  0E97                     	;# 
   955  0E98                     	;# 
   956  0E99                     	;# 
   957  0E9A                     	;# 
   958  0E9B                     	;# 
   959  0E9C                     	;# 
   960  0E9D                     	;# 
   961  0E9E                     	;# 
   962  0E9F                     	;# 
   963  0FE4                     	;# 
   964  0FE5                     	;# 
   965  0FE6                     	;# 
   966  0FE7                     	;# 
   967  0FE8                     	;# 
   968  0FE9                     	;# 
   969  0FEA                     	;# 
   970  0FEB                     	;# 
   971  0FED                     	;# 
   972  0FEE                     	;# 
   973  0FEF                     	;# 
   974  0000                     	;# 
   975  0001                     	;# 
   976  0002                     	;# 
   977  0003                     	;# 
   978  0004                     	;# 
   979  0005                     	;# 
   980  0006                     	;# 
   981  0007                     	;# 
   982  0008                     	;# 
   983  0009                     	;# 
   984  000A                     	;# 
   985  000B                     	;# 
   986  000C                     	;# 
   987  000E                     	;# 
   988  0011                     	;# 
   989  0012                     	;# 
   990  0015                     	;# 
   991  0016                     	;# 
   992  0016                     	;# 
   993  0017                     	;# 
   994  0018                     	;# 
   995  0019                     	;# 
   996  001A                     	;# 
   997  001B                     	;# 
   998  001C                     	;# 
   999  008C                     	;# 
  1000  008E                     	;# 
  1001  0091                     	;# 
  1002  0092                     	;# 
  1003  0095                     	;# 
  1004  0096                     	;# 
  1005  0097                     	;# 
  1006  0098                     	;# 
  1007  0099                     	;# 
  1008  009A                     	;# 
  1009  009B                     	;# 
  1010  009B                     	;# 
  1011  009C                     	;# 
  1012  009D                     	;# 
  1013  009E                     	;# 
  1014  009F                     	;# 
  1015  010C                     	;# 
  1016  010E                     	;# 
  1017  0111                     	;# 
  1018  0112                     	;# 
  1019  0113                     	;# 
  1020  0114                     	;# 
  1021  0115                     	;# 
  1022  0116                     	;# 
  1023  0117                     	;# 
  1024  0118                     	;# 
  1025  0119                     	;# 
  1026  011D                     	;# 
  1027  018C                     	;# 
  1028  018E                     	;# 
  1029  0191                     	;# 
  1030  0191                     	;# 
  1031  0192                     	;# 
  1032  0193                     	;# 
  1033  0193                     	;# 
  1034  0194                     	;# 
  1035  0195                     	;# 
  1036  0196                     	;# 
  1037  0197                     	;# 
  1038  0199                     	;# 
  1039  019A                     	;# 
  1040  019B                     	;# 
  1041  019B                     	;# 
  1042  019C                     	;# 
  1043  019D                     	;# 
  1044  019E                     	;# 
  1045  019F                     	;# 
  1046  020C                     	;# 
  1047  0211                     	;# 
  1048  0211                     	;# 
  1049  0212                     	;# 
  1050  0212                     	;# 
  1051  0213                     	;# 
  1052  0213                     	;# 
  1053  0214                     	;# 
  1054  0214                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0215                     	;# 
  1058  0216                     	;# 
  1059  0216                     	;# 
  1060  0217                     	;# 
  1061  0217                     	;# 
  1062  0391                     	;# 
  1063  0392                     	;# 
  1064  0393                     	;# 
  1065  039A                     	;# 
  1066  039B                     	;# 
  1067  0611                     	;# 
  1068  0612                     	;# 
  1069  0613                     	;# 
  1070  0613                     	;# 
  1071  0614                     	;# 
  1072  0615                     	;# 
  1073  0616                     	;# 
  1074  0616                     	;# 
  1075  0691                     	;# 
  1076  0692                     	;# 
  1077  0693                     	;# 
  1078  0694                     	;# 
  1079  0695                     	;# 
  1080  0E8E                     	;# 
  1081  0E8F                     	;# 
  1082  0E90                     	;# 
  1083  0E91                     	;# 
  1084  0E92                     	;# 
  1085  0E93                     	;# 
  1086  0E94                     	;# 
  1087  0E94                     	;# 
  1088  0E95                     	;# 
  1089  0E96                     	;# 
  1090  0E97                     	;# 
  1091  0E98                     	;# 
  1092  0E99                     	;# 
  1093  0E9A                     	;# 
  1094  0E9B                     	;# 
  1095  0E9C                     	;# 
  1096  0E9D                     	;# 
  1097  0E9E                     	;# 
  1098  0E9F                     	;# 
  1099  0FE4                     	;# 
  1100  0FE5                     	;# 
  1101  0FE6                     	;# 
  1102  0FE7                     	;# 
  1103  0FE8                     	;# 
  1104  0FE9                     	;# 
  1105  0FEA                     	;# 
  1106  0FEB                     	;# 
  1107  0FED                     	;# 
  1108  0FEE                     	;# 
  1109  0FEF                     	;# 
  1110  0000                     	;# 
  1111  0001                     	;# 
  1112  0002                     	;# 
  1113  0003                     	;# 
  1114  0004                     	;# 
  1115  0005                     	;# 
  1116  0006                     	;# 
  1117  0007                     	;# 
  1118  0008                     	;# 
  1119  0009                     	;# 
  1120  000A                     	;# 
  1121  000B                     	;# 
  1122  000C                     	;# 
  1123  000E                     	;# 
  1124  0011                     	;# 
  1125  0012                     	;# 
  1126  0015                     	;# 
  1127  0016                     	;# 
  1128  0016                     	;# 
  1129  0017                     	;# 
  1130  0018                     	;# 
  1131  0019                     	;# 
  1132  001A                     	;# 
  1133  001B                     	;# 
  1134  001C                     	;# 
  1135  008C                     	;# 
  1136  008E                     	;# 
  1137  0091                     	;# 
  1138  0092                     	;# 
  1139  0095                     	;# 
  1140  0096                     	;# 
  1141  0097                     	;# 
  1142  0098                     	;# 
  1143  0099                     	;# 
  1144  009A                     	;# 
  1145  009B                     	;# 
  1146  009B                     	;# 
  1147  009C                     	;# 
  1148  009D                     	;# 
  1149  009E                     	;# 
  1150  009F                     	;# 
  1151  010C                     	;# 
  1152  010E                     	;# 
  1153  0111                     	;# 
  1154  0112                     	;# 
  1155  0113                     	;# 
  1156  0114                     	;# 
  1157  0115                     	;# 
  1158  0116                     	;# 
  1159  0117                     	;# 
  1160  0118                     	;# 
  1161  0119                     	;# 
  1162  011D                     	;# 
  1163  018C                     	;# 
  1164  018E                     	;# 
  1165  0191                     	;# 
  1166  0191                     	;# 
  1167  0192                     	;# 
  1168  0193                     	;# 
  1169  0193                     	;# 
  1170  0194                     	;# 
  1171  0195                     	;# 
  1172  0196                     	;# 
  1173  0197                     	;# 
  1174  0199                     	;# 
  1175  019A                     	;# 
  1176  019B                     	;# 
  1177  019B                     	;# 
  1178  019C                     	;# 
  1179  019D                     	;# 
  1180  019E                     	;# 
  1181  019F                     	;# 
  1182  020C                     	;# 
  1183  0211                     	;# 
  1184  0211                     	;# 
  1185  0212                     	;# 
  1186  0212                     	;# 
  1187  0213                     	;# 
  1188  0213                     	;# 
  1189  0214                     	;# 
  1190  0214                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0215                     	;# 
  1194  0216                     	;# 
  1195  0216                     	;# 
  1196  0217                     	;# 
  1197  0217                     	;# 
  1198  0391                     	;# 
  1199  0392                     	;# 
  1200  0393                     	;# 
  1201  039A                     	;# 
  1202  039B                     	;# 
  1203  0611                     	;# 
  1204  0612                     	;# 
  1205  0613                     	;# 
  1206  0613                     	;# 
  1207  0614                     	;# 
  1208  0615                     	;# 
  1209  0616                     	;# 
  1210  0616                     	;# 
  1211  0691                     	;# 
  1212  0692                     	;# 
  1213  0693                     	;# 
  1214  0694                     	;# 
  1215  0695                     	;# 
  1216  0E8E                     	;# 
  1217  0E8F                     	;# 
  1218  0E90                     	;# 
  1219  0E91                     	;# 
  1220  0E92                     	;# 
  1221  0E93                     	;# 
  1222  0E94                     	;# 
  1223  0E94                     	;# 
  1224  0E95                     	;# 
  1225  0E96                     	;# 
  1226  0E97                     	;# 
  1227  0E98                     	;# 
  1228  0E99                     	;# 
  1229  0E9A                     	;# 
  1230  0E9B                     	;# 
  1231  0E9C                     	;# 
  1232  0E9D                     	;# 
  1233  0E9E                     	;# 
  1234  0E9F                     	;# 
  1235  0FE4                     	;# 
  1236  0FE5                     	;# 
  1237  0FE6                     	;# 
  1238  0FE7                     	;# 
  1239  0FE8                     	;# 
  1240  0FE9                     	;# 
  1241  0FEA                     	;# 
  1242  0FEB                     	;# 
  1243  0FED                     	;# 
  1244  0FEE                     	;# 
  1245  0FEF                     	;# 
  1246  0000                     	;# 
  1247  0001                     	;# 
  1248  0002                     	;# 
  1249  0003                     	;# 
  1250  0004                     	;# 
  1251  0005                     	;# 
  1252  0006                     	;# 
  1253  0007                     	;# 
  1254  0008                     	;# 
  1255  0009                     	;# 
  1256  000A                     	;# 
  1257  000B                     	;# 
  1258  000C                     	;# 
  1259  000E                     	;# 
  1260  0011                     	;# 
  1261  0012                     	;# 
  1262  0015                     	;# 
  1263  0016                     	;# 
  1264  0016                     	;# 
  1265  0017                     	;# 
  1266  0018                     	;# 
  1267  0019                     	;# 
  1268  001A                     	;# 
  1269  001B                     	;# 
  1270  001C                     	;# 
  1271  008C                     	;# 
  1272  008E                     	;# 
  1273  0091                     	;# 
  1274  0092                     	;# 
  1275  0095                     	;# 
  1276  0096                     	;# 
  1277  0097                     	;# 
  1278  0098                     	;# 
  1279  0099                     	;# 
  1280  009A                     	;# 
  1281  009B                     	;# 
  1282  009B                     	;# 
  1283  009C                     	;# 
  1284  009D                     	;# 
  1285  009E                     	;# 
  1286  009F                     	;# 
  1287  010C                     	;# 
  1288  010E                     	;# 
  1289  0111                     	;# 
  1290  0112                     	;# 
  1291  0113                     	;# 
  1292  0114                     	;# 
  1293  0115                     	;# 
  1294  0116                     	;# 
  1295  0117                     	;# 
  1296  0118                     	;# 
  1297  0119                     	;# 
  1298  011D                     	;# 
  1299  018C                     	;# 
  1300  018E                     	;# 
  1301  0191                     	;# 
  1302  0191                     	;# 
  1303  0192                     	;# 
  1304  0193                     	;# 
  1305  0193                     	;# 
  1306  0194                     	;# 
  1307  0195                     	;# 
  1308  0196                     	;# 
  1309  0197                     	;# 
  1310  0199                     	;# 
  1311  019A                     	;# 
  1312  019B                     	;# 
  1313  019B                     	;# 
  1314  019C                     	;# 
  1315  019D                     	;# 
  1316  019E                     	;# 
  1317  019F                     	;# 
  1318  020C                     	;# 
  1319  0211                     	;# 
  1320  0211                     	;# 
  1321  0212                     	;# 
  1322  0212                     	;# 
  1323  0213                     	;# 
  1324  0213                     	;# 
  1325  0214                     	;# 
  1326  0214                     	;# 
  1327  0215                     	;# 
  1328  0215                     	;# 
  1329  0215                     	;# 
  1330  0216                     	;# 
  1331  0216                     	;# 
  1332  0217                     	;# 
  1333  0217                     	;# 
  1334  0391                     	;# 
  1335  0392                     	;# 
  1336  0393                     	;# 
  1337  039A                     	;# 
  1338  039B                     	;# 
  1339  0611                     	;# 
  1340  0612                     	;# 
  1341  0613                     	;# 
  1342  0613                     	;# 
  1343  0614                     	;# 
  1344  0615                     	;# 
  1345  0616                     	;# 
  1346  0616                     	;# 
  1347  0691                     	;# 
  1348  0692                     	;# 
  1349  0693                     	;# 
  1350  0694                     	;# 
  1351  0695                     	;# 
  1352  0E8E                     	;# 
  1353  0E8F                     	;# 
  1354  0E90                     	;# 
  1355  0E91                     	;# 
  1356  0E92                     	;# 
  1357  0E93                     	;# 
  1358  0E94                     	;# 
  1359  0E94                     	;# 
  1360  0E95                     	;# 
  1361  0E96                     	;# 
  1362  0E97                     	;# 
  1363  0E98                     	;# 
  1364  0E99                     	;# 
  1365  0E9A                     	;# 
  1366  0E9B                     	;# 
  1367  0E9C                     	;# 
  1368  0E9D                     	;# 
  1369  0E9E                     	;# 
  1370  0E9F                     	;# 
  1371  0FE4                     	;# 
  1372  0FE5                     	;# 
  1373  0FE6                     	;# 
  1374  0FE7                     	;# 
  1375  0FE8                     	;# 
  1376  0FE9                     	;# 
  1377  0FEA                     	;# 
  1378  0FEB                     	;# 
  1379  0FED                     	;# 
  1380  0FEE                     	;# 
  1381  0FEF                     	;# 
  1382  0000                     	;# 
  1383  0001                     	;# 
  1384  0002                     	;# 
  1385  0003                     	;# 
  1386  0004                     	;# 
  1387  0005                     	;# 
  1388  0006                     	;# 
  1389  0007                     	;# 
  1390  0008                     	;# 
  1391  0009                     	;# 
  1392  000A                     	;# 
  1393  000B                     	;# 
  1394  000C                     	;# 
  1395  000E                     	;# 
  1396  0011                     	;# 
  1397  0012                     	;# 
  1398  0015                     	;# 
  1399  0016                     	;# 
  1400  0016                     	;# 
  1401  0017                     	;# 
  1402  0018                     	;# 
  1403  0019                     	;# 
  1404  001A                     	;# 
  1405  001B                     	;# 
  1406  001C                     	;# 
  1407  008C                     	;# 
  1408  008E                     	;# 
  1409  0091                     	;# 
  1410  0092                     	;# 
  1411  0095                     	;# 
  1412  0096                     	;# 
  1413  0097                     	;# 
  1414  0098                     	;# 
  1415  0099                     	;# 
  1416  009A                     	;# 
  1417  009B                     	;# 
  1418  009B                     	;# 
  1419  009C                     	;# 
  1420  009D                     	;# 
  1421  009E                     	;# 
  1422  009F                     	;# 
  1423  010C                     	;# 
  1424  010E                     	;# 
  1425  0111                     	;# 
  1426  0112                     	;# 
  1427  0113                     	;# 
  1428  0114                     	;# 
  1429  0115                     	;# 
  1430  0116                     	;# 
  1431  0117                     	;# 
  1432  0118                     	;# 
  1433  0119                     	;# 
  1434  011D                     	;# 
  1435  018C                     	;# 
  1436  018E                     	;# 
  1437  0191                     	;# 
  1438  0191                     	;# 
  1439  0192                     	;# 
  1440  0193                     	;# 
  1441  0193                     	;# 
  1442  0194                     	;# 
  1443  0195                     	;# 
  1444  0196                     	;# 
  1445  0197                     	;# 
  1446  0199                     	;# 
  1447  019A                     	;# 
  1448  019B                     	;# 
  1449  019B                     	;# 
  1450  019C                     	;# 
  1451  019D                     	;# 
  1452  019E                     	;# 
  1453  019F                     	;# 
  1454  020C                     	;# 
  1455  0211                     	;# 
  1456  0211                     	;# 
  1457  0212                     	;# 
  1458  0212                     	;# 
  1459  0213                     	;# 
  1460  0213                     	;# 
  1461  0214                     	;# 
  1462  0214                     	;# 
  1463  0215                     	;# 
  1464  0215                     	;# 
  1465  0215                     	;# 
  1466  0216                     	;# 
  1467  0216                     	;# 
  1468  0217                     	;# 
  1469  0217                     	;# 
  1470  0391                     	;# 
  1471  0392                     	;# 
  1472  0393                     	;# 
  1473  039A                     	;# 
  1474  039B                     	;# 
  1475  0611                     	;# 
  1476  0612                     	;# 
  1477  0613                     	;# 
  1478  0613                     	;# 
  1479  0614                     	;# 
  1480  0615                     	;# 
  1481  0616                     	;# 
  1482  0616                     	;# 
  1483  0691                     	;# 
  1484  0692                     	;# 
  1485  0693                     	;# 
  1486  0694                     	;# 
  1487  0695                     	;# 
  1488  0E8E                     	;# 
  1489  0E8F                     	;# 
  1490  0E90                     	;# 
  1491  0E91                     	;# 
  1492  0E92                     	;# 
  1493  0E93                     	;# 
  1494  0E94                     	;# 
  1495  0E94                     	;# 
  1496  0E95                     	;# 
  1497  0E96                     	;# 
  1498  0E97                     	;# 
  1499  0E98                     	;# 
  1500  0E99                     	;# 
  1501  0E9A                     	;# 
  1502  0E9B                     	;# 
  1503  0E9C                     	;# 
  1504  0E9D                     	;# 
  1505  0E9E                     	;# 
  1506  0E9F                     	;# 
  1507  0FE4                     	;# 
  1508  0FE5                     	;# 
  1509  0FE6                     	;# 
  1510  0FE7                     	;# 
  1511  0FE8                     	;# 
  1512  0FE9                     	;# 
  1513  0FEA                     	;# 
  1514  0FEB                     	;# 
  1515  0FED                     	;# 
  1516  0FEE                     	;# 
  1517  0FEF                     	;# 
  1518  0000                     	;# 
  1519  0001                     	;# 
  1520  0002                     	;# 
  1521  0003                     	;# 
  1522  0004                     	;# 
  1523  0005                     	;# 
  1524  0006                     	;# 
  1525  0007                     	;# 
  1526  0008                     	;# 
  1527  0009                     	;# 
  1528  000A                     	;# 
  1529  000B                     	;# 
  1530  000C                     	;# 
  1531  000E                     	;# 
  1532  0011                     	;# 
  1533  0012                     	;# 
  1534  0015                     	;# 
  1535  0016                     	;# 
  1536  0016                     	;# 
  1537  0017                     	;# 
  1538  0018                     	;# 
  1539  0019                     	;# 
  1540  001A                     	;# 
  1541  001B                     	;# 
  1542  001C                     	;# 
  1543  008C                     	;# 
  1544  008E                     	;# 
  1545  0091                     	;# 
  1546  0092                     	;# 
  1547  0095                     	;# 
  1548  0096                     	;# 
  1549  0097                     	;# 
  1550  0098                     	;# 
  1551  0099                     	;# 
  1552  009A                     	;# 
  1553  009B                     	;# 
  1554  009B                     	;# 
  1555  009C                     	;# 
  1556  009D                     	;# 
  1557  009E                     	;# 
  1558  009F                     	;# 
  1559  010C                     	;# 
  1560  010E                     	;# 
  1561  0111                     	;# 
  1562  0112                     	;# 
  1563  0113                     	;# 
  1564  0114                     	;# 
  1565  0115                     	;# 
  1566  0116                     	;# 
  1567  0117                     	;# 
  1568  0118                     	;# 
  1569  0119                     	;# 
  1570  011D                     	;# 
  1571  018C                     	;# 
  1572  018E                     	;# 
  1573  0191                     	;# 
  1574  0191                     	;# 
  1575  0192                     	;# 
  1576  0193                     	;# 
  1577  0193                     	;# 
  1578  0194                     	;# 
  1579  0195                     	;# 
  1580  0196                     	;# 
  1581  0197                     	;# 
  1582  0199                     	;# 
  1583  019A                     	;# 
  1584  019B                     	;# 
  1585  019B                     	;# 
  1586  019C                     	;# 
  1587  019D                     	;# 
  1588  019E                     	;# 
  1589  019F                     	;# 
  1590  020C                     	;# 
  1591  0211                     	;# 
  1592  0211                     	;# 
  1593  0212                     	;# 
  1594  0212                     	;# 
  1595  0213                     	;# 
  1596  0213                     	;# 
  1597  0214                     	;# 
  1598  0214                     	;# 
  1599  0215                     	;# 
  1600  0215                     	;# 
  1601  0215                     	;# 
  1602  0216                     	;# 
  1603  0216                     	;# 
  1604  0217                     	;# 
  1605  0217                     	;# 
  1606  0391                     	;# 
  1607  0392                     	;# 
  1608  0393                     	;# 
  1609  039A                     	;# 
  1610  039B                     	;# 
  1611  0611                     	;# 
  1612  0612                     	;# 
  1613  0613                     	;# 
  1614  0613                     	;# 
  1615  0614                     	;# 
  1616  0615                     	;# 
  1617  0616                     	;# 
  1618  0616                     	;# 
  1619  0691                     	;# 
  1620  0692                     	;# 
  1621  0693                     	;# 
  1622  0694                     	;# 
  1623  0695                     	;# 
  1624  0E8E                     	;# 
  1625  0E8F                     	;# 
  1626  0E90                     	;# 
  1627  0E91                     	;# 
  1628  0E92                     	;# 
  1629  0E93                     	;# 
  1630  0E94                     	;# 
  1631  0E94                     	;# 
  1632  0E95                     	;# 
  1633  0E96                     	;# 
  1634  0E97                     	;# 
  1635  0E98                     	;# 
  1636  0E99                     	;# 
  1637  0E9A                     	;# 
  1638  0E9B                     	;# 
  1639  0E9C                     	;# 
  1640  0E9D                     	;# 
  1641  0E9E                     	;# 
  1642  0E9F                     	;# 
  1643  0FE4                     	;# 
  1644  0FE5                     	;# 
  1645  0FE6                     	;# 
  1646  0FE7                     	;# 
  1647  0FE8                     	;# 
  1648  0FE9                     	;# 
  1649  0FEA                     	;# 
  1650  0FEB                     	;# 
  1651  0FED                     	;# 
  1652  0FEE                     	;# 
  1653  0FEF                     	;# 
  1654  0000                     	;# 
  1655  0001                     	;# 
  1656  0002                     	;# 
  1657  0003                     	;# 
  1658  0004                     	;# 
  1659  0005                     	;# 
  1660  0006                     	;# 
  1661  0007                     	;# 
  1662  0008                     	;# 
  1663  0009                     	;# 
  1664  000A                     	;# 
  1665  000B                     	;# 
  1666  000C                     	;# 
  1667  000E                     	;# 
  1668  0011                     	;# 
  1669  0012                     	;# 
  1670  0015                     	;# 
  1671  0016                     	;# 
  1672  0016                     	;# 
  1673  0017                     	;# 
  1674  0018                     	;# 
  1675  0019                     	;# 
  1676  001A                     	;# 
  1677  001B                     	;# 
  1678  001C                     	;# 
  1679  008C                     	;# 
  1680  008E                     	;# 
  1681  0091                     	;# 
  1682  0092                     	;# 
  1683  0095                     	;# 
  1684  0096                     	;# 
  1685  0097                     	;# 
  1686  0098                     	;# 
  1687  0099                     	;# 
  1688  009A                     	;# 
  1689  009B                     	;# 
  1690  009B                     	;# 
  1691  009C                     	;# 
  1692  009D                     	;# 
  1693  009E                     	;# 
  1694  009F                     	;# 
  1695  010C                     	;# 
  1696  010E                     	;# 
  1697  0111                     	;# 
  1698  0112                     	;# 
  1699  0113                     	;# 
  1700  0114                     	;# 
  1701  0115                     	;# 
  1702  0116                     	;# 
  1703  0117                     	;# 
  1704  0118                     	;# 
  1705  0119                     	;# 
  1706  011D                     	;# 
  1707  018C                     	;# 
  1708  018E                     	;# 
  1709  0191                     	;# 
  1710  0191                     	;# 
  1711  0192                     	;# 
  1712  0193                     	;# 
  1713  0193                     	;# 
  1714  0194                     	;# 
  1715  0195                     	;# 
  1716  0196                     	;# 
  1717  0197                     	;# 
  1718  0199                     	;# 
  1719  019A                     	;# 
  1720  019B                     	;# 
  1721  019B                     	;# 
  1722  019C                     	;# 
  1723  019D                     	;# 
  1724  019E                     	;# 
  1725  019F                     	;# 
  1726  020C                     	;# 
  1727  0211                     	;# 
  1728  0211                     	;# 
  1729  0212                     	;# 
  1730  0212                     	;# 
  1731  0213                     	;# 
  1732  0213                     	;# 
  1733  0214                     	;# 
  1734  0214                     	;# 
  1735  0215                     	;# 
  1736  0215                     	;# 
  1737  0215                     	;# 
  1738  0216                     	;# 
  1739  0216                     	;# 
  1740  0217                     	;# 
  1741  0217                     	;# 
  1742  0391                     	;# 
  1743  0392                     	;# 
  1744  0393                     	;# 
  1745  039A                     	;# 
  1746  039B                     	;# 
  1747  0611                     	;# 
  1748  0612                     	;# 
  1749  0613                     	;# 
  1750  0613                     	;# 
  1751  0614                     	;# 
  1752  0615                     	;# 
  1753  0616                     	;# 
  1754  0616                     	;# 
  1755  0691                     	;# 
  1756  0692                     	;# 
  1757  0693                     	;# 
  1758  0694                     	;# 
  1759  0695                     	;# 
  1760  0E8E                     	;# 
  1761  0E8F                     	;# 
  1762  0E90                     	;# 
  1763  0E91                     	;# 
  1764  0E92                     	;# 
  1765  0E93                     	;# 
  1766  0E94                     	;# 
  1767  0E94                     	;# 
  1768  0E95                     	;# 
  1769  0E96                     	;# 
  1770  0E97                     	;# 
  1771  0E98                     	;# 
  1772  0E99                     	;# 
  1773  0E9A                     	;# 
  1774  0E9B                     	;# 
  1775  0E9C                     	;# 
  1776  0E9D                     	;# 
  1777  0E9E                     	;# 
  1778  0E9F                     	;# 
  1779  0FE4                     	;# 
  1780  0FE5                     	;# 
  1781  0FE6                     	;# 
  1782  0FE7                     	;# 
  1783  0FE8                     	;# 
  1784  0FE9                     	;# 
  1785  0FEA                     	;# 
  1786  0FEB                     	;# 
  1787  0FED                     	;# 
  1788  0FEE                     	;# 
  1789  0FEF                     	;# 
  1790  0000                     	;# 
  1791  0001                     	;# 
  1792  0002                     	;# 
  1793  0003                     	;# 
  1794  0004                     	;# 
  1795  0005                     	;# 
  1796  0006                     	;# 
  1797  0007                     	;# 
  1798  0008                     	;# 
  1799  0009                     	;# 
  1800  000A                     	;# 
  1801  000B                     	;# 
  1802  000C                     	;# 
  1803  000E                     	;# 
  1804  0011                     	;# 
  1805  0012                     	;# 
  1806  0015                     	;# 
  1807  0016                     	;# 
  1808  0016                     	;# 
  1809  0017                     	;# 
  1810  0018                     	;# 
  1811  0019                     	;# 
  1812  001A                     	;# 
  1813  001B                     	;# 
  1814  001C                     	;# 
  1815  008C                     	;# 
  1816  008E                     	;# 
  1817  0091                     	;# 
  1818  0092                     	;# 
  1819  0095                     	;# 
  1820  0096                     	;# 
  1821  0097                     	;# 
  1822  0098                     	;# 
  1823  0099                     	;# 
  1824  009A                     	;# 
  1825  009B                     	;# 
  1826  009B                     	;# 
  1827  009C                     	;# 
  1828  009D                     	;# 
  1829  009E                     	;# 
  1830  009F                     	;# 
  1831  010C                     	;# 
  1832  010E                     	;# 
  1833  0111                     	;# 
  1834  0112                     	;# 
  1835  0113                     	;# 
  1836  0114                     	;# 
  1837  0115                     	;# 
  1838  0116                     	;# 
  1839  0117                     	;# 
  1840  0118                     	;# 
  1841  0119                     	;# 
  1842  011D                     	;# 
  1843  018C                     	;# 
  1844  018E                     	;# 
  1845  0191                     	;# 
  1846  0191                     	;# 
  1847  0192                     	;# 
  1848  0193                     	;# 
  1849  0193                     	;# 
  1850  0194                     	;# 
  1851  0195                     	;# 
  1852  0196                     	;# 
  1853  0197                     	;# 
  1854  0199                     	;# 
  1855  019A                     	;# 
  1856  019B                     	;# 
  1857  019B                     	;# 
  1858  019C                     	;# 
  1859  019D                     	;# 
  1860  019E                     	;# 
  1861  019F                     	;# 
  1862  020C                     	;# 
  1863  0211                     	;# 
  1864  0211                     	;# 
  1865  0212                     	;# 
  1866  0212                     	;# 
  1867  0213                     	;# 
  1868  0213                     	;# 
  1869  0214                     	;# 
  1870  0214                     	;# 
  1871  0215                     	;# 
  1872  0215                     	;# 
  1873  0215                     	;# 
  1874  0216                     	;# 
  1875  0216                     	;# 
  1876  0217                     	;# 
  1877  0217                     	;# 
  1878  0391                     	;# 
  1879  0392                     	;# 
  1880  0393                     	;# 
  1881  039A                     	;# 
  1882  039B                     	;# 
  1883  0611                     	;# 
  1884  0612                     	;# 
  1885  0613                     	;# 
  1886  0613                     	;# 
  1887  0614                     	;# 
  1888  0615                     	;# 
  1889  0616                     	;# 
  1890  0616                     	;# 
  1891  0691                     	;# 
  1892  0692                     	;# 
  1893  0693                     	;# 
  1894  0694                     	;# 
  1895  0695                     	;# 
  1896  0E8E                     	;# 
  1897  0E8F                     	;# 
  1898  0E90                     	;# 
  1899  0E91                     	;# 
  1900  0E92                     	;# 
  1901  0E93                     	;# 
  1902  0E94                     	;# 
  1903  0E94                     	;# 
  1904  0E95                     	;# 
  1905  0E96                     	;# 
  1906  0E97                     	;# 
  1907  0E98                     	;# 
  1908  0E99                     	;# 
  1909  0E9A                     	;# 
  1910  0E9B                     	;# 
  1911  0E9C                     	;# 
  1912  0E9D                     	;# 
  1913  0E9E                     	;# 
  1914  0E9F                     	;# 
  1915  0FE4                     	;# 
  1916  0FE5                     	;# 
  1917  0FE6                     	;# 
  1918  0FE7                     	;# 
  1919  0FE8                     	;# 
  1920  0FE9                     	;# 
  1921  0FEA                     	;# 
  1922  0FEB                     	;# 
  1923  0FED                     	;# 
  1924  0FEE                     	;# 
  1925  0FEF                     	;# 
  1926  0000                     	;# 
  1927  0001                     	;# 
  1928  0002                     	;# 
  1929  0003                     	;# 
  1930  0004                     	;# 
  1931  0005                     	;# 
  1932  0006                     	;# 
  1933  0007                     	;# 
  1934  0008                     	;# 
  1935  0009                     	;# 
  1936  000A                     	;# 
  1937  000B                     	;# 
  1938  000C                     	;# 
  1939  000E                     	;# 
  1940  0011                     	;# 
  1941  0012                     	;# 
  1942  0015                     	;# 
  1943  0016                     	;# 
  1944  0016                     	;# 
  1945  0017                     	;# 
  1946  0018                     	;# 
  1947  0019                     	;# 
  1948  001A                     	;# 
  1949  001B                     	;# 
  1950  001C                     	;# 
  1951  008C                     	;# 
  1952  008E                     	;# 
  1953  0091                     	;# 
  1954  0092                     	;# 
  1955  0095                     	;# 
  1956  0096                     	;# 
  1957  0097                     	;# 
  1958  0098                     	;# 
  1959  0099                     	;# 
  1960  009A                     	;# 
  1961  009B                     	;# 
  1962  009B                     	;# 
  1963  009C                     	;# 
  1964  009D                     	;# 
  1965  009E                     	;# 
  1966  009F                     	;# 
  1967  010C                     	;# 
  1968  010E                     	;# 
  1969  0111                     	;# 
  1970  0112                     	;# 
  1971  0113                     	;# 
  1972  0114                     	;# 
  1973  0115                     	;# 
  1974  0116                     	;# 
  1975  0117                     	;# 
  1976  0118                     	;# 
  1977  0119                     	;# 
  1978  011D                     	;# 
  1979  018C                     	;# 
  1980  018E                     	;# 
  1981  0191                     	;# 
  1982  0191                     	;# 
  1983  0192                     	;# 
  1984  0193                     	;# 
  1985  0193                     	;# 
  1986  0194                     	;# 
  1987  0195                     	;# 
  1988  0196                     	;# 
  1989  0197                     	;# 
  1990  0199                     	;# 
  1991  019A                     	;# 
  1992  019B                     	;# 
  1993  019B                     	;# 
  1994  019C                     	;# 
  1995  019D                     	;# 
  1996  019E                     	;# 
  1997  019F                     	;# 
  1998  020C                     	;# 
  1999  0211                     	;# 
  2000  0211                     	;# 
  2001  0212                     	;# 
  2002  0212                     	;# 
  2003  0213                     	;# 
  2004  0213                     	;# 
  2005  0214                     	;# 
  2006  0214                     	;# 
  2007  0215                     	;# 
  2008  0215                     	;# 
  2009  0215                     	;# 
  2010  0216                     	;# 
  2011  0216                     	;# 
  2012  0217                     	;# 
  2013  0217                     	;# 
  2014  0391                     	;# 
  2015  0392                     	;# 
  2016  0393                     	;# 
  2017  039A                     	;# 
  2018  039B                     	;# 
  2019  0611                     	;# 
  2020  0612                     	;# 
  2021  0613                     	;# 
  2022  0613                     	;# 
  2023  0614                     	;# 
  2024  0615                     	;# 
  2025  0616                     	;# 
  2026  0616                     	;# 
  2027  0691                     	;# 
  2028  0692                     	;# 
  2029  0693                     	;# 
  2030  0694                     	;# 
  2031  0695                     	;# 
  2032  0E8E                     	;# 
  2033  0E8F                     	;# 
  2034  0E90                     	;# 
  2035  0E91                     	;# 
  2036  0E92                     	;# 
  2037  0E93                     	;# 
  2038  0E94                     	;# 
  2039  0E94                     	;# 
  2040  0E95                     	;# 
  2041  0E96                     	;# 
  2042  0E97                     	;# 
  2043  0E98                     	;# 
  2044  0E99                     	;# 
  2045  0E9A                     	;# 
  2046  0E9B                     	;# 
  2047  0E9C                     	;# 
  2048  0E9D                     	;# 
  2049  0E9E                     	;# 
  2050  0E9F                     	;# 
  2051  0FE4                     	;# 
  2052  0FE5                     	;# 
  2053  0FE6                     	;# 
  2054  0FE7                     	;# 
  2055  0FE8                     	;# 
  2056  0FE9                     	;# 
  2057  0FEA                     	;# 
  2058  0FEB                     	;# 
  2059  0FED                     	;# 
  2060  0FEE                     	;# 
  2061  0FEF                     	;# 
  2062  0000                     	;# 
  2063  0001                     	;# 
  2064  0002                     	;# 
  2065  0003                     	;# 
  2066  0004                     	;# 
  2067  0005                     	;# 
  2068  0006                     	;# 
  2069  0007                     	;# 
  2070  0008                     	;# 
  2071  0009                     	;# 
  2072  000A                     	;# 
  2073  000B                     	;# 
  2074  000C                     	;# 
  2075  000E                     	;# 
  2076  0011                     	;# 
  2077  0012                     	;# 
  2078  0015                     	;# 
  2079  0016                     	;# 
  2080  0016                     	;# 
  2081  0017                     	;# 
  2082  0018                     	;# 
  2083  0019                     	;# 
  2084  001A                     	;# 
  2085  001B                     	;# 
  2086  001C                     	;# 
  2087  008C                     	;# 
  2088  008E                     	;# 
  2089  0091                     	;# 
  2090  0092                     	;# 
  2091  0095                     	;# 
  2092  0096                     	;# 
  2093  0097                     	;# 
  2094  0098                     	;# 
  2095  0099                     	;# 
  2096  009A                     	;# 
  2097  009B                     	;# 
  2098  009B                     	;# 
  2099  009C                     	;# 
  2100  009D                     	;# 
  2101  009E                     	;# 
  2102  009F                     	;# 
  2103  010C                     	;# 
  2104  010E                     	;# 
  2105  0111                     	;# 
  2106  0112                     	;# 
  2107  0113                     	;# 
  2108  0114                     	;# 
  2109  0115                     	;# 
  2110  0116                     	;# 
  2111  0117                     	;# 
  2112  0118                     	;# 
  2113  0119                     	;# 
  2114  011D                     	;# 
  2115  018C                     	;# 
  2116  018E                     	;# 
  2117  0191                     	;# 
  2118  0191                     	;# 
  2119  0192                     	;# 
  2120  0193                     	;# 
  2121  0193                     	;# 
  2122  0194                     	;# 
  2123  0195                     	;# 
  2124  0196                     	;# 
  2125  0197                     	;# 
  2126  0199                     	;# 
  2127  019A                     	;# 
  2128  019B                     	;# 
  2129  019B                     	;# 
  2130  019C                     	;# 
  2131  019D                     	;# 
  2132  019E                     	;# 
  2133  019F                     	;# 
  2134  020C                     	;# 
  2135  0211                     	;# 
  2136  0211                     	;# 
  2137  0212                     	;# 
  2138  0212                     	;# 
  2139  0213                     	;# 
  2140  0213                     	;# 
  2141  0214                     	;# 
  2142  0214                     	;# 
  2143  0215                     	;# 
  2144  0215                     	;# 
  2145  0215                     	;# 
  2146  0216                     	;# 
  2147  0216                     	;# 
  2148  0217                     	;# 
  2149  0217                     	;# 
  2150  0391                     	;# 
  2151  0392                     	;# 
  2152  0393                     	;# 
  2153  039A                     	;# 
  2154  039B                     	;# 
  2155  0611                     	;# 
  2156  0612                     	;# 
  2157  0613                     	;# 
  2158  0613                     	;# 
  2159  0614                     	;# 
  2160  0615                     	;# 
  2161  0616                     	;# 
  2162  0616                     	;# 
  2163  0691                     	;# 
  2164  0692                     	;# 
  2165  0693                     	;# 
  2166  0694                     	;# 
  2167  0695                     	;# 
  2168  0E8E                     	;# 
  2169  0E8F                     	;# 
  2170  0E90                     	;# 
  2171  0E91                     	;# 
  2172  0E92                     	;# 
  2173  0E93                     	;# 
  2174  0E94                     	;# 
  2175  0E94                     	;# 
  2176  0E95                     	;# 
  2177  0E96                     	;# 
  2178  0E97                     	;# 
  2179  0E98                     	;# 
  2180  0E99                     	;# 
  2181  0E9A                     	;# 
  2182  0E9B                     	;# 
  2183  0E9C                     	;# 
  2184  0E9D                     	;# 
  2185  0E9E                     	;# 
  2186  0E9F                     	;# 
  2187  0FE4                     	;# 
  2188  0FE5                     	;# 
  2189  0FE6                     	;# 
  2190  0FE7                     	;# 
  2191  0FE8                     	;# 
  2192  0FE9                     	;# 
  2193  0FEA                     	;# 
  2194  0FEB                     	;# 
  2195  0FED                     	;# 
  2196  0FEE                     	;# 
  2197  0FEF                     	;# 
  2198  0000                     	;# 
  2199  0001                     	;# 
  2200  0002                     	;# 
  2201  0003                     	;# 
  2202  0004                     	;# 
  2203  0005                     	;# 
  2204  0006                     	;# 
  2205  0007                     	;# 
  2206  0008                     	;# 
  2207  0009                     	;# 
  2208  000A                     	;# 
  2209  000B                     	;# 
  2210  000C                     	;# 
  2211  000E                     	;# 
  2212  0011                     	;# 
  2213  0012                     	;# 
  2214  0015                     	;# 
  2215  0016                     	;# 
  2216  0016                     	;# 
  2217  0017                     	;# 
  2218  0018                     	;# 
  2219  0019                     	;# 
  2220  001A                     	;# 
  2221  001B                     	;# 
  2222  001C                     	;# 
  2223  008C                     	;# 
  2224  008E                     	;# 
  2225  0091                     	;# 
  2226  0092                     	;# 
  2227  0095                     	;# 
  2228  0096                     	;# 
  2229  0097                     	;# 
  2230  0098                     	;# 
  2231  0099                     	;# 
  2232  009A                     	;# 
  2233  009B                     	;# 
  2234  009B                     	;# 
  2235  009C                     	;# 
  2236  009D                     	;# 
  2237  009E                     	;# 
  2238  009F                     	;# 
  2239  010C                     	;# 
  2240  010E                     	;# 
  2241  0111                     	;# 
  2242  0112                     	;# 
  2243  0113                     	;# 
  2244  0114                     	;# 
  2245  0115                     	;# 
  2246  0116                     	;# 
  2247  0117                     	;# 
  2248  0118                     	;# 
  2249  0119                     	;# 
  2250  011D                     	;# 
  2251  018C                     	;# 
  2252  018E                     	;# 
  2253  0191                     	;# 
  2254  0191                     	;# 
  2255  0192                     	;# 
  2256  0193                     	;# 
  2257  0193                     	;# 
  2258  0194                     	;# 
  2259  0195                     	;# 
  2260  0196                     	;# 
  2261  0197                     	;# 
  2262  0199                     	;# 
  2263  019A                     	;# 
  2264  019B                     	;# 
  2265  019B                     	;# 
  2266  019C                     	;# 
  2267  019D                     	;# 
  2268  019E                     	;# 
  2269  019F                     	;# 
  2270  020C                     	;# 
  2271  0211                     	;# 
  2272  0211                     	;# 
  2273  0212                     	;# 
  2274  0212                     	;# 
  2275  0213                     	;# 
  2276  0213                     	;# 
  2277  0214                     	;# 
  2278  0214                     	;# 
  2279  0215                     	;# 
  2280  0215                     	;# 
  2281  0215                     	;# 
  2282  0216                     	;# 
  2283  0216                     	;# 
  2284  0217                     	;# 
  2285  0217                     	;# 
  2286  0391                     	;# 
  2287  0392                     	;# 
  2288  0393                     	;# 
  2289  039A                     	;# 
  2290  039B                     	;# 
  2291  0611                     	;# 
  2292  0612                     	;# 
  2293  0613                     	;# 
  2294  0613                     	;# 
  2295  0614                     	;# 
  2296  0615                     	;# 
  2297  0616                     	;# 
  2298  0616                     	;# 
  2299  0691                     	;# 
  2300  0692                     	;# 
  2301  0693                     	;# 
  2302  0694                     	;# 
  2303  0695                     	;# 
  2304  0E8E                     	;# 
  2305  0E8F                     	;# 
  2306  0E90                     	;# 
  2307  0E91                     	;# 
  2308  0E92                     	;# 
  2309  0E93                     	;# 
  2310  0E94                     	;# 
  2311  0E94                     	;# 
  2312  0E95                     	;# 
  2313  0E96                     	;# 
  2314  0E97                     	;# 
  2315  0E98                     	;# 
  2316  0E99                     	;# 
  2317  0E9A                     	;# 
  2318  0E9B                     	;# 
  2319  0E9C                     	;# 
  2320  0E9D                     	;# 
  2321  0E9E                     	;# 
  2322  0E9F                     	;# 
  2323  0FE4                     	;# 
  2324  0FE5                     	;# 
  2325  0FE6                     	;# 
  2326  0FE7                     	;# 
  2327  0FE8                     	;# 
  2328  0FE9                     	;# 
  2329  0FEA                     	;# 
  2330  0FEB                     	;# 
  2331  0FED                     	;# 
  2332  0FEE                     	;# 
  2333  0FEF                     	;# 
  2334                           
  2335                           	psect	idataBANK4
  2336  1EB2                     __pidataBANK4:	
  2337                           
  2338                           ;initializer for _MAIN_Iout_limit_mA
  2339  1EB2  34F4               	retlw	244
  2340  1EB3  3401               	retlw	1
  2341  1EB4  3400               	retlw	0
  2342  1EB5  3400               	retlw	0
  2343                           
  2344                           	psect	stringtext1
  2345  1800                     __pstringtext1:	
  2346  1800                     _dividerArray:	
  2347  1800  3401               	retlw	1
  2348  1801  3400               	retlw	0
  2349  1802  3402               	retlw	2
  2350  1803  3400               	retlw	0
  2351  1804  3403               	retlw	3
  2352  1805  3400               	retlw	0
  2353  1806  3404               	retlw	4
  2354  1807  3400               	retlw	0
  2355  1808  3405               	retlw	5
  2356  1809  3400               	retlw	0
  2357  180A  3406               	retlw	6
  2358  180B  3400               	retlw	0
  2359  180C  3407               	retlw	7
  2360  180D  3400               	retlw	0
  2361  180E  3408               	retlw	8
  2362  180F  3400               	retlw	0
  2363  1810  3409               	retlw	9
  2364  1811  3400               	retlw	0
  2365  1812  340A               	retlw	10
  2366  1813  3400               	retlw	0
  2367  1814  3414               	retlw	20
  2368  1815  3400               	retlw	0
  2369  1816  341E               	retlw	30
  2370  1817  3400               	retlw	0
  2371  1818  3428               	retlw	40
  2372  1819  3400               	retlw	0
  2373  181A  3432               	retlw	50
  2374  181B  3400               	retlw	0
  2375  181C  343C               	retlw	60
  2376  181D  3400               	retlw	0
  2377  181E  3446               	retlw	70
  2378  181F  3400               	retlw	0
  2379  1820  3450               	retlw	80
  2380  1821  3400               	retlw	0
  2381  1822  345A               	retlw	90
  2382  1823  3400               	retlw	0
  2383  1824  3464               	retlw	100
  2384  1825  3400               	retlw	0
  2385  1826  34C8               	retlw	200
  2386  1827  3400               	retlw	0
  2387  1828  342C               	retlw	44
  2388  1829  3401               	retlw	1
  2389  182A  3490               	retlw	144
  2390  182B  3401               	retlw	1
  2391  182C  34F4               	retlw	244
  2392  182D  3401               	retlw	1
  2393  182E  3458               	retlw	88
  2394  182F  3402               	retlw	2
  2395  1830  34BC               	retlw	188
  2396  1831  3402               	retlw	2
  2397  1832  3420               	retlw	32
  2398  1833  3403               	retlw	3
  2399  1834  3484               	retlw	132
  2400  1835  3403               	retlw	3
  2401  1836  34E8               	retlw	232
  2402  1837  3403               	retlw	3
  2403  1838  34D0               	retlw	208
  2404  1839  3407               	retlw	7
  2405  183A  34B8               	retlw	184
  2406  183B  340B               	retlw	11
  2407  183C  34A0               	retlw	160
  2408  183D  340F               	retlw	15
  2409  183E  3488               	retlw	136
  2410  183F  3413               	retlw	19
  2411  1840  3470               	retlw	112
  2412  1841  3417               	retlw	23
  2413  1842  3458               	retlw	88
  2414  1843  341B               	retlw	27
  2415  1844  3440               	retlw	64
  2416  1845  341F               	retlw	31
  2417  1846  3428               	retlw	40
  2418  1847  3423               	retlw	35
  2419  1848  3410               	retlw	16
  2420  1849  3427               	retlw	39
  2421  184A  3420               	retlw	32
  2422  184B  344E               	retlw	78
  2423  184C  3430               	retlw	48
  2424  184D  3475               	retlw	117
  2425  184E  3440               	retlw	64
  2426  184F  349C               	retlw	156
  2427  1850  3450               	retlw	80
  2428  1851  34C3               	retlw	195
  2429  1852  3460               	retlw	96
  2430  1853  34EA               	retlw	234
  2431  1854  3400               	retlw	0
  2432  1855  3400               	retlw	0
  2433  1856  3400               	retlw	0
  2434  1857  3400               	retlw	0
  2435  1858  3400               	retlw	0
  2436  1859  3400               	retlw	0
  2437  185A                     __end_of_dividerArray:	
  2438                           
  2439                           	psect	stringtext2
  2440  196C                     __pstringtext2:	
  2441  196C                     _USB_SD_Ptr:	
  2442  196C  34F2               	retlw	low (_sd000| (0+32768))
  2443  196D  3498               	retlw	high (_sd000| (0+32768))
  2444  196E  3437               	retlw	low (_sd001| (0+32768))
  2445  196F  3499               	retlw	high (_sd001| (0+32768))
  2446  1970  34C0               	retlw	low (_sd002| (0+32768))
  2447  1971  3498               	retlw	high (_sd002| (0+32768))
  2448  1972  345A               	retlw	low (_sd003| (0+32768))
  2449  1973  3498               	retlw	high (_sd003| (0+32768))
  2450  1974  348E               	retlw	low (_sd004| (0+32768))
  2451  1975  3498               	retlw	high (_sd004| (0+32768))
  2452  1976                     __end_of_USB_SD_Ptr:	
  2453                           
  2454                           	psect	stringtext3
  2455  1976                     __pstringtext3:	
  2456  1976                     _okMsg:	
  2457  1976  344F               	retlw	79
  2458  1977  344B               	retlw	75
  2459  1978  340D               	retlw	13
  2460  1979  340A               	retlw	10
  2461  197A  3400               	retlw	0
  2462  197B                     __end_of_okMsg:	
  2463                           
  2464                           	psect	stringtext4
  2465  197B                     __pstringtext4:	
  2466  197B                     _USB_CD_Ptr:	
  2467  197B  3400               	retlw	low (_configDescriptor1| (0+32768))
  2468  197C  3490               	retlw	high (_configDescriptor1| (0+32768))
  2469  197D  3400               	retlw	low (_configDescriptor1| (0+32768))
  2470  197E  3490               	retlw	high (_configDescriptor1| (0+32768))
  2471  197F                     __end_of_USB_CD_Ptr:	
  2472                           
  2473                           	psect	stringtext5
  2474  1000                     __pstringtext5:	
  2475  1000                     _configDescriptor1:	
  2476  1000  3409               	retlw	9
  2477  1001  3402               	retlw	2
  2478  1002  348D               	retlw	141
  2479  1003  3400               	retlw	0
  2480  1004  3404               	retlw	4
  2481  1005  3401               	retlw	1
  2482  1006  3400               	retlw	0
  2483  1007  3480               	retlw	128
  2484  1008  34FA               	retlw	250
  2485  1009  3408               	retlw	8
  2486  100A  340B               	retlw	11
  2487  100B  3400               	retlw	0
  2488  100C  3402               	retlw	2
  2489  100D  3402               	retlw	2
  2490  100E  3402               	retlw	2
  2491  100F  3401               	retlw	1
  2492  1010  3403               	retlw	3
  2493  1011  3409               	retlw	9
  2494  1012  3404               	retlw	4
  2495  1013  3400               	retlw	0
  2496  1014  3400               	retlw	0
  2497  1015  3401               	retlw	1
  2498  1016  3402               	retlw	2
  2499  1017  3402               	retlw	2
  2500  1018  3401               	retlw	1
  2501  1019  3403               	retlw	3
  2502  101A  3405               	retlw	5
  2503  101B  3424               	retlw	36
  2504  101C  3400               	retlw	0
  2505  101D  3410               	retlw	16
  2506  101E  3401               	retlw	1
  2507  101F  3404               	retlw	4
  2508  1020  3424               	retlw	36
  2509  1021  3402               	retlw	2
  2510  1022  3402               	retlw	2
  2511  1023  3405               	retlw	5
  2512  1024  3424               	retlw	36
  2513  1025  3406               	retlw	6
  2514  1026  3400               	retlw	0
  2515  1027  3401               	retlw	1
  2516  1028  3405               	retlw	5
  2517  1029  3424               	retlw	36
  2518  102A  3401               	retlw	1
  2519  102B  3400               	retlw	0
  2520  102C  3401               	retlw	1
  2521  102D  3407               	retlw	7
  2522  102E  3405               	retlw	5
  2523  102F  3481               	retlw	129
  2524  1030  3403               	retlw	3
  2525  1031  3408               	retlw	8
  2526  1032  3400               	retlw	0
  2527  1033  3402               	retlw	2
  2528  1034  3409               	retlw	9
  2529  1035  3404               	retlw	4
  2530  1036  3401               	retlw	1
  2531  1037  3400               	retlw	0
  2532  1038  3402               	retlw	2
  2533  1039  340A               	retlw	10
  2534  103A  3400               	retlw	0
  2535  103B  3400               	retlw	0
  2536  103C  3403               	retlw	3
  2537  103D  3407               	retlw	7
  2538  103E  3405               	retlw	5
  2539  103F  3402               	retlw	2
  2540  1040  3402               	retlw	2
  2541  1041  3440               	retlw	64
  2542  1042  3400               	retlw	0
  2543  1043  3400               	retlw	0
  2544  1044  3407               	retlw	7
  2545  1045  3405               	retlw	5
  2546  1046  3482               	retlw	130
  2547  1047  3402               	retlw	2
  2548  1048  3440               	retlw	64
  2549  1049  3400               	retlw	0
  2550  104A  3400               	retlw	0
  2551  104B  3408               	retlw	8
  2552  104C  340B               	retlw	11
  2553  104D  3402               	retlw	2
  2554  104E  3402               	retlw	2
  2555  104F  3402               	retlw	2
  2556  1050  3402               	retlw	2
  2557  1051  3401               	retlw	1
  2558  1052  3404               	retlw	4
  2559  1053  3409               	retlw	9
  2560  1054  3404               	retlw	4
  2561  1055  3402               	retlw	2
  2562  1056  3400               	retlw	0
  2563  1057  3401               	retlw	1
  2564  1058  3402               	retlw	2
  2565  1059  3402               	retlw	2
  2566  105A  3401               	retlw	1
  2567  105B  3404               	retlw	4
  2568  105C  3405               	retlw	5
  2569  105D  3424               	retlw	36
  2570  105E  3400               	retlw	0
  2571  105F  3410               	retlw	16
  2572  1060  3401               	retlw	1
  2573  1061  3404               	retlw	4
  2574  1062  3424               	retlw	36
  2575  1063  3402               	retlw	2
  2576  1064  3402               	retlw	2
  2577  1065  3405               	retlw	5
  2578  1066  3424               	retlw	36
  2579  1067  3406               	retlw	6
  2580  1068  3402               	retlw	2
  2581  1069  3403               	retlw	3
  2582  106A  3405               	retlw	5
  2583  106B  3424               	retlw	36
  2584  106C  3401               	retlw	1
  2585  106D  3400               	retlw	0
  2586  106E  3403               	retlw	3
  2587  106F  3407               	retlw	7
  2588  1070  3405               	retlw	5
  2589  1071  3483               	retlw	131
  2590  1072  3403               	retlw	3
  2591  1073  3408               	retlw	8
  2592  1074  3400               	retlw	0
  2593  1075  3402               	retlw	2
  2594  1076  3409               	retlw	9
  2595  1077  3404               	retlw	4
  2596  1078  3403               	retlw	3
  2597  1079  3400               	retlw	0
  2598  107A  3402               	retlw	2
  2599  107B  340A               	retlw	10
  2600  107C  3400               	retlw	0
  2601  107D  3400               	retlw	0
  2602  107E  3404               	retlw	4
  2603  107F  3407               	retlw	7
  2604  1080  3405               	retlw	5
  2605  1081  3404               	retlw	4
  2606  1082  3402               	retlw	2
  2607  1083  3440               	retlw	64
  2608  1084  3400               	retlw	0
  2609  1085  3400               	retlw	0
  2610  1086  3407               	retlw	7
  2611  1087  3405               	retlw	5
  2612  1088  3484               	retlw	132
  2613  1089  3402               	retlw	2
  2614  108A  3440               	retlw	64
  2615  108B  3400               	retlw	0
  2616  108C  3400               	retlw	0
  2617  108D                     __end_of_configDescriptor1:	
  2618                           
  2619                           	psect	stringtext6
  2620  185A                     __pstringtext6:	
  2621  185A                     _sd003:	
  2622  185A  3434               	retlw	52
  2623  185B  3403               	retlw	3
  2624  185C  3443               	retlw	67
  2625  185D  3400               	retlw	0
  2626  185E  3464               	retlw	100
  2627  185F  3400               	retlw	0
  2628  1860  3463               	retlw	99
  2629  1861  3400               	retlw	0
  2630  1862  3450               	retlw	80
  2631  1863  3400               	retlw	0
  2632  1864  346F               	retlw	111
  2633  1865  3400               	retlw	0
  2634  1866  3472               	retlw	114
  2635  1867  3400               	retlw	0
  2636  1868  3474               	retlw	116
  2637  1869  3400               	retlw	0
  2638  186A  3420               	retlw	32
  2639  186B  3400               	retlw	0
  2640  186C  3466               	retlw	102
  2641  186D  3400               	retlw	0
  2642  186E  346F               	retlw	111
  2643  186F  3400               	retlw	0
  2644  1870  3472               	retlw	114
  2645  1871  3400               	retlw	0
  2646  1872  3420               	retlw	32
  2647  1873  3400               	retlw	0
  2648  1874  3470               	retlw	112
  2649  1875  3400               	retlw	0
  2650  1876  346F               	retlw	111
  2651  1877  3400               	retlw	0
  2652  1878  3477               	retlw	119
  2653  1879  3400               	retlw	0
  2654  187A  3465               	retlw	101
  2655  187B  3400               	retlw	0
  2656  187C  3472               	retlw	114
  2657  187D  3400               	retlw	0
  2658  187E  3420               	retlw	32
  2659  187F  3400               	retlw	0
  2660  1880  3463               	retlw	99
  2661  1881  3400               	retlw	0
  2662  1882  346F               	retlw	111
  2663  1883  3400               	retlw	0
  2664  1884  346E               	retlw	110
  2665  1885  3400               	retlw	0
  2666  1886  3474               	retlw	116
  2667  1887  3400               	retlw	0
  2668  1888  3472               	retlw	114
  2669  1889  3400               	retlw	0
  2670  188A  346F               	retlw	111
  2671  188B  3400               	retlw	0
  2672  188C  346C               	retlw	108
  2673  188D  3400               	retlw	0
  2674  188E                     __end_of_sd003:	
  2675                           
  2676                           	psect	stringtext7
  2677  188E                     __pstringtext7:	
  2678  188E                     _sd004:	
  2679  188E  3432               	retlw	50
  2680  188F  3403               	retlw	3
  2681  1890  3443               	retlw	67
  2682  1891  3400               	retlw	0
  2683  1892  3444               	retlw	68
  2684  1893  3400               	retlw	0
  2685  1894  3443               	retlw	67
  2686  1895  3400               	retlw	0
  2687  1896  343C               	retlw	60
  2688  1897  3400               	retlw	0
  2689  1898  342D               	retlw	45
  2690  1899  3400               	retlw	0
  2691  189A  343E               	retlw	62
  2692  189B  3400               	retlw	0
  2693  189C  3455               	retlw	85
  2694  189D  3400               	retlw	0
  2695  189E  3441               	retlw	65
  2696  189F  3400               	retlw	0
  2697  18A0  3452               	retlw	82
  2698  18A1  3400               	retlw	0
  2699  18A2  3454               	retlw	84
  2700  18A3  3400               	retlw	0
  2701  18A4  342F               	retlw	47
  2702  18A5  3400               	retlw	0
  2703  18A6  3452               	retlw	82
  2704  18A7  3400               	retlw	0
  2705  18A8  3453               	retlw	83
  2706  18A9  3400               	retlw	0
  2707  18AA  3434               	retlw	52
  2708  18AB  3400               	retlw	0
  2709  18AC  3438               	retlw	56
  2710  18AD  3400               	retlw	0
  2711  18AE  3435               	retlw	53
  2712  18AF  3400               	retlw	0
  2713  18B0  3420               	retlw	32
  2714  18B1  3400               	retlw	0
  2715  18B2  3461               	retlw	97
  2716  18B3  3400               	retlw	0
  2717  18B4  3464               	retlw	100
  2718  18B5  3400               	retlw	0
  2719  18B6  3461               	retlw	97
  2720  18B7  3400               	retlw	0
  2721  18B8  3470               	retlw	112
  2722  18B9  3400               	retlw	0
  2723  18BA  3474               	retlw	116
  2724  18BB  3400               	retlw	0
  2725  18BC  3465               	retlw	101
  2726  18BD  3400               	retlw	0
  2727  18BE  3472               	retlw	114
  2728  18BF  3400               	retlw	0
  2729  18C0                     __end_of_sd004:	
  2730                           
  2731                           	psect	stringtext8
  2732  18C0                     __pstringtext8:	
  2733  18C0                     _sd002:	
  2734  18C0  3432               	retlw	50
  2735  18C1  3403               	retlw	3
  2736  18C2  3443               	retlw	67
  2737  18C3  3400               	retlw	0
  2738  18C4  3444               	retlw	68
  2739  18C5  3400               	retlw	0
  2740  18C6  3443               	retlw	67
  2741  18C7  3400               	retlw	0
  2742  18C8  345F               	retlw	95
  2743  18C9  3400               	retlw	0
  2744  18CA  3450               	retlw	80
  2745  18CB  3400               	retlw	0
  2746  18CC  346F               	retlw	111
  2747  18CD  3400               	retlw	0
  2748  18CE  3477               	retlw	119
  2749  18CF  3400               	retlw	0
  2750  18D0  3465               	retlw	101
  2751  18D1  3400               	retlw	0
  2752  18D2  3472               	retlw	114
  2753  18D3  3400               	retlw	0
  2754  18D4  342B               	retlw	43
  2755  18D5  3400               	retlw	0
  2756  18D6  3443               	retlw	67
  2757  18D7  3400               	retlw	0
  2758  18D8  3444               	retlw	68
  2759  18D9  3400               	retlw	0
  2760  18DA  3443               	retlw	67
  2761  18DB  3400               	retlw	0
  2762  18DC  345F               	retlw	95
  2763  18DD  3400               	retlw	0
  2764  18DE  3455               	retlw	85
  2765  18DF  3400               	retlw	0
  2766  18E0  3441               	retlw	65
  2767  18E1  3400               	retlw	0
  2768  18E2  3452               	retlw	82
  2769  18E3  3400               	retlw	0
  2770  18E4  3454               	retlw	84
  2771  18E5  3400               	retlw	0
  2772  18E6  342F               	retlw	47
  2773  18E7  3400               	retlw	0
  2774  18E8  3452               	retlw	82
  2775  18E9  3400               	retlw	0
  2776  18EA  3453               	retlw	83
  2777  18EB  3400               	retlw	0
  2778  18EC  3434               	retlw	52
  2779  18ED  3400               	retlw	0
  2780  18EE  3438               	retlw	56
  2781  18EF  3400               	retlw	0
  2782  18F0  3435               	retlw	53
  2783  18F1  3400               	retlw	0
  2784  18F2                     __end_of_sd002:	
  2785                           
  2786                           	psect	stringtext9
  2787  1937                     __pstringtext9:	
  2788  1937                     _sd001:	
  2789  1937  3416               	retlw	22
  2790  1938  3403               	retlw	3
  2791  1939  3445               	retlw	69
  2792  193A  3400               	retlw	0
  2793  193B  3461               	retlw	97
  2794  193C  3400               	retlw	0
  2795  193D  3473               	retlw	115
  2796  193E  3400               	retlw	0
  2797  193F  3479               	retlw	121
  2798  1940  3400               	retlw	0
  2799  1941  3420               	retlw	32
  2800  1942  3400               	retlw	0
  2801  1943  3456               	retlw	86
  2802  1944  3400               	retlw	0
  2803  1945  346F               	retlw	111
  2804  1946  3400               	retlw	0
  2805  1947  346C               	retlw	108
  2806  1948  3400               	retlw	0
  2807  1949  3474               	retlw	116
  2808  194A  3400               	retlw	0
  2809  194B  3473               	retlw	115
  2810  194C  3400               	retlw	0
  2811  194D                     __end_of_sd001:	
  2812                           
  2813                           	psect	stringtext10
  2814  194D                     __pstringtext10:	
  2815  194D                     _device_dsc:	
  2816  194D  3412               	retlw	18
  2817  194E  3401               	retlw	1
  2818  194F  3400               	retlw	0
  2819  1950  3402               	retlw	2
  2820  1951  34EF               	retlw	239
  2821  1952  3402               	retlw	2
  2822  1953  3401               	retlw	1
  2823  1954  3408               	retlw	8
  2824  1955  34D8               	retlw	216
  2825  1956  3404               	retlw	4
  2826  1957  340B               	retlw	11
  2827  1958  3400               	retlw	0
  2828  1959  3401               	retlw	1
  2829  195A  3400               	retlw	0
  2830  195B  3401               	retlw	1
  2831  195C  3402               	retlw	2
  2832  195D  3400               	retlw	0
  2833  195E  3401               	retlw	1
  2834  195F                     __end_of_device_dsc:	
  2835                           
  2836                           	psect	stringtext11
  2837  195F                     __pstringtext11:	
  2838  195F                     _errorMsg:	
  2839  195F  3457               	retlw	87
  2840  1960  3472               	retlw	114
  2841  1961  346F               	retlw	111
  2842  1962  346E               	retlw	110
  2843  1963  3467               	retlw	103
  2844  1964  3420               	retlw	32
  2845  1965  3463               	retlw	99
  2846  1966  346D               	retlw	109
  2847  1967  3464               	retlw	100
  2848  1968  3421               	retlw	33
  2849  1969  340D               	retlw	13
  2850  196A  340A               	retlw	10
  2851  196B  3400               	retlw	0
  2852  196C                     __end_of_errorMsg:	
  2853                           
  2854                           	psect	stringtext12
  2855  18F2                     __pstringtext12:	
  2856  18F2                     _sd000:	
  2857  18F2  3404               	retlw	4
  2858  18F3  3403               	retlw	3
  2859  18F4  3409               	retlw	9
  2860  18F5  3404               	retlw	4
  2861  18F6                     __end_of_sd000:	
  2862  000B                     _INTCONbits	set	11
  2863  0012                     _PIR2bits	set	18
  2864  0019                     _T1GCONbits	set	25
  2865  0018                     _T1CONbits	set	24
  2866  0016                     _TMR1L	set	22
  2867  0017                     _TMR1H	set	23
  2868  0019                     _T1GCON	set	25
  2869  0018                     _T1CON	set	24
  2870  001C                     _T2CONbits	set	28
  2871  0011                     _PIR1bits	set	17
  2872  001A                     _TMR2	set	26
  2873  001B                     _PR2	set	27
  2874  001C                     _T2CON	set	28
  2875  0088                     _TMR1IF	set	136
  2876  0092                     _PIE2bits	set	146
  2877  0095                     _OPTION_REGbits	set	149
  2878  008E                     _TRISC	set	142
  2879  008C                     _TRISA	set	140
  2880  0097                     _WDTCON	set	151
  2881  0098                     _OSCTUNE	set	152
  2882  0099                     _OSCCON	set	153
  2883  009D                     _ADCON0bits	set	157
  2884  0091                     _PIE1bits	set	145
  2885  009C                     _ADRESH	set	156
  2886  009B                     _ADRESL	set	155
  2887  009F                     _ADCON2	set	159
  2888  009E                     _ADCON1	set	158
  2889  009D                     _ADCON0	set	157
  2890  04D6                     _PLLRDY	set	1238
  2891  010E                     _LATCbits	set	270
  2892  010C                     _LATAbits	set	268
  2893  0117                     _FVRCONbits	set	279
  2894  0117                     _FVRCON	set	279
  2895  011D                     _APFCON	set	285
  2896  010E                     _LATC	set	270
  2897  010C                     _LATA	set	268
  2898  019B                     _SPBRG	set	411
  2899  019E                     _TXSTAbits	set	414
  2900  018C                     _ANSELA	set	396
  2901  018E                     _ANSELC	set	398
  2902  019A                     _TXREG	set	410
  2903  0199                     _RCREG	set	409
  2904  019D                     _RCSTAbits	set	413
  2905  019C                     _SPBRGH	set	412
  2906  019B                     _SPBRGL	set	411
  2907  019E                     _TXSTA	set	414
  2908  019D                     _RCSTA	set	413
  2909  019F                     _BAUDCON	set	415
  2910  020C                     _WPUA	set	524
  2911  039B                     _ACTCON	set	923
  2912  0614                     _PWM2DCL	set	1556
  2913  0615                     _PWM2DCH	set	1557
  2914  0616                     _PWM2CON	set	1558
  2915  0E98                     _UEP0bits	set	3736
  2916  0E8F                     _USTAT	set	3727
  2917  0E92                     _UIEbits	set	3730
  2918  0E8E                     _UCON	set	3726
  2919  0E90                     _UIRbits	set	3728
  2920  0E96                     _UADDR	set	3734
  2921  0E8E                     _UCONbits	set	3726
  2922  0E92                     _UIE	set	3730
  2923  0E97                     _UEIE	set	3735
  2924  0E91                     _UCFG	set	3729
  2925  0E90                     _UIR	set	3728
  2926  0E93                     _UEIR	set	3731
  2927  0E99                     _UEP1	set	3737
  2928  0E98                     _UEP0	set	3736
  2929  18F6                     STR_1:	
  2930  18F6  3445               	retlw	69	;'E'
  2931  18F7  3461               	retlw	97	;'a'
  2932  18F8  3473               	retlw	115	;'s'
  2933  18F9  3479               	retlw	121	;'y'
  2934  18FA  3456               	retlw	86	;'V'
  2935  18FB  346F               	retlw	111	;'o'
  2936  18FC  346C               	retlw	108	;'l'
  2937  18FD  3474               	retlw	116	;'t'
  2938  18FE  3473               	retlw	115	;'s'
  2939  18FF  3420               	retlw	32	;' '
  2940  1900  3409               	retlw	9
  2941  1901  3455               	retlw	85	;'U'
  2942  1902  3428               	retlw	40	;'('
  2943  1903  346D               	retlw	109	;'m'
  2944  1904  3456               	retlw	86	;'V'
  2945  1905  3429               	retlw	41	;')'
  2946  1906  343D               	retlw	61	;'='
  2947  1907  3420               	retlw	32	;' '
  2948  1908  3420               	retlw	32	;' '
  2949  1909  3420               	retlw	32	;' '
  2950  190A  3420               	retlw	32	;' '
  2951  190B  3420               	retlw	32	;' '
  2952  190C  3420               	retlw	32	;' '
  2953  190D  3409               	retlw	9
  2954  190E  3420               	retlw	32	;' '
  2955  190F  3449               	retlw	73	;'I'
  2956  1910  3428               	retlw	40	;'('
  2957  1911  346D               	retlw	109	;'m'
  2958  1912  3441               	retlw	65	;'A'
  2959  1913  3429               	retlw	41	;')'
  2960  1914  343D               	retlw	61	;'='
  2961  1915  3420               	retlw	32	;' '
  2962  1916  3420               	retlw	32	;' '
  2963  1917  3420               	retlw	32	;' '
  2964  1918  3420               	retlw	32	;' '
  2965  1919  3420               	retlw	32	;' '
  2966  191A  340D               	retlw	13
  2967  191B  340A               	retlw	10
  2968  191C  3400               	retlw	0
  2969                           
  2970                           	psect	stringtext13
  2971  0000                     __pstringtext13:	
  2972                           
  2973                           ; #config settings
  2974  0000                     
  2975                           	psect	cinit
  2976  00EB                     start_initialization:	
  2977  00EB                     __initialization:	
  2978                           
  2979                           ; Initialize objects allocated to BANK4
  2980  00EB  0024               	movlb	4	; select bank4
  2981  00EC  319E  26B2  3180   	fcall	__pidataBANK4	;fetch initializer
  2982  00EF  00EA               	movwf	__pdataBANK4& (0+127)
  2983  00F0  319E  26B3  3180   	fcall	__pidataBANK4+1	;fetch initializer
  2984  00F3  00EB               	movwf	(__pdataBANK4+1)& (0+127)
  2985  00F4  319E  26B4  3180   	fcall	__pidataBANK4+2	;fetch initializer
  2986  00F7  00EC               	movwf	(__pdataBANK4+2)& (0+127)
  2987  00F8  319E  26B5  3180   	fcall	__pidataBANK4+3	;fetch initializer
  2988  00FB  00ED               	movwf	(__pdataBANK4+3)& (0+127)
  2989                           
  2990                           ; Clear objects allocated to BANK2
  2991  00FC  0022               	movlb	2	; select bank2
  2992  00FD  01EE               	clrf	__pbssBANK2& (0+127)
  2993  00FE  01EF               	clrf	(__pbssBANK2+1)& (0+127)
  2994                           
  2995                           ; Clear objects allocated to BANK3
  2996  00FF  30CB               	movlw	low __pbssBANK3
  2997  0100  0084               	movwf	4
  2998  0101  3001               	movlw	high __pbssBANK3
  2999  0102  0085               	movwf	5
  3000  0103  3025               	movlw	37
  3001  0104  319E  26C7  3180   	fcall	clear_ram0
  3002                           
  3003                           ; Clear objects allocated to BANK4
  3004  0107  3020               	movlw	low __pbssBANK4
  3005  0108  0084               	movwf	4
  3006  0109  3002               	movlw	high __pbssBANK4
  3007  010A  0085               	movwf	5
  3008  010B  304A               	movlw	74
  3009  010C  319E  26C7  3180   	fcall	clear_ram0
  3010                           
  3011                           ; Clear objects allocated to BANK5
  3012  010F  30A0               	movlw	low __pbssBANK5
  3013  0110  0084               	movwf	4
  3014  0111  3002               	movlw	high __pbssBANK5
  3015  0112  0085               	movwf	5
  3016  0113  304B               	movlw	75
  3017  0114  319E  26C7  3180   	fcall	clear_ram0
  3018                           
  3019                           ; Clear objects allocated to BANK6
  3020  0117  3020               	movlw	low __pbssBANK6
  3021  0118  0084               	movwf	4
  3022  0119  3003               	movlw	high __pbssBANK6
  3023  011A  0085               	movwf	5
  3024  011B  3040               	movlw	64
  3025  011C  319E  26C7  3180   	fcall	clear_ram0
  3026                           
  3027                           ; Clear objects allocated to BANK7
  3028  011F  30A0               	movlw	low __pbssBANK7
  3029  0120  0084               	movwf	4
  3030  0121  3003               	movlw	high __pbssBANK7
  3031  0122  0085               	movwf	5
  3032  0123  3040               	movlw	64
  3033  0124  319E  26C7  3180   	fcall	clear_ram0
  3034                           
  3035                           ; Clear objects allocated to BANK8
  3036  0127  3020               	movlw	low __pbssBANK8
  3037  0128  0084               	movwf	4
  3038  0129  3004               	movlw	high __pbssBANK8
  3039  012A  0085               	movwf	5
  3040  012B  3040               	movlw	64
  3041  012C  319E  26C7  3180   	fcall	clear_ram0
  3042                           
  3043                           ; Clear objects allocated to BANK9
  3044  012F  30A0               	movlw	low __pbssBANK9
  3045  0130  0084               	movwf	4
  3046  0131  3004               	movlw	high __pbssBANK9
  3047  0132  0085               	movwf	5
  3048  0133  3040               	movlw	64
  3049  0134  319E  26C7  3180   	fcall	clear_ram0
  3050                           
  3051                           ; Clear objects allocated to BANK10
  3052  0137  3020               	movlw	low __pbssBANK10
  3053  0138  0084               	movwf	4
  3054  0139  3005               	movlw	high __pbssBANK10
  3055  013A  0085               	movwf	5
  3056  013B  3040               	movlw	64
  3057  013C  319E  26C7  3180   	fcall	clear_ram0
  3058                           
  3059                           ; Clear objects allocated to BANK11
  3060  013F  30A0               	movlw	low __pbssBANK11
  3061  0140  0084               	movwf	4
  3062  0141  3005               	movlw	high __pbssBANK11
  3063  0142  0085               	movwf	5
  3064  0143  3040               	movlw	64
  3065  0144  319E  26C7         	fcall	clear_ram0
  3066  0146                     end_of_initialization:	
  3067                           ;End of C runtime variable initialization code
  3068                           
  3069  0146                     __end_of__initialization:	
  3070  0146  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3071  0147  0020               	movlb	0
  3072  0148  3190  28D2         	ljmp	_main	;jump to C main() function
  3073                           
  3074                           	psect	bssBANK2
  3075  016E                     __pbssBANK2:	
  3076  016E                     _pBDTEntryEP0OutNext:	
  3077  016E                     	ds	2
  3078                           
  3079                           	psect	bssBANK3
  3080  01CB                     __pbssBANK3:	
  3081  01CB                     _pBDTEntryIn:	
  3082  01CB                     	ds	10
  3083  01D5                     _inPipes:	
  3084  01D5                     	ds	5
  3085  01DA                     _Iadc:	
  3086  01DA                     	ds	2
  3087  01DC                     _timer1ReloadVal:	
  3088  01DC                     	ds	2
  3089  01DE                     main_CommunicationHandler@cmdRxBufferPointer:	
  3090  01DE                     	ds	1
  3091  01DF                     _NextUSBOut:	
  3092  01DF                     	ds	1
  3093  01E0                     _PwmDutyCycleCurrentLimit:	
  3094  01E0                     	ds	1
  3095  01E1                     _cdc_tx_len2:	
  3096  01E1                     	ds	1
  3097  01E2                     _cdc_trf_state2:	
  3098  01E2                     	ds	1
  3099  01E3                     _cdc_rx_len2:	
  3100  01E3                     	ds	1
  3101  01E4                     _cdc_tx_len:	
  3102  01E4                     	ds	1
  3103  01E5                     _cdc_trf_state:	
  3104  01E5                     	ds	1
  3105  01E6                     _cdc_rx_len:	
  3106  01E6                     	ds	1
  3107  01E7                     _USBDeferStatusStagePacket:	
  3108  01E7                     	ds	1
  3109  01E8                     _controlTransferState:	
  3110  01E8                     	ds	1
  3111  01E9                     _shortPacketStatus:	
  3112  01E9                     	ds	1
  3113  01EA                     _pBDTEntryEP0OutCurrent:	
  3114  01EA                     	ds	1
  3115  01EB                     _USBDeviceState:	
  3116  01EB                     	ds	1
  3117  01EC                     _Uadc:	
  3118  01EC                     	ds	2
  3119  01EE                     _USTATcopy:	
  3120  01EE                     	ds	1
  3121  01EF                     _USBActiveConfiguration:	
  3122  01EF                     	ds	1
  3123                           
  3124                           	psect	bssBANK4
  3125  0220                     __pbssBANK4:	
  3126  0220                     _outPipes:	
  3127  0220                     	ds	7
  3128  0227                     main_overcurrentProtection@Iadc_avg:	
  3129  0227                     	ds	2
  3130  0229                     _MAIN_Iout_mA:	
  3131  0229                     	ds	2
  3132  022B                     _MAIN_Uout_mV:	
  3133  022B                     	ds	2
  3134  022D                     _Uadc_target:	
  3135  022D                     	ds	2
  3136  022F                     _Iadc_limit:	
  3137  022F                     	ds	2
  3138  0231                     _CDCDataInHandle2:	
  3139  0231                     	ds	2
  3140  0233                     _CDCDataOutHandle2:	
  3141  0233                     	ds	2
  3142  0235                     _pCDCDst2:	
  3143  0235                     	ds	2
  3144  0237                     _pCDCSrc2:	
  3145  0237                     	ds	2
  3146  0239                     _CDCDataInHandle:	
  3147  0239                     	ds	2
  3148  023B                     _CDCDataOutHandle:	
  3149  023B                     	ds	2
  3150  023D                     _pCDCDst:	
  3151  023D                     	ds	2
  3152  023F                     _pCDCSrc:	
  3153  023F                     	ds	2
  3154  0241                     _TMR1_InterruptHandler:	
  3155  0241                     	ds	2
  3156  0243                     _TMR2_InterruptHandler:	
  3157  0243                     	ds	2
  3158  0245                     INTERRUPT_InterruptManager@pwmCorrection:	
  3159  0245                     	ds	1
  3160  0246                     main_overcurrentProtection@tOut:	
  3161  0246                     	ds	1
  3162  0247                     main_CommunicationHandler@step:	
  3163  0247                     	ds	1
  3164  0248                     _RS232_Out_Data_Rdy:	
  3165  0248                     	ds	1
  3166  0249                     _RS232cp:	
  3167  0249                     	ds	1
  3168  024A                     _LastRS232Out:	
  3169  024A                     	ds	1
  3170  024B                     _MAIN_upConverterFlag:	
  3171  024B                     	ds	1
  3172  024C                     _MAIN_ovcFlag:	
  3173  024C                     	ds	1
  3174  024D                     _PwmDutyCycleVoltageLimit:	
  3175  024D                     	ds	1
  3176  024E                     _control_signal_bitmap2:	
  3177  024E                     	ds	1
  3178  024F                     _cdc_mem_type2:	
  3179  024F                     	ds	1
  3180  0250                     _control_signal_bitmap:	
  3181  0250                     	ds	1
  3182  0251                     _cdc_mem_type:	
  3183  0251                     	ds	1
  3184  0252                     _USBTicksSinceSuspendEnd:	
  3185  0252                     	ds	1
  3186  0253                     _USBDeferOUTDataStagePackets:	
  3187  0253                     	ds	1
  3188  0254                     _USBDeferINDataStagePackets:	
  3189  0254                     	ds	1
  3190  0255                     _USBStatusStageEnabledFlag2:	
  3191  0255                     	ds	1
  3192  0256                     _USBStatusStageEnabledFlag1:	
  3193  0256                     	ds	1
  3194  0257                     _USBStatusStageTimeoutCounter:	
  3195  0257                     	ds	1
  3196  0258                     _BothEP0OutUOWNsSet:	
  3197  0258                     	ds	1
  3198  0259                     _endpoint_number:	
  3199  0259                     	ds	1
  3200  025A                     _USBBusIsSuspended:	
  3201  025A                     	ds	1
  3202  025B                     _RemoteWakeup:	
  3203  025B                     	ds	1
  3204  025C                     _pDst:	
  3205  025C                     	ds	1
  3206  025D                     _line_coding:	
  3207  025D                     	ds	7
  3208  0264                     _MAIN_Uout_target_mV:	
  3209  0264                     	ds	4
  3210  0268                     _USBAlternateInterface:	
  3211  0268                     	ds	2
  3212                           
  3213                           	psect	dataBANK4
  3214  026A                     __pdataBANK4:	
  3215  026A                     _MAIN_Iout_limit_mA:	
  3216  026A                     	ds	4
  3217                           
  3218                           	psect	bssBANK5
  3219  02A0                     __pbssBANK5:	
  3220  02A0                     _cdc_notice:	
  3221  02A0                     	ds	10
  3222  02AA                     _pBDTEntryOut:	
  3223  02AA                     	ds	10
  3224  02B4                     _ep_data_out:	
  3225  02B4                     	ds	5
  3226  02B9                     _ep_data_in:	
  3227  02B9                     	ds	5
  3228  02BE                     _BaudRateGen2:	
  3229  02BE                     	ds	4
  3230  02C2                     _BaudRateGen:	
  3231  02C2                     	ds	4
  3232  02C6                     _USB1msTickCount:	
  3233  02C6                     	ds	4
  3234  02CA                     _cdc_notice2:	
  3235  02CA                     	ds	10
  3236  02D4                     _dummy_encapsulated_cmd_response2:	
  3237  02D4                     	ds	8
  3238  02DC                     _dummy_encapsulated_cmd_response:	
  3239  02DC                     	ds	8
  3240  02E4                     _line_coding2:	
  3241  02E4                     	ds	7
  3242                           
  3243                           	psect	bssBANK6
  3244  0320                     __pbssBANK6:	
  3245  0320                     _cmdRxBuffer:	
  3246  0320                     	ds	64
  3247                           
  3248                           	psect	bssBANK7
  3249  03A0                     __pbssBANK7:	
  3250  03A0                     _writeStatusBuffer:	
  3251  03A0                     	ds	64
  3252                           
  3253                           	psect	bssBANK8
  3254  0420                     __pbssBANK8:	
  3255  0420                     _USB_Out_Buffer:	
  3256  0420                     	ds	64
  3257                           
  3258                           	psect	bssBANK9
  3259  04A0                     __pbssBANK9:	
  3260  04A0                     _writeBuffer:	
  3261  04A0                     	ds	64
  3262                           
  3263                           	psect	bssBANK10
  3264  0520                     __pbssBANK10:	
  3265  0520                     _readBuffer:	
  3266  0520                     	ds	64
  3267                           
  3268                           	psect	bssBANK11
  3269  05A0                     __pbssBANK11:	
  3270  05A0                     _RS232_Out_Data:	
  3271  05A0                     	ds	64
  3272                           
  3273                           	psect	clrtext
  3274  1EC7                     clear_ram0:	
  3275                           ;	Called with FSR0 containing the base address, and
  3276                           ;	WREG with the size to clear
  3277                           
  3278  1EC7  0064               	clrwdt	;clear the watchdog before getting into this loop
  3279  1EC8                     clrloop0:	
  3280  1EC8  0180               	clrf	0	;clear RAM location pointed to by FSR
  3281  1EC9  3101               	addfsr 0,1
  3282  1ECA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3283  1ECB  2EC8               	goto	clrloop0	;have we reached the end yet?
  3284  1ECC  3400               	retlw	0	;all done for this memory range, return
  3285                           
  3286                           	psect	cstackBANK3
  3287  01A0                     __pcstackBANK3:	
  3288  01A0                     ??_TMR2_StartTimer:	
  3289  01A0                     ??_PIN_MANAGER_Initialize:	
  3290                           ; 1 bytes @ 0x0
  3291                           
  3292  01A0                     ??_OSCILLATOR_Initialize:	
  3293                           ; 1 bytes @ 0x0
  3294                           
  3295  01A0                     ??_WDT_Initialize:	
  3296                           ; 1 bytes @ 0x0
  3297                           
  3298  01A0                     ??_FVR_Initialize:	
  3299                           ; 1 bytes @ 0x0
  3300                           
  3301  01A0                     ??_PWM2_Initialize:	
  3302                           ; 1 bytes @ 0x0
  3303                           
  3304  01A0                     ??_TMR1_Initialize:	
  3305                           ; 1 bytes @ 0x0
  3306                           
  3307  01A0                     ??_EUSART_Initialize:	
  3308                           ; 1 bytes @ 0x0
  3309                           
  3310  01A0                     ??_TMR1_StartTimer:	
  3311                           ; 1 bytes @ 0x0
  3312                           
  3313  01A0                     ??_isdigit:	
  3314                           ; 1 bytes @ 0x0
  3315                           
  3316  01A0                     ??_ADC_Initialize:	
  3317                           ; 1 bytes @ 0x0
  3318                           
  3319  01A0                     ??_ADC_StartConversion:	
  3320                           ; 1 bytes @ 0x0
  3321                           
  3322  01A0                     ??_TMR2_Initialize:	
  3323                           ; 1 bytes @ 0x0
  3324                           
  3325  01A0                     ??_SYSTEM_Initialize:	
  3326                           ; 1 bytes @ 0x0
  3327                           
  3328  01A0                     ?_PWM2_LoadDutyValue:	
  3329                           ; 1 bytes @ 0x0
  3330                           
  3331  01A0                     ??_TMR1_Reload:	
  3332                           ; 1 bytes @ 0x0
  3333                           
  3334  01A0                     ??_USBDeviceInit:	
  3335                           ; 1 bytes @ 0x0
  3336                           
  3337  01A0                     ?_putUSBUSART:	
  3338                           ; 1 bytes @ 0x0
  3339                           
  3340  01A0                     ??_main_overcurrentProtection:	
  3341                           ; 1 bytes @ 0x0
  3342                           
  3343  01A0                     ?_memset:	
  3344                           ; 1 bytes @ 0x0
  3345                           
  3346  01A0                     ?_USBTransferOnePacket:	
  3347                           ; 2 bytes @ 0x0
  3348                           
  3349  01A0                     ?___wmul:	
  3350                           ; 2 bytes @ 0x0
  3351                           
  3352  01A0                     ?___lmul:	
  3353                           ; 2 bytes @ 0x0
  3354                           
  3355  01A0                     USBTransferOnePacket@dir:	
  3356                           ; 4 bytes @ 0x0
  3357                           
  3358  01A0                     _isdigit$3442:	
  3359                           ; 1 bytes @ 0x0
  3360                           
  3361  01A0                     PWM2_LoadDutyValue@dutyValue:	
  3362                           ; 1 bytes @ 0x0
  3363                           
  3364  01A0                     putUSBUSART@data:	
  3365                           ; 2 bytes @ 0x0
  3366                           
  3367  01A0                     ___wmul@multiplier:	
  3368                           ; 2 bytes @ 0x0
  3369                           
  3370  01A0                     memset@p1:	
  3371                           ; 2 bytes @ 0x0
  3372                           
  3373  01A0                     ___lmul@multiplier:	
  3374                           ; 2 bytes @ 0x0
  3375                           
  3376                           
  3377                           ; 4 bytes @ 0x0
  3378  01A0                     	ds	1
  3379  01A1                     isdigit@c:	
  3380  01A1                     USBDeviceInit@p:	
  3381                           ; 1 bytes @ 0x1
  3382                           
  3383  01A1                     USBTransferOnePacket@data:	
  3384                           ; 2 bytes @ 0x1
  3385                           
  3386                           
  3387                           ; 2 bytes @ 0x1
  3388  01A1                     	ds	1
  3389  01A2                     ??_PWM2_LoadDutyValue:	
  3390  01A2                     putUSBUSART@length:	
  3391                           ; 1 bytes @ 0x2
  3392                           
  3393  01A2                     ___wmul@multiplicand:	
  3394                           ; 1 bytes @ 0x2
  3395                           
  3396  01A2                     memset@c:	
  3397                           ; 2 bytes @ 0x2
  3398                           
  3399                           
  3400                           ; 2 bytes @ 0x2
  3401  01A2                     	ds	1
  3402  01A3                     ??_putUSBUSART:	
  3403  01A3                     USBDeviceInit@i_1118:	
  3404                           ; 1 bytes @ 0x3
  3405                           
  3406  01A3                     USBTransferOnePacket@len:	
  3407                           ; 1 bytes @ 0x3
  3408                           
  3409                           
  3410                           ; 1 bytes @ 0x3
  3411  01A3                     	ds	1
  3412  01A4                     ??_USBTransferOnePacket:	
  3413  01A4                     ??___wmul:	
  3414                           ; 1 bytes @ 0x4
  3415                           
  3416  01A4                     USBDeviceInit@i:	
  3417                           ; 1 bytes @ 0x4
  3418                           
  3419  01A4                     ___wmul@product:	
  3420                           ; 1 bytes @ 0x4
  3421                           
  3422  01A4                     memset@n:	
  3423                           ; 2 bytes @ 0x4
  3424                           
  3425  01A4                     ___lmul@multiplicand:	
  3426                           ; 2 bytes @ 0x4
  3427                           
  3428                           
  3429                           ; 4 bytes @ 0x4
  3430  01A4                     	ds	2
  3431  01A6                     ??_memset:	
  3432  01A6                     ?_my_uitoa:	
  3433                           ; 1 bytes @ 0x6
  3434                           
  3435  01A6                     ?_atoi:	
  3436                           ; 1 bytes @ 0x6
  3437                           
  3438  01A6                     my_uitoa@num:	
  3439                           ; 2 bytes @ 0x6
  3440                           
  3441  01A6                     memset@p:	
  3442                           ; 2 bytes @ 0x6
  3443                           
  3444                           
  3445                           ; 2 bytes @ 0x6
  3446  01A6                     	ds	2
  3447  01A8                     ??_atoi:	
  3448  01A8                     ??_my_uitoa:	
  3449                           ; 1 bytes @ 0x8
  3450                           
  3451  01A8                     ??___lmul:	
  3452                           ; 1 bytes @ 0x8
  3453                           
  3454  01A8                     USBTransferOnePacket@ep:	
  3455                           ; 1 bytes @ 0x8
  3456                           
  3457  01A8                     ___lmul@product:	
  3458                           ; 1 bytes @ 0x8
  3459                           
  3460                           
  3461                           ; 4 bytes @ 0x8
  3462  01A8                     	ds	1
  3463  01A9                     USBTransferOnePacket@handle:	
  3464                           
  3465                           ; 2 bytes @ 0x9
  3466  01A9                     	ds	1
  3467  01AA                     atoi@sign:	
  3468                           
  3469                           ; 1 bytes @ 0xA
  3470  01AA                     	ds	1
  3471  01AB                     ?_getsUSBUSART:	
  3472  01AB                     ??_CDCTxService:	
  3473                           ; 1 bytes @ 0xB
  3474                           
  3475  01AB                     getsUSBUSART@len:	
  3476                           ; 1 bytes @ 0xB
  3477                           
  3478  01AB                     atoi@a:	
  3479                           ; 1 bytes @ 0xB
  3480                           
  3481                           
  3482                           ; 2 bytes @ 0xB
  3483  01AB                     	ds	1
  3484  01AC                     ??_getsUSBUSART:	
  3485  01AC                     ?___aldiv:	
  3486                           ; 1 bytes @ 0xC
  3487                           
  3488  01AC                     ?___lldiv:	
  3489                           ; 4 bytes @ 0xC
  3490                           
  3491  01AC                     CDCTxService@i:	
  3492                           ; 4 bytes @ 0xC
  3493                           
  3494  01AC                     ___aldiv@divisor:	
  3495                           ; 1 bytes @ 0xC
  3496                           
  3497  01AC                     ___lldiv@divisor:	
  3498                           ; 4 bytes @ 0xC
  3499                           
  3500                           
  3501                           ; 4 bytes @ 0xC
  3502  01AC                     	ds	1
  3503  01AD                     CDCTxService@byte_to_send:	
  3504  01AD                     atoi@s:	
  3505                           ; 1 bytes @ 0xD
  3506                           
  3507                           
  3508                           ; 1 bytes @ 0xD
  3509  01AD                     	ds	1
  3510  01AE                     getsUSBUSART@buffer:	
  3511                           
  3512                           ; 1 bytes @ 0xE
  3513  01AE                     	ds	2
  3514  01B0                     ___aldiv@dividend:	
  3515  01B0                     ___lldiv@dividend:	
  3516                           ; 4 bytes @ 0x10
  3517                           
  3518                           
  3519                           ; 4 bytes @ 0x10
  3520  01B0                     	ds	2
  3521  01B2                     my_uitoa@strIncremet:	
  3522                           
  3523                           ; 1 bytes @ 0x12
  3524  01B2                     	ds	1
  3525  01B3                     my_uitoa@str:	
  3526                           
  3527                           ; 1 bytes @ 0x13
  3528  01B3                     	ds	1
  3529  01B4                     ??___aldiv:	
  3530  01B4                     ??___lldiv:	
  3531                           ; 1 bytes @ 0x14
  3532                           
  3533  01B4                     my_uitoa@powerOfTen:	
  3534                           ; 1 bytes @ 0x14
  3535                           
  3536                           
  3537                           ; 1 bytes @ 0x14
  3538  01B4                     	ds	1
  3539  01B5                     my_uitoa@ziffer:	
  3540  01B5                     ___aldiv@counter:	
  3541                           ; 1 bytes @ 0x15
  3542                           
  3543  01B5                     ___lldiv@quotient:	
  3544                           ; 1 bytes @ 0x15
  3545                           
  3546                           
  3547                           ; 4 bytes @ 0x15
  3548  01B5                     	ds	1
  3549  01B6                     ___aldiv@sign:	
  3550                           
  3551                           ; 1 bytes @ 0x16
  3552  01B6                     	ds	1
  3553  01B7                     ___aldiv@quotient:	
  3554                           
  3555                           ; 4 bytes @ 0x17
  3556  01B7                     	ds	2
  3557  01B9                     ___lldiv@counter:	
  3558                           
  3559                           ; 1 bytes @ 0x19
  3560  01B9                     	ds	2
  3561  01BB                     ?_main_switchStepUp_Down:	
  3562  01BB                     main_switchStepUp_Down@Uout_mV:	
  3563                           ; 1 bytes @ 0x1B
  3564                           
  3565                           
  3566                           ; 4 bytes @ 0x1B
  3567  01BB                     	ds	4
  3568  01BF                     ??_main_switchStepUp_Down:	
  3569                           
  3570                           ; 1 bytes @ 0x1F
  3571  01BF                     	ds	1
  3572  01C0                     ?_main_SetDcDcRegulator:	
  3573  01C0                     main_SetDcDcRegulator@pI_mA:	
  3574                           ; 1 bytes @ 0x20
  3575                           
  3576                           
  3577                           ; 1 bytes @ 0x20
  3578  01C0                     	ds	1
  3579  01C1                     ??_main_SetDcDcRegulator:	
  3580                           
  3581                           ; 1 bytes @ 0x21
  3582  01C1                     	ds	4
  3583  01C5                     main_SetDcDcRegulator@pU_mV:	
  3584                           
  3585                           ; 1 bytes @ 0x25
  3586  01C5                     	ds	1
  3587  01C6                     ??_main_CommunicationHandler:	
  3588                           
  3589                           ; 1 bytes @ 0x26
  3590  01C6                     	ds	2
  3591  01C8                     main_CommunicationHandler@numBytesRead:	
  3592                           
  3593                           ; 1 bytes @ 0x28
  3594  01C8                     	ds	1
  3595  01C9                     main_CommunicationHandler@i:	
  3596                           
  3597                           ; 1 bytes @ 0x29
  3598  01C9                     	ds	1
  3599  01CA                     ??_main:	
  3600                           
  3601                           ; 1 bytes @ 0x2A
  3602  01CA                     	ds	1
  3603                           
  3604                           	psect	cstackBANK2
  3605  0160                     __pcstackBANK2:	
  3606  0160                     ??_USBCtrlEPService:	
  3607                           
  3608                           ; 1 bytes @ 0x0
  3609  0160                     	ds	3
  3610  0163                     ??_USBDeviceTasks:	
  3611                           
  3612                           ; 1 bytes @ 0x3
  3613  0163                     	ds	2
  3614  0165                     ??_INTERRUPT_InterruptManager:	
  3615                           
  3616                           ; 1 bytes @ 0x5
  3617  0165                     	ds	7
  3618  016C                     INTERRUPT_InterruptManager@pwm:	
  3619                           
  3620                           ; 2 bytes @ 0xC
  3621  016C                     	ds	2
  3622                           
  3623                           	psect	cstackBANK1
  3624  00E0                     __pcstackBANK1:	
  3625  00E0                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  3626  00E0                     ??_USART_mySetLineCodingHandler:	
  3627                           ; 1 bytes @ 0x0
  3628                           
  3629  00E0                     getsUSBUSART2@buffer:	
  3630                           ; 1 bytes @ 0x0
  3631                           
  3632  00E0                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  3633                           ; 1 bytes @ 0x0
  3634                           
  3635                           
  3636                           ; 2 bytes @ 0x0
  3637  00E0                     	ds	1
  3638  00E1                     ??_main_CDC_to_RS485_Tasks:	
  3639                           
  3640                           ; 1 bytes @ 0x1
  3641  00E1                     	ds	1
  3642  00E2                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  3643                           
  3644                           ; 2 bytes @ 0x2
  3645  00E2                     	ds	2
  3646  00E4                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  3647  00E4                     USART_mySetLineCodingHandler@dwBaud:	
  3648                           ; 2 bytes @ 0x4
  3649                           
  3650                           
  3651                           ; 4 bytes @ 0x4
  3652  00E4                     	ds	2
  3653  00E6                     ??_USBWakeFromSuspend:	
  3654  00E6                     ??_USBSuspend:	
  3655                           ; 1 bytes @ 0x6
  3656                           
  3657  00E6                     ??_USBStdFeatureReqHandler:	
  3658                           ; 1 bytes @ 0x6
  3659                           
  3660  00E6                     ??_USBStdSetCfgHandler:	
  3661                           ; 1 bytes @ 0x6
  3662                           
  3663                           
  3664                           ; 1 bytes @ 0x6
  3665  00E6                     	ds	1
  3666  00E7                     USBStdSetCfgHandler@p:	
  3667                           
  3668                           ; 2 bytes @ 0x7
  3669  00E7                     	ds	1
  3670  00E8                     ??_USBCtrlTrfInHandler:	
  3671  00E8                     ??_USBCtrlTrfRxService:	
  3672                           ; 1 bytes @ 0x8
  3673                           
  3674  00E8                     USBStdFeatureReqHandler@pUEP:	
  3675                           ; 1 bytes @ 0x8
  3676                           
  3677                           
  3678                           ; 2 bytes @ 0x8
  3679  00E8                     	ds	1
  3680  00E9                     USBStdSetCfgHandler@i_1857:	
  3681                           
  3682                           ; 1 bytes @ 0x9
  3683  00E9                     	ds	1
  3684  00EA                     USBCtrlTrfRxService@i:	
  3685  00EA                     USBStdSetCfgHandler@i:	
  3686                           ; 1 bytes @ 0xA
  3687                           
  3688  00EA                     USBCtrlTrfInHandler@lastDTS:	
  3689                           ; 1 bytes @ 0xA
  3690                           
  3691  00EA                     USBStdFeatureReqHandler@current_ep_data:	
  3692                           ; 1 bytes @ 0xA
  3693                           
  3694                           
  3695                           ; 1 bytes @ 0xA
  3696  00EA                     	ds	1
  3697  00EB                     USBCtrlTrfRxService@byteToRead:	
  3698  00EB                     USBStdFeatureReqHandler@p:	
  3699                           ; 1 bytes @ 0xB
  3700                           
  3701                           
  3702                           ; 2 bytes @ 0xB
  3703  00EB                     	ds	1
  3704  00EC                     ??_USBCtrlTrfOutHandler:	
  3705                           
  3706                           ; 1 bytes @ 0xC
  3707  00EC                     	ds	1
  3708  00ED                     ??_USBCheckStdRequest:	
  3709                           
  3710                           ; 1 bytes @ 0xD
  3711  00ED                     	ds	1
  3712  00EE                     ??_USBCtrlTrfSetupHandler:	
  3713                           
  3714                           ; 1 bytes @ 0xE
  3715  00EE                     	ds	1
  3716  00EF                     USBDeviceTasks@i:	
  3717                           
  3718                           ; 1 bytes @ 0xF
  3719  00EF                     	ds	1
  3720                           
  3721                           	psect	cstackCOMMON
  3722  0070                     __pcstackCOMMON:	
  3723  0070                     ?_isdigit:	
  3724  0070                     ?_TMR2_StartTimer:	
  3725                           ; 1 bit 
  3726                           
  3727  0070                     ?_PIN_MANAGER_Initialize:	
  3728                           ; 1 bytes @ 0x0
  3729                           
  3730  0070                     ?_OSCILLATOR_Initialize:	
  3731                           ; 1 bytes @ 0x0
  3732                           
  3733  0070                     ?_WDT_Initialize:	
  3734                           ; 1 bytes @ 0x0
  3735                           
  3736  0070                     ?_FVR_Initialize:	
  3737                           ; 1 bytes @ 0x0
  3738                           
  3739  0070                     ?_PWM2_Initialize:	
  3740                           ; 1 bytes @ 0x0
  3741                           
  3742  0070                     ?_TMR1_Initialize:	
  3743                           ; 1 bytes @ 0x0
  3744                           
  3745  0070                     ?_EUSART_Initialize:	
  3746                           ; 1 bytes @ 0x0
  3747                           
  3748  0070                     ?_TMR1_StartTimer:	
  3749                           ; 1 bytes @ 0x0
  3750                           
  3751  0070                     ?_USBWakeFromSuspend:	
  3752                           ; 1 bytes @ 0x0
  3753                           
  3754  0070                     ?_USBSuspend:	
  3755                           ; 1 bytes @ 0x0
  3756                           
  3757  0070                     ?_USBIncrement1msInternalTimers:	
  3758                           ; 1 bytes @ 0x0
  3759                           
  3760  0070                     ??_USBIncrement1msInternalTimers:	
  3761                           ; 1 bytes @ 0x0
  3762                           
  3763  0070                     ?_USBCtrlEPAllowStatusStage:	
  3764                           ; 1 bytes @ 0x0
  3765                           
  3766  0070                     ??_USBCtrlEPAllowStatusStage:	
  3767                           ; 1 bytes @ 0x0
  3768                           
  3769  0070                     ?_USBStallHandler:	
  3770                           ; 1 bytes @ 0x0
  3771                           
  3772  0070                     ??_USBStallHandler:	
  3773                           ; 1 bytes @ 0x0
  3774                           
  3775  0070                     ?_USBCtrlEPService:	
  3776                           ; 1 bytes @ 0x0
  3777                           
  3778  0070                     ?_USBConfigureEndpoint:	
  3779                           ; 1 bytes @ 0x0
  3780                           
  3781  0070                     ?_USBCtrlTrfTxService:	
  3782                           ; 1 bytes @ 0x0
  3783                           
  3784  0070                     ??_USBCtrlTrfTxService:	
  3785                           ; 1 bytes @ 0x0
  3786                           
  3787  0070                     ?_USBCtrlTrfSetupHandler:	
  3788                           ; 1 bytes @ 0x0
  3789                           
  3790  0070                     ?_USBCtrlTrfOutHandler:	
  3791                           ; 1 bytes @ 0x0
  3792                           
  3793  0070                     ?_USBCtrlTrfInHandler:	
  3794                           ; 1 bytes @ 0x0
  3795                           
  3796  0070                     ?_USBCheckStdRequest:	
  3797                           ; 1 bytes @ 0x0
  3798                           
  3799  0070                     ?_USBStdFeatureReqHandler:	
  3800                           ; 1 bytes @ 0x0
  3801                           
  3802  0070                     ?_USART_mySetLineCodingHandler:	
  3803                           ; 1 bytes @ 0x0
  3804                           
  3805  0070                     ?_main_CDC_to_RS485_Initialize:	
  3806                           ; 1 bytes @ 0x0
  3807                           
  3808  0070                     ??_main_CDC_to_RS485_Initialize:	
  3809                           ; 1 bytes @ 0x0
  3810                           
  3811  0070                     ?_main_Communication_Initialize:	
  3812                           ; 1 bytes @ 0x0
  3813                           
  3814  0070                     ??_main_Communication_Initialize:	
  3815                           ; 1 bytes @ 0x0
  3816                           
  3817  0070                     ?_USART_putcUSART:	
  3818                           ; 1 bytes @ 0x0
  3819                           
  3820  0070                     ??_USART_putcUSART:	
  3821                           ; 1 bytes @ 0x0
  3822                           
  3823  0070                     ?_USART_getcUSART:	
  3824                           ; 1 bytes @ 0x0
  3825                           
  3826  0070                     ??_USART_getcUSART:	
  3827                           ; 1 bytes @ 0x0
  3828                           
  3829  0070                     ?_ADC_Initialize:	
  3830                           ; 1 bytes @ 0x0
  3831                           
  3832  0070                     ?_ADC_SelectChannel:	
  3833                           ; 1 bytes @ 0x0
  3834                           
  3835  0070                     ??_ADC_SelectChannel:	
  3836                           ; 1 bytes @ 0x0
  3837                           
  3838  0070                     ?_ADC_StartConversion:	
  3839                           ; 1 bytes @ 0x0
  3840                           
  3841  0070                     ?_ADC_IsConversionDone:	
  3842                           ; 1 bytes @ 0x0
  3843                           
  3844  0070                     ??_ADC_IsConversionDone:	
  3845                           ; 1 bytes @ 0x0
  3846                           
  3847  0070                     ?_TMR2_Initialize:	
  3848                           ; 1 bytes @ 0x0
  3849                           
  3850  0070                     ?_SYSTEM_Initialize:	
  3851                           ; 1 bytes @ 0x0
  3852                           
  3853  0070                     ?_TMR1_Reload:	
  3854                           ; 1 bytes @ 0x0
  3855                           
  3856  0070                     ?_USBDeviceInit:	
  3857                           ; 1 bytes @ 0x0
  3858                           
  3859  0070                     ?_USBDeviceTasks:	
  3860                           ; 1 bytes @ 0x0
  3861                           
  3862  0070                     ?_USBCtrlEPAllowDataStage:	
  3863                           ; 1 bytes @ 0x0
  3864                           
  3865  0070                     ?_USBCtrlEPServiceComplete:	
  3866                           ; 1 bytes @ 0x0
  3867                           
  3868  0070                     ?_USBCtrlTrfRxService:	
  3869                           ; 1 bytes @ 0x0
  3870                           
  3871  0070                     ?_USBStdSetCfgHandler:	
  3872                           ; 1 bytes @ 0x0
  3873                           
  3874  0070                     ?_USBStdGetDscHandler:	
  3875                           ; 1 bytes @ 0x0
  3876                           
  3877  0070                     ??_USBStdGetDscHandler:	
  3878                           ; 1 bytes @ 0x0
  3879                           
  3880  0070                     ?_USBStdGetStatusHandler:	
  3881                           ; 1 bytes @ 0x0
  3882                           
  3883  0070                     ??_USBStdGetStatusHandler:	
  3884                           ; 1 bytes @ 0x0
  3885                           
  3886  0070                     ?_USBCheckCDCRequest:	
  3887                           ; 1 bytes @ 0x0
  3888                           
  3889  0070                     ??_USBCheckCDCRequest:	
  3890                           ; 1 bytes @ 0x0
  3891                           
  3892  0070                     ?_CDCInitEP:	
  3893                           ; 1 bytes @ 0x0
  3894                           
  3895  0070                     ?_CDCTxService:	
  3896                           ; 1 bytes @ 0x0
  3897                           
  3898  0070                     ?_USBCheckCDCRequest2:	
  3899                           ; 1 bytes @ 0x0
  3900                           
  3901  0070                     ??_USBCheckCDCRequest2:	
  3902                           ; 1 bytes @ 0x0
  3903                           
  3904  0070                     ?_CDCInitEP2:	
  3905                           ; 1 bytes @ 0x0
  3906                           
  3907  0070                     ?_putUSBUSART2:	
  3908                           ; 1 bytes @ 0x0
  3909                           
  3910  0070                     ?_CDCTxService2:	
  3911                           ; 1 bytes @ 0x0
  3912                           
  3913  0070                     ?_main_CDC_to_RS485_Tasks:	
  3914                           ; 1 bytes @ 0x0
  3915                           
  3916  0070                     ?_main_CommunicationHandler:	
  3917                           ; 1 bytes @ 0x0
  3918                           
  3919  0070                     ?_main_overcurrentProtection:	
  3920                           ; 1 bytes @ 0x0
  3921                           
  3922  0070                     ?_main:	
  3923                           ; 1 bytes @ 0x0
  3924                           
  3925  0070                     ?_INTERRUPT_InterruptManager:	
  3926                           ; 1 bytes @ 0x0
  3927                           
  3928  0070                     ?i1_ADC_StartConversion:	
  3929                           ; 1 bytes @ 0x0
  3930                           
  3931  0070                     ??i1_ADC_StartConversion:	
  3932                           ; 1 bytes @ 0x0
  3933                           
  3934  0070                     ?i1_PWM2_LoadDutyValue:	
  3935                           ; 1 bytes @ 0x0
  3936                           
  3937  0070                     ?i1_TMR1_Reload:	
  3938                           ; 1 bytes @ 0x0
  3939                           
  3940  0070                     ??i1_TMR1_Reload:	
  3941                           ; 1 bytes @ 0x0
  3942                           
  3943  0070                     ?i1_USBDeviceInit:	
  3944                           ; 1 bytes @ 0x0
  3945                           
  3946  0070                     ??i1_USBDeviceInit:	
  3947                           ; 1 bytes @ 0x0
  3948                           
  3949  0070                     ?i1_memset:	
  3950                           ; 1 bytes @ 0x0
  3951                           
  3952  0070                     ?_ADC_GetConversionResult:	
  3953                           ; 1 bytes @ 0x0
  3954                           
  3955  0070                     ?i1_USBTransferOnePacket:	
  3956                           ; 2 bytes @ 0x0
  3957                           
  3958  0070                     ?i1___lldiv:	
  3959                           ; 2 bytes @ 0x0
  3960                           
  3961  0070                     USBConfigureEndpoint@direction:	
  3962                           ; 4 bytes @ 0x0
  3963                           
  3964  0070                     putUSBUSART2@length:	
  3965                           ; 1 bytes @ 0x0
  3966                           
  3967  0070                     USART_putcUSART@c:	
  3968                           ; 1 bytes @ 0x0
  3969                           
  3970  0070                     i1USBTransferOnePacket@dir:	
  3971                           ; 1 bytes @ 0x0
  3972                           
  3973  0070                     i1PWM2_LoadDutyValue@dutyValue:	
  3974                           ; 1 bytes @ 0x0
  3975                           
  3976  0070                     i1memset@p1:	
  3977                           ; 2 bytes @ 0x0
  3978                           
  3979  0070                     i1___lldiv@divisor:	
  3980                           ; 2 bytes @ 0x0
  3981                           
  3982                           
  3983                           ; 4 bytes @ 0x0
  3984  0070                     	ds	1
  3985  0071                     ??_USBConfigureEndpoint:	
  3986  0071                     ??_putUSBUSART2:	
  3987                           ; 1 bytes @ 0x1
  3988                           
  3989  0071                     ADC_SelectChannel@channel:	
  3990                           ; 1 bytes @ 0x1
  3991                           
  3992  0071                     main_CDC_to_RS485_Initialize@i:	
  3993                           ; 1 bytes @ 0x1
  3994                           
  3995  0071                     main_Communication_Initialize@i:	
  3996                           ; 1 bytes @ 0x1
  3997                           
  3998  0071                     USART_getcUSART@c:	
  3999                           ; 1 bytes @ 0x1
  4000                           
  4001  0071                     USBStdGetStatusHandler@p:	
  4002                           ; 1 bytes @ 0x1
  4003                           
  4004  0071                     i1USBDeviceInit@p:	
  4005                           ; 2 bytes @ 0x1
  4006                           
  4007  0071                     i1USBTransferOnePacket@data:	
  4008                           ; 2 bytes @ 0x1
  4009                           
  4010                           
  4011                           ; 2 bytes @ 0x1
  4012  0071                     	ds	1
  4013  0072                     ??_ADC_GetConversionResult:	
  4014  0072                     ??i1_PWM2_LoadDutyValue:	
  4015                           ; 1 bytes @ 0x2
  4016                           
  4017  0072                     USBCtrlTrfTxService@byteToSend:	
  4018                           ; 1 bytes @ 0x2
  4019                           
  4020  0072                     putUSBUSART2@data:	
  4021                           ; 1 bytes @ 0x2
  4022                           
  4023  0072                     i1memset@c:	
  4024                           ; 1 bytes @ 0x2
  4025                           
  4026                           
  4027                           ; 2 bytes @ 0x2
  4028  0072                     	ds	1
  4029  0073                     ??_USBCtrlEPAllowDataStage:	
  4030  0073                     i1USBDeviceInit@i_1118:	
  4031                           ; 1 bytes @ 0x3
  4032                           
  4033  0073                     i1USBTransferOnePacket@len:	
  4034                           ; 1 bytes @ 0x3
  4035                           
  4036                           
  4037                           ; 1 bytes @ 0x3
  4038  0073                     	ds	1
  4039  0074                     ??i1_USBTransferOnePacket:	
  4040  0074                     i1USBDeviceInit@i:	
  4041                           ; 1 bytes @ 0x4
  4042                           
  4043  0074                     i1memset@n:	
  4044                           ; 1 bytes @ 0x4
  4045                           
  4046  0074                     i1___lldiv@dividend:	
  4047                           ; 2 bytes @ 0x4
  4048                           
  4049                           
  4050                           ; 4 bytes @ 0x4
  4051  0074                     	ds	1
  4052  0075                     ??_USBCtrlEPServiceComplete:	
  4053  0075                     USBConfigureEndpoint@EPNum:	
  4054                           ; 1 bytes @ 0x5
  4055                           
  4056                           
  4057                           ; 1 bytes @ 0x5
  4058  0075                     	ds	1
  4059  0076                     ??i1_memset:	
  4060  0076                     USBConfigureEndpoint@handle:	
  4061                           ; 1 bytes @ 0x6
  4062                           
  4063  0076                     i1memset@p:	
  4064                           ; 1 bytes @ 0x6
  4065                           
  4066                           
  4067                           ; 2 bytes @ 0x6
  4068  0076                     	ds	1
  4069  0077                     ?_USBEnableEndpoint:	
  4070  0077                     USBEnableEndpoint@options:	
  4071                           ; 1 bytes @ 0x7
  4072                           
  4073                           
  4074                           ; 1 bytes @ 0x7
  4075  0077                     	ds	1
  4076  0078                     ??_USBEnableEndpoint:	
  4077  0078                     ??i1___lldiv:	
  4078                           ; 1 bytes @ 0x8
  4079                           
  4080  0078                     i1USBTransferOnePacket@ep:	
  4081                           ; 1 bytes @ 0x8
  4082                           
  4083                           
  4084                           ; 1 bytes @ 0x8
  4085  0078                     	ds	1
  4086  0079                     i1USBTransferOnePacket@handle:	
  4087  0079                     i1___lldiv@quotient:	
  4088                           ; 2 bytes @ 0x9
  4089                           
  4090                           
  4091                           ; 4 bytes @ 0x9
  4092  0079                     	ds	1
  4093  007A                     USBEnableEndpoint@p:	
  4094                           
  4095                           ; 2 bytes @ 0xA
  4096  007A                     	ds	1
  4097  007B                     ?_getsUSBUSART2:	
  4098  007B                     ??_CDCTxService2:	
  4099                           ; 1 bytes @ 0xB
  4100                           
  4101  007B                     getsUSBUSART2@len:	
  4102                           ; 1 bytes @ 0xB
  4103                           
  4104                           
  4105                           ; 1 bytes @ 0xB
  4106  007B                     	ds	1
  4107  007C                     ??_getsUSBUSART2:	
  4108  007C                     USBEnableEndpoint@ep:	
  4109                           ; 1 bytes @ 0xC
  4110                           
  4111  007C                     CDCTxService2@i:	
  4112                           ; 1 bytes @ 0xC
  4113                           
  4114                           
  4115                           ; 1 bytes @ 0xC
  4116  007C                     	ds	1
  4117  007D                     ??_CDCInitEP:	
  4118  007D                     ??_CDCInitEP2:	
  4119                           ; 1 bytes @ 0xD
  4120                           
  4121  007D                     CDCTxService2@byte_to_send:	
  4122                           ; 1 bytes @ 0xD
  4123                           
  4124  007D                     i1___lldiv@counter:	
  4125                           ; 1 bytes @ 0xD
  4126                           
  4127                           
  4128                           ; 1 bytes @ 0xD
  4129  007D                     	ds	1
  4130  007E                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  4131                           
  4132                           	psect	maintext
  4133  10D2                     __pmaintext:	
  4134                           ; 1 bytes @ 0xE
  4135 ;;
  4136 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4137 ;;
  4138 ;; *************** function _main *****************
  4139 ;; Defined at:
  4140 ;;		line 450 in file "main.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;		None
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4149 ;; Tracked objects:
  4150 ;;		On entry : B1F/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  4154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  4155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  4156 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  4157 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  4158 ;;Total ram usage:        1 bytes
  4159 ;; Hardware stack levels required when called:   14
  4160 ;; This function calls:
  4161 ;;		_ADC_StartConversion
  4162 ;;		_SYSTEM_Initialize
  4163 ;;		_TMR1_StartTimer
  4164 ;;		_USBDeviceInit
  4165 ;;		_main_CommunicationHandler
  4166 ;;		_main_SetDcDcRegulator
  4167 ;;		_main_overcurrentProtection
  4168 ;; This function is called by:
  4169 ;;		Startup code after reset
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           
  4174                           ;psect for function _main
  4175  10D2                     _main:	
  4176                           
  4177                           ;main.c: 452: SYSTEM_Initialize();
  4178                           
  4179                           ;incstack = 0
  4180                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4181  10D2  3190  209B  3190   	fcall	_SYSTEM_Initialize
  4182                           
  4183                           ;main.c: 453: TMR1_StartTimer();
  4184  10D5  319E  26A4  3190   	fcall	_TMR1_StartTimer
  4185                           
  4186                           ;main.c: 455: (INTCONbits.GIE = 1);
  4187  10D8  178B               	bsf	11,7	;volatile
  4188                           
  4189                           ;main.c: 456: (INTCONbits.PEIE = 1);
  4190  10D9  170B               	bsf	11,6	;volatile
  4191                           
  4192                           ;main.c: 457: ADC_StartConversion();
  4193  10DA  319E  26A1  3190   	fcall	_ADC_StartConversion
  4194                           
  4195                           ;main.c: 459: USBDeviceInit();
  4196  10DD  3187  270E  3190   	fcall	_USBDeviceInit
  4197                           
  4198                           ;main.c: 460: ;
  4199                           ;main.c: 462: main_SetDcDcRegulator(&MAIN_Uout_target_mV, &MAIN_Iout_limit_mA);
  4200  10E0  306A               	movlw	(low (_MAIN_Iout_limit_mA| (0+512)))& (0+255)
  4201  10E1  0023               	movlb	3	; select bank3
  4202  10E2  00CA               	movwf	??_main^(0+384)
  4203  10E3  084A               	movf	??_main^(0+384),w
  4204  10E4  00C0               	movwf	main_SetDcDcRegulator@pI_mA^(0+384)
  4205  10E5  3064               	movlw	(low (_MAIN_Uout_target_mV| (0+512)))& (0+255)
  4206  10E6  3182  22EC  3190   	fcall	_main_SetDcDcRegulator
  4207  10E9                     l1171:	
  4208                           ;main.c: 464: while(1)
  4209                           
  4210                           
  4211                           ;main.c: 465: {
  4212                           ;main.c: 466: ;
  4213                           ;main.c: 483: main_overcurrentProtection();
  4214  10E9  3193  230A  3190   	fcall	_main_overcurrentProtection
  4215                           
  4216                           ;main.c: 484: main_CommunicationHandler();
  4217  10EC  3181  214A  3190   	fcall	_main_CommunicationHandler
  4218  10EF  0064               	clrwdt	;# 
  4219  10F0  28E9               	goto	l1171
  4220  10F1                     __end_of_main:	
  4221                           
  4222                           	psect	text1
  4223  130A                     __ptext1:	
  4224 ;; *************** function _main_overcurrentProtection *****************
  4225 ;; Defined at:
  4226 ;;		line 410 in file "main.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;		None
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;		None
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, status,2, status,0
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  4240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  4241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  4242 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  4243 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  4244 ;;Total ram usage:        2 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:   10
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_main
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           
  4255                           ;psect for function _main_overcurrentProtection
  4256  130A                     _main_overcurrentProtection:	
  4257                           
  4258                           ;main.c: 412: static uint8_t tOut = 0;
  4259                           ;main.c: 413: static Iadc_avg = 0;
  4260                           ;main.c: 415: Iadc_avg = ((Iadc_avg + Iadc)>>1);
  4261                           
  4262                           ;incstack = 0
  4263                           ; Regs used in _main_overcurrentProtection: [wreg+status,2+status,0]
  4264  130A  0023               	movlb	3	; select bank3
  4265  130B  085A               	movf	_Iadc^(0+384),w	;volatile
  4266  130C  0024               	movlb	4	; select bank4
  4267  130D  0727               	addwf	main_overcurrentProtection@Iadc_avg^(0+512),w
  4268  130E  0023               	movlb	3	; select bank3
  4269  130F  00A0               	movwf	??_main_overcurrentProtection^(0+384)
  4270  1310  085B               	movf	(_Iadc+1)^(0+384),w	;volatile
  4271  1311  0024               	movlb	4	; select bank4
  4272  1312  3D28               	addwfc	(main_overcurrentProtection@Iadc_avg+1)^(0+512),w
  4273  1313  0023               	movlb	3	; select bank3
  4274  1314  00A1               	movwf	(??_main_overcurrentProtection+1)^(0+384)
  4275  1315  36A1               	lsrf	(??_main_overcurrentProtection^(0+384)+1),f
  4276  1316  0CA0               	rrf	??_main_overcurrentProtection^(0+384),f
  4277  1317  0820               	movf	??_main_overcurrentProtection^(0+384),w
  4278  1318  0024               	movlb	4	; select bank4
  4279  1319  00A7               	movwf	main_overcurrentProtection@Iadc_avg^(0+512)
  4280  131A  0023               	movlb	3	; select bank3
  4281  131B  0821               	movf	(??_main_overcurrentProtection+1)^(0+384),w
  4282  131C  0024               	movlb	4	; select bank4
  4283  131D  00A8               	movwf	(main_overcurrentProtection@Iadc_avg+1)^(0+512)
  4284                           
  4285                           ;main.c: 417: if((Iadc_avg <= Iadc_limit)&&(2 != MAIN_ovcFlag)) {
  4286  131E  0828               	movf	(main_overcurrentProtection@Iadc_avg+1)^(0+512),w
  4287  131F  0230               	subwf	(_Iadc_limit+1)^(0+512),w
  4288  1320  1D03               	skipz
  4289  1321  2B24               	goto	u5785
  4290  1322  0827               	movf	main_overcurrentProtection@Iadc_avg^(0+512),w
  4291  1323  022F               	subwf	_Iadc_limit^(0+512),w
  4292  1324                     u5785:	
  4293  1324  1C03               	skipc
  4294  1325  2B37               	goto	l5825
  4295  1326  3002               	movlw	2
  4296  1327  064C               	xorwf	_MAIN_ovcFlag^(0+512),w
  4297  1328  1903               	btfsc	3,2
  4298  1329  2B37               	goto	l5825
  4299                           
  4300                           ;main.c: 418: if(PwmDutyCycleCurrentLimit < (188)) PwmDutyCycleCurrentLimit++;
  4301  132A  30BC               	movlw	188
  4302  132B  0023               	movlb	3	; select bank3
  4303  132C  0260               	subwf	_PwmDutyCycleCurrentLimit^(0+384),w
  4304  132D  1803               	skipnc
  4305  132E  2B34               	goto	l5823
  4306  132F  3001               	movlw	1
  4307  1330  00A0               	movwf	??_main_overcurrentProtection^(0+384)
  4308  1331  0820               	movf	??_main_overcurrentProtection^(0+384),w
  4309  1332  07E0               	addwf	_PwmDutyCycleCurrentLimit^(0+384),f
  4310  1333  0008               	return
  4311  1334                     l5823:	
  4312                           
  4313                           ;main.c: 419: else MAIN_ovcFlag = 0;
  4314  1334  0024               	movlb	4	; select bank4
  4315  1335  01CC               	clrf	_MAIN_ovcFlag^(0+512)
  4316                           
  4317                           ;main.c: 420: } else {
  4318  1336  0008               	return
  4319  1337                     l5825:	
  4320                           
  4321                           ;main.c: 421: if(PwmDutyCycleCurrentLimit > 0) {
  4322  1337  0023               	movlb	3	; select bank3
  4323  1338  0860               	movf	_PwmDutyCycleCurrentLimit^(0+384),w
  4324  1339  1903               	btfsc	3,2
  4325  133A  2B3E               	goto	l5829
  4326                           
  4327                           ;main.c: 422: PwmDutyCycleCurrentLimit--;
  4328  133B  3001               	movlw	1
  4329  133C  02E0               	subwf	_PwmDutyCycleCurrentLimit^(0+384),f
  4330                           
  4331                           ;main.c: 423: } else {
  4332  133D  0008               	return
  4333  133E                     l5829:	
  4334                           
  4335                           ;main.c: 424: if(tOut > 100) {
  4336  133E  3065               	movlw	101
  4337  133F  0024               	movlb	4	; select bank4
  4338  1340  0246               	subwf	main_overcurrentProtection@tOut^(0+512),w
  4339  1341  1C03               	skipc
  4340  1342  2B4D               	goto	l5837
  4341                           
  4342                           ;main.c: 425: tOut = 0;
  4343  1343  01C6               	clrf	main_overcurrentProtection@tOut^(0+512)
  4344                           
  4345                           ;main.c: 427: do { LATAbits.LATA5 = 1; } while(0);
  4346  1344  0022               	movlb	2	; select bank2
  4347  1345  168C               	bsf	12,5	;volatile
  4348                           
  4349                           ;main.c: 428: MAIN_ovcFlag = 2;
  4350  1346  3002               	movlw	2
  4351  1347  0023               	movlb	3	; select bank3
  4352  1348  00A0               	movwf	??_main_overcurrentProtection^(0+384)
  4353  1349  0820               	movf	??_main_overcurrentProtection^(0+384),w
  4354  134A  0024               	movlb	4	; select bank4
  4355  134B  00CC               	movwf	_MAIN_ovcFlag^(0+512)
  4356                           
  4357                           ;main.c: 429: } else {
  4358  134C  0008               	return
  4359  134D                     l5837:	
  4360                           
  4361                           ;main.c: 430: tOut++;
  4362  134D  3001               	movlw	1
  4363  134E  0023               	movlb	3	; select bank3
  4364  134F  00A0               	movwf	??_main_overcurrentProtection^(0+384)
  4365  1350  0820               	movf	??_main_overcurrentProtection^(0+384),w
  4366  1351  0024               	movlb	4	; select bank4
  4367  1352  07C6               	addwf	main_overcurrentProtection@tOut^(0+512),f
  4368  1353  0008               	return
  4369  1354                     __end_of_main_overcurrentProtection:	
  4370                           
  4371                           	psect	text2
  4372  014A                     __ptext2:	
  4373 ;; *************** function _main_CommunicationHandler *****************
  4374 ;; Defined at:
  4375 ;;		line 287 in file "main.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;		None
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  i               1   41[BANK3 ] unsigned char 
  4380 ;;  numBytesRead    1   40[BANK3 ] unsigned char 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      void 
  4383 ;; Registers used:
  4384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  4390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  4391 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  4392 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  4393 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  4394 ;;Total ram usage:        4 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:   13
  4397 ;; This function calls:
  4398 ;;		_CDCTxService
  4399 ;;		_TMR1_Reload
  4400 ;;		___lldiv
  4401 ;;		___lmul
  4402 ;;		___wmul
  4403 ;;		_atoi
  4404 ;;		_getsUSBUSART
  4405 ;;		_main_SetDcDcRegulator
  4406 ;;		_memset
  4407 ;;		_my_uitoa
  4408 ;;		_putUSBUSART
  4409 ;; This function is called by:
  4410 ;;		_main
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           
  4415                           ;psect for function _main_CommunicationHandler
  4416  014A                     _main_CommunicationHandler:	
  4417                           
  4418                           ;main.c: 289: static uint8_t step = 0;
  4419                           ;main.c: 290: static uint8_t cmdRxBufferPointer = 0;
  4420                           ;main.c: 294: if( USBDeviceState < CONFIGURED_STATE )
  4421                           
  4422                           ;incstack = 0
  4423                           ; Regs used in _main_CommunicationHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4424  014A  3020               	movlw	32
  4425  014B  0023               	movlb	3	; select bank3
  4426  014C  026B               	subwf	_USBDeviceState^(0+384),w
  4427  014D  1C03               	btfss	3,0
  4428  014E  0008               	return
  4429                           
  4430                           ;main.c: 297: }
  4431                           ;main.c: 303: if( UCONbits.SUSPND== 1 )
  4432                           
  4433                           ;main.c: 295: {
  4434                           ;main.c: 296: return;
  4435  014F  003D               	movlb	29	; select bank29
  4436  0150  188E               	btfsc	14,1	;volatile
  4437  0151  0008               	return
  4438                           
  4439                           ;main.c: 306: }
  4440                           ;main.c: 311: if( (cdc_trf_state == 0) == 1)
  4441                           
  4442                           ;main.c: 304: {
  4443                           ;main.c: 305: return;
  4444  0152  0023               	movlb	3	; select bank3
  4445  0153  0865               	movf	_cdc_trf_state^(0+384),w
  4446  0154  1D03               	btfss	3,2
  4447  0155  2AE9               	goto	l5811
  4448                           
  4449                           ;main.c: 312: {
  4450                           ;main.c: 313: uint8_t i;
  4451                           ;main.c: 314: uint8_t numBytesRead;
  4452                           ;main.c: 316: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer));
  4453  0156  3040               	movlw	64
  4454  0157  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4455  0158  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4456  0159  00AB               	movwf	getsUSBUSART@len^(0+384)
  4457  015A  3020               	movlw	(low (_readBuffer| (0+1280)))& (0+255)
  4458  015B  3194  244B  3181   	fcall	_getsUSBUSART
  4459  015E  0023               	movlb	3	; select bank3
  4460  015F  00C7               	movwf	(??_main_CommunicationHandler+1)^(0+384)
  4461  0160  0847               	movf	(??_main_CommunicationHandler+1)^(0+384),w
  4462  0161  00C8               	movwf	main_CommunicationHandler@numBytesRead^(0+384)
  4463                           
  4464                           ;main.c: 318: if(numBytesRead) {
  4465  0162  0848               	movf	main_CommunicationHandler@numBytesRead^(0+384),w
  4466  0163  1903               	btfsc	3,2
  4467  0164  2A23               	goto	l1098
  4468                           
  4469                           ;main.c: 320: for(i=0; i<numBytesRead; i++)
  4470  0165  01C9               	clrf	main_CommunicationHandler@i^(0+384)
  4471  0166                     l5765:	
  4472  0166  0848               	movf	main_CommunicationHandler@numBytesRead^(0+384),w
  4473  0167  0249               	subwf	main_CommunicationHandler@i^(0+384),w
  4474  0168  1803               	btfsc	3,0
  4475  0169  2AE9               	goto	l5811
  4476                           
  4477                           ;main.c: 321: {
  4478                           ;main.c: 322: cmdRxBuffer[cmdRxBufferPointer] = readBuffer[i];
  4479  016A  0849               	movf	main_CommunicationHandler@i^(0+384),w
  4480  016B  3E20               	addlw	(low (_readBuffer| (0+1280)))& (0+255)
  4481  016C  0086               	movwf	6
  4482  016D  3005               	movlw	5	; select bank10/11
  4483  016E  0087               	movwf	7
  4484  016F  0801               	movf	1,w
  4485  0170  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4486  0171  085E               	movf	main_CommunicationHandler@cmdRxBufferPointer^(0+384),w
  4487  0172  3E20               	addlw	(low (_cmdRxBuffer| (0+768)))& (0+255)
  4488  0173  0086               	movwf	6
  4489  0174  3003               	movlw	3	; select bank6/7
  4490  0175  0087               	movwf	7
  4491  0176  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4492  0177  0081               	movwf	1
  4493                           
  4494                           ;main.c: 323: if((0x0A == cmdRxBuffer[cmdRxBufferPointer]) || (0x0D == cmdRxBuffer[cmdRx
      +                          BufferPointer]))
  4495  0178  085E               	movf	main_CommunicationHandler@cmdRxBufferPointer^(0+384),w
  4496  0179  3E20               	addlw	(low (_cmdRxBuffer| (0+768)))& (0+255)
  4497  017A  0086               	movwf	6
  4498  017B  3003               	movlw	3	; select bank6/7
  4499  017C  0087               	movwf	7
  4500  017D  300A               	movlw	10
  4501  017E  0601               	xorwf	1,w
  4502  017F  1903               	btfsc	3,2
  4503  0180  298A               	goto	l5731
  4504  0181  085E               	movf	main_CommunicationHandler@cmdRxBufferPointer^(0+384),w
  4505  0182  3E20               	addlw	(low (_cmdRxBuffer| (0+768)))& (0+255)
  4506  0183  0086               	movwf	6
  4507  0184  3003               	movlw	3	; select bank6/7
  4508  0185  0087               	movwf	7
  4509  0186  300D               	movlw	13
  4510  0187  0601               	xorwf	1,w
  4511  0188  1D03               	btfss	3,2
  4512  0189  2A04               	goto	l5755
  4513  018A                     l5731:	
  4514                           
  4515                           ;main.c: 324: {
  4516                           ;main.c: 326: if(('U' == cmdRxBuffer[0]) || ('u' == cmdRxBuffer[0])) {
  4517  018A  3055               	movlw	85
  4518  018B  0026               	movlb	6	; select bank6
  4519  018C  0620               	xorwf	_cmdRxBuffer^(0+768),w
  4520  018D  1903               	btfsc	3,2
  4521  018E  2993               	goto	l5735
  4522  018F  3075               	movlw	117
  4523  0190  0620               	xorwf	_cmdRxBuffer^(0+768),w
  4524  0191  1D03               	btfss	3,2
  4525  0192  29A5               	goto	l5739
  4526  0193                     l5735:	
  4527                           
  4528                           ;main.c: 327: MAIN_Uout_target_mV = atoi(&cmdRxBuffer[1]);
  4529  0193  3021               	movlw	(low ((_cmdRxBuffer| (0+768)+1)))& (0+255)
  4530  0194  3197  278F  3181   	fcall	_atoi
  4531  0197  0023               	movlb	3	; select bank3
  4532  0198  0826               	movf	?_atoi^(0+384),w
  4533  0199  0024               	movlb	4	; select bank4
  4534  019A  00E4               	movwf	_MAIN_Uout_target_mV^(0+512)
  4535  019B  0023               	movlb	3	; select bank3
  4536  019C  0827               	movf	(?_atoi+1)^(0+384),w
  4537  019D  0024               	movlb	4	; select bank4
  4538  019E  00E5               	movwf	(_MAIN_Uout_target_mV+1)^(0+512)
  4539  019F  0D89               	rlf	9,f
  4540  01A0  3B89               	subwfb	9,f
  4541  01A1  0989               	comf	9,f
  4542  01A2  00E6               	movwf	(_MAIN_Uout_target_mV+2)^(0+512)
  4543  01A3  00E7               	movwf	(_MAIN_Uout_target_mV+3)^(0+512)
  4544  01A4  29BF               	goto	L5
  4545  01A5                     l5739:	
  4546                           ;main.c: 333: } else if(('I' == cmdRxBuffer[0]) || ('i' == cmdRxBuffer[0])) {
  4547                           
  4548                           ;main.c: 332: else do { LATCbits.LATC0 = 0; } while(0);
  4549                           
  4550                           ;main.c: 331: if(MAIN_Uout_target_mV) do { LATCbits.LATC0 = 1; } while(0);
  4551                           
  4552                           ;main.c: 330: main_SetDcDcRegulator(&MAIN_Uout_target_mV, &MAIN_Iout_limit_mA);
  4553                           
  4554  01A5  3049               	movlw	73
  4555  01A6  0026               	movlb	6	; select bank6
  4556  01A7  0620               	xorwf	_cmdRxBuffer^(0+768),w
  4557  01A8  1903               	btfsc	3,2
  4558  01A9  29AE               	goto	l5743
  4559  01AA  3069               	movlw	105
  4560  01AB  0620               	xorwf	_cmdRxBuffer^(0+768),w
  4561  01AC  1D03               	btfss	3,2
  4562  01AD  29D5               	goto	l5747
  4563  01AE                     l5743:	
  4564                           
  4565                           ;main.c: 334: MAIN_Iout_limit_mA = atoi(&cmdRxBuffer[1]);
  4566  01AE  3021               	movlw	(low ((_cmdRxBuffer| (0+768)+1)))& (0+255)
  4567  01AF  3197  278F  3181   	fcall	_atoi
  4568  01B2  0023               	movlb	3	; select bank3
  4569  01B3  0826               	movf	?_atoi^(0+384),w
  4570  01B4  0024               	movlb	4	; select bank4
  4571  01B5  00EA               	movwf	_MAIN_Iout_limit_mA^(0+512)
  4572  01B6  0023               	movlb	3	; select bank3
  4573  01B7  0827               	movf	(?_atoi+1)^(0+384),w
  4574  01B8  0024               	movlb	4	; select bank4
  4575  01B9  00EB               	movwf	(_MAIN_Iout_limit_mA+1)^(0+512)
  4576  01BA  0D89               	rlf	9,f
  4577  01BB  3B89               	subwfb	9,f
  4578  01BC  0989               	comf	9,f
  4579  01BD  00EC               	movwf	(_MAIN_Iout_limit_mA+2)^(0+512)
  4580  01BE  00ED               	movwf	(_MAIN_Iout_limit_mA+3)^(0+512)
  4581  01BF                     L5:	
  4582                           
  4583                           ;main.c: 337: main_SetDcDcRegulator(&MAIN_Uout_target_mV, &MAIN_Iout_limit_mA);
  4584  01BF  306A               	movlw	(low (_MAIN_Iout_limit_mA| (0+512)))& (0+255)
  4585  01C0  0023               	movlb	3	; select bank3
  4586  01C1  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4587  01C2  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4588  01C3  00C0               	movwf	main_SetDcDcRegulator@pI_mA^(0+384)
  4589  01C4  3064               	movlw	(low (_MAIN_Uout_target_mV| (0+512)))& (0+255)
  4590  01C5  3182  22EC  3181   	fcall	_main_SetDcDcRegulator
  4591                           
  4592                           ;main.c: 338: if(MAIN_Uout_target_mV) do { LATCbits.LATC0 = 1; } while(0);
  4593  01C8  0024               	movlb	4	; select bank4
  4594  01C9  0867               	movf	(_MAIN_Uout_target_mV+3)^(0+512),w
  4595  01CA  0466               	iorwf	(_MAIN_Uout_target_mV+2)^(0+512),w
  4596  01CB  0465               	iorwf	(_MAIN_Uout_target_mV+1)^(0+512),w
  4597  01CC  0464               	iorwf	_MAIN_Uout_target_mV^(0+512),w
  4598  01CD  1903               	skipnz
  4599  01CE  29D2               	goto	l1121
  4600  01CF  0022               	movlb	2	; select bank2
  4601  01D0  140E               	bsf	14,0	;volatile
  4602  01D1  29F3               	goto	l5751
  4603  01D2                     l1121:	
  4604                           ;main.c: 339: else do { LATCbits.LATC0 = 0; } while(0);
  4605                           
  4606  01D2  0022               	movlb	2	; select bank2
  4607  01D3  100E               	bcf	14,0	;volatile
  4608                           
  4609                           ;main.c: 340: } else {
  4610  01D4  29F3               	goto	l5751
  4611  01D5                     l5747:	
  4612                           
  4613                           ;main.c: 341: __builtin_memcpy(writeBuffer,errorMsg,sizeof(errorMsg));
  4614  01D5  30A0               	movlw	low (_writeBuffer| (0+1024))
  4615  01D6  0086               	movwf	6
  4616  01D7  3004               	movlw	4	; select bank9/10
  4617  01D8  0087               	movwf	7
  4618  01D9  305F               	movlw	low (_errorMsg| (0+32768))
  4619  01DA  0084               	movwf	4
  4620  01DB  3099               	movlw	high (_errorMsg| (0+32768))
  4621  01DC  0085               	movwf	5
  4622  01DD  300D               	movlw	13
  4623  01DE  0023               	movlb	3	; select bank3
  4624  01DF  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4625  01E0  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4626  01E1  1903               	skipnz
  4627  01E2  29E7               	goto	l5749
  4628  01E3                     u570m0:	
  4629  01E3  0012               	moviw fsr0++
  4630  01E4  001E               	movwi fsr1++
  4631  01E5  0BC6               	decfsz	??_main_CommunicationHandler^(0+384),f
  4632  01E6  29E3               	goto	u570m0
  4633  01E7                     l5749:	
  4634                           
  4635                           ;main.c: 342: putUSBUSART(writeBuffer,sizeof(errorMsg)-1);
  4636  01E7  30A0               	movlw	low _writeBuffer
  4637  01E8  0023               	movlb	3	; select bank3
  4638  01E9  00A0               	movwf	putUSBUSART@data^(0+384)
  4639  01EA  3004               	movlw	high _writeBuffer
  4640  01EB  00A1               	movwf	(putUSBUSART@data+1)^(0+384)
  4641  01EC  300C               	movlw	12
  4642  01ED  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4643  01EE  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4644  01EF  00A2               	movwf	putUSBUSART@length^(0+384)
  4645  01F0  319F  2786  3181   	fcall	_putUSBUSART
  4646  01F3                     l5751:	
  4647                           
  4648                           ;main.c: 343: }
  4649                           ;main.c: 345: cmdRxBufferPointer = 0;
  4650  01F3  0023               	movlb	3	; select bank3
  4651  01F4  01DE               	clrf	main_CommunicationHandler@cmdRxBufferPointer^(0+384)
  4652                           
  4653                           ;main.c: 346: memset(cmdRxBuffer,0,sizeof(cmdRxBuffer));
  4654  01F5  3020               	movlw	low _cmdRxBuffer
  4655  01F6  00A0               	movwf	memset@p1^(0+384)
  4656  01F7  3003               	movlw	high _cmdRxBuffer
  4657  01F8  00A1               	movwf	(memset@p1+1)^(0+384)
  4658  01F9  3000               	movlw	0
  4659  01FA  00A2               	movwf	memset@c^(0+384)
  4660  01FB  00A3               	movwf	(memset@c+1)^(0+384)
  4661  01FC  3040               	movlw	64
  4662  01FD  00A4               	movwf	memset@n^(0+384)
  4663  01FE  3000               	movlw	0
  4664  01FF  00A5               	movwf	(memset@n^(0+384)+1)
  4665  0200  319F  27E7  3181   	fcall	_memset
  4666                           
  4667                           ;main.c: 347: break;
  4668  0203  2AE9               	goto	l5811
  4669  0204                     l5755:	
  4670                           
  4671                           ;main.c: 348: }
  4672                           ;main.c: 349: cmdRxBufferPointer++;
  4673  0204  3001               	movlw	1
  4674  0205  0023               	movlb	3	; select bank3
  4675  0206  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4676  0207  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4677  0208  07DE               	addwf	main_CommunicationHandler@cmdRxBufferPointer^(0+384),f
  4678                           
  4679                           ;main.c: 351: if(sizeof(cmdRxBuffer) < cmdRxBufferPointer) {
  4680  0209  3041               	movlw	65
  4681  020A  025E               	subwf	main_CommunicationHandler@cmdRxBufferPointer^(0+384),w
  4682  020B  1C03               	skipc
  4683  020C  2A1D               	goto	l5763
  4684                           
  4685                           ;main.c: 352: cmdRxBufferPointer = 0;
  4686  020D  01DE               	clrf	main_CommunicationHandler@cmdRxBufferPointer^(0+384)
  4687                           
  4688                           ;main.c: 353: memset(cmdRxBuffer,0,sizeof(cmdRxBuffer));
  4689  020E  3020               	movlw	low _cmdRxBuffer
  4690  020F  00A0               	movwf	memset@p1^(0+384)
  4691  0210  3003               	movlw	high _cmdRxBuffer
  4692  0211  00A1               	movwf	(memset@p1+1)^(0+384)
  4693  0212  3000               	movlw	0
  4694  0213  00A2               	movwf	memset@c^(0+384)
  4695  0214  00A3               	movwf	(memset@c+1)^(0+384)
  4696  0215  3040               	movlw	64
  4697  0216  00A4               	movwf	memset@n^(0+384)
  4698  0217  3000               	movlw	0
  4699  0218  00A5               	movwf	(memset@n^(0+384)+1)
  4700  0219  319F  27E7  3181   	fcall	_memset
  4701                           
  4702                           ;main.c: 354: break;
  4703  021C  2AE9               	goto	l5811
  4704  021D                     l5763:	
  4705  021D  3001               	movlw	1
  4706  021E  0023               	movlb	3	; select bank3
  4707  021F  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4708  0220  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4709  0221  07C9               	addwf	main_CommunicationHandler@i^(0+384),f
  4710  0222  2966               	goto	l5765
  4711  0223                     l1098:	
  4712                           ;main.c: 355: }
  4713                           ;main.c: 356: }
  4714                           ;main.c: 357: } else if(TMR1IF) {
  4715                           
  4716  0223  0020               	movlb	0	; select bank0
  4717  0224  1811               	btfsc	17,0	;volatile
  4718  0225  2ADA               	goto	l5809
  4719  0226  2AE9               	goto	l5811
  4720  0227                     l5769:	
  4721                           ;main.c: 359: case 0:
  4722                           
  4723                           ;main.c: 358: switch (step){
  4724                           
  4725                           
  4726                           ;main.c: 360: MAIN_Uout_mV = (1761*(uint32_t)Uadc)/100;
  4727  0227  3000               	movlw	0
  4728  0228  0023               	movlb	3	; select bank3
  4729  0229  00AF               	movwf	(___lldiv@divisor+3)^(0+384)
  4730  022A  3000               	movlw	0
  4731  022B  00AE               	movwf	(___lldiv@divisor+2)^(0+384)
  4732  022C  3000               	movlw	0
  4733  022D  00AD               	movwf	(___lldiv@divisor+1)^(0+384)
  4734  022E  3064               	movlw	100
  4735  022F  00AC               	movwf	___lldiv@divisor^(0+384)
  4736  0230  086C               	movf	_Uadc^(0+384),w	;volatile
  4737  0231  00A0               	movwf	___lmul@multiplier^(0+384)
  4738  0232  086D               	movf	(_Uadc+1)^(0+384),w	;volatile
  4739  0233  00A1               	movwf	(___lmul@multiplier^(0+384)+1)
  4740  0234  01A2               	clrf	(___lmul@multiplier^(0+384)+2)
  4741  0235  01A3               	clrf	(___lmul@multiplier^(0+384)+3)
  4742  0236  3000               	movlw	0
  4743  0237  00A7               	movwf	(___lmul@multiplicand+3)^(0+384)
  4744  0238  3000               	movlw	0
  4745  0239  00A6               	movwf	(___lmul@multiplicand+2)^(0+384)
  4746  023A  3006               	movlw	6
  4747  023B  00A5               	movwf	(___lmul@multiplicand+1)^(0+384)
  4748  023C  30E1               	movlw	225
  4749  023D  00A4               	movwf	___lmul@multiplicand^(0+384)
  4750  023E  3191  21A1  3181   	fcall	___lmul
  4751  0241  0023               	movlb	3	; select bank3
  4752  0242  0823               	movf	(?___lmul+3)^(0+384),w
  4753  0243  00B3               	movwf	(___lldiv@dividend+3)^(0+384)
  4754  0244  0822               	movf	(?___lmul+2)^(0+384),w
  4755  0245  00B2               	movwf	(___lldiv@dividend+2)^(0+384)
  4756  0246  0821               	movf	(?___lmul+1)^(0+384),w
  4757  0247  00B1               	movwf	(___lldiv@dividend+1)^(0+384)
  4758  0248  0820               	movf	?___lmul^(0+384),w
  4759  0249  00B0               	movwf	___lldiv@dividend^(0+384)
  4760  024A  3193  23F8  3181   	fcall	___lldiv
  4761  024D  0023               	movlb	3	; select bank3
  4762  024E  082D               	movf	(?___lldiv+1)^(0+384),w
  4763  024F  0024               	movlb	4	; select bank4
  4764  0250  00AC               	movwf	(_MAIN_Uout_mV+1)^(0+512)
  4765  0251  0023               	movlb	3	; select bank3
  4766  0252  082C               	movf	?___lldiv^(0+384),w
  4767  0253  0024               	movlb	4	; select bank4
  4768  0254  00AB               	movwf	_MAIN_Uout_mV^(0+512)
  4769                           
  4770                           ;main.c: 361: MAIN_Iout_mA = Iadc*10;
  4771  0255  0023               	movlb	3	; select bank3
  4772  0256  085B               	movf	(_Iadc+1)^(0+384),w	;volatile
  4773  0257  00A1               	movwf	(___wmul@multiplier+1)^(0+384)
  4774  0258  085A               	movf	_Iadc^(0+384),w	;volatile
  4775  0259  00A0               	movwf	___wmul@multiplier^(0+384)
  4776  025A  300A               	movlw	10
  4777  025B  00A2               	movwf	___wmul@multiplicand^(0+384)
  4778  025C  3000               	movlw	0
  4779  025D  00A3               	movwf	(___wmul@multiplicand^(0+384)+1)
  4780  025E  3188  2002  3181   	fcall	___wmul
  4781  0261  0023               	movlb	3	; select bank3
  4782  0262  0821               	movf	(?___wmul+1)^(0+384),w
  4783  0263  0024               	movlb	4	; select bank4
  4784  0264  00AA               	movwf	(_MAIN_Iout_mA+1)^(0+512)
  4785  0265  0023               	movlb	3	; select bank3
  4786  0266  0820               	movf	?___wmul^(0+384),w
  4787  0267  0024               	movlb	4	; select bank4
  4788  0268  00A9               	movwf	_MAIN_Iout_mA^(0+512)
  4789  0269  2A93               	goto	l5785
  4790  026A                     l5773:	
  4791                           ;main.c: 364: case 1:
  4792                           
  4793                           ;main.c: 363: break;
  4794                           
  4795                           ;main.c: 362: step++;
  4796                           
  4797                           
  4798                           ;main.c: 365: writeStatusBuffer[0] = 0;
  4799  026A  0027               	movlb	7	; select bank7
  4800  026B  01A0               	clrf	_writeStatusBuffer^(0+896)
  4801                           
  4802                           ;main.c: 366: __builtin_memcpy(writeStatusBuffer,"EasyVolts \tU(mV)=      \t I(mA)=     
      +                          \r\n",38);
  4803  026C  30A0               	movlw	low (_writeStatusBuffer| (0+768))
  4804  026D  0086               	movwf	6
  4805  026E  3003               	movlw	3	; select bank7/8
  4806  026F  0087               	movwf	7
  4807  0270  30F6               	movlw	low (STR_1| (0+32768))
  4808  0271  0084               	movwf	4
  4809  0272  3098               	movlw	high (STR_1| (0+32768))
  4810  0273  0085               	movwf	5
  4811  0274  3026               	movlw	38
  4812  0275  0023               	movlb	3	; select bank3
  4813  0276  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4814  0277  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4815  0278  1903               	skipnz
  4816  0279  2A93               	goto	l5785
  4817  027A                     u574m0:	
  4818  027A  0012               	moviw fsr0++
  4819  027B  001E               	movwi fsr1++
  4820  027C  0BC6               	decfsz	??_main_CommunicationHandler^(0+384),f
  4821  027D  2A7A               	goto	u574m0
  4822  027E  2A93               	goto	l5785
  4823  027F                     l5779:	
  4824                           ;main.c: 369: case 2:
  4825                           
  4826                           ;main.c: 368: break;
  4827                           
  4828                           ;main.c: 367: step++;
  4829                           
  4830                           
  4831                           ;main.c: 370: my_uitoa(&writeStatusBuffer[17],MAIN_Uout_mV);
  4832  027F  082C               	movf	(_MAIN_Uout_mV+1)^(0+512),w
  4833  0280  0023               	movlb	3	; select bank3
  4834  0281  00A7               	movwf	(my_uitoa@num+1)^(0+384)
  4835  0282  0024               	movlb	4	; select bank4
  4836  0283  082B               	movf	_MAIN_Uout_mV^(0+512),w
  4837  0284  0023               	movlb	3	; select bank3
  4838  0285  00A6               	movwf	my_uitoa@num^(0+384)
  4839  0286  30B1               	movlw	(low ((_writeStatusBuffer| (0+768)+17)))& (0+255)
  4840  0287  2A90               	goto	L4
  4841  0288                     l5783:	
  4842                           ;main.c: 373: case 3:
  4843                           
  4844                           ;main.c: 372: break;
  4845                           
  4846                           ;main.c: 371: step++;
  4847                           
  4848                           
  4849                           ;main.c: 374: my_uitoa(&writeStatusBuffer[31],MAIN_Iout_mA);
  4850  0288  082A               	movf	(_MAIN_Iout_mA+1)^(0+512),w
  4851  0289  0023               	movlb	3	; select bank3
  4852  028A  00A7               	movwf	(my_uitoa@num+1)^(0+384)
  4853  028B  0024               	movlb	4	; select bank4
  4854  028C  0829               	movf	_MAIN_Iout_mA^(0+512),w
  4855  028D  0023               	movlb	3	; select bank3
  4856  028E  00A6               	movwf	my_uitoa@num^(0+384)
  4857  028F  30BF               	movlw	(low ((_writeStatusBuffer| (0+768)+31)))& (0+255)
  4858  0290                     L4:	
  4859  0290  318C  2421  3181   	fcall	_my_uitoa
  4860  0293                     l5785:	
  4861                           
  4862                           ;main.c: 376: step++;
  4863  0293  3001               	movlw	1
  4864  0294  0023               	movlb	3	; select bank3
  4865  0295  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4866  0296  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4867  0297  0024               	movlb	4	; select bank4
  4868  0298  07C7               	addwf	main_CommunicationHandler@step^(0+512),f
  4869                           
  4870                           ;main.c: 377: break;
  4871  0299  2AE9               	goto	l5811
  4872  029A                     l5787:	
  4873                           ;main.c: 381: case 0:
  4874                           
  4875                           ;main.c: 380: switch(MAIN_ovcFlag){
  4876                           
  4877                           ;main.c: 378: default:
  4878                           
  4879                           
  4880                           ;main.c: 382: if(0 == MAIN_Uout_target_mV) {
  4881  029A  0867               	movf	(_MAIN_Uout_target_mV+3)^(0+512),w
  4882  029B  0466               	iorwf	(_MAIN_Uout_target_mV+2)^(0+512),w
  4883  029C  0465               	iorwf	(_MAIN_Uout_target_mV+1)^(0+512),w
  4884  029D  0464               	iorwf	_MAIN_Uout_target_mV^(0+512),w
  4885  029E  1D03               	skipz
  4886  029F  2AA4               	goto	l1141
  4887                           
  4888                           ;main.c: 383: do { LATCbits.LATC0 = 0; } while(0);
  4889  02A0  0022               	movlb	2	; select bank2
  4890  02A1  100E               	bcf	14,0	;volatile
  4891                           
  4892                           ;main.c: 384: writeStatusBuffer[24] = '_';
  4893  02A2  305F               	movlw	95
  4894  02A3  2AB7               	goto	L2
  4895  02A4                     l1141:	
  4896                           ;main.c: 385: } else do { LATCbits.LATC0 = 1; } while(0);
  4897                           
  4898  02A4  0022               	movlb	2	; select bank2
  4899  02A5  140E               	bsf	14,0	;volatile
  4900                           
  4901                           ;main.c: 386: break;
  4902  02A6  2AC6               	goto	l5801
  4903  02A7                     l5791:	
  4904                           ;main.c: 388: do { LATCbits.LATC0 = ~LATCbits.LATC0; } while(0);
  4905                           
  4906                           ;main.c: 387: case 1:
  4907                           
  4908  02A7  1003               	clrc
  4909  02A8  0022               	movlb	2	; select bank2
  4910  02A9  1C0E               	btfss	14,0	;volatile
  4911  02AA  1403               	setc
  4912  02AB  1C03               	btfss	3,0
  4913  02AC  2AB0               	goto	u5760
  4914  02AD  0022               	movlb	2	; select bank2
  4915  02AE  140E               	bsf	14,0	;volatile
  4916  02AF  2AB2               	goto	l5793
  4917  02B0                     u5760:	
  4918  02B0  0022               	movlb	2	; select bank2
  4919  02B1  100E               	bcf	14,0	;volatile
  4920  02B2                     l5793:	
  4921                           
  4922                           ;main.c: 389: writeStatusBuffer[24] = '^';
  4923  02B2  305E               	movlw	94
  4924  02B3  2AB7               	goto	L2
  4925  02B4                     l1148:	
  4926                           ;main.c: 392: do { LATCbits.LATC0 = 0; } while(0);
  4927                           
  4928                           ;main.c: 391: default:
  4929                           
  4930                           ;main.c: 390: break;
  4931                           
  4932  02B4  0022               	movlb	2	; select bank2
  4933  02B5  100E               	bcf	14,0	;volatile
  4934                           
  4935                           ;main.c: 393: writeStatusBuffer[24] = '!';
  4936  02B6  3021               	movlw	33
  4937  02B7                     L2:	
  4938  02B7  0023               	movlb	3	; select bank3
  4939  02B8  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4940  02B9  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4941  02BA  0027               	movlb	7	; select bank7
  4942  02BB  00B8               	movwf	(_writeStatusBuffer^(0+896)+24)
  4943                           
  4944                           ;main.c: 395: }
  4945                           
  4946                           ;main.c: 394: break;
  4947  02BC  2AC6               	goto	l5801
  4948  02BD                     l5799:	
  4949  02BD  0024               	movlb	4	; select bank4
  4950  02BE  084C               	movf	_MAIN_ovcFlag^(0+512),w
  4951                           
  4952                           ; Switch size 1, requested type "space"
  4953                           ; Number of cases is 2, Range of values is 0 to 1
  4954                           ; switch strategies available:
  4955                           ; Name         Instructions Cycles
  4956                           ; simple_byte            7     4 (average)
  4957                           ; direct_byte           10     6 (fixed)
  4958                           ; jumptable            260     6 (fixed)
  4959                           ;	Chosen strategy is simple_byte
  4960  02BF  3A00               	xorlw	0	; case 0
  4961  02C0  1903               	skipnz
  4962  02C1  2A9A               	goto	l5787
  4963  02C2  3A01               	xorlw	1	; case 1
  4964  02C3  1903               	skipnz
  4965  02C4  2AA7               	goto	l5791
  4966  02C5  2AB4               	goto	l1148
  4967  02C6                     l5801:	
  4968                           
  4969                           ;main.c: 396: putUSBUSART(writeStatusBuffer,38 );
  4970  02C6  30A0               	movlw	low _writeStatusBuffer
  4971  02C7  0023               	movlb	3	; select bank3
  4972  02C8  00A0               	movwf	putUSBUSART@data^(0+384)
  4973  02C9  3003               	movlw	high _writeStatusBuffer
  4974  02CA  00A1               	movwf	(putUSBUSART@data+1)^(0+384)
  4975  02CB  3026               	movlw	38
  4976  02CC  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4977  02CD  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4978  02CE  00A2               	movwf	putUSBUSART@length^(0+384)
  4979  02CF  319F  2786  3181   	fcall	_putUSBUSART
  4980                           
  4981                           ;main.c: 398: TMR1IF = 0;
  4982  02D2  0020               	movlb	0	; select bank0
  4983  02D3  1011               	bcf	17,0	;volatile
  4984                           
  4985                           ;main.c: 400: TMR1_Reload();
  4986  02D4  319E  26E6  3181   	fcall	_TMR1_Reload
  4987                           
  4988                           ;main.c: 401: step = 0;
  4989  02D7  0024               	movlb	4	; select bank4
  4990  02D8  01C7               	clrf	main_CommunicationHandler@step^(0+512)
  4991                           
  4992                           ;main.c: 403: }
  4993                           
  4994                           ;main.c: 402: break;
  4995  02D9  2AE9               	goto	l5811
  4996  02DA                     l5809:	
  4997  02DA  0024               	movlb	4	; select bank4
  4998  02DB  0847               	movf	main_CommunicationHandler@step^(0+512),w
  4999                           
  5000                           ; Switch size 1, requested type "space"
  5001                           ; Number of cases is 4, Range of values is 0 to 3
  5002                           ; switch strategies available:
  5003                           ; Name         Instructions Cycles
  5004                           ; simple_byte           13     7 (average)
  5005                           ; direct_byte           14     6 (fixed)
  5006                           ; jumptable            260     6 (fixed)
  5007                           ;	Chosen strategy is simple_byte
  5008  02DC  3A00               	xorlw	0	; case 0
  5009  02DD  1903               	skipnz
  5010  02DE  2A27               	goto	l5769
  5011  02DF  3A01               	xorlw	1	; case 1
  5012  02E0  1903               	skipnz
  5013  02E1  2A6A               	goto	l5773
  5014  02E2  3A03               	xorlw	3	; case 2
  5015  02E3  1903               	skipnz
  5016  02E4  2A7F               	goto	l5779
  5017  02E5  3A01               	xorlw	1	; case 3
  5018  02E6  1903               	skipnz
  5019  02E7  2A88               	goto	l5783
  5020  02E8  2ABD               	goto	l5799
  5021  02E9                     l5811:	
  5022                           
  5023                           ;main.c: 404: }
  5024                           ;main.c: 405: }
  5025                           ;main.c: 407: CDCTxService();
  5026  02E9  318E  2695         	fcall	_CDCTxService
  5027  02EB  0008               	return
  5028  02EC                     __end_of_main_CommunicationHandler:	
  5029                           
  5030                           	psect	text3
  5031  1F86                     __ptext3:	
  5032 ;; *************** function _putUSBUSART *****************
  5033 ;; Defined at:
  5034 ;;		line 556 in file "usb/core/usb_device_cdc.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  data            2    0[BANK3 ] PTR unsigned char 
  5037 ;;		 -> writeStatusBuffer(64), writeBuffer(64), 
  5038 ;;  length          1    2[BANK3 ] unsigned char 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;		None
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  5050 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0
  5051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  5052 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  5053 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  5054 ;;Total ram usage:        4 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:   10
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_main_CommunicationHandler
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           
  5065                           ;psect for function _putUSBUSART
  5066  1F86                     _putUSBUSART:	
  5067                           
  5068                           ;usb_device_cdc.c: 581: ;
  5069                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  5070                           
  5071                           ;incstack = 0
  5072                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  5073  1F86  0023               	movlb	3	; select bank3
  5074  1F87  0865               	movf	_cdc_trf_state^(0+384),w
  5075  1F88  1D03               	btfss	3,2
  5076  1F89  0008               	return
  5077                           
  5078                           ;usb_device_cdc.c: 583: {
  5079                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  5080  1F8A  0821               	movf	(putUSBUSART@data+1)^(0+384),w
  5081  1F8B  0024               	movlb	4	; select bank4
  5082  1F8C  00C0               	movwf	(_pCDCSrc+1)^(0+512)
  5083  1F8D  0023               	movlb	3	; select bank3
  5084  1F8E  0820               	movf	putUSBUSART@data^(0+384),w
  5085  1F8F  0024               	movlb	4	; select bank4
  5086  1F90  00BF               	movwf	_pCDCSrc^(0+512)
  5087  1F91  0023               	movlb	3	; select bank3
  5088  1F92  0822               	movf	putUSBUSART@length^(0+384),w
  5089  1F93  00A3               	movwf	??_putUSBUSART^(0+384)
  5090  1F94  0823               	movf	??_putUSBUSART^(0+384),w
  5091  1F95  00E4               	movwf	_cdc_tx_len^(0+384)
  5092  1F96  0024               	movlb	4	; select bank4
  5093  1F97  01D1               	clrf	_cdc_mem_type^(0+512)
  5094  1F98  0AD1               	incf	_cdc_mem_type^(0+512),f
  5095  1F99  0023               	movlb	3	; select bank3
  5096  1F9A  01E5               	clrf	_cdc_trf_state^(0+384)
  5097  1F9B  0AE5               	incf	_cdc_trf_state^(0+384),f
  5098  1F9C  0008               	return
  5099  1F9D                     __end_of_putUSBUSART:	
  5100                           
  5101                           	psect	text4
  5102  0C21                     __ptext4:	
  5103 ;; *************** function _my_uitoa *****************
  5104 ;; Defined at:
  5105 ;;		line 245 in file "main.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;  str             1    wreg     PTR unsigned char 
  5108 ;;		 -> writeStatusBuffer(64), 
  5109 ;;  num             2    6[BANK3 ] unsigned int 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  str             1   19[BANK3 ] PTR unsigned char 
  5112 ;;		 -> writeStatusBuffer(64), 
  5113 ;;  ziffer          1   21[BANK3 ] char 
  5114 ;;  powerOfTen      1   20[BANK3 ] char 
  5115 ;;  strIncremet     1   18[BANK3 ] unsigned char 
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      void 
  5118 ;; Registers used:
  5119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  5125 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  5126 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  5127 ;;      Temps:          0       0       0      10       0       0       0       0       0       0       0       0       
      +0
  5128 ;;      Totals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0
  5129 ;;Total ram usage:       16 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; Hardware stack levels required when called:   11
  5132 ;; This function calls:
  5133 ;;		___wmul
  5134 ;; This function is called by:
  5135 ;;		_main_CommunicationHandler
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           
  5140                           ;psect for function _my_uitoa
  5141  0C21                     _my_uitoa:	
  5142                           
  5143                           ;incstack = 0
  5144                           ; Regs used in _my_uitoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5145                           ;my_uitoa@str stored from wreg
  5146  0C21  0023               	movlb	3	; select bank3
  5147  0C22  00B3               	movwf	my_uitoa@str^(0+384)
  5148                           
  5149                           ;main.c: 247: int8_t powerOfTen, ziffer = 5;
  5150  0C23  3005               	movlw	5
  5151  0C24  00A8               	movwf	??_my_uitoa^(0+384)
  5152  0C25  0828               	movf	??_my_uitoa^(0+384),w
  5153  0C26  00B5               	movwf	my_uitoa@ziffer^(0+384)
  5154                           
  5155                           ;main.c: 248: uint8_t strIncremet = 0;
  5156  0C27  01B2               	clrf	my_uitoa@strIncremet^(0+384)
  5157                           
  5158                           ;main.c: 250: for(powerOfTen=4; powerOfTen>=0; powerOfTen--) {
  5159  0C28  3004               	movlw	4
  5160  0C29  00A8               	movwf	??_my_uitoa^(0+384)
  5161  0C2A  0828               	movf	??_my_uitoa^(0+384),w
  5162  0C2B  00B4               	movwf	my_uitoa@powerOfTen^(0+384)
  5163  0C2C                     L6:	
  5164  0C2C  1BB4               	btfsc	my_uitoa@powerOfTen^(0+384),7
  5165  0C2D  0008               	return
  5166                           
  5167                           ;main.c: 251: *str = '0';
  5168  0C2E  3030               	movlw	48
  5169  0C2F  00A8               	movwf	??_my_uitoa^(0+384)
  5170  0C30  0833               	movf	my_uitoa@str^(0+384),w
  5171  0C31  0086               	movwf	6
  5172  0C32  3003               	movlw	3	; select bank6/7
  5173  0C33  0087               	movwf	7
  5174  0C34  0828               	movf	??_my_uitoa^(0+384),w
  5175  0C35  0081               	movwf	1
  5176                           
  5177                           ;main.c: 252: for(; ziffer>=0; ziffer--) {
  5178  0C36  1BB5               	btfsc	my_uitoa@ziffer^(0+384),7
  5179  0C37  2CA6               	goto	l5315
  5180  0C38                     l5303:	
  5181                           
  5182                           ;main.c: 253: if(num > dividerArray[powerOfTen][ziffer]) {
  5183  0C38  0835               	movf	my_uitoa@ziffer^(0+384),w
  5184  0C39  00A8               	movwf	??_my_uitoa^(0+384)
  5185  0C3A  01A9               	clrf	(??_my_uitoa^(0+384)+1)
  5186  0C3B  35A8               	lslf	??_my_uitoa^(0+384),f
  5187  0C3C  0DA9               	rlf	(??_my_uitoa^(0+384)+1),f
  5188  0C3D  0834               	movf	my_uitoa@powerOfTen^(0+384),w
  5189  0C3E  00AA               	movwf	(??_my_uitoa+2)^(0+384)
  5190  0C3F  01AB               	clrf	((??_my_uitoa+2)^(0+384)+1)
  5191  0C40  082A               	movf	(??_my_uitoa+2)^(0+384),w
  5192  0C41  00A0               	movwf	___wmul@multiplier^(0+384)
  5193  0C42  082B               	movf	(??_my_uitoa+3)^(0+384),w
  5194  0C43  00A1               	movwf	(___wmul@multiplier+1)^(0+384)
  5195  0C44  3012               	movlw	18
  5196  0C45  00A2               	movwf	___wmul@multiplicand^(0+384)
  5197  0C46  3000               	movlw	0
  5198  0C47  00A3               	movwf	(___wmul@multiplicand^(0+384)+1)
  5199  0C48  3188  2002  318C   	fcall	___wmul
  5200  0C4B  3000               	movlw	low (_dividerArray| (0+32768))
  5201  0C4C  0023               	movlb	3	; select bank3
  5202  0C4D  00AC               	movwf	(??_my_uitoa+4)^(0+384)
  5203  0C4E  3098               	movlw	high (_dividerArray| (0+32768))
  5204  0C4F  00AD               	movwf	((??_my_uitoa+4)^(0+384)+1)
  5205  0C50  0820               	movf	?___wmul^(0+384),w
  5206  0C51  072C               	addwf	(??_my_uitoa+4)^(0+384),w
  5207  0C52  00AE               	movwf	(??_my_uitoa+6)^(0+384)
  5208  0C53  0821               	movf	(?___wmul+1)^(0+384),w
  5209  0C54  3D2D               	addwfc	(??_my_uitoa+5)^(0+384),w
  5210  0C55  00AF               	movwf	(??_my_uitoa+7)^(0+384)
  5211  0C56  082E               	movf	(??_my_uitoa+6)^(0+384),w
  5212  0C57  0728               	addwf	??_my_uitoa^(0+384),w
  5213  0C58  0084               	movwf	4
  5214  0C59  082F               	movf	(??_my_uitoa+7)^(0+384),w
  5215  0C5A  3D29               	addwfc	(??_my_uitoa+1)^(0+384),w
  5216  0C5B  0085               	movwf	5
  5217  0C5C  3F00               	moviw [0]fsr0
  5218  0C5D  00B0               	movwf	(??_my_uitoa+8)^(0+384)
  5219  0C5E  3F01               	moviw [1]fsr0
  5220  0C5F  00B1               	movwf	((??_my_uitoa+8)^(0+384)+1)
  5221  0C60  0827               	movf	(my_uitoa@num+1)^(0+384),w
  5222  0C61  0231               	subwf	(??_my_uitoa+9)^(0+384),w
  5223  0C62  1D03               	skipz
  5224  0C63  2C66               	goto	u4955
  5225  0C64  0826               	movf	my_uitoa@num^(0+384),w
  5226  0C65  0230               	subwf	(??_my_uitoa+8)^(0+384),w
  5227  0C66                     u4955:	
  5228  0C66  1803               	skipnc
  5229  0C67  2CA0               	goto	l5311
  5230                           
  5231                           ;main.c: 254: strIncremet = 1;
  5232  0C68  01B2               	clrf	my_uitoa@strIncremet^(0+384)
  5233  0C69  0AB2               	incf	my_uitoa@strIncremet^(0+384),f
  5234                           
  5235                           ;main.c: 255: *str += ziffer+1;
  5236  0C6A  0835               	movf	my_uitoa@ziffer^(0+384),w
  5237  0C6B  3E01               	addlw	1
  5238  0C6C  00A8               	movwf	??_my_uitoa^(0+384)
  5239  0C6D  0833               	movf	my_uitoa@str^(0+384),w
  5240  0C6E  0086               	movwf	6
  5241  0C6F  3003               	movlw	3	; select bank6/7
  5242  0C70  0087               	movwf	7
  5243  0C71  0828               	movf	??_my_uitoa^(0+384),w
  5244  0C72  0781               	addwf	1,f
  5245                           
  5246                           ;main.c: 256: num -= dividerArray[powerOfTen][ziffer];
  5247  0C73  0835               	movf	my_uitoa@ziffer^(0+384),w
  5248  0C74  00A8               	movwf	??_my_uitoa^(0+384)
  5249  0C75  01A9               	clrf	(??_my_uitoa^(0+384)+1)
  5250  0C76  35A8               	lslf	??_my_uitoa^(0+384),f
  5251  0C77  0DA9               	rlf	(??_my_uitoa^(0+384)+1),f
  5252  0C78  0834               	movf	my_uitoa@powerOfTen^(0+384),w
  5253  0C79  00AA               	movwf	(??_my_uitoa+2)^(0+384)
  5254  0C7A  01AB               	clrf	((??_my_uitoa+2)^(0+384)+1)
  5255  0C7B  082A               	movf	(??_my_uitoa+2)^(0+384),w
  5256  0C7C  00A0               	movwf	___wmul@multiplier^(0+384)
  5257  0C7D  082B               	movf	(??_my_uitoa+3)^(0+384),w
  5258  0C7E  00A1               	movwf	(___wmul@multiplier+1)^(0+384)
  5259  0C7F  3012               	movlw	18
  5260  0C80  00A2               	movwf	___wmul@multiplicand^(0+384)
  5261  0C81  3000               	movlw	0
  5262  0C82  00A3               	movwf	(___wmul@multiplicand^(0+384)+1)
  5263  0C83  3188  2002  318C   	fcall	___wmul
  5264  0C86  3000               	movlw	low (_dividerArray| (0+32768))
  5265  0C87  0023               	movlb	3	; select bank3
  5266  0C88  00AC               	movwf	(??_my_uitoa+4)^(0+384)
  5267  0C89  3098               	movlw	high (_dividerArray| (0+32768))
  5268  0C8A  00AD               	movwf	((??_my_uitoa+4)^(0+384)+1)
  5269  0C8B  0820               	movf	?___wmul^(0+384),w
  5270  0C8C  072C               	addwf	(??_my_uitoa+4)^(0+384),w
  5271  0C8D  00AE               	movwf	(??_my_uitoa+6)^(0+384)
  5272  0C8E  0821               	movf	(?___wmul+1)^(0+384),w
  5273  0C8F  3D2D               	addwfc	(??_my_uitoa+5)^(0+384),w
  5274  0C90  00AF               	movwf	(??_my_uitoa+7)^(0+384)
  5275  0C91  082E               	movf	(??_my_uitoa+6)^(0+384),w
  5276  0C92  0728               	addwf	??_my_uitoa^(0+384),w
  5277  0C93  0084               	movwf	4
  5278  0C94  082F               	movf	(??_my_uitoa+7)^(0+384),w
  5279  0C95  3D29               	addwfc	(??_my_uitoa+1)^(0+384),w
  5280  0C96  0085               	movwf	5
  5281  0C97  3F00               	moviw [0]fsr0
  5282  0C98  00B0               	movwf	(??_my_uitoa+8)^(0+384)
  5283  0C99  3F01               	moviw [1]fsr0
  5284  0C9A  00B1               	movwf	((??_my_uitoa+8)^(0+384)+1)
  5285  0C9B  0830               	movf	(??_my_uitoa+8)^(0+384),w
  5286  0C9C  02A6               	subwf	my_uitoa@num^(0+384),f
  5287  0C9D  0831               	movf	(??_my_uitoa+9)^(0+384),w
  5288  0C9E  3BA7               	subwfb	(my_uitoa@num+1)^(0+384),f
  5289                           
  5290                           ;main.c: 257: break;
  5291  0C9F  2CA6               	goto	l5315
  5292  0CA0                     l5311:	
  5293  0CA0  30FF               	movlw	255
  5294  0CA1  00A8               	movwf	??_my_uitoa^(0+384)
  5295  0CA2  0828               	movf	??_my_uitoa^(0+384),w
  5296  0CA3  07B5               	addwf	my_uitoa@ziffer^(0+384),f
  5297  0CA4  1FB5               	btfss	my_uitoa@ziffer^(0+384),7
  5298  0CA5  2C38               	goto	l5303
  5299  0CA6                     l5315:	
  5300                           
  5301                           ;main.c: 258: }
  5302                           ;main.c: 259: }
  5303                           ;main.c: 260: ziffer=8;
  5304  0CA6  3008               	movlw	8
  5305  0CA7  00A8               	movwf	??_my_uitoa^(0+384)
  5306  0CA8  0828               	movf	??_my_uitoa^(0+384),w
  5307  0CA9  00B5               	movwf	my_uitoa@ziffer^(0+384)
  5308                           
  5309                           ;main.c: 261: str+=strIncremet;
  5310  0CAA  0832               	movf	my_uitoa@strIncremet^(0+384),w
  5311  0CAB  00A8               	movwf	??_my_uitoa^(0+384)
  5312  0CAC  0828               	movf	??_my_uitoa^(0+384),w
  5313  0CAD  07B3               	addwf	my_uitoa@str^(0+384),f
  5314  0CAE  30FF               	movlw	255
  5315  0CAF  00A8               	movwf	??_my_uitoa^(0+384)
  5316  0CB0  0828               	movf	??_my_uitoa^(0+384),w
  5317  0CB1  07B4               	addwf	my_uitoa@powerOfTen^(0+384),f
  5318  0CB2  2C2C               	goto	L6
  5319  0CB3                     __end_of_my_uitoa:	
  5320                           
  5321                           	psect	text5
  5322  1FE7                     __ptext5:	
  5323 ;; *************** function _memset *****************
  5324 ;; Defined at:
  5325 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  p1              2    0[BANK3 ] PTR void 
  5328 ;;		 -> cmdRxBuffer(64), USBAlternateInterface(2), BDT(80), 
  5329 ;;  c               2    2[BANK3 ] int 
  5330 ;;  n               2    4[BANK3 ] unsigned int 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  p               2    6[BANK3 ] PTR unsigned char 
  5333 ;;		 -> cmdRxBuffer(64), USBAlternateInterface(2), BDT(80), 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  2    0[BANK3 ] PTR void 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  5343 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0
  5344 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  5345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  5346 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0
  5347 ;;Total ram usage:        8 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:   10
  5350 ;; This function calls:
  5351 ;;		Nothing
  5352 ;; This function is called by:
  5353 ;;		_main_CommunicationHandler
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           
  5358                           ;psect for function _memset
  5359  1FE7                     _memset:	
  5360                           
  5361                           ;incstack = 0
  5362                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5363  1FE7  0023               	movlb	3	; select bank3
  5364  1FE8  0821               	movf	(memset@p1+1)^(0+384),w
  5365  1FE9  00A7               	movwf	(memset@p+1)^(0+384)
  5366  1FEA  0820               	movf	memset@p1^(0+384),w
  5367  1FEB  00A6               	movwf	memset@p^(0+384)
  5368  1FEC                     l5045:	
  5369  1FEC  3001               	movlw	1
  5370  1FED  02A4               	subwf	memset@n^(0+384),f
  5371  1FEE  3000               	movlw	0
  5372  1FEF  3BA5               	subwfb	(memset@n+1)^(0+384),f
  5373  1FF0  0A24               	incf	memset@n^(0+384),w
  5374  1FF1  1903               	btfsc	3,2
  5375  1FF2  0A25               	incf	(memset@n+1)^(0+384),w
  5376  1FF3  1903               	btfsc	3,2
  5377  1FF4  0008               	return
  5378  1FF5  0826               	movf	memset@p^(0+384),w
  5379  1FF6  0086               	movwf	6
  5380  1FF7  0827               	movf	(memset@p+1)^(0+384),w
  5381  1FF8  0087               	movwf	7
  5382  1FF9  0822               	movf	memset@c^(0+384),w
  5383  1FFA  0081               	movwf	1
  5384  1FFB  3001               	movlw	1
  5385  1FFC  07A6               	addwf	memset@p^(0+384),f
  5386  1FFD  3000               	movlw	0
  5387  1FFE  3DA7               	addwfc	(memset@p+1)^(0+384),f
  5388  1FFF  2FEC               	goto	l5045
  5389  2000                     __end_of_memset:	
  5390                           ;	Return value of _memset is never used
  5391                           
  5392                           
  5393                           	psect	text6
  5394  02EC                     __ptext6:	
  5395 ;; *************** function _main_SetDcDcRegulator *****************
  5396 ;; Defined at:
  5397 ;;		line 213 in file "main.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  pU_mV           1    wreg     PTR long 
  5400 ;;		 -> MAIN_Uout_target_mV(4), 
  5401 ;;  pI_mA           1   32[BANK3 ] PTR long 
  5402 ;;		 -> MAIN_Iout_limit_mA(4), 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  pU_mV           1   37[BANK3 ] PTR long 
  5405 ;;		 -> MAIN_Uout_target_mV(4), 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  1    wreg      void 
  5408 ;; Registers used:
  5409 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  5415 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  5416 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  5417 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  5418 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0
  5419 ;;Total ram usage:        6 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:   12
  5422 ;; This function calls:
  5423 ;;		___aldiv
  5424 ;;		___lldiv
  5425 ;;		___lmul
  5426 ;;		_main_switchStepUp_Down
  5427 ;; This function is called by:
  5428 ;;		_main_CommunicationHandler
  5429 ;;		_main
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           
  5434                           ;psect for function _main_SetDcDcRegulator
  5435  02EC                     _main_SetDcDcRegulator:	
  5436                           
  5437                           ;incstack = 0
  5438                           ; Regs used in _main_SetDcDcRegulator: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5439                           ;main_SetDcDcRegulator@pU_mV stored from wreg
  5440  02EC  0023               	movlb	3	; select bank3
  5441  02ED  00C5               	movwf	main_SetDcDcRegulator@pU_mV^(0+384)
  5442                           
  5443                           ;main.c: 216: if((*pU_mV) > (15000U)) (*pU_mV) = (15000U);
  5444  02EE  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5445  02EF  0086               	movwf	6
  5446  02F0  3002               	movlw	2	; select bank4/5
  5447  02F1  0087               	movwf	7
  5448  02F2  3F43               	moviw [3]fsr1
  5449  02F3  1B89               	btfsc	9,7
  5450  02F4  2B11               	goto	l5265
  5451  02F5  3F43               	moviw [3]fsr1
  5452  02F6  1D03               	btfss	3,2
  5453  02F7  2B05               	goto	l5263
  5454  02F8  3F42               	moviw [2]fsr1
  5455  02F9  1D03               	btfss	3,2
  5456  02FA  2B05               	goto	l5263
  5457  02FB  3F40               	moviw [0]fsr1
  5458  02FC  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5459  02FD  3099               	movlw	153
  5460  02FE  0241               	subwf	??_main_SetDcDcRegulator^(0+384),w
  5461  02FF  3F41               	moviw [1]fsr1
  5462  0300  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5463  0301  303A               	movlw	58
  5464  0302  3B41               	subwfb	??_main_SetDcDcRegulator^(0+384),w
  5465  0303  1C03               	btfss	3,0
  5466  0304  2B11               	goto	l5265
  5467  0305                     l5263:	
  5468  0305  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5469  0306  0086               	movwf	6
  5470  0307  3002               	movlw	2	; select bank4/5
  5471  0308  0087               	movwf	7
  5472  0309  3098               	movlw	152
  5473  030A  3FC0               	movwi [0]fsr1
  5474  030B  303A               	movlw	58
  5475  030C  3FC1               	movwi [1]fsr1
  5476  030D  3000               	movlw	0
  5477  030E  3FC2               	movwi [2]fsr1
  5478  030F  3000               	movlw	0
  5479  0310  3FC3               	movwi [3]fsr1
  5480  0311                     l5265:	
  5481                           
  5482                           ;main.c: 217: if((*pU_mV) < (0U)) (*pU_mV) = (0U);
  5483  0311  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5484  0312  0086               	movwf	6
  5485  0313  3002               	movlw	2	; select bank4/5
  5486  0314  0087               	movwf	7
  5487  0315  3F40               	moviw [0]fsr1
  5488  0316  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5489  0317  3F41               	moviw [1]fsr1
  5490  0318  00C2               	movwf	(??_main_SetDcDcRegulator^(0+384)+1)
  5491  0319  3F42               	moviw [2]fsr1
  5492  031A  00C3               	movwf	(??_main_SetDcDcRegulator^(0+384)+2)
  5493  031B  3F43               	moviw [3]fsr1
  5494  031C  00C4               	movwf	(??_main_SetDcDcRegulator^(0+384)+3)
  5495  031D  1FC4               	btfss	(??_main_SetDcDcRegulator+3)^(0+384),7
  5496  031E  2B28               	goto	l5269
  5497  031F  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5498  0320  0086               	movwf	6
  5499  0321  3002               	movlw	2	; select bank4/5
  5500  0322  0087               	movwf	7
  5501  0323  3000               	movlw	0
  5502  0324  3FC0               	movwi [0]fsr1
  5503  0325  3FC1               	movwi [1]fsr1
  5504  0326  3FC2               	movwi [2]fsr1
  5505  0327  3FC3               	movwi [3]fsr1
  5506  0328                     l5269:	
  5507                           
  5508                           ;main.c: 219: if((*pI_mA) > (1000U)) (*pI_mA) = (1000U);
  5509  0328  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5510  0329  0086               	movwf	6
  5511  032A  3002               	movlw	2	; select bank4/5
  5512  032B  0087               	movwf	7
  5513  032C  3F43               	moviw [3]fsr1
  5514  032D  1B89               	btfsc	9,7
  5515  032E  2B4B               	goto	l5273
  5516  032F  3F43               	moviw [3]fsr1
  5517  0330  1D03               	btfss	3,2
  5518  0331  2B3F               	goto	l5271
  5519  0332  3F42               	moviw [2]fsr1
  5520  0333  1D03               	btfss	3,2
  5521  0334  2B3F               	goto	l5271
  5522  0335  3F40               	moviw [0]fsr1
  5523  0336  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5524  0337  30E9               	movlw	233
  5525  0338  0241               	subwf	??_main_SetDcDcRegulator^(0+384),w
  5526  0339  3F41               	moviw [1]fsr1
  5527  033A  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5528  033B  3003               	movlw	3
  5529  033C  3B41               	subwfb	??_main_SetDcDcRegulator^(0+384),w
  5530  033D  1C03               	btfss	3,0
  5531  033E  2B4B               	goto	l5273
  5532  033F                     l5271:	
  5533  033F  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5534  0340  0086               	movwf	6
  5535  0341  3002               	movlw	2	; select bank4/5
  5536  0342  0087               	movwf	7
  5537  0343  30E8               	movlw	232
  5538  0344  3FC0               	movwi [0]fsr1
  5539  0345  3003               	movlw	3
  5540  0346  3FC1               	movwi [1]fsr1
  5541  0347  3000               	movlw	0
  5542  0348  3FC2               	movwi [2]fsr1
  5543  0349  3000               	movlw	0
  5544  034A  3FC3               	movwi [3]fsr1
  5545  034B                     l5273:	
  5546                           
  5547                           ;main.c: 220: if((*pI_mA) < (0U)) (*pI_mA) = (0U);
  5548  034B  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5549  034C  0086               	movwf	6
  5550  034D  3002               	movlw	2	; select bank4/5
  5551  034E  0087               	movwf	7
  5552  034F  3F40               	moviw [0]fsr1
  5553  0350  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5554  0351  3F41               	moviw [1]fsr1
  5555  0352  00C2               	movwf	(??_main_SetDcDcRegulator^(0+384)+1)
  5556  0353  3F42               	moviw [2]fsr1
  5557  0354  00C3               	movwf	(??_main_SetDcDcRegulator^(0+384)+2)
  5558  0355  3F43               	moviw [3]fsr1
  5559  0356  00C4               	movwf	(??_main_SetDcDcRegulator^(0+384)+3)
  5560  0357  1FC4               	btfss	(??_main_SetDcDcRegulator+3)^(0+384),7
  5561  0358  2B62               	goto	l5277
  5562  0359  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5563  035A  0086               	movwf	6
  5564  035B  3002               	movlw	2	; select bank4/5
  5565  035C  0087               	movwf	7
  5566  035D  3000               	movlw	0
  5567  035E  3FC0               	movwi [0]fsr1
  5568  035F  3FC1               	movwi [1]fsr1
  5569  0360  3FC2               	movwi [2]fsr1
  5570  0361  3FC3               	movwi [3]fsr1
  5571  0362                     l5277:	
  5572                           
  5573                           ;main.c: 223: if(((*pU_mV)*(*pI_mA)) > (2400000U)) {
  5574  0362  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5575  0363  0086               	movwf	6
  5576  0364  3002               	movlw	2	; select bank4/5
  5577  0365  0087               	movwf	7
  5578  0366  3F40               	moviw [0]fsr1
  5579  0367  00A0               	movwf	___lmul@multiplier^(0+384)
  5580  0368  3F41               	moviw [1]fsr1
  5581  0369  00A1               	movwf	(___lmul@multiplier+1)^(0+384)
  5582  036A  3F42               	moviw [2]fsr1
  5583  036B  00A2               	movwf	(___lmul@multiplier+2)^(0+384)
  5584  036C  3F43               	moviw [3]fsr1
  5585  036D  00A3               	movwf	(___lmul@multiplier+3)^(0+384)
  5586  036E  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5587  036F  0086               	movwf	6
  5588  0370  3002               	movlw	2	; select bank4/5
  5589  0371  0087               	movwf	7
  5590  0372  3F40               	moviw [0]fsr1
  5591  0373  00A4               	movwf	___lmul@multiplicand^(0+384)
  5592  0374  3F41               	moviw [1]fsr1
  5593  0375  00A5               	movwf	(___lmul@multiplicand+1)^(0+384)
  5594  0376  3F42               	moviw [2]fsr1
  5595  0377  00A6               	movwf	(___lmul@multiplicand+2)^(0+384)
  5596  0378  3F43               	moviw [3]fsr1
  5597  0379  00A7               	movwf	(___lmul@multiplicand+3)^(0+384)
  5598  037A  3191  21A1  3182   	fcall	___lmul
  5599  037D  0023               	movlb	3	; select bank3
  5600  037E  0823               	movf	(?___lmul+3)^(0+384),w
  5601  037F  1D03               	btfss	3,2
  5602  0380  2B89               	goto	l5279
  5603  0381  3001               	movlw	1
  5604  0382  0220               	subwf	?___lmul^(0+384),w
  5605  0383  309F               	movlw	159
  5606  0384  3B21               	subwfb	(?___lmul+1)^(0+384),w
  5607  0385  3024               	movlw	36
  5608  0386  3B22               	subwfb	(?___lmul+2)^(0+384),w
  5609  0387  1C03               	btfss	3,0
  5610  0388  2BAD               	goto	l5281
  5611  0389                     l5279:	
  5612                           
  5613                           ;main.c: 224: *pI_mA = (2400000U)/(*pU_mV);
  5614  0389  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5615  038A  0086               	movwf	6
  5616  038B  3002               	movlw	2	; select bank4/5
  5617  038C  0087               	movwf	7
  5618  038D  3F40               	moviw [0]fsr1
  5619  038E  00AC               	movwf	___lldiv@divisor^(0+384)
  5620  038F  3F41               	moviw [1]fsr1
  5621  0390  00AD               	movwf	(___lldiv@divisor+1)^(0+384)
  5622  0391  3F42               	moviw [2]fsr1
  5623  0392  00AE               	movwf	(___lldiv@divisor+2)^(0+384)
  5624  0393  3F43               	moviw [3]fsr1
  5625  0394  00AF               	movwf	(___lldiv@divisor+3)^(0+384)
  5626  0395  3000               	movlw	0
  5627  0396  00B3               	movwf	(___lldiv@dividend+3)^(0+384)
  5628  0397  3024               	movlw	36
  5629  0398  00B2               	movwf	(___lldiv@dividend+2)^(0+384)
  5630  0399  309F               	movlw	159
  5631  039A  00B1               	movwf	(___lldiv@dividend+1)^(0+384)
  5632  039B  3000               	movlw	0
  5633  039C  00B0               	movwf	___lldiv@dividend^(0+384)
  5634  039D  3193  23F8  3182   	fcall	___lldiv
  5635  03A0  0023               	movlb	3	; select bank3
  5636  03A1  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5637  03A2  0086               	movwf	6
  5638  03A3  3002               	movlw	2	; select bank4/5
  5639  03A4  0087               	movwf	7
  5640  03A5  082C               	movf	?___lldiv^(0+384),w
  5641  03A6  3FC0               	movwi [0]fsr1
  5642  03A7  082D               	movf	(?___lldiv+1)^(0+384),w
  5643  03A8  3FC1               	movwi [1]fsr1
  5644  03A9  082E               	movf	(?___lldiv+2)^(0+384),w
  5645  03AA  3FC2               	movwi [2]fsr1
  5646  03AB  082F               	movf	(?___lldiv+3)^(0+384),w
  5647  03AC  3FC3               	movwi [3]fsr1
  5648  03AD                     l5281:	
  5649                           
  5650                           ;main.c: 225: }
  5651                           ;main.c: 229: (INTCONbits.PEIE = 0);
  5652  03AD  130B               	bcf	11,6	;volatile
  5653                           
  5654                           ;main.c: 230: main_switchStepUp_Down(*pU_mV);
  5655  03AE  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5656  03AF  0086               	movwf	6
  5657  03B0  3002               	movlw	2	; select bank4/5
  5658  03B1  0087               	movwf	7
  5659  03B2  3F40               	moviw [0]fsr1
  5660  03B3  00BB               	movwf	main_switchStepUp_Down@Uout_mV^(0+384)
  5661  03B4  3F41               	moviw [1]fsr1
  5662  03B5  00BC               	movwf	(main_switchStepUp_Down@Uout_mV+1)^(0+384)
  5663  03B6  3F42               	moviw [2]fsr1
  5664  03B7  00BD               	movwf	(main_switchStepUp_Down@Uout_mV+2)^(0+384)
  5665  03B8  3F43               	moviw [3]fsr1
  5666  03B9  00BE               	movwf	(main_switchStepUp_Down@Uout_mV+3)^(0+384)
  5667  03BA  318F  2748  3182   	fcall	_main_switchStepUp_Down
  5668                           
  5669                           ;main.c: 231: Iadc_limit = 3+(*pI_mA)/10;
  5670  03BD  3000               	movlw	0
  5671  03BE  0023               	movlb	3	; select bank3
  5672  03BF  00AF               	movwf	(___aldiv@divisor+3)^(0+384)
  5673  03C0  3000               	movlw	0
  5674  03C1  00AE               	movwf	(___aldiv@divisor+2)^(0+384)
  5675  03C2  3000               	movlw	0
  5676  03C3  00AD               	movwf	(___aldiv@divisor+1)^(0+384)
  5677  03C4  300A               	movlw	10
  5678  03C5  00AC               	movwf	___aldiv@divisor^(0+384)
  5679  03C6  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5680  03C7  0086               	movwf	6
  5681  03C8  3002               	movlw	2	; select bank4/5
  5682  03C9  0087               	movwf	7
  5683  03CA  3F40               	moviw [0]fsr1
  5684  03CB  00B0               	movwf	___aldiv@dividend^(0+384)
  5685  03CC  3F41               	moviw [1]fsr1
  5686  03CD  00B1               	movwf	(___aldiv@dividend+1)^(0+384)
  5687  03CE  3F42               	moviw [2]fsr1
  5688  03CF  00B2               	movwf	(___aldiv@dividend+2)^(0+384)
  5689  03D0  3F43               	moviw [3]fsr1
  5690  03D1  00B3               	movwf	(___aldiv@dividend+3)^(0+384)
  5691  03D2  318A  2209  3182   	fcall	___aldiv
  5692  03D5  0023               	movlb	3	; select bank3
  5693  03D6  082C               	movf	?___aldiv^(0+384),w
  5694  03D7  3E03               	addlw	3
  5695  03D8  0024               	movlb	4	; select bank4
  5696  03D9  00AF               	movwf	_Iadc_limit^(0+512)
  5697  03DA  3000               	movlw	0
  5698  03DB  0023               	movlb	3	; select bank3
  5699  03DC  3D2D               	addwfc	(?___aldiv+1)^(0+384),w
  5700  03DD  0024               	movlb	4	; select bank4
  5701  03DE  00B0               	movwf	(_Iadc_limit+1)^(0+512)
  5702                           
  5703                           ;main.c: 232: Uadc_target = (100*(50+*pU_mV))/1761;
  5704  03DF  3000               	movlw	0
  5705  03E0  0023               	movlb	3	; select bank3
  5706  03E1  00AF               	movwf	(___aldiv@divisor+3)^(0+384)
  5707  03E2  3000               	movlw	0
  5708  03E3  00AE               	movwf	(___aldiv@divisor+2)^(0+384)
  5709  03E4  3006               	movlw	6
  5710  03E5  00AD               	movwf	(___aldiv@divisor+1)^(0+384)
  5711  03E6  30E1               	movlw	225
  5712  03E7  00AC               	movwf	___aldiv@divisor^(0+384)
  5713  03E8  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5714  03E9  0086               	movwf	6
  5715  03EA  3002               	movlw	2	; select bank4/5
  5716  03EB  0087               	movwf	7
  5717  03EC  3F40               	moviw [0]fsr1
  5718  03ED  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5719  03EE  3F41               	moviw [1]fsr1
  5720  03EF  00C2               	movwf	(??_main_SetDcDcRegulator^(0+384)+1)
  5721  03F0  3F42               	moviw [2]fsr1
  5722  03F1  00C3               	movwf	(??_main_SetDcDcRegulator^(0+384)+2)
  5723  03F2  3F43               	moviw [3]fsr1
  5724  03F3  00C4               	movwf	(??_main_SetDcDcRegulator^(0+384)+3)
  5725  03F4  3032               	movlw	50
  5726  03F5  0741               	addwf	??_main_SetDcDcRegulator^(0+384),w
  5727  03F6  00A0               	movwf	___lmul@multiplier^(0+384)
  5728  03F7  3000               	movlw	0
  5729  03F8  3D42               	addwfc	(??_main_SetDcDcRegulator+1)^(0+384),w
  5730  03F9  00A1               	movwf	(___lmul@multiplier+1)^(0+384)
  5731  03FA  3000               	movlw	0
  5732  03FB  3D43               	addwfc	(??_main_SetDcDcRegulator+2)^(0+384),w
  5733  03FC  00A2               	movwf	(___lmul@multiplier+2)^(0+384)
  5734  03FD  3000               	movlw	0
  5735  03FE  3D44               	addwfc	(??_main_SetDcDcRegulator+3)^(0+384),w
  5736  03FF  00A3               	movwf	(___lmul@multiplier+3)^(0+384)
  5737  0400  3000               	movlw	0
  5738  0401  00A7               	movwf	(___lmul@multiplicand+3)^(0+384)
  5739  0402  3000               	movlw	0
  5740  0403  00A6               	movwf	(___lmul@multiplicand+2)^(0+384)
  5741  0404  3000               	movlw	0
  5742  0405  00A5               	movwf	(___lmul@multiplicand+1)^(0+384)
  5743  0406  3064               	movlw	100
  5744  0407  00A4               	movwf	___lmul@multiplicand^(0+384)
  5745  0408  3191  21A1  3182   	fcall	___lmul
  5746  040B  0023               	movlb	3	; select bank3
  5747  040C  0823               	movf	(?___lmul+3)^(0+384),w
  5748  040D  00B3               	movwf	(___aldiv@dividend+3)^(0+384)
  5749  040E  0822               	movf	(?___lmul+2)^(0+384),w
  5750  040F  00B2               	movwf	(___aldiv@dividend+2)^(0+384)
  5751  0410  0821               	movf	(?___lmul+1)^(0+384),w
  5752  0411  00B1               	movwf	(___aldiv@dividend+1)^(0+384)
  5753  0412  0820               	movf	?___lmul^(0+384),w
  5754  0413  00B0               	movwf	___aldiv@dividend^(0+384)
  5755  0414  318A  2209         	fcall	___aldiv
  5756  0416  0023               	movlb	3	; select bank3
  5757  0417  082D               	movf	(?___aldiv+1)^(0+384),w
  5758  0418  0024               	movlb	4	; select bank4
  5759  0419  00AE               	movwf	(_Uadc_target+1)^(0+512)
  5760  041A  0023               	movlb	3	; select bank3
  5761  041B  082C               	movf	?___aldiv^(0+384),w
  5762  041C  0024               	movlb	4	; select bank4
  5763  041D  00AD               	movwf	_Uadc_target^(0+512)
  5764                           
  5765                           ;main.c: 233: (INTCONbits.PEIE = 1);
  5766  041E  170B               	bsf	11,6	;volatile
  5767                           
  5768                           ;main.c: 234: MAIN_ovcFlag = 0;
  5769  041F  01CC               	clrf	_MAIN_ovcFlag^(0+512)
  5770  0420  0008               	return
  5771  0421                     __end_of_main_SetDcDcRegulator:	
  5772                           
  5773                           	psect	text7
  5774  0F48                     __ptext7:	
  5775 ;; *************** function _main_switchStepUp_Down *****************
  5776 ;; Defined at:
  5777 ;;		line 76 in file "main.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  Uout_mV         4   27[BANK3 ] long 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;		None
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      void 
  5784 ;; Registers used:
  5785 ;;		wreg, status,2, status,0, pclath, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  5791 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  5792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  5793 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  5794 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0
  5795 ;;Total ram usage:        5 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:   11
  5798 ;; This function calls:
  5799 ;;		_PWM2_LoadDutyValue
  5800 ;;		___aldiv
  5801 ;;		___lmul
  5802 ;; This function is called by:
  5803 ;;		_main_SetDcDcRegulator
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           
  5808                           ;psect for function _main_switchStepUp_Down
  5809  0F48                     _main_switchStepUp_Down:	
  5810                           
  5811                           ;incstack = 0
  5812                           ; Regs used in _main_switchStepUp_Down: [wreg+status,2+status,0+pclath+cstack]
  5813                           ;main.c: 79: do { LATAbits.LATA5 = 1; } while(0);
  5814  0F48  0022               	movlb	2	; select bank2
  5815  0F49  168C               	bsf	12,5	;volatile
  5816                           
  5817                           ;main.c: 81: if(Uout_mV <= 4500) {
  5818  0F4A  0023               	movlb	3	; select bank3
  5819  0F4B  1BBE               	btfsc	(main_switchStepUp_Down@Uout_mV+3)^(0+384),7
  5820  0F4C  2F59               	goto	l4815
  5821  0F4D  083E               	movf	(main_switchStepUp_Down@Uout_mV+3)^(0+384),w
  5822  0F4E  1D03               	btfss	3,2
  5823  0F4F  2F99               	goto	l4823
  5824  0F50  083D               	movf	(main_switchStepUp_Down@Uout_mV+2)^(0+384),w
  5825  0F51  1D03               	btfss	3,2
  5826  0F52  2F99               	goto	l4823
  5827  0F53  3095               	movlw	149
  5828  0F54  023B               	subwf	main_switchStepUp_Down@Uout_mV^(0+384),w
  5829  0F55  3011               	movlw	17
  5830  0F56  3B3C               	subwfb	(main_switchStepUp_Down@Uout_mV+1)^(0+384),w
  5831  0F57  1803               	btfsc	3,0
  5832  0F58  2F99               	goto	l4823
  5833  0F59                     l4815:	
  5834                           
  5835                           ;main.c: 82: PwmDutyCycleVoltageLimit = ((188)*(350+Uout_mV))/(5000);
  5836  0F59  3000               	movlw	0
  5837  0F5A  00AF               	movwf	(___aldiv@divisor+3)^(0+384)
  5838  0F5B  3000               	movlw	0
  5839  0F5C  00AE               	movwf	(___aldiv@divisor+2)^(0+384)
  5840  0F5D  3013               	movlw	19
  5841  0F5E  00AD               	movwf	(___aldiv@divisor+1)^(0+384)
  5842  0F5F  3088               	movlw	136
  5843  0F60  00AC               	movwf	___aldiv@divisor^(0+384)
  5844  0F61  305E               	movlw	94
  5845  0F62  073B               	addwf	main_switchStepUp_Down@Uout_mV^(0+384),w
  5846  0F63  00A0               	movwf	___lmul@multiplier^(0+384)
  5847  0F64  3001               	movlw	1
  5848  0F65  3D3C               	addwfc	(main_switchStepUp_Down@Uout_mV+1)^(0+384),w
  5849  0F66  00A1               	movwf	(___lmul@multiplier+1)^(0+384)
  5850  0F67  3000               	movlw	0
  5851  0F68  3D3D               	addwfc	(main_switchStepUp_Down@Uout_mV+2)^(0+384),w
  5852  0F69  00A2               	movwf	(___lmul@multiplier+2)^(0+384)
  5853  0F6A  3000               	movlw	0
  5854  0F6B  3D3E               	addwfc	(main_switchStepUp_Down@Uout_mV+3)^(0+384),w
  5855  0F6C  00A3               	movwf	(___lmul@multiplier+3)^(0+384)
  5856  0F6D  3000               	movlw	0
  5857  0F6E  00A7               	movwf	(___lmul@multiplicand+3)^(0+384)
  5858  0F6F  3000               	movlw	0
  5859  0F70  00A6               	movwf	(___lmul@multiplicand+2)^(0+384)
  5860  0F71  3000               	movlw	0
  5861  0F72  00A5               	movwf	(___lmul@multiplicand+1)^(0+384)
  5862  0F73  30BC               	movlw	188
  5863  0F74  00A4               	movwf	___lmul@multiplicand^(0+384)
  5864  0F75  3191  21A1  318F   	fcall	___lmul
  5865  0F78  0023               	movlb	3	; select bank3
  5866  0F79  0823               	movf	(?___lmul+3)^(0+384),w
  5867  0F7A  00B3               	movwf	(___aldiv@dividend+3)^(0+384)
  5868  0F7B  0822               	movf	(?___lmul+2)^(0+384),w
  5869  0F7C  00B2               	movwf	(___aldiv@dividend+2)^(0+384)
  5870  0F7D  0821               	movf	(?___lmul+1)^(0+384),w
  5871  0F7E  00B1               	movwf	(___aldiv@dividend+1)^(0+384)
  5872  0F7F  0820               	movf	?___lmul^(0+384),w
  5873  0F80  00B0               	movwf	___aldiv@dividend^(0+384)
  5874  0F81  318A  2209  318F   	fcall	___aldiv
  5875  0F84  0023               	movlb	3	; select bank3
  5876  0F85  082C               	movf	?___aldiv^(0+384),w
  5877  0F86  00BF               	movwf	??_main_switchStepUp_Down^(0+384)
  5878  0F87  083F               	movf	??_main_switchStepUp_Down^(0+384),w
  5879  0F88  0024               	movlb	4	; select bank4
  5880  0F89  00CD               	movwf	_PwmDutyCycleVoltageLimit^(0+512)
  5881                           
  5882                           ;main.c: 83: PWM2_LoadDutyValue(0);
  5883  0F8A  3000               	movlw	0
  5884  0F8B  0023               	movlb	3	; select bank3
  5885  0F8C  00A0               	movwf	PWM2_LoadDutyValue@dutyValue^(0+384)
  5886  0F8D  00A1               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+384)
  5887  0F8E  319F  27CE         	fcall	_PWM2_LoadDutyValue
  5888                           
  5889                           ;main.c: 84: PWM2CON = 0xD0;
  5890  0F90  30D0               	movlw	208
  5891  0F91  002C               	movlb	12	; select bank12
  5892  0F92  0096               	movwf	22	;volatile
  5893                           
  5894                           ;main.c: 85: APFCON = 0x04;
  5895  0F93  3004               	movlw	4
  5896  0F94  0022               	movlb	2	; select bank2
  5897  0F95  009D               	movwf	29	;volatile
  5898                           
  5899                           ;main.c: 86: MAIN_upConverterFlag = 0;
  5900  0F96  0024               	movlb	4	; select bank4
  5901  0F97  01CB               	clrf	_MAIN_upConverterFlag^(0+512)
  5902                           
  5903                           ;main.c: 87: } else if(Uout_mV <= 4850) {
  5904  0F98  0008               	return
  5905  0F99                     l4823:	
  5906  0F99  0023               	movlb	3	; select bank3
  5907  0F9A  1BBE               	btfsc	(main_switchStepUp_Down@Uout_mV+3)^(0+384),7
  5908  0F9B  2FA8               	goto	l4825
  5909  0F9C  083E               	movf	(main_switchStepUp_Down@Uout_mV+3)^(0+384),w
  5910  0F9D  1D03               	btfss	3,2
  5911  0F9E  2FBC               	goto	l4837
  5912  0F9F  083D               	movf	(main_switchStepUp_Down@Uout_mV+2)^(0+384),w
  5913  0FA0  1D03               	btfss	3,2
  5914  0FA1  2FBC               	goto	l4837
  5915  0FA2  30F3               	movlw	243
  5916  0FA3  023B               	subwf	main_switchStepUp_Down@Uout_mV^(0+384),w
  5917  0FA4  3012               	movlw	18
  5918  0FA5  3B3C               	subwfb	(main_switchStepUp_Down@Uout_mV+1)^(0+384),w
  5919  0FA6  1803               	btfsc	3,0
  5920  0FA7  2FBC               	goto	l4837
  5921  0FA8                     l4825:	
  5922                           
  5923                           ;main.c: 88: PwmDutyCycleVoltageLimit = 1;
  5924  0FA8  0024               	movlb	4	; select bank4
  5925  0FA9  01CD               	clrf	_PwmDutyCycleVoltageLimit^(0+512)
  5926  0FAA  0ACD               	incf	_PwmDutyCycleVoltageLimit^(0+512),f
  5927                           
  5928                           ;main.c: 89: PWM2_LoadDutyValue(0);
  5929  0FAB  3000               	movlw	0
  5930  0FAC  0023               	movlb	3	; select bank3
  5931  0FAD  00A0               	movwf	PWM2_LoadDutyValue@dutyValue^(0+384)
  5932  0FAE  00A1               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+384)
  5933  0FAF  319F  27CE         	fcall	_PWM2_LoadDutyValue
  5934                           
  5935                           ;main.c: 90: PWM2CON = 0xC0;
  5936  0FB1  30C0               	movlw	192
  5937  0FB2  002C               	movlb	12	; select bank12
  5938  0FB3  0096               	movwf	22	;volatile
  5939                           
  5940                           ;main.c: 91: APFCON = 0x00;
  5941  0FB4  0022               	movlb	2	; select bank2
  5942  0FB5  019D               	clrf	29	;volatile
  5943                           
  5944                           ;main.c: 92: MAIN_upConverterFlag = 1;
  5945  0FB6  0024               	movlb	4	; select bank4
  5946  0FB7  01CB               	clrf	_MAIN_upConverterFlag^(0+512)
  5947  0FB8  0ACB               	incf	_MAIN_upConverterFlag^(0+512),f
  5948                           
  5949                           ;main.c: 93: do { LATAbits.LATA5 = 0; } while(0);
  5950  0FB9  0022               	movlb	2	; select bank2
  5951  0FBA  128C               	bcf	12,5	;volatile
  5952                           
  5953                           ;main.c: 94: } else {
  5954  0FBB  0008               	return
  5955  0FBC                     l4837:	
  5956                           
  5957                           ;main.c: 95: PwmDutyCycleVoltageLimit = 2 + (((188)*(Uout_mV - 4850))/(Uout_mV));
  5958  0FBC  0023               	movlb	3	; select bank3
  5959  0FBD  083E               	movf	(main_switchStepUp_Down@Uout_mV+3)^(0+384),w
  5960  0FBE  00AF               	movwf	(___aldiv@divisor+3)^(0+384)
  5961  0FBF  083D               	movf	(main_switchStepUp_Down@Uout_mV+2)^(0+384),w
  5962  0FC0  00AE               	movwf	(___aldiv@divisor+2)^(0+384)
  5963  0FC1  083C               	movf	(main_switchStepUp_Down@Uout_mV+1)^(0+384),w
  5964  0FC2  00AD               	movwf	(___aldiv@divisor+1)^(0+384)
  5965  0FC3  083B               	movf	main_switchStepUp_Down@Uout_mV^(0+384),w
  5966  0FC4  00AC               	movwf	___aldiv@divisor^(0+384)
  5967  0FC5  300E               	movlw	14
  5968  0FC6  073B               	addwf	main_switchStepUp_Down@Uout_mV^(0+384),w
  5969  0FC7  00A0               	movwf	___lmul@multiplier^(0+384)
  5970  0FC8  30ED               	movlw	237
  5971  0FC9  3D3C               	addwfc	(main_switchStepUp_Down@Uout_mV+1)^(0+384),w
  5972  0FCA  00A1               	movwf	(___lmul@multiplier+1)^(0+384)
  5973  0FCB  30FF               	movlw	255
  5974  0FCC  3D3D               	addwfc	(main_switchStepUp_Down@Uout_mV+2)^(0+384),w
  5975  0FCD  00A2               	movwf	(___lmul@multiplier+2)^(0+384)
  5976  0FCE  30FF               	movlw	255
  5977  0FCF  3D3E               	addwfc	(main_switchStepUp_Down@Uout_mV+3)^(0+384),w
  5978  0FD0  00A3               	movwf	(___lmul@multiplier+3)^(0+384)
  5979  0FD1  3000               	movlw	0
  5980  0FD2  00A7               	movwf	(___lmul@multiplicand+3)^(0+384)
  5981  0FD3  3000               	movlw	0
  5982  0FD4  00A6               	movwf	(___lmul@multiplicand+2)^(0+384)
  5983  0FD5  3000               	movlw	0
  5984  0FD6  00A5               	movwf	(___lmul@multiplicand+1)^(0+384)
  5985  0FD7  30BC               	movlw	188
  5986  0FD8  00A4               	movwf	___lmul@multiplicand^(0+384)
  5987  0FD9  3191  21A1  318F   	fcall	___lmul
  5988  0FDC  0023               	movlb	3	; select bank3
  5989  0FDD  0823               	movf	(?___lmul+3)^(0+384),w
  5990  0FDE  00B3               	movwf	(___aldiv@dividend+3)^(0+384)
  5991  0FDF  0822               	movf	(?___lmul+2)^(0+384),w
  5992  0FE0  00B2               	movwf	(___aldiv@dividend+2)^(0+384)
  5993  0FE1  0821               	movf	(?___lmul+1)^(0+384),w
  5994  0FE2  00B1               	movwf	(___aldiv@dividend+1)^(0+384)
  5995  0FE3  0820               	movf	?___lmul^(0+384),w
  5996  0FE4  00B0               	movwf	___aldiv@dividend^(0+384)
  5997  0FE5  318A  2209  318F   	fcall	___aldiv
  5998  0FE8  0023               	movlb	3	; select bank3
  5999  0FE9  082C               	movf	?___aldiv^(0+384),w
  6000  0FEA  3E02               	addlw	2
  6001  0FEB  00BF               	movwf	??_main_switchStepUp_Down^(0+384)
  6002  0FEC  083F               	movf	??_main_switchStepUp_Down^(0+384),w
  6003  0FED  0024               	movlb	4	; select bank4
  6004  0FEE  00CD               	movwf	_PwmDutyCycleVoltageLimit^(0+512)
  6005                           
  6006                           ;main.c: 96: PWM2_LoadDutyValue(0);
  6007  0FEF  3000               	movlw	0
  6008  0FF0  0023               	movlb	3	; select bank3
  6009  0FF1  00A0               	movwf	PWM2_LoadDutyValue@dutyValue^(0+384)
  6010  0FF2  00A1               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+384)
  6011  0FF3  319F  27CE         	fcall	_PWM2_LoadDutyValue
  6012                           
  6013                           ;main.c: 97: PWM2CON = 0xC0;
  6014  0FF5  30C0               	movlw	192
  6015  0FF6  002C               	movlb	12	; select bank12
  6016  0FF7  0096               	movwf	22	;volatile
  6017                           
  6018                           ;main.c: 98: APFCON = 0x00;
  6019  0FF8  0022               	movlb	2	; select bank2
  6020  0FF9  019D               	clrf	29	;volatile
  6021                           
  6022                           ;main.c: 99: MAIN_upConverterFlag = 1;
  6023  0FFA  0024               	movlb	4	; select bank4
  6024  0FFB  01CB               	clrf	_MAIN_upConverterFlag^(0+512)
  6025  0FFC  0ACB               	incf	_MAIN_upConverterFlag^(0+512),f
  6026                           
  6027                           ;main.c: 100: do { LATAbits.LATA5 = 0; } while(0);
  6028  0FFD  0022               	movlb	2	; select bank2
  6029  0FFE  128C               	bcf	12,5	;volatile
  6030  0FFF  0008               	return
  6031  1000                     __end_of_main_switchStepUp_Down:	
  6032                           
  6033                           	psect	text8
  6034  11A1                     __ptext8:	
  6035 ;; *************** function ___lmul *****************
  6036 ;; Defined at:
  6037 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul32.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  multiplier      4    0[BANK3 ] unsigned long 
  6040 ;;  multiplicand    4    4[BANK3 ] unsigned long 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  product         4    8[BANK3 ] unsigned long 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  4    0[BANK3 ] unsigned long 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6052 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0
  6053 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6055 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0
  6056 ;;Total ram usage:       12 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:   10
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_main_switchStepUp_Down
  6063 ;;		_main_SetDcDcRegulator
  6064 ;;		_main_CommunicationHandler
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           
  6069                           ;psect for function ___lmul
  6070  11A1                     ___lmul:	
  6071                           
  6072                           ;incstack = 0
  6073                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6074  11A1  3000               	movlw	0
  6075  11A2  0023               	movlb	3	; select bank3
  6076  11A3  00AB               	movwf	(___lmul@product+3)^(0+384)
  6077  11A4  3000               	movlw	0
  6078  11A5  00AA               	movwf	(___lmul@product+2)^(0+384)
  6079  11A6  3000               	movlw	0
  6080  11A7  00A9               	movwf	(___lmul@product+1)^(0+384)
  6081  11A8  3000               	movlw	0
  6082  11A9  00A8               	movwf	___lmul@product^(0+384)
  6083  11AA                     l4647:	
  6084  11AA  1C20               	btfss	___lmul@multiplier^(0+384),0
  6085  11AB  29B4               	goto	l4651
  6086  11AC  0824               	movf	___lmul@multiplicand^(0+384),w
  6087  11AD  07A8               	addwf	___lmul@product^(0+384),f
  6088  11AE  0825               	movf	(___lmul@multiplicand+1)^(0+384),w
  6089  11AF  3DA9               	addwfc	(___lmul@product+1)^(0+384),f
  6090  11B0  0826               	movf	(___lmul@multiplicand+2)^(0+384),w
  6091  11B1  3DAA               	addwfc	(___lmul@product+2)^(0+384),f
  6092  11B2  0827               	movf	(___lmul@multiplicand+3)^(0+384),w
  6093  11B3  3DAB               	addwfc	(___lmul@product+3)^(0+384),f
  6094  11B4                     l4651:	
  6095  11B4  3001               	movlw	1
  6096  11B5                     u4005:	
  6097  11B5  35A4               	lslf	___lmul@multiplicand^(0+384),f
  6098  11B6  0DA5               	rlf	(___lmul@multiplicand+1)^(0+384),f
  6099  11B7  0DA6               	rlf	(___lmul@multiplicand+2)^(0+384),f
  6100  11B8  0DA7               	rlf	(___lmul@multiplicand+3)^(0+384),f
  6101  11B9  0B89               	decfsz	9,f
  6102  11BA  29B5               	goto	u4005
  6103  11BB  3001               	movlw	1
  6104  11BC                     u4015:	
  6105  11BC  36A3               	lsrf	(___lmul@multiplier+3)^(0+384),f
  6106  11BD  0CA2               	rrf	(___lmul@multiplier+2)^(0+384),f
  6107  11BE  0CA1               	rrf	(___lmul@multiplier+1)^(0+384),f
  6108  11BF  0CA0               	rrf	___lmul@multiplier^(0+384),f
  6109  11C0  0B89               	decfsz	9,f
  6110  11C1  29BC               	goto	u4015
  6111  11C2  0823               	movf	(___lmul@multiplier+3)^(0+384),w
  6112  11C3  0422               	iorwf	(___lmul@multiplier+2)^(0+384),w
  6113  11C4  0421               	iorwf	(___lmul@multiplier+1)^(0+384),w
  6114  11C5  0420               	iorwf	___lmul@multiplier^(0+384),w
  6115  11C6  1D03               	skipz
  6116  11C7  29AA               	goto	l4647
  6117  11C8  082B               	movf	(___lmul@product+3)^(0+384),w
  6118  11C9  00A3               	movwf	(?___lmul+3)^(0+384)
  6119  11CA  082A               	movf	(___lmul@product+2)^(0+384),w
  6120  11CB  00A2               	movwf	(?___lmul+2)^(0+384)
  6121  11CC  0829               	movf	(___lmul@product+1)^(0+384),w
  6122  11CD  00A1               	movwf	(?___lmul+1)^(0+384)
  6123  11CE  0828               	movf	___lmul@product^(0+384),w
  6124  11CF  00A0               	movwf	?___lmul^(0+384)
  6125  11D0  0008               	return
  6126  11D1                     __end_of___lmul:	
  6127                           
  6128                           	psect	text9
  6129  0A09                     __ptext9:	
  6130 ;; *************** function ___aldiv *****************
  6131 ;; Defined at:
  6132 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;  divisor         4   12[BANK3 ] long 
  6135 ;;  dividend        4   16[BANK3 ] long 
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;  quotient        4   23[BANK3 ] long 
  6138 ;;  sign            1   22[BANK3 ] unsigned char 
  6139 ;;  counter         1   21[BANK3 ] unsigned char 
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  4   12[BANK3 ] long 
  6142 ;; Registers used:
  6143 ;;		wreg, status,2, status,0
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6149 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0
  6150 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0
  6151 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  6152 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0
  6153 ;;Total ram usage:       15 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:   10
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_main_switchStepUp_Down
  6160 ;;		_main_SetDcDcRegulator
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           
  6165                           ;psect for function ___aldiv
  6166  0A09                     ___aldiv:	
  6167                           
  6168                           ;incstack = 0
  6169                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6170  0A09  0023               	movlb	3	; select bank3
  6171  0A0A  01B6               	clrf	___aldiv@sign^(0+384)
  6172  0A0B  1FAF               	btfss	(___aldiv@divisor+3)^(0+384),7
  6173  0A0C  2A1A               	goto	l1276
  6174  0A0D  09AC               	comf	___aldiv@divisor^(0+384),f
  6175  0A0E  09AD               	comf	(___aldiv@divisor+1)^(0+384),f
  6176  0A0F  09AE               	comf	(___aldiv@divisor+2)^(0+384),f
  6177  0A10  09AF               	comf	(___aldiv@divisor+3)^(0+384),f
  6178  0A11  0AAC               	incf	___aldiv@divisor^(0+384),f
  6179  0A12  1903               	skipnz
  6180  0A13  0AAD               	incf	(___aldiv@divisor+1)^(0+384),f
  6181  0A14  1903               	skipnz
  6182  0A15  0AAE               	incf	(___aldiv@divisor+2)^(0+384),f
  6183  0A16  1903               	skipnz
  6184  0A17  0AAF               	incf	(___aldiv@divisor+3)^(0+384),f
  6185  0A18  01B6               	clrf	___aldiv@sign^(0+384)
  6186  0A19  0AB6               	incf	___aldiv@sign^(0+384),f
  6187  0A1A                     l1276:	
  6188  0A1A  1FB3               	btfss	(___aldiv@dividend+3)^(0+384),7
  6189  0A1B  2A2B               	goto	l4669
  6190  0A1C  09B0               	comf	___aldiv@dividend^(0+384),f
  6191  0A1D  09B1               	comf	(___aldiv@dividend+1)^(0+384),f
  6192  0A1E  09B2               	comf	(___aldiv@dividend+2)^(0+384),f
  6193  0A1F  09B3               	comf	(___aldiv@dividend+3)^(0+384),f
  6194  0A20  0AB0               	incf	___aldiv@dividend^(0+384),f
  6195  0A21  1903               	skipnz
  6196  0A22  0AB1               	incf	(___aldiv@dividend+1)^(0+384),f
  6197  0A23  1903               	skipnz
  6198  0A24  0AB2               	incf	(___aldiv@dividend+2)^(0+384),f
  6199  0A25  1903               	skipnz
  6200  0A26  0AB3               	incf	(___aldiv@dividend+3)^(0+384),f
  6201  0A27  3001               	movlw	1
  6202  0A28  00B4               	movwf	??___aldiv^(0+384)
  6203  0A29  0834               	movf	??___aldiv^(0+384),w
  6204  0A2A  06B6               	xorwf	___aldiv@sign^(0+384),f
  6205  0A2B                     l4669:	
  6206  0A2B  3000               	movlw	0
  6207  0A2C  00BA               	movwf	(___aldiv@quotient+3)^(0+384)
  6208  0A2D  3000               	movlw	0
  6209  0A2E  00B9               	movwf	(___aldiv@quotient+2)^(0+384)
  6210  0A2F  3000               	movlw	0
  6211  0A30  00B8               	movwf	(___aldiv@quotient+1)^(0+384)
  6212  0A31  3000               	movlw	0
  6213  0A32  00B7               	movwf	___aldiv@quotient^(0+384)
  6214  0A33  082F               	movf	(___aldiv@divisor+3)^(0+384),w
  6215  0A34  042E               	iorwf	(___aldiv@divisor+2)^(0+384),w
  6216  0A35  042D               	iorwf	(___aldiv@divisor+1)^(0+384),w
  6217  0A36  042C               	iorwf	___aldiv@divisor^(0+384),w
  6218  0A37  1903               	skipnz
  6219  0A38  2A74               	goto	l4691
  6220  0A39  01B5               	clrf	___aldiv@counter^(0+384)
  6221  0A3A  0AB5               	incf	___aldiv@counter^(0+384),f
  6222  0A3B                     l4677:	
  6223  0A3B  1BAF               	btfsc	(___aldiv@divisor+3)^(0+384),7
  6224  0A3C  2A49               	goto	l4679
  6225  0A3D  3001               	movlw	1
  6226  0A3E                     u4065:	
  6227  0A3E  35AC               	lslf	___aldiv@divisor^(0+384),f
  6228  0A3F  0DAD               	rlf	(___aldiv@divisor+1)^(0+384),f
  6229  0A40  0DAE               	rlf	(___aldiv@divisor+2)^(0+384),f
  6230  0A41  0DAF               	rlf	(___aldiv@divisor+3)^(0+384),f
  6231  0A42  0B89               	decfsz	9,f
  6232  0A43  2A3E               	goto	u4065
  6233  0A44  3001               	movlw	1
  6234  0A45  00B4               	movwf	??___aldiv^(0+384)
  6235  0A46  0834               	movf	??___aldiv^(0+384),w
  6236  0A47  07B5               	addwf	___aldiv@counter^(0+384),f
  6237  0A48  2A3B               	goto	l4677
  6238  0A49                     l4679:	
  6239  0A49  3001               	movlw	1
  6240  0A4A                     u4085:	
  6241  0A4A  35B7               	lslf	___aldiv@quotient^(0+384),f
  6242  0A4B  0DB8               	rlf	(___aldiv@quotient+1)^(0+384),f
  6243  0A4C  0DB9               	rlf	(___aldiv@quotient+2)^(0+384),f
  6244  0A4D  0DBA               	rlf	(___aldiv@quotient+3)^(0+384),f
  6245  0A4E  0B89               	decfsz	9,f
  6246  0A4F  2A4A               	goto	u4085
  6247  0A50  082F               	movf	(___aldiv@divisor+3)^(0+384),w
  6248  0A51  0233               	subwf	(___aldiv@dividend+3)^(0+384),w
  6249  0A52  1D03               	skipz
  6250  0A53  2A5E               	goto	u4095
  6251  0A54  082E               	movf	(___aldiv@divisor+2)^(0+384),w
  6252  0A55  0232               	subwf	(___aldiv@dividend+2)^(0+384),w
  6253  0A56  1D03               	skipz
  6254  0A57  2A5E               	goto	u4095
  6255  0A58  082D               	movf	(___aldiv@divisor+1)^(0+384),w
  6256  0A59  0231               	subwf	(___aldiv@dividend+1)^(0+384),w
  6257  0A5A  1D03               	skipz
  6258  0A5B  2A5E               	goto	u4095
  6259  0A5C  082C               	movf	___aldiv@divisor^(0+384),w
  6260  0A5D  0230               	subwf	___aldiv@dividend^(0+384),w
  6261  0A5E                     u4095:	
  6262  0A5E  1C03               	skipc
  6263  0A5F  2A69               	goto	l4687
  6264  0A60  082C               	movf	___aldiv@divisor^(0+384),w
  6265  0A61  02B0               	subwf	___aldiv@dividend^(0+384),f
  6266  0A62  082D               	movf	(___aldiv@divisor+1)^(0+384),w
  6267  0A63  3BB1               	subwfb	(___aldiv@dividend+1)^(0+384),f
  6268  0A64  082E               	movf	(___aldiv@divisor+2)^(0+384),w
  6269  0A65  3BB2               	subwfb	(___aldiv@dividend+2)^(0+384),f
  6270  0A66  082F               	movf	(___aldiv@divisor+3)^(0+384),w
  6271  0A67  3BB3               	subwfb	(___aldiv@dividend+3)^(0+384),f
  6272  0A68  1437               	bsf	___aldiv@quotient^(0+384),0
  6273  0A69                     l4687:	
  6274  0A69  3001               	movlw	1
  6275  0A6A                     u4105:	
  6276  0A6A  36AF               	lsrf	(___aldiv@divisor+3)^(0+384),f
  6277  0A6B  0CAE               	rrf	(___aldiv@divisor+2)^(0+384),f
  6278  0A6C  0CAD               	rrf	(___aldiv@divisor+1)^(0+384),f
  6279  0A6D  0CAC               	rrf	___aldiv@divisor^(0+384),f
  6280  0A6E  0B89               	decfsz	9,f
  6281  0A6F  2A6A               	goto	u4105
  6282  0A70  3001               	movlw	1
  6283  0A71  02B5               	subwf	___aldiv@counter^(0+384),f
  6284  0A72  1D03               	btfss	3,2
  6285  0A73  2A49               	goto	l4679
  6286  0A74                     l4691:	
  6287  0A74  0836               	movf	___aldiv@sign^(0+384),w
  6288  0A75  1903               	btfsc	3,2
  6289  0A76  2A82               	goto	l4695
  6290  0A77  09B7               	comf	___aldiv@quotient^(0+384),f
  6291  0A78  09B8               	comf	(___aldiv@quotient+1)^(0+384),f
  6292  0A79  09B9               	comf	(___aldiv@quotient+2)^(0+384),f
  6293  0A7A  09BA               	comf	(___aldiv@quotient+3)^(0+384),f
  6294  0A7B  0AB7               	incf	___aldiv@quotient^(0+384),f
  6295  0A7C  1903               	skipnz
  6296  0A7D  0AB8               	incf	(___aldiv@quotient+1)^(0+384),f
  6297  0A7E  1903               	skipnz
  6298  0A7F  0AB9               	incf	(___aldiv@quotient+2)^(0+384),f
  6299  0A80  1903               	skipnz
  6300  0A81  0ABA               	incf	(___aldiv@quotient+3)^(0+384),f
  6301  0A82                     l4695:	
  6302  0A82  083A               	movf	(___aldiv@quotient+3)^(0+384),w
  6303  0A83  00AF               	movwf	(?___aldiv+3)^(0+384)
  6304  0A84  0839               	movf	(___aldiv@quotient+2)^(0+384),w
  6305  0A85  00AE               	movwf	(?___aldiv+2)^(0+384)
  6306  0A86  0838               	movf	(___aldiv@quotient+1)^(0+384),w
  6307  0A87  00AD               	movwf	(?___aldiv+1)^(0+384)
  6308  0A88  0837               	movf	___aldiv@quotient^(0+384),w
  6309  0A89  00AC               	movwf	?___aldiv^(0+384)
  6310  0A8A  0008               	return
  6311  0A8B                     __end_of___aldiv:	
  6312                           
  6313                           	psect	text10
  6314  1FCE                     __ptext10:	
  6315 ;; *************** function _PWM2_LoadDutyValue *****************
  6316 ;; Defined at:
  6317 ;;		line 71 in file "mcc_generated_files/pwm2.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  dutyValue       2    0[BANK3 ] unsigned int 
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;		None
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  1    wreg      void 
  6324 ;; Registers used:
  6325 ;;		wreg, status,2, status,0
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6331 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6333 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6334 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  6335 ;;Total ram usage:        4 bytes
  6336 ;; Hardware stack levels used:    1
  6337 ;; Hardware stack levels required when called:   10
  6338 ;; This function calls:
  6339 ;;		Nothing
  6340 ;; This function is called by:
  6341 ;;		_main_switchStepUp_Down
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           
  6346                           ;psect for function _PWM2_LoadDutyValue
  6347  1FCE                     _PWM2_LoadDutyValue:	
  6348                           
  6349                           ;pwm2.c: 74: PWM2DCH = (dutyValue & 0x03FC)>>2;
  6350                           
  6351                           ;incstack = 0
  6352                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2+status,0]
  6353  1FCE  0023               	movlb	3	; select bank3
  6354  1FCF  0821               	movf	(PWM2_LoadDutyValue@dutyValue+1)^(0+384),w
  6355  1FD0  00A3               	movwf	(??_PWM2_LoadDutyValue^(0+384)+1)
  6356  1FD1  0820               	movf	PWM2_LoadDutyValue@dutyValue^(0+384),w
  6357  1FD2  00A2               	movwf	??_PWM2_LoadDutyValue^(0+384)
  6358  1FD3  36A3               	lsrf	(??_PWM2_LoadDutyValue^(0+384)+1),f
  6359  1FD4  0CA2               	rrf	??_PWM2_LoadDutyValue^(0+384),f
  6360  1FD5  36A3               	lsrf	(??_PWM2_LoadDutyValue^(0+384)+1),f
  6361  1FD6  0CA2               	rrf	??_PWM2_LoadDutyValue^(0+384),f
  6362  1FD7  0822               	movf	??_PWM2_LoadDutyValue^(0+384),w
  6363  1FD8  002C               	movlb	12	; select bank12
  6364  1FD9  0095               	movwf	21	;volatile
  6365                           
  6366                           ;pwm2.c: 77: PWM2DCL = (dutyValue & 0x0003)<<6;
  6367  1FDA  0023               	movlb	3	; select bank3
  6368  1FDB  0820               	movf	PWM2_LoadDutyValue@dutyValue^(0+384),w
  6369  1FDC  3903               	andlw	3
  6370  1FDD  00A2               	movwf	??_PWM2_LoadDutyValue^(0+384)
  6371  1FDE  3005               	movlw	5
  6372  1FDF                     u3845:	
  6373  1FDF  35A2               	lslf	??_PWM2_LoadDutyValue^(0+384),f
  6374  1FE0  3EFF               	addlw	-1
  6375  1FE1  1D03               	skipz
  6376  1FE2  2FDF               	goto	u3845
  6377  1FE3  3522               	lslf	??_PWM2_LoadDutyValue^(0+384),w
  6378  1FE4  002C               	movlb	12	; select bank12
  6379  1FE5  0094               	movwf	20	;volatile
  6380  1FE6  0008               	return
  6381  1FE7                     __end_of_PWM2_LoadDutyValue:	
  6382                           
  6383                           	psect	text11
  6384  13F8                     __ptext11:	
  6385 ;; *************** function ___lldiv *****************
  6386 ;; Defined at:
  6387 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;  divisor         4   12[BANK3 ] unsigned long 
  6390 ;;  dividend        4   16[BANK3 ] unsigned long 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;  quotient        4   21[BANK3 ] unsigned long 
  6393 ;;  counter         1   25[BANK3 ] unsigned char 
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  4   12[BANK3 ] unsigned long 
  6396 ;; Registers used:
  6397 ;;		wreg, status,2, status,0
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6403 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0
  6404 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0
  6405 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  6406 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0
  6407 ;;Total ram usage:       14 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:   10
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_main_SetDcDcRegulator
  6414 ;;		_main_CommunicationHandler
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           
  6419                           ;psect for function ___lldiv
  6420  13F8                     ___lldiv:	
  6421                           
  6422                           ;incstack = 0
  6423                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6424  13F8  3000               	movlw	0
  6425  13F9  0023               	movlb	3	; select bank3
  6426  13FA  00B8               	movwf	(___lldiv@quotient+3)^(0+384)
  6427  13FB  3000               	movlw	0
  6428  13FC  00B7               	movwf	(___lldiv@quotient+2)^(0+384)
  6429  13FD  3000               	movlw	0
  6430  13FE  00B6               	movwf	(___lldiv@quotient+1)^(0+384)
  6431  13FF  3000               	movlw	0
  6432  1400  00B5               	movwf	___lldiv@quotient^(0+384)
  6433  1401  082F               	movf	(___lldiv@divisor+3)^(0+384),w
  6434  1402  042E               	iorwf	(___lldiv@divisor+2)^(0+384),w
  6435  1403  042D               	iorwf	(___lldiv@divisor+1)^(0+384),w
  6436  1404  042C               	iorwf	___lldiv@divisor^(0+384),w
  6437  1405  1903               	skipnz
  6438  1406  2C42               	goto	l4893
  6439  1407  01B9               	clrf	___lldiv@counter^(0+384)
  6440  1408  0AB9               	incf	___lldiv@counter^(0+384),f
  6441  1409                     l4879:	
  6442  1409  1BAF               	btfsc	(___lldiv@divisor+3)^(0+384),7
  6443  140A  2C17               	goto	l4881
  6444  140B  3001               	movlw	1
  6445  140C                     u4345:	
  6446  140C  35AC               	lslf	___lldiv@divisor^(0+384),f
  6447  140D  0DAD               	rlf	(___lldiv@divisor+1)^(0+384),f
  6448  140E  0DAE               	rlf	(___lldiv@divisor+2)^(0+384),f
  6449  140F  0DAF               	rlf	(___lldiv@divisor+3)^(0+384),f
  6450  1410  0B89               	decfsz	9,f
  6451  1411  2C0C               	goto	u4345
  6452  1412  3001               	movlw	1
  6453  1413  00B4               	movwf	??___lldiv^(0+384)
  6454  1414  0834               	movf	??___lldiv^(0+384),w
  6455  1415  07B9               	addwf	___lldiv@counter^(0+384),f
  6456  1416  2C09               	goto	l4879
  6457  1417                     l4881:	
  6458  1417  3001               	movlw	1
  6459  1418                     u4365:	
  6460  1418  35B5               	lslf	___lldiv@quotient^(0+384),f
  6461  1419  0DB6               	rlf	(___lldiv@quotient+1)^(0+384),f
  6462  141A  0DB7               	rlf	(___lldiv@quotient+2)^(0+384),f
  6463  141B  0DB8               	rlf	(___lldiv@quotient+3)^(0+384),f
  6464  141C  0B89               	decfsz	9,f
  6465  141D  2C18               	goto	u4365
  6466  141E  082F               	movf	(___lldiv@divisor+3)^(0+384),w
  6467  141F  0233               	subwf	(___lldiv@dividend+3)^(0+384),w
  6468  1420  1D03               	skipz
  6469  1421  2C2C               	goto	u4375
  6470  1422  082E               	movf	(___lldiv@divisor+2)^(0+384),w
  6471  1423  0232               	subwf	(___lldiv@dividend+2)^(0+384),w
  6472  1424  1D03               	skipz
  6473  1425  2C2C               	goto	u4375
  6474  1426  082D               	movf	(___lldiv@divisor+1)^(0+384),w
  6475  1427  0231               	subwf	(___lldiv@dividend+1)^(0+384),w
  6476  1428  1D03               	skipz
  6477  1429  2C2C               	goto	u4375
  6478  142A  082C               	movf	___lldiv@divisor^(0+384),w
  6479  142B  0230               	subwf	___lldiv@dividend^(0+384),w
  6480  142C                     u4375:	
  6481  142C  1C03               	skipc
  6482  142D  2C37               	goto	l4889
  6483  142E  082C               	movf	___lldiv@divisor^(0+384),w
  6484  142F  02B0               	subwf	___lldiv@dividend^(0+384),f
  6485  1430  082D               	movf	(___lldiv@divisor+1)^(0+384),w
  6486  1431  3BB1               	subwfb	(___lldiv@dividend+1)^(0+384),f
  6487  1432  082E               	movf	(___lldiv@divisor+2)^(0+384),w
  6488  1433  3BB2               	subwfb	(___lldiv@dividend+2)^(0+384),f
  6489  1434  082F               	movf	(___lldiv@divisor+3)^(0+384),w
  6490  1435  3BB3               	subwfb	(___lldiv@dividend+3)^(0+384),f
  6491  1436  1435               	bsf	___lldiv@quotient^(0+384),0
  6492  1437                     l4889:	
  6493  1437  3001               	movlw	1
  6494  1438                     u4385:	
  6495  1438  36AF               	lsrf	(___lldiv@divisor+3)^(0+384),f
  6496  1439  0CAE               	rrf	(___lldiv@divisor+2)^(0+384),f
  6497  143A  0CAD               	rrf	(___lldiv@divisor+1)^(0+384),f
  6498  143B  0CAC               	rrf	___lldiv@divisor^(0+384),f
  6499  143C  0B89               	decfsz	9,f
  6500  143D  2C38               	goto	u4385
  6501  143E  3001               	movlw	1
  6502  143F  02B9               	subwf	___lldiv@counter^(0+384),f
  6503  1440  1D03               	btfss	3,2
  6504  1441  2C17               	goto	l4881
  6505  1442                     l4893:	
  6506  1442  0838               	movf	(___lldiv@quotient+3)^(0+384),w
  6507  1443  00AF               	movwf	(?___lldiv+3)^(0+384)
  6508  1444  0837               	movf	(___lldiv@quotient+2)^(0+384),w
  6509  1445  00AE               	movwf	(?___lldiv+2)^(0+384)
  6510  1446  0836               	movf	(___lldiv@quotient+1)^(0+384),w
  6511  1447  00AD               	movwf	(?___lldiv+1)^(0+384)
  6512  1448  0835               	movf	___lldiv@quotient^(0+384),w
  6513  1449  00AC               	movwf	?___lldiv^(0+384)
  6514  144A  0008               	return
  6515  144B                     __end_of___lldiv:	
  6516                           
  6517                           	psect	text12
  6518  144B                     __ptext12:	
  6519 ;; *************** function _getsUSBUSART *****************
  6520 ;; Defined at:
  6521 ;;		line 485 in file "usb/core/usb_device_cdc.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  buffer          1    wreg     PTR unsigned char 
  6524 ;;		 -> readBuffer(64), 
  6525 ;;  len             1   11[BANK3 ] unsigned char 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  buffer          1   14[BANK3 ] PTR unsigned char 
  6528 ;;		 -> readBuffer(64), 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  1    wreg      unsigned char 
  6531 ;; Registers used:
  6532 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6538 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  6539 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  6540 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6541 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  6542 ;;Total ram usage:        4 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:   11
  6545 ;; This function calls:
  6546 ;;		_USBTransferOnePacket
  6547 ;; This function is called by:
  6548 ;;		_main_CommunicationHandler
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           
  6553                           ;psect for function _getsUSBUSART
  6554  144B                     _getsUSBUSART:	
  6555                           
  6556                           ;incstack = 0
  6557                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6558                           ;getsUSBUSART@buffer stored from wreg
  6559  144B  0023               	movlb	3	; select bank3
  6560  144C  00AE               	movwf	getsUSBUSART@buffer^(0+384)
  6561                           
  6562                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  6563  144D  01E6               	clrf	_cdc_rx_len^(0+384)
  6564                           
  6565                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  6566  144E  0024               	movlb	4	; select bank4
  6567  144F  083B               	movf	_CDCDataOutHandle^(0+512),w
  6568  1450  043C               	iorwf	(_CDCDataOutHandle+1)^(0+512),w
  6569  1451  1903               	btfsc	3,2
  6570  1452  2C59               	goto	l5053
  6571  1453  083B               	movf	_CDCDataOutHandle^(0+512),w
  6572  1454  0086               	movwf	6
  6573  1455  083C               	movf	(_CDCDataOutHandle+1)^(0+512),w
  6574  1456  0087               	movwf	7
  6575  1457  1B81               	btfsc	1,7
  6576  1458  2C9C               	goto	l5067
  6577  1459                     l5053:	
  6578                           
  6579                           ;usb_device_cdc.c: 490: {
  6580                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  6581  1459  083B               	movf	_CDCDataOutHandle^(0+512),w
  6582  145A  0086               	movwf	6
  6583  145B  083C               	movf	(_CDCDataOutHandle+1)^(0+512),w
  6584  145C  0087               	movwf	7
  6585  145D  3141               	addfsr 1,1
  6586  145E  0023               	movlb	3	; select bank3
  6587  145F  082B               	movf	getsUSBUSART@len^(0+384),w
  6588  1460  0201               	subwf	1,w
  6589  1461  1803               	skipnc
  6590  1462  2C6E               	goto	l5057
  6591                           
  6592                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  6593  1463  0024               	movlb	4	; select bank4
  6594  1464  083B               	movf	_CDCDataOutHandle^(0+512),w
  6595  1465  0086               	movwf	6
  6596  1466  083C               	movf	(_CDCDataOutHandle+1)^(0+512),w
  6597  1467  0087               	movwf	7
  6598  1468  3141               	addfsr 1,1
  6599  1469  0801               	movf	1,w
  6600  146A  0023               	movlb	3	; select bank3
  6601  146B  00AC               	movwf	??_getsUSBUSART^(0+384)
  6602  146C  082C               	movf	??_getsUSBUSART^(0+384),w
  6603  146D  00AB               	movwf	getsUSBUSART@len^(0+384)
  6604  146E                     l5057:	
  6605                           
  6606                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  6607  146E  01E6               	clrf	_cdc_rx_len^(0+384)
  6608  146F                     l5063:	
  6609  146F  082B               	movf	getsUSBUSART@len^(0+384),w
  6610  1470  0266               	subwf	_cdc_rx_len^(0+384),w
  6611  1471  1803               	btfsc	3,0
  6612  1472  2C88               	goto	l5065
  6613                           
  6614                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  6615  1473  0866               	movf	_cdc_rx_len^(0+384),w
  6616  1474  3E20               	addlw	32
  6617  1475  0086               	movwf	6
  6618  1476  3001               	movlw	1	; select bank2/3
  6619  1477  0087               	movwf	7
  6620  1478  0801               	movf	1,w
  6621  1479  00AC               	movwf	??_getsUSBUSART^(0+384)
  6622  147A  0866               	movf	_cdc_rx_len^(0+384),w
  6623  147B  072E               	addwf	getsUSBUSART@buffer^(0+384),w
  6624  147C  00AD               	movwf	(??_getsUSBUSART+1)^(0+384)
  6625  147D  082D               	movf	(??_getsUSBUSART+1)^(0+384),w
  6626  147E  0086               	movwf	6
  6627  147F  3005               	movlw	5	; select bank10/11
  6628  1480  0087               	movwf	7
  6629  1481  082C               	movf	??_getsUSBUSART^(0+384),w
  6630  1482  0081               	movwf	1
  6631  1483  3001               	movlw	1
  6632  1484  00AC               	movwf	??_getsUSBUSART^(0+384)
  6633  1485  082C               	movf	??_getsUSBUSART^(0+384),w
  6634  1486  07E6               	addwf	_cdc_rx_len^(0+384),f
  6635  1487  2C6F               	goto	l5063
  6636  1488                     l5065:	
  6637                           
  6638                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  6639  1488  01A0               	clrf	USBTransferOnePacket@dir^(0+384)
  6640  1489  3020               	movlw	32
  6641  148A  00A1               	movwf	USBTransferOnePacket@data^(0+384)
  6642  148B  3001               	movlw	1
  6643  148C  00A2               	movwf	(USBTransferOnePacket@data+1)^(0+384)
  6644  148D  3040               	movlw	64
  6645  148E  00AC               	movwf	??_getsUSBUSART^(0+384)
  6646  148F  082C               	movf	??_getsUSBUSART^(0+384),w
  6647  1490  00A3               	movwf	USBTransferOnePacket@len^(0+384)
  6648  1491  3002               	movlw	2
  6649  1492  318B  230E         	fcall	_USBTransferOnePacket
  6650  1494  0023               	movlb	3	; select bank3
  6651  1495  0821               	movf	(?_USBTransferOnePacket+1)^(0+384),w
  6652  1496  0024               	movlb	4	; select bank4
  6653  1497  00BC               	movwf	(_CDCDataOutHandle+1)^(0+512)
  6654  1498  0023               	movlb	3	; select bank3
  6655  1499  0820               	movf	?_USBTransferOnePacket^(0+384),w
  6656  149A  0024               	movlb	4	; select bank4
  6657  149B  00BB               	movwf	_CDCDataOutHandle^(0+512)
  6658  149C                     l5067:	
  6659                           
  6660                           ;usb_device_cdc.c: 510: }
  6661                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  6662  149C  0023               	movlb	3	; select bank3
  6663  149D  0866               	movf	_cdc_rx_len^(0+384),w
  6664  149E  0008               	return
  6665  149F                     __end_of_getsUSBUSART:	
  6666                           
  6667                           	psect	text13
  6668  178F                     __ptext13:	
  6669 ;; *************** function _atoi *****************
  6670 ;; Defined at:
  6671 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\atoi.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  s               1    wreg     PTR const unsigned char 
  6674 ;;		 -> cmdRxBuffer(64), 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  s               1   13[BANK3 ] PTR const unsigned char 
  6677 ;;		 -> cmdRxBuffer(64), 
  6678 ;;  a               2   11[BANK3 ] int 
  6679 ;;  sign            1   10[BANK3 ] unsigned char 
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  2    6[BANK3 ] int 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6689 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6690 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  6691 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6692 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0
  6693 ;;Total ram usage:        8 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; Hardware stack levels required when called:   11
  6696 ;; This function calls:
  6697 ;;		___wmul
  6698 ;;		_isdigit
  6699 ;; This function is called by:
  6700 ;;		_main_CommunicationHandler
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           
  6705                           ;psect for function _atoi
  6706  178F                     _atoi:	
  6707                           
  6708                           ;incstack = 0
  6709                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6710                           ;atoi@s stored from wreg
  6711  178F  0023               	movlb	3	; select bank3
  6712  1790  00AD               	movwf	atoi@s^(0+384)
  6713  1791                     l5327:	
  6714  1791  082D               	movf	atoi@s^(0+384),w
  6715  1792  0086               	movwf	6
  6716  1793  3003               	movlw	3	; select bank6/7
  6717  1794  0087               	movwf	7
  6718  1795  3020               	movlw	32
  6719  1796  0601               	xorwf	1,w
  6720  1797  1D03               	btfss	3,2
  6721  1798  2F9E               	goto	l5329
  6722  1799                     l5325:	
  6723  1799  3001               	movlw	1
  6724  179A  00A8               	movwf	??_atoi^(0+384)
  6725  179B  0828               	movf	??_atoi^(0+384),w
  6726  179C  07AD               	addwf	atoi@s^(0+384),f
  6727  179D  2F91               	goto	l5327
  6728  179E                     l5329:	
  6729  179E  082D               	movf	atoi@s^(0+384),w
  6730  179F  0086               	movwf	6
  6731  17A0  3003               	movlw	3	; select bank6/7
  6732  17A1  0087               	movwf	7
  6733  17A2  3009               	movlw	9
  6734  17A3  0601               	xorwf	1,w
  6735  17A4  1903               	btfsc	3,2
  6736  17A5  2F99               	goto	l5325
  6737  17A6  01AB               	clrf	atoi@a^(0+384)
  6738  17A7  01AC               	clrf	(atoi@a+1)^(0+384)
  6739  17A8  01AA               	clrf	atoi@sign^(0+384)
  6740  17A9  082D               	movf	atoi@s^(0+384),w
  6741  17AA  0086               	movwf	6
  6742  17AB  3003               	movlw	3	; select bank6/7
  6743  17AC  0087               	movwf	7
  6744  17AD  302D               	movlw	45
  6745  17AE  0601               	xorwf	1,w
  6746  17AF  1D03               	btfss	3,2
  6747  17B0  2FB6               	goto	l5337
  6748  17B1  3001               	movlw	1
  6749  17B2  00A8               	movwf	??_atoi^(0+384)
  6750  17B3  0828               	movf	??_atoi^(0+384),w
  6751  17B4  07AA               	addwf	atoi@sign^(0+384),f
  6752  17B5  2FBE               	goto	l5343
  6753  17B6                     l5337:	
  6754  17B6  082D               	movf	atoi@s^(0+384),w
  6755  17B7  0086               	movwf	6
  6756  17B8  3003               	movlw	3	; select bank6/7
  6757  17B9  0087               	movwf	7
  6758  17BA  302B               	movlw	43
  6759  17BB  0601               	xorwf	1,w
  6760  17BC  1D03               	btfss	3,2
  6761  17BD  2FC2               	goto	l5345
  6762  17BE                     l5343:	
  6763  17BE  3001               	movlw	1
  6764  17BF  00A8               	movwf	??_atoi^(0+384)
  6765  17C0  0828               	movf	??_atoi^(0+384),w
  6766  17C1  07AD               	addwf	atoi@s^(0+384),f
  6767  17C2                     l5345:	
  6768  17C2  082D               	movf	atoi@s^(0+384),w
  6769  17C3  0086               	movwf	6
  6770  17C4  3003               	movlw	3	; select bank6/7
  6771  17C5  0087               	movwf	7
  6772  17C6  0801               	movf	1,w
  6773  17C7  319F  2710  3197   	fcall	_isdigit
  6774  17CA  1C03               	btfss	3,0
  6775  17CB  2FEB               	goto	l5347
  6776  17CC  0023               	movlb	3	; select bank3
  6777  17CD  082C               	movf	(atoi@a+1)^(0+384),w
  6778  17CE  00A1               	movwf	(___wmul@multiplier+1)^(0+384)
  6779  17CF  082B               	movf	atoi@a^(0+384),w
  6780  17D0  00A0               	movwf	___wmul@multiplier^(0+384)
  6781  17D1  300A               	movlw	10
  6782  17D2  00A2               	movwf	___wmul@multiplicand^(0+384)
  6783  17D3  3000               	movlw	0
  6784  17D4  00A3               	movwf	(___wmul@multiplicand^(0+384)+1)
  6785  17D5  3188  2002  3197   	fcall	___wmul
  6786  17D8  0023               	movlb	3	; select bank3
  6787  17D9  082D               	movf	atoi@s^(0+384),w
  6788  17DA  0086               	movwf	6
  6789  17DB  3003               	movlw	3	; select bank6/7
  6790  17DC  0087               	movwf	7
  6791  17DD  0801               	movf	1,w
  6792  17DE  0720               	addwf	?___wmul^(0+384),w
  6793  17DF  00A8               	movwf	??_atoi^(0+384)
  6794  17E0  0821               	movf	(?___wmul+1)^(0+384),w
  6795  17E1  1803               	skipnc
  6796  17E2  0A21               	incf	(?___wmul+1)^(0+384),w
  6797  17E3  00A9               	movwf	(??_atoi^(0+384)+1)
  6798  17E4  0828               	movf	??_atoi^(0+384),w
  6799  17E5  3ED0               	addlw	208
  6800  17E6  00AB               	movwf	atoi@a^(0+384)
  6801  17E7  30FF               	movlw	255
  6802  17E8  3D29               	addwfc	(??_atoi+1)^(0+384),w
  6803  17E9  00AC               	movwf	(atoi@a+1)^(0+384)
  6804  17EA  2FBE               	goto	l5343
  6805  17EB                     l5347:	
  6806  17EB  0023               	movlb	3	; select bank3
  6807  17EC  082A               	movf	atoi@sign^(0+384),w
  6808  17ED  1903               	btfsc	3,2
  6809  17EE  2FFB               	goto	l5353
  6810  17EF  092B               	comf	atoi@a^(0+384),w
  6811  17F0  00A8               	movwf	??_atoi^(0+384)
  6812  17F1  092C               	comf	(atoi@a+1)^(0+384),w
  6813  17F2  00A9               	movwf	(??_atoi^(0+384)+1)
  6814  17F3  0AA8               	incf	??_atoi^(0+384),f
  6815  17F4  1903               	skipnz
  6816  17F5  0AA9               	incf	(??_atoi^(0+384)+1),f
  6817  17F6  0828               	movf	??_atoi^(0+384),w
  6818  17F7  00A6               	movwf	?_atoi^(0+384)
  6819  17F8  0829               	movf	(??_atoi+1)^(0+384),w
  6820  17F9  00A7               	movwf	(?_atoi+1)^(0+384)
  6821  17FA  0008               	return
  6822  17FB                     l5353:	
  6823  17FB  082C               	movf	(atoi@a+1)^(0+384),w
  6824  17FC  00A7               	movwf	(?_atoi+1)^(0+384)
  6825  17FD  082B               	movf	atoi@a^(0+384),w
  6826  17FE  00A6               	movwf	?_atoi^(0+384)
  6827  17FF  0008               	return
  6828  1800                     __end_of_atoi:	
  6829                           
  6830                           	psect	text14
  6831  1F10                     __ptext14:	
  6832 ;; *************** function _isdigit *****************
  6833 ;; Defined at:
  6834 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  c               1    wreg     unsigned char 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;  c               1    1[BANK3 ] unsigned char 
  6839 ;; Return value:  Size  Location     Type
  6840 ;;		None               void
  6841 ;; Registers used:
  6842 ;;		wreg, status,2, status,0
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6849 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6851 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6852 ;;Total ram usage:        2 bytes
  6853 ;; Hardware stack levels used:    1
  6854 ;; Hardware stack levels required when called:   10
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_atoi
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           
  6863                           ;psect for function _isdigit
  6864  1F10                     _isdigit:	
  6865                           
  6866                           ;incstack = 0
  6867                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6868                           ;isdigit@c stored from wreg
  6869  1F10  0023               	movlb	3	; select bank3
  6870  1F11  00A1               	movwf	isdigit@c^(0+384)
  6871  1F12  01A0               	clrf	_isdigit$3442^(0+384)
  6872  1F13  303A               	movlw	58
  6873  1F14  0221               	subwf	isdigit@c^(0+384),w
  6874  1F15  1803               	skipnc
  6875  1F16  2F1D               	goto	l4869
  6876  1F17  3030               	movlw	48
  6877  1F18  0221               	subwf	isdigit@c^(0+384),w
  6878  1F19  1C03               	skipc
  6879  1F1A  2F1D               	goto	l4869
  6880  1F1B  01A0               	clrf	_isdigit$3442^(0+384)
  6881  1F1C  0AA0               	incf	_isdigit$3442^(0+384),f
  6882  1F1D                     l4869:	
  6883  1F1D  0C20               	rrf	_isdigit$3442^(0+384),w
  6884  1F1E  0008               	return
  6885  1F1F                     __end_of_isdigit:	
  6886                           
  6887                           	psect	text15
  6888  0802                     __ptext15:	
  6889 ;; *************** function ___wmul *****************
  6890 ;; Defined at:
  6891 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  multiplier      2    0[BANK3 ] unsigned int 
  6894 ;;  multiplicand    2    2[BANK3 ] unsigned int 
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;  product         2    4[BANK3 ] unsigned int 
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  2    0[BANK3 ] unsigned int 
  6899 ;; Registers used:
  6900 ;;		wreg, status,2, status,0
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6906 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  6907 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6909 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0
  6910 ;;Total ram usage:        6 bytes
  6911 ;; Hardware stack levels used:    1
  6912 ;; Hardware stack levels required when called:   10
  6913 ;; This function calls:
  6914 ;;		Nothing
  6915 ;; This function is called by:
  6916 ;;		_my_uitoa
  6917 ;;		_main_CommunicationHandler
  6918 ;;		_atoi
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           
  6923                           ;psect for function ___wmul
  6924  0802                     ___wmul:	
  6925                           
  6926                           ;incstack = 0
  6927                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6928  0802  0023               	movlb	3	; select bank3
  6929  0803  01A4               	clrf	___wmul@product^(0+384)
  6930  0804  01A5               	clrf	(___wmul@product+1)^(0+384)
  6931  0805                     l4849:	
  6932  0805  1C20               	btfss	___wmul@multiplier^(0+384),0
  6933  0806  280B               	goto	l1221
  6934  0807  0822               	movf	___wmul@multiplicand^(0+384),w
  6935  0808  07A4               	addwf	___wmul@product^(0+384),f
  6936  0809  0823               	movf	(___wmul@multiplicand+1)^(0+384),w
  6937  080A  3DA5               	addwfc	(___wmul@product+1)^(0+384),f
  6938  080B                     l1221:	
  6939  080B  3001               	movlw	1
  6940  080C                     u4285:	
  6941  080C  35A2               	lslf	___wmul@multiplicand^(0+384),f
  6942  080D  0DA3               	rlf	(___wmul@multiplicand+1)^(0+384),f
  6943  080E  0B89               	decfsz	9,f
  6944  080F  280C               	goto	u4285
  6945  0810  3001               	movlw	1
  6946  0811                     u4295:	
  6947  0811  36A1               	lsrf	(___wmul@multiplier+1)^(0+384),f
  6948  0812  0CA0               	rrf	___wmul@multiplier^(0+384),f
  6949  0813  0B89               	decfsz	9,f
  6950  0814  2811               	goto	u4295
  6951  0815  0820               	movf	___wmul@multiplier^(0+384),w
  6952  0816  0421               	iorwf	(___wmul@multiplier+1)^(0+384),w
  6953  0817  1D03               	btfss	3,2
  6954  0818  2805               	goto	l4849
  6955  0819  0825               	movf	(___wmul@product+1)^(0+384),w
  6956  081A  00A1               	movwf	(?___wmul+1)^(0+384)
  6957  081B  0824               	movf	___wmul@product^(0+384),w
  6958  081C  00A0               	movwf	?___wmul^(0+384)
  6959  081D  0008               	return
  6960  081E                     __end_of___wmul:	
  6961                           
  6962                           	psect	text16
  6963  1EE6                     __ptext16:	
  6964 ;; *************** function _TMR1_Reload *****************
  6965 ;; Defined at:
  6966 ;;		line 132 in file "mcc_generated_files/tmr1.c"
  6967 ;; Parameters:    Size  Location     Type
  6968 ;;		None
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;		None
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  1    wreg      void 
  6973 ;; Registers used:
  6974 ;;		wreg, status,2
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6984 ;;Total ram usage:        0 bytes
  6985 ;; Hardware stack levels used:    1
  6986 ;; Hardware stack levels required when called:   10
  6987 ;; This function calls:
  6988 ;;		Nothing
  6989 ;; This function is called by:
  6990 ;;		_main_CommunicationHandler
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           
  6995                           ;psect for function _TMR1_Reload
  6996  1EE6                     _TMR1_Reload:	
  6997                           
  6998                           ;tmr1.c: 135: TMR1H = (timer1ReloadVal >> 8);
  6999                           
  7000                           ;incstack = 0
  7001                           ; Regs used in _TMR1_Reload: [wreg+status,2]
  7002  1EE6  0023               	movlb	3	; select bank3
  7003  1EE7  085D               	movf	(_timer1ReloadVal+1)^(0+384),w	;volatile
  7004  1EE8  0020               	movlb	0	; select bank0
  7005  1EE9  0097               	movwf	23	;volatile
  7006                           
  7007                           ;tmr1.c: 136: TMR1L = timer1ReloadVal;
  7008  1EEA  0023               	movlb	3	; select bank3
  7009  1EEB  085C               	movf	_timer1ReloadVal^(0+384),w	;volatile
  7010  1EEC  0020               	movlb	0	; select bank0
  7011  1EED  0096               	movwf	22	;volatile
  7012  1EEE  0008               	return
  7013  1EEF                     __end_of_TMR1_Reload:	
  7014                           
  7015                           	psect	text17
  7016  0E95                     __ptext17:	
  7017 ;; *************** function _CDCTxService *****************
  7018 ;; Defined at:
  7019 ;;		line 836 in file "usb/core/usb_device_cdc.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;		None
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;  byte_to_send    1   13[BANK3 ] unsigned char 
  7024 ;;  i               1   12[BANK3 ] unsigned char 
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  1    wreg      void 
  7027 ;; Registers used:
  7028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  7034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7035 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  7036 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  7037 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0
  7038 ;;Total ram usage:        3 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; Hardware stack levels required when called:   11
  7041 ;; This function calls:
  7042 ;;		_USBTransferOnePacket
  7043 ;; This function is called by:
  7044 ;;		_main_CommunicationHandler
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           
  7049                           ;psect for function _CDCTxService
  7050  0E95                     _CDCTxService:	
  7051                           
  7052                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  7053                           ;usb_device_cdc.c: 839: uint8_t i;
  7054                           ;usb_device_cdc.c: 841: ;
  7055                           ;usb_device_cdc.c: 843: {};
  7056                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  7057                           
  7058                           ;incstack = 0
  7059                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7060  0E95  0024               	movlb	4	; select bank4
  7061  0E96  0839               	movf	_CDCDataInHandle^(0+512),w
  7062  0E97  043A               	iorwf	(_CDCDataInHandle+1)^(0+512),w
  7063  0E98  1903               	btfsc	3,2
  7064  0E99  2EA0               	goto	l5085
  7065  0E9A  0839               	movf	_CDCDataInHandle^(0+512),w
  7066  0E9B  0086               	movwf	6
  7067  0E9C  083A               	movf	(_CDCDataInHandle+1)^(0+512),w
  7068  0E9D  0087               	movwf	7
  7069  0E9E  1B81               	btfsc	1,7
  7070  0E9F  0008               	return
  7071  0EA0                     l5085:	
  7072                           ;usb_device_cdc.c: 846: {
  7073                           ;usb_device_cdc.c: 847: ;
  7074                           ;usb_device_cdc.c: 848: return;
  7075                           
  7076                           
  7077                           ;usb_device_cdc.c: 849: }
  7078                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  7079  0EA0  3003               	movlw	3
  7080  0EA1  0023               	movlb	3	; select bank3
  7081  0EA2  0665               	xorwf	_cdc_trf_state^(0+384),w
  7082  0EA3  1903               	btfsc	3,2
  7083                           
  7084                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  7085  0EA4  01E5               	clrf	_cdc_trf_state^(0+384)
  7086                           
  7087                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  7088  0EA5  0865               	movf	_cdc_trf_state^(0+384),w
  7089  0EA6  1903               	btfsc	3,2
  7090  0EA7  0008               	return
  7091                           
  7092                           ;usb_device_cdc.c: 866: }
  7093                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  7094                           
  7095                           ;usb_device_cdc.c: 863: {
  7096                           ;usb_device_cdc.c: 864: ;
  7097                           ;usb_device_cdc.c: 865: return;
  7098  0EA8  3002               	movlw	2
  7099  0EA9  0665               	xorwf	_cdc_trf_state^(0+384),w
  7100  0EAA  1D03               	btfss	3,2
  7101  0EAB  2EC4               	goto	l5099
  7102                           
  7103                           ;usb_device_cdc.c: 872: {
  7104                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  7105  0EAC  01A0               	clrf	USBTransferOnePacket@dir^(0+384)
  7106  0EAD  0AA0               	incf	USBTransferOnePacket@dir^(0+384),f
  7107  0EAE  3000               	movlw	0
  7108  0EAF  00A1               	movwf	USBTransferOnePacket@data^(0+384)
  7109  0EB0  3000               	movlw	0
  7110  0EB1  00A2               	movwf	(USBTransferOnePacket@data+1)^(0+384)
  7111  0EB2  01A3               	clrf	USBTransferOnePacket@len^(0+384)
  7112  0EB3  3002               	movlw	2
  7113  0EB4  318B  230E         	fcall	_USBTransferOnePacket
  7114  0EB6  0023               	movlb	3	; select bank3
  7115  0EB7  0821               	movf	(?_USBTransferOnePacket+1)^(0+384),w
  7116  0EB8  0024               	movlb	4	; select bank4
  7117  0EB9  00BA               	movwf	(_CDCDataInHandle+1)^(0+512)
  7118  0EBA  0023               	movlb	3	; select bank3
  7119  0EBB  0820               	movf	?_USBTransferOnePacket^(0+384),w
  7120  0EBC  0024               	movlb	4	; select bank4
  7121  0EBD  00B9               	movwf	_CDCDataInHandle^(0+512)
  7122                           
  7123                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  7124  0EBE  3003               	movlw	3
  7125  0EBF  0023               	movlb	3	; select bank3
  7126  0EC0  00AB               	movwf	??_CDCTxService^(0+384)
  7127  0EC1  082B               	movf	??_CDCTxService^(0+384),w
  7128  0EC2  00E5               	movwf	_cdc_trf_state^(0+384)
  7129                           
  7130                           ;usb_device_cdc.c: 876: }
  7131  0EC3  0008               	return
  7132  0EC4                     l5099:	
  7133                           
  7134                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  7135  0EC4  0365               	decf	_cdc_trf_state^(0+384),w
  7136  0EC5  1D03               	btfss	3,2
  7137  0EC6  0008               	return
  7138                           
  7139                           ;usb_device_cdc.c: 878: {
  7140                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  7141  0EC7  3041               	movlw	65
  7142  0EC8  0264               	subwf	_cdc_tx_len^(0+384),w
  7143  0EC9  1C03               	skipc
  7144  0ECA  2ECD               	goto	l5105
  7145                           
  7146                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  7147  0ECB  3040               	movlw	64
  7148  0ECC  2ECE               	goto	L7
  7149  0ECD                     l5105:	
  7150                           
  7151                           ;usb_device_cdc.c: 884: else
  7152                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  7153  0ECD  0864               	movf	_cdc_tx_len^(0+384),w
  7154  0ECE                     L7:	
  7155  0ECE  00AB               	movwf	??_CDCTxService^(0+384)
  7156  0ECF  082B               	movf	??_CDCTxService^(0+384),w
  7157  0ED0  00AD               	movwf	CDCTxService@byte_to_send^(0+384)
  7158                           
  7159                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  7160  0ED1  032D               	decf	CDCTxService@byte_to_send^(0+384),w
  7161  0ED2  3AFF               	xorlw	255
  7162  0ED3  0764               	addwf	_cdc_tx_len^(0+384),w
  7163  0ED4  00AB               	movwf	??_CDCTxService^(0+384)
  7164  0ED5  082B               	movf	??_CDCTxService^(0+384),w
  7165  0ED6  00E4               	movwf	_cdc_tx_len^(0+384)
  7166                           
  7167                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  7168  0ED7  30A0               	movlw	160
  7169  0ED8  00AB               	movwf	??_CDCTxService^(0+384)
  7170  0ED9  082B               	movf	??_CDCTxService^(0+384),w
  7171  0EDA  0024               	movlb	4	; select bank4
  7172  0EDB  00BD               	movwf	_pCDCDst^(0+512)
  7173                           
  7174                           ;usb_device_cdc.c: 894: i = byte_to_send;
  7175  0EDC  0023               	movlb	3	; select bank3
  7176  0EDD  082D               	movf	CDCTxService@byte_to_send^(0+384),w
  7177  0EDE  00AB               	movwf	??_CDCTxService^(0+384)
  7178  0EDF  082B               	movf	??_CDCTxService^(0+384),w
  7179  0EE0  00AC               	movwf	CDCTxService@i^(0+384)
  7180                           
  7181                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  7182  0EE1  0024               	movlb	4	; select bank4
  7183  0EE2  0851               	movf	_cdc_mem_type^(0+512),w
  7184  0EE3  1903               	btfsc	3,2
  7185  0EE4  2F01               	goto	l5125
  7186  0EE5  2F21               	goto	l5135
  7187  0EE6                     l5117:	
  7188                           ;usb_device_cdc.c: 896: {
  7189                           ;usb_device_cdc.c: 897: while(i)
  7190                           
  7191                           
  7192                           ;usb_device_cdc.c: 898: {
  7193                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  7194  0EE6  0024               	movlb	4	; select bank4
  7195  0EE7  083F               	movf	_pCDCSrc^(0+512),w
  7196  0EE8  0086               	movwf	6
  7197  0EE9  0840               	movf	(_pCDCSrc+1)^(0+512),w
  7198  0EEA  0087               	movwf	7
  7199  0EEB  0801               	movf	1,w
  7200  0EEC  0023               	movlb	3	; select bank3
  7201  0EED  00AB               	movwf	??_CDCTxService^(0+384)
  7202  0EEE  0024               	movlb	4	; select bank4
  7203  0EEF  083D               	movf	_pCDCDst^(0+512),w
  7204  0EF0  0086               	movwf	6
  7205  0EF1  0187               	clrf	7
  7206  0EF2  0023               	movlb	3	; select bank3
  7207  0EF3  082B               	movf	??_CDCTxService^(0+384),w
  7208  0EF4  0081               	movwf	1
  7209                           
  7210                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  7211  0EF5  3001               	movlw	1
  7212  0EF6  00AB               	movwf	??_CDCTxService^(0+384)
  7213  0EF7  082B               	movf	??_CDCTxService^(0+384),w
  7214  0EF8  0024               	movlb	4	; select bank4
  7215  0EF9  07BD               	addwf	_pCDCDst^(0+512),f
  7216                           
  7217                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  7218  0EFA  3001               	movlw	1
  7219  0EFB  07BF               	addwf	_pCDCSrc^(0+512),f
  7220  0EFC  3000               	movlw	0
  7221  0EFD  3DC0               	addwfc	(_pCDCSrc+1)^(0+512),f
  7222                           
  7223                           ;usb_device_cdc.c: 902: i--;
  7224  0EFE  3001               	movlw	1
  7225  0EFF  0023               	movlb	3	; select bank3
  7226  0F00  02AC               	subwf	CDCTxService@i^(0+384),f
  7227  0F01                     l5125:	
  7228  0F01  0023               	movlb	3	; select bank3
  7229  0F02  082C               	movf	CDCTxService@i^(0+384),w
  7230  0F03  1903               	btfsc	3,2
  7231  0F04  2F25               	goto	l5137
  7232  0F05  2EE6               	goto	l5117
  7233  0F06                     l5127:	
  7234                           ;usb_device_cdc.c: 905: else
  7235                           ;usb_device_cdc.c: 906: {
  7236                           ;usb_device_cdc.c: 907: while(i)
  7237                           
  7238                           ;usb_device_cdc.c: 903: }
  7239                           ;usb_device_cdc.c: 904: }
  7240                           
  7241                           
  7242                           ;usb_device_cdc.c: 908: {
  7243                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  7244  0F06  0024               	movlb	4	; select bank4
  7245  0F07  083F               	movf	_pCDCSrc^(0+512),w
  7246  0F08  0086               	movwf	6
  7247  0F09  0840               	movf	(_pCDCSrc+1)^(0+512),w
  7248  0F0A  0087               	movwf	7
  7249  0F0B  0801               	movf	1,w
  7250  0F0C  0023               	movlb	3	; select bank3
  7251  0F0D  00AB               	movwf	??_CDCTxService^(0+384)
  7252  0F0E  0024               	movlb	4	; select bank4
  7253  0F0F  083D               	movf	_pCDCDst^(0+512),w
  7254  0F10  0086               	movwf	6
  7255  0F11  0187               	clrf	7
  7256  0F12  0023               	movlb	3	; select bank3
  7257  0F13  082B               	movf	??_CDCTxService^(0+384),w
  7258  0F14  0081               	movwf	1
  7259                           
  7260                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  7261  0F15  3001               	movlw	1
  7262  0F16  00AB               	movwf	??_CDCTxService^(0+384)
  7263  0F17  082B               	movf	??_CDCTxService^(0+384),w
  7264  0F18  0024               	movlb	4	; select bank4
  7265  0F19  07BD               	addwf	_pCDCDst^(0+512),f
  7266                           
  7267                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  7268  0F1A  3001               	movlw	1
  7269  0F1B  07BF               	addwf	_pCDCSrc^(0+512),f
  7270  0F1C  3000               	movlw	0
  7271  0F1D  3DC0               	addwfc	(_pCDCSrc+1)^(0+512),f
  7272                           
  7273                           ;usb_device_cdc.c: 912: i--;
  7274  0F1E  3001               	movlw	1
  7275  0F1F  0023               	movlb	3	; select bank3
  7276  0F20  02AC               	subwf	CDCTxService@i^(0+384),f
  7277  0F21                     l5135:	
  7278  0F21  0023               	movlb	3	; select bank3
  7279  0F22  082C               	movf	CDCTxService@i^(0+384),w
  7280  0F23  1D03               	btfss	3,2
  7281  0F24  2F06               	goto	l5127
  7282  0F25                     l5137:	
  7283                           
  7284                           ;usb_device_cdc.c: 913: }
  7285                           ;usb_device_cdc.c: 914: }
  7286                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  7287  0F25  0864               	movf	_cdc_tx_len^(0+384),w
  7288  0F26  1D03               	btfss	3,2
  7289  0F27  2F32               	goto	l5145
  7290                           
  7291                           ;usb_device_cdc.c: 921: {
  7292                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  7293  0F28  3040               	movlw	64
  7294  0F29  062D               	xorwf	CDCTxService@byte_to_send^(0+384),w
  7295  0F2A  1D03               	btfss	3,2
  7296  0F2B  2F2E               	goto	l5143
  7297                           
  7298                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  7299  0F2C  3002               	movlw	2
  7300  0F2D  2F2F               	goto	L8
  7301  0F2E                     l5143:	
  7302                           
  7303                           ;usb_device_cdc.c: 924: else
  7304                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  7305  0F2E  3003               	movlw	3
  7306  0F2F                     L8:	
  7307  0F2F  00AB               	movwf	??_CDCTxService^(0+384)
  7308  0F30  082B               	movf	??_CDCTxService^(0+384),w
  7309  0F31  00E5               	movwf	_cdc_trf_state^(0+384)
  7310  0F32                     l5145:	
  7311                           
  7312                           ;usb_device_cdc.c: 926: }
  7313                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  7314  0F32  01A0               	clrf	USBTransferOnePacket@dir^(0+384)
  7315  0F33  0AA0               	incf	USBTransferOnePacket@dir^(0+384),f
  7316  0F34  30A0               	movlw	160
  7317  0F35  00A1               	movwf	USBTransferOnePacket@data^(0+384)
  7318  0F36  3000               	movlw	0
  7319  0F37  00A2               	movwf	(USBTransferOnePacket@data+1)^(0+384)
  7320  0F38  082D               	movf	CDCTxService@byte_to_send^(0+384),w
  7321  0F39  00AB               	movwf	??_CDCTxService^(0+384)
  7322  0F3A  082B               	movf	??_CDCTxService^(0+384),w
  7323  0F3B  00A3               	movwf	USBTransferOnePacket@len^(0+384)
  7324  0F3C  3002               	movlw	2
  7325  0F3D  318B  230E         	fcall	_USBTransferOnePacket
  7326  0F3F  0023               	movlb	3	; select bank3
  7327  0F40  0821               	movf	(?_USBTransferOnePacket+1)^(0+384),w
  7328  0F41  0024               	movlb	4	; select bank4
  7329  0F42  00BA               	movwf	(_CDCDataInHandle+1)^(0+512)
  7330  0F43  0023               	movlb	3	; select bank3
  7331  0F44  0820               	movf	?_USBTransferOnePacket^(0+384),w
  7332  0F45  0024               	movlb	4	; select bank4
  7333  0F46  00B9               	movwf	_CDCDataInHandle^(0+512)
  7334  0F47  0008               	return
  7335  0F48                     __end_of_CDCTxService:	
  7336                           
  7337                           	psect	text18
  7338  0B0E                     __ptext18:	
  7339 ;; *************** function _USBTransferOnePacket *****************
  7340 ;; Defined at:
  7341 ;;		line 995 in file "usb/core/usb_device.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  ep              1    wreg     unsigned char 
  7344 ;;  dir             1    0[BANK3 ] unsigned char 
  7345 ;;  data            2    1[BANK3 ] PTR unsigned char 
  7346 ;;		 -> cdc_data_tx2(64), cdc_data_rx2(64), cdc_data_tx(64), cdc_data_rx(64), 
  7347 ;;		 -> NULL(0), 
  7348 ;;  len             1    3[BANK3 ] unsigned char 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;  ep              1    8[BANK3 ] unsigned char 
  7351 ;;  handle          2    9[BANK3 ] PTR volatile struct __BD
  7352 ;;		 -> RAM(4096), NULL(0), BDT(80), 
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  2    0[BANK3 ] PTR void 
  7355 ;; Registers used:
  7356 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  7362 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  7363 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0
  7364 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  7365 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0
  7366 ;;Total ram usage:       11 bytes
  7367 ;; Hardware stack levels used:    1
  7368 ;; Hardware stack levels required when called:   10
  7369 ;; This function calls:
  7370 ;;		Nothing
  7371 ;; This function is called by:
  7372 ;;		_getsUSBUSART
  7373 ;;		_CDCTxService
  7374 ;;		_USBCDCEventHandler
  7375 ;;		_USBCDCEventHandler2
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379                           
  7380                           ;psect for function _USBTransferOnePacket
  7381  0B0E                     _USBTransferOnePacket:	
  7382                           
  7383                           ;incstack = 0
  7384                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  7385                           ;USBTransferOnePacket@ep stored from wreg
  7386  0B0E  0023               	movlb	3	; select bank3
  7387  0B0F  00A8               	movwf	USBTransferOnePacket@ep^(0+384)
  7388                           
  7389                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  7390                           ;usb_device.c: 1000: if(dir != 0)
  7391  0B10  0820               	movf	USBTransferOnePacket@dir^(0+384),w
  7392  0B11  1903               	btfsc	3,2
  7393  0B12  2B1C               	goto	l4707
  7394                           
  7395                           ;usb_device.c: 1001: {
  7396                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  7397  0B13  3528               	lslf	USBTransferOnePacket@ep^(0+384),w
  7398  0B14  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7399  0B15  0086               	movwf	6
  7400  0B16  3001               	movlw	1	; select bank3/4
  7401  0B17  0087               	movwf	7
  7402  0B18  3F40               	moviw [0]fsr1
  7403  0B19  00A9               	movwf	USBTransferOnePacket@handle^(0+384)
  7404  0B1A  3F41               	moviw [1]fsr1
  7405  0B1B  2B24               	goto	L9
  7406  0B1C                     l4707:	
  7407                           ;usb_device.c: 1004: }
  7408                           
  7409                           
  7410                           ;usb_device.c: 1005: else
  7411                           ;usb_device.c: 1006: {
  7412                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  7413  0B1C  3528               	lslf	USBTransferOnePacket@ep^(0+384),w
  7414  0B1D  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  7415  0B1E  0086               	movwf	6
  7416  0B1F  3002               	movlw	2	; select bank5/6
  7417  0B20  0087               	movwf	7
  7418  0B21  3F40               	moviw [0]fsr1
  7419  0B22  00A9               	movwf	USBTransferOnePacket@handle^(0+384)
  7420  0B23  3F41               	moviw [1]fsr1
  7421  0B24                     L9:	
  7422  0B24  00AA               	movwf	(USBTransferOnePacket@handle+1)^(0+384)
  7423                           
  7424                           ;usb_device.c: 1009: }
  7425                           ;usb_device.c: 1013: if(handle == 0)
  7426  0B25  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7427  0B26  042A               	iorwf	(USBTransferOnePacket@handle+1)^(0+384),w
  7428  0B27  1D03               	btfss	3,2
  7429  0B28  2B2C               	goto	l4715
  7430                           
  7431                           ;usb_device.c: 1014: {
  7432                           ;usb_device.c: 1015: return 0;
  7433  0B29  01A0               	clrf	?_USBTransferOnePacket^(0+384)
  7434  0B2A  01A1               	clrf	(?_USBTransferOnePacket+1)^(0+384)
  7435  0B2B  0008               	return
  7436  0B2C                     l4715:	
  7437                           
  7438                           ;usb_device.c: 1016: }
  7439                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  7440  0B2C  30FF               	movlw	255
  7441  0B2D  0521               	andwf	USBTransferOnePacket@data^(0+384),w
  7442  0B2E  00A4               	movwf	??_USBTransferOnePacket^(0+384)
  7443  0B2F  307F               	movlw	127
  7444  0B30  0522               	andwf	(USBTransferOnePacket@data+1)^(0+384),w
  7445  0B31  00A5               	movwf	(??_USBTransferOnePacket+1)^(0+384)
  7446  0B32  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7447  0B33  0086               	movwf	6
  7448  0B34  082A               	movf	(USBTransferOnePacket@handle+1)^(0+384),w
  7449  0B35  0087               	movwf	7
  7450  0B36  3142               	addfsr 1,2
  7451  0B37  0824               	movf	??_USBTransferOnePacket^(0+384),w
  7452  0B38  3FC0               	movwi [0]fsr1
  7453  0B39  0825               	movf	(??_USBTransferOnePacket^(0+384)+1),w
  7454  0B3A  3FC1               	movwi [1]fsr1
  7455                           
  7456                           ;usb_device.c: 1030: handle->CNT = len;
  7457  0B3B  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7458  0B3C  3E01               	addlw	1
  7459  0B3D  00A4               	movwf	??_USBTransferOnePacket^(0+384)
  7460  0B3E  3000               	movlw	0
  7461  0B3F  3D2A               	addwfc	(USBTransferOnePacket@handle+1)^(0+384),w
  7462  0B40  00A5               	movwf	(??_USBTransferOnePacket+1)^(0+384)
  7463  0B41  0824               	movf	??_USBTransferOnePacket^(0+384),w
  7464  0B42  0086               	movwf	6
  7465  0B43  0825               	movf	(??_USBTransferOnePacket+1)^(0+384),w
  7466  0B44  0087               	movwf	7
  7467  0B45  0823               	movf	USBTransferOnePacket@len^(0+384),w
  7468  0B46  0081               	movwf	1
  7469                           
  7470                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  7471  0B47  3040               	movlw	64
  7472  0B48  00A4               	movwf	??_USBTransferOnePacket^(0+384)
  7473  0B49  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7474  0B4A  0086               	movwf	6
  7475  0B4B  082A               	movf	(USBTransferOnePacket@handle+1)^(0+384),w
  7476  0B4C  0087               	movwf	7
  7477  0B4D  0824               	movf	??_USBTransferOnePacket^(0+384),w
  7478  0B4E  0581               	andwf	1,f
  7479                           
  7480                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  7481  0B4F  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7482  0B50  0086               	movwf	6
  7483  0B51  082A               	movf	(USBTransferOnePacket@handle+1)^(0+384),w
  7484  0B52  0087               	movwf	7
  7485  0B53  1581               	bsf	1,3
  7486                           
  7487                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  7488  0B54  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7489  0B55  0086               	movwf	6
  7490  0B56  082A               	movf	(USBTransferOnePacket@handle+1)^(0+384),w
  7491  0B57  0087               	movwf	7
  7492  0B58  1781               	bsf	1,7
  7493                           
  7494                           ;usb_device.c: 1036: if(dir != 0)
  7495  0B59  0820               	movf	USBTransferOnePacket@dir^(0+384),w
  7496  0B5A  1903               	btfsc	3,2
  7497  0B5B  2B75               	goto	l4725
  7498                           
  7499                           ;usb_device.c: 1037: {
  7500                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  7501  0B5C  3528               	lslf	USBTransferOnePacket@ep^(0+384),w
  7502  0B5D  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7503  0B5E  0086               	movwf	6
  7504  0B5F  3001               	movlw	1	; select bank3/4
  7505  0B60  0087               	movwf	7
  7506  0B61  3F40               	moviw [0]fsr1
  7507  0B62  00A4               	movwf	??_USBTransferOnePacket^(0+384)
  7508  0B63  3F41               	moviw [1]fsr1
  7509  0B64  00A5               	movwf	(??_USBTransferOnePacket^(0+384)+1)
  7510  0B65  3004               	movlw	4
  7511  0B66  0624               	xorwf	??_USBTransferOnePacket^(0+384),w
  7512  0B67  00A6               	movwf	(??_USBTransferOnePacket+2)^(0+384)
  7513  0B68  3000               	movlw	0
  7514  0B69  0625               	xorwf	(??_USBTransferOnePacket+1)^(0+384),w
  7515  0B6A  00A7               	movwf	(??_USBTransferOnePacket+3)^(0+384)
  7516  0B6B  3528               	lslf	USBTransferOnePacket@ep^(0+384),w
  7517  0B6C  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7518  0B6D  0086               	movwf	6
  7519  0B6E  3001               	movlw	1	; select bank3/4
  7520  0B6F  0087               	movwf	7
  7521  0B70  0826               	movf	(??_USBTransferOnePacket+2)^(0+384),w
  7522  0B71  3FC0               	movwi [0]fsr1
  7523  0B72  0827               	movf	(??_USBTransferOnePacket+3)^(0+384),w
  7524  0B73  3FC1               	movwi [1]fsr1
  7525                           
  7526                           ;usb_device.c: 1040: }
  7527  0B74  2B8D               	goto	l4727
  7528  0B75                     l4725:	
  7529                           
  7530                           ;usb_device.c: 1041: else
  7531                           ;usb_device.c: 1042: {
  7532                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  7533  0B75  3528               	lslf	USBTransferOnePacket@ep^(0+384),w
  7534  0B76  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  7535  0B77  0086               	movwf	6
  7536  0B78  3002               	movlw	2	; select bank5/6
  7537  0B79  0087               	movwf	7
  7538  0B7A  3F40               	moviw [0]fsr1
  7539  0B7B  00A4               	movwf	??_USBTransferOnePacket^(0+384)
  7540  0B7C  3F41               	moviw [1]fsr1
  7541  0B7D  00A5               	movwf	(??_USBTransferOnePacket^(0+384)+1)
  7542  0B7E  3004               	movlw	4
  7543  0B7F  0624               	xorwf	??_USBTransferOnePacket^(0+384),w
  7544  0B80  00A6               	movwf	(??_USBTransferOnePacket+2)^(0+384)
  7545  0B81  3000               	movlw	0
  7546  0B82  0625               	xorwf	(??_USBTransferOnePacket+1)^(0+384),w
  7547  0B83  00A7               	movwf	(??_USBTransferOnePacket+3)^(0+384)
  7548  0B84  3528               	lslf	USBTransferOnePacket@ep^(0+384),w
  7549  0B85  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  7550  0B86  0086               	movwf	6
  7551  0B87  3002               	movlw	2	; select bank5/6
  7552  0B88  0087               	movwf	7
  7553  0B89  0826               	movf	(??_USBTransferOnePacket+2)^(0+384),w
  7554  0B8A  3FC0               	movwi [0]fsr1
  7555  0B8B  0827               	movf	(??_USBTransferOnePacket+3)^(0+384),w
  7556  0B8C  3FC1               	movwi [1]fsr1
  7557  0B8D                     l4727:	
  7558                           
  7559                           ;usb_device.c: 1045: }
  7560                           ;usb_device.c: 1046: return (void*)handle;
  7561  0B8D  082A               	movf	(USBTransferOnePacket@handle+1)^(0+384),w
  7562  0B8E  00A1               	movwf	(?_USBTransferOnePacket+1)^(0+384)
  7563  0B8F  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7564  0B90  00A0               	movwf	?_USBTransferOnePacket^(0+384)
  7565  0B91  0008               	return
  7566  0B92                     __end_of_USBTransferOnePacket:	
  7567                           
  7568                           	psect	text19
  7569  070E                     __ptext19:	
  7570 ;; *************** function _USBDeviceInit *****************
  7571 ;; Defined at:
  7572 ;;		line 277 in file "usb/core/usb_device.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;		None
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;  p               2    1[BANK3 ] PTR unsigned char 
  7577 ;;		 -> UEP1(1), 
  7578 ;;  i               1    3[BANK3 ] unsigned char 
  7579 ;;  i               1    4[BANK3 ] unsigned char 
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  1    wreg      void 
  7582 ;; Registers used:
  7583 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  7589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7590 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  7591 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  7592 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0
  7593 ;;Total ram usage:        5 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; Hardware stack levels required when called:   10
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_main
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           
  7604                           ;psect for function _USBDeviceInit
  7605  070E                     _USBDeviceInit:	
  7606                           
  7607                           ;usb_device.c: 279: uint8_t i;
  7608                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  7609                           
  7610                           ;incstack = 0
  7611                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  7612  070E  0021               	movlb	1	; select bank1
  7613  070F  1112               	bcf	18,2	;volatile
  7614                           
  7615                           ;usb_device.c: 285: ;
  7616                           ;usb_device.c: 288: {UEIR = 0;};
  7617  0710  003D               	movlb	29	; select bank29
  7618  0711  0193               	clrf	19	;volatile
  7619                           
  7620                           ;usb_device.c: 291: {UIR = 0;};
  7621  0712  0190               	clrf	16	;volatile
  7622                           
  7623                           ;usb_device.c: 294: UEP0 = 0;
  7624  0713  0198               	clrf	24	;volatile
  7625                           
  7626                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<4;i++) *p++ = 0
      +                          ; };
  7627  0714  300E               	movlw	14
  7628  0715  0023               	movlb	3	; select bank3
  7629  0716  00A2               	movwf	(USBDeviceInit@p+1)^(0+384)
  7630  0717  3099               	movlw	153
  7631  0718  00A1               	movwf	USBDeviceInit@p^(0+384)
  7632  0719  01A3               	clrf	USBDeviceInit@i_1118^(0+384)
  7633  071A  3004               	movlw	4
  7634  071B  0223               	subwf	USBDeviceInit@i_1118^(0+384),w
  7635  071C  1803               	btfsc	3,0
  7636  071D  2F2F               	goto	l5477
  7637  071E                     l5469:	
  7638  071E  0821               	movf	USBDeviceInit@p^(0+384),w
  7639  071F  0086               	movwf	6
  7640  0720  0822               	movf	(USBDeviceInit@p+1)^(0+384),w
  7641  0721  0087               	movwf	7
  7642  0722  0181               	clrf	1
  7643  0723  3001               	movlw	1
  7644  0724  07A1               	addwf	USBDeviceInit@p^(0+384),f
  7645  0725  3000               	movlw	0
  7646  0726  3DA2               	addwfc	(USBDeviceInit@p+1)^(0+384),f
  7647  0727  3001               	movlw	1
  7648  0728  00A0               	movwf	??_USBDeviceInit^(0+384)
  7649  0729  0820               	movf	??_USBDeviceInit^(0+384),w
  7650  072A  07A3               	addwf	USBDeviceInit@i_1118^(0+384),f
  7651  072B  3004               	movlw	4
  7652  072C  0223               	subwf	USBDeviceInit@i_1118^(0+384),w
  7653  072D  1C03               	skipc
  7654  072E  2F1E               	goto	l5469
  7655  072F                     l5477:	
  7656                           
  7657                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7658  072F  3016               	movlw	22
  7659  0730  003D               	movlb	29	; select bank29
  7660  0731  0091               	movwf	17	;volatile
  7661  0732  309F               	movlw	159
  7662  0733  0097               	movwf	23	;volatile
  7663  0734  307B               	movlw	123
  7664  0735  0092               	movwf	18	;volatile
  7665                           
  7666                           ;usb_device.c: 301: ;
  7667                           ;usb_device.c: 304: ;
  7668                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  7669  0736  0023               	movlb	3	; select bank3
  7670  0737  01A4               	clrf	USBDeviceInit@i^(0+384)
  7671  0738  3014               	movlw	20
  7672  0739  0224               	subwf	USBDeviceInit@i^(0+384),w
  7673  073A  1803               	btfsc	3,0
  7674  073B  2F55               	goto	l378
  7675  073C                     l5485:	
  7676                           
  7677                           ;usb_device.c: 308: {
  7678                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  7679  073C  0824               	movf	USBDeviceInit@i^(0+384),w
  7680  073D  00A0               	movwf	??_USBDeviceInit^(0+384)
  7681  073E  3001               	movlw	1
  7682  073F                     u5155:	
  7683  073F  35A0               	lslf	??_USBDeviceInit^(0+384),f
  7684  0740  3EFF               	addlw	-1
  7685  0741  1D03               	skipz
  7686  0742  2F3F               	goto	u5155
  7687  0743  3520               	lslf	??_USBDeviceInit^(0+384),w
  7688  0744  3E20               	addlw	32
  7689  0745  0086               	movwf	6
  7690  0746  0187               	clrf	7
  7691  0747  3000               	movlw	0
  7692  0748  3FC0               	movwi [0]fsr1
  7693  0749  3000               	movlw	0
  7694  074A  3FC1               	movwi [1]fsr1
  7695  074B  3FC2               	movwi [2]fsr1
  7696  074C  3FC3               	movwi [3]fsr1
  7697  074D  3001               	movlw	1
  7698  074E  00A0               	movwf	??_USBDeviceInit^(0+384)
  7699  074F  0820               	movf	??_USBDeviceInit^(0+384),w
  7700  0750  07A4               	addwf	USBDeviceInit@i^(0+384),f
  7701  0751  3014               	movlw	20
  7702  0752  0224               	subwf	USBDeviceInit@i^(0+384),w
  7703  0753  1C03               	skipc
  7704  0754  2F3C               	goto	l5485
  7705  0755                     l378:	
  7706                           
  7707                           ;usb_device.c: 310: }
  7708                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  7709  0755  003D               	movlb	29	; select bank29
  7710  0756  170E               	bsf	14,6	;volatile
  7711                           
  7712                           ;usb_device.c: 316: UADDR = 0x00;
  7713  0757  0196               	clrf	22	;volatile
  7714                           
  7715                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  7716  0758  120E               	bcf	14,4	;volatile
  7717                           
  7718                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  7719  0759  130E               	bcf	14,6	;volatile
  7720  075A                     l5497:	
  7721                           ;usb_device.c: 325: do
  7722                           
  7723                           
  7724                           ;usb_device.c: 326: {
  7725                           ;usb_device.c: 327: (UIR &= 0xF7);
  7726  075A  30F7               	movlw	247
  7727  075B  0023               	movlb	3	; select bank3
  7728  075C  00A0               	movwf	??_USBDeviceInit^(0+384)
  7729  075D  0820               	movf	??_USBDeviceInit^(0+384),w
  7730  075E  003D               	movlb	29	; select bank29
  7731  075F  0590               	andwf	16,f	;volatile
  7732                           
  7733                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  7734  0760  0023               	movlb	3	; select bank3
  7735  0761  01D7               	clrf	(_inPipes^(0+384)+2)
  7736                           
  7737                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  7738  0762  0024               	movlb	4	; select bank4
  7739  0763  01A2               	clrf	(_outPipes^(0+512)+2)
  7740                           
  7741                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  7742  0764  01A3               	clrf	(_outPipes^(0+512)+3)
  7743  0765  01A4               	clrf	((_outPipes+1)^(0+512)+3)
  7744                           
  7745                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  7746  0766  003D               	movlb	29	; select bank29
  7747  0767  1990               	btfsc	16,3	;volatile
  7748  0768  2F5A               	goto	l5497
  7749                           
  7750                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  7751  0769  3001               	movlw	1
  7752  076A  0023               	movlb	3	; select bank3
  7753  076B  00A0               	movwf	??_USBDeviceInit^(0+384)
  7754  076C  0820               	movf	??_USBDeviceInit^(0+384),w
  7755  076D  0024               	movlb	4	; select bank4
  7756  076E  00D6               	movwf	_USBStatusStageEnabledFlag1^(0+512)	;volatile
  7757                           
  7758                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  7759  076F  3001               	movlw	1
  7760  0770  0023               	movlb	3	; select bank3
  7761  0771  00A0               	movwf	??_USBDeviceInit^(0+384)
  7762  0772  0820               	movf	??_USBDeviceInit^(0+384),w
  7763  0773  0024               	movlb	4	; select bank4
  7764  0774  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+512)	;volatile
  7765                           
  7766                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  7767  0775  01D4               	clrf	_USBDeferINDataStagePackets^(0+512)	;volatile
  7768                           
  7769                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  7770  0776  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+512)	;volatile
  7771                           
  7772                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  7773  0777  01DA               	clrf	_USBBusIsSuspended^(0+512)
  7774                           
  7775                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(4+1u); i++)
  7776  0778  0023               	movlb	3	; select bank3
  7777  0779  01A4               	clrf	USBDeviceInit@i^(0+384)
  7778  077A  3005               	movlw	5
  7779  077B  0224               	subwf	USBDeviceInit@i^(0+384),w
  7780  077C  1803               	btfsc	3,0
  7781  077D  2FA2               	goto	l5525
  7782  077E                     l5519:	
  7783                           
  7784                           ;usb_device.c: 346: {
  7785                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  7786  077E  3524               	lslf	USBDeviceInit@i^(0+384),w
  7787  077F  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7788  0780  0086               	movwf	6
  7789  0781  3001               	movlw	1	; select bank3/4
  7790  0782  0087               	movwf	7
  7791  0783  3000               	movlw	0
  7792  0784  3FC0               	movwi [0]fsr1
  7793  0785  3FC1               	movwi [1]fsr1
  7794                           
  7795                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  7796  0786  3524               	lslf	USBDeviceInit@i^(0+384),w
  7797  0787  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  7798  0788  0086               	movwf	6
  7799  0789  3002               	movlw	2	; select bank5/6
  7800  078A  0087               	movwf	7
  7801  078B  3000               	movlw	0
  7802  078C  3FC0               	movwi [0]fsr1
  7803  078D  3FC1               	movwi [1]fsr1
  7804                           
  7805                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  7806  078E  0824               	movf	USBDeviceInit@i^(0+384),w
  7807  078F  3EB9               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
  7808  0790  0086               	movwf	6
  7809  0791  3002               	movlw	2	; select bank5/6
  7810  0792  0087               	movwf	7
  7811  0793  0181               	clrf	1
  7812                           
  7813                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  7814  0794  0824               	movf	USBDeviceInit@i^(0+384),w
  7815  0795  3EB4               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
  7816  0796  0086               	movwf	6
  7817  0797  3002               	movlw	2	; select bank5/6
  7818  0798  0087               	movwf	7
  7819  0799  0181               	clrf	1
  7820  079A  3001               	movlw	1
  7821  079B  00A0               	movwf	??_USBDeviceInit^(0+384)
  7822  079C  0820               	movf	??_USBDeviceInit^(0+384),w
  7823  079D  07A4               	addwf	USBDeviceInit@i^(0+384),f
  7824  079E  3005               	movlw	5
  7825  079F  0224               	subwf	USBDeviceInit@i^(0+384),w
  7826  07A0  1C03               	skipc
  7827  07A1  2F7E               	goto	l5519
  7828  07A2                     l5525:	
  7829                           
  7830                           ;usb_device.c: 351: }
  7831                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7832  07A2  3028               	movlw	40
  7833  07A3  00CB               	movwf	_pBDTEntryIn^(0+384)
  7834  07A4  3000               	movlw	0
  7835  07A5  00CC               	movwf	(_pBDTEntryIn+1)^(0+384)
  7836                           
  7837                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  7838  07A6  3016               	movlw	22
  7839  07A7  003D               	movlb	29	; select bank29
  7840  07A8  0098               	movwf	24	;volatile
  7841                           
  7842                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7843  07A9  3000               	movlw	0
  7844  07AA  0020               	movlb	0	; select bank0
  7845  07AB  00A3               	movwf	35	;volatile
  7846  07AC  30A0               	movlw	160
  7847  07AD  00A2               	movwf	34	;volatile
  7848                           
  7849                           ;usb_device.c: 359: BDT[0].CNT = 8;
  7850  07AE  3008               	movlw	8
  7851  07AF  00A1               	movwf	33	;volatile
  7852                           
  7853                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  7854  07B0  3004               	movlw	4
  7855  07B1  0023               	movlb	3	; select bank3
  7856  07B2  00A0               	movwf	??_USBDeviceInit^(0+384)
  7857  07B3  0820               	movf	??_USBDeviceInit^(0+384),w
  7858  07B4  0020               	movlb	0	; select bank0
  7859  07B5  00A0               	movwf	32	;volatile
  7860                           
  7861                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  7862  07B6  17A0               	bsf	32,7	;volatile
  7863                           
  7864                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  7865  07B7  0023               	movlb	3	; select bank3
  7866  07B8  01EF               	clrf	_USBActiveConfiguration^(0+384)
  7867                           
  7868                           ;usb_device.c: 366: USB1msTickCount = 0;
  7869  07B9  3000               	movlw	0
  7870  07BA  0025               	movlb	5	; select bank5
  7871  07BB  00C9               	movwf	(_USB1msTickCount+3)^(0+640)
  7872  07BC  3000               	movlw	0
  7873  07BD  00C8               	movwf	(_USB1msTickCount+2)^(0+640)
  7874  07BE  3000               	movlw	0
  7875  07BF  00C7               	movwf	(_USB1msTickCount+1)^(0+640)
  7876  07C0  3000               	movlw	0
  7877  07C1  00C6               	movwf	_USB1msTickCount^(0+640)
  7878                           
  7879                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  7880  07C2  0024               	movlb	4	; select bank4
  7881  07C3  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+512)
  7882                           
  7883                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  7884  07C4  0023               	movlb	3	; select bank3
  7885  07C5  01EB               	clrf	_USBDeviceState^(0+384)
  7886  07C6  0008               	return
  7887  07C7                     __end_of_USBDeviceInit:	
  7888                           
  7889                           	psect	text20
  7890  109B                     __ptext20:	
  7891 ;; *************** function _SYSTEM_Initialize *****************
  7892 ;; Defined at:
  7893 ;;		line 72 in file "mcc_generated_files/mcc.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;		None
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;		None
  7898 ;; Return value:  Size  Location     Type
  7899 ;;                  1    wreg      void 
  7900 ;; Registers used:
  7901 ;;		wreg, status,2, status,0, pclath, cstack
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  7907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7911 ;;Total ram usage:        0 bytes
  7912 ;; Hardware stack levels used:    1
  7913 ;; Hardware stack levels required when called:   12
  7914 ;; This function calls:
  7915 ;;		_ADC_Initialize
  7916 ;;		_EUSART_Initialize
  7917 ;;		_FVR_Initialize
  7918 ;;		_OSCILLATOR_Initialize
  7919 ;;		_PIN_MANAGER_Initialize
  7920 ;;		_PWM2_Initialize
  7921 ;;		_TMR1_Initialize
  7922 ;;		_TMR2_Initialize
  7923 ;;		_WDT_Initialize
  7924 ;; This function is called by:
  7925 ;;		_main
  7926 ;; This function uses a non-reentrant model
  7927 ;;
  7928                           
  7929                           
  7930                           ;psect for function _SYSTEM_Initialize
  7931  109B                     _SYSTEM_Initialize:	
  7932                           
  7933                           ;mcc.c: 75: PIN_MANAGER_Initialize();
  7934                           
  7935                           ;incstack = 0
  7936                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7937  109B  319F  276F  3190   	fcall	_PIN_MANAGER_Initialize
  7938                           
  7939                           ;mcc.c: 76: OSCILLATOR_Initialize();
  7940  109E  319E  26F9  3190   	fcall	_OSCILLATOR_Initialize
  7941                           
  7942                           ;mcc.c: 77: WDT_Initialize();
  7943  10A1  319E  26AE  3190   	fcall	_WDT_Initialize
  7944                           
  7945                           ;mcc.c: 78: FVR_Initialize();
  7946  10A4  319E  26AA  3190   	fcall	_FVR_Initialize
  7947                           
  7948                           ;mcc.c: 79: PWM2_Initialize();
  7949  10A7  319E  26C1  3190   	fcall	_PWM2_Initialize
  7950                           
  7951                           ;mcc.c: 80: ADC_Initialize();
  7952  10AA  319E  26EF  3190   	fcall	_ADC_Initialize
  7953                           
  7954                           ;mcc.c: 81: TMR2_Initialize();
  7955  10AD  319E  26DD  3190   	fcall	_TMR2_Initialize
  7956                           
  7957                           ;mcc.c: 82: TMR1_Initialize();
  7958  10B0  319F  272F  3190   	fcall	_TMR1_Initialize
  7959                           
  7960                           ;mcc.c: 83: EUSART_Initialize();
  7961  10B3  319F  2704         	fcall	_EUSART_Initialize
  7962  10B5  0008               	return
  7963  10B6                     __end_of_SYSTEM_Initialize:	
  7964                           
  7965                           	psect	text21
  7966  1EAE                     __ptext21:	
  7967 ;; *************** function _WDT_Initialize *****************
  7968 ;; Defined at:
  7969 ;;		line 102 in file "mcc_generated_files/mcc.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;		None
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;		None
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      void 
  7976 ;; Registers used:
  7977 ;;		wreg
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  7983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7987 ;;Total ram usage:        0 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:   10
  7990 ;; This function calls:
  7991 ;;		Nothing
  7992 ;; This function is called by:
  7993 ;;		_SYSTEM_Initialize
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           
  7998                           ;psect for function _WDT_Initialize
  7999  1EAE                     _WDT_Initialize:	
  8000                           
  8001                           ;mcc.c: 105: WDTCON = 0x06;
  8002                           
  8003                           ;incstack = 0
  8004                           ; Regs used in _WDT_Initialize: [wreg]
  8005  1EAE  3006               	movlw	6
  8006  1EAF  0021               	movlb	1	; select bank1
  8007  1EB0  0097               	movwf	23	;volatile
  8008  1EB1  0008               	return
  8009  1EB2                     __end_of_WDT_Initialize:	
  8010                           
  8011                           	psect	text22
  8012  1EDD                     __ptext22:	
  8013 ;; *************** function _TMR2_Initialize *****************
  8014 ;; Defined at:
  8015 ;;		line 63 in file "mcc_generated_files/tmr2.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;		None
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;		None
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  1    wreg      void 
  8022 ;; Registers used:
  8023 ;;		wreg, status,2, status,0, pclath, cstack
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8033 ;;Total ram usage:        0 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; Hardware stack levels required when called:   11
  8036 ;; This function calls:
  8037 ;;		_TMR2_StartTimer
  8038 ;; This function is called by:
  8039 ;;		_SYSTEM_Initialize
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043                           
  8044                           ;psect for function _TMR2_Initialize
  8045  1EDD                     _TMR2_Initialize:	
  8046                           
  8047                           ;tmr2.c: 68: T2CON = 0x00;
  8048                           
  8049                           ;incstack = 0
  8050                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8051  1EDD  0020               	movlb	0	; select bank0
  8052  1EDE  019C               	clrf	28	;volatile
  8053                           
  8054                           ;tmr2.c: 71: PR2 = 0x2F;
  8055  1EDF  302F               	movlw	47
  8056  1EE0  009B               	movwf	27	;volatile
  8057                           
  8058                           ;tmr2.c: 74: TMR2 = 0x00;
  8059  1EE1  019A               	clrf	26	;volatile
  8060                           
  8061                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
  8062  1EE2  1091               	bcf	17,1	;volatile
  8063                           
  8064                           ;tmr2.c: 80: TMR2_StartTimer();
  8065  1EE3  319E  26A7         	fcall	_TMR2_StartTimer
  8066  1EE5  0008               	return
  8067  1EE6                     __end_of_TMR2_Initialize:	
  8068                           
  8069                           	psect	text23
  8070  1EA7                     __ptext23:	
  8071 ;; *************** function _TMR2_StartTimer *****************
  8072 ;; Defined at:
  8073 ;;		line 83 in file "mcc_generated_files/tmr2.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;		None
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;		None
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  1    wreg      void 
  8080 ;; Registers used:
  8081 ;;		None
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8091 ;;Total ram usage:        0 bytes
  8092 ;; Hardware stack levels used:    1
  8093 ;; Hardware stack levels required when called:   10
  8094 ;; This function calls:
  8095 ;;		Nothing
  8096 ;; This function is called by:
  8097 ;;		_TMR2_Initialize
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           
  8102                           ;psect for function _TMR2_StartTimer
  8103  1EA7                     _TMR2_StartTimer:	
  8104                           
  8105                           ;tmr2.c: 86: T2CONbits.TMR2ON = 1;
  8106                           
  8107                           ;incstack = 0
  8108                           ; Regs used in _TMR2_StartTimer: []
  8109  1EA7  0020               	movlb	0	; select bank0
  8110  1EA8  151C               	bsf	28,2	;volatile
  8111  1EA9  0008               	return
  8112  1EAA                     __end_of_TMR2_StartTimer:	
  8113                           
  8114                           	psect	text24
  8115  1F2F                     __ptext24:	
  8116 ;; *************** function _TMR1_Initialize *****************
  8117 ;; Defined at:
  8118 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;		None
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;		None
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  1    wreg      void 
  8125 ;; Registers used:
  8126 ;;		wreg, status,2, status,0, pclath, cstack
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8136 ;;Total ram usage:        0 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:   11
  8139 ;; This function calls:
  8140 ;;		_TMR1_StartTimer
  8141 ;; This function is called by:
  8142 ;;		_SYSTEM_Initialize
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           
  8147                           ;psect for function _TMR1_Initialize
  8148  1F2F                     _TMR1_Initialize:	
  8149                           
  8150                           ;tmr1.c: 68: T1CON = 0xF4;
  8151                           
  8152                           ;incstack = 0
  8153                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8154  1F2F  30F4               	movlw	244
  8155  1F30  0020               	movlb	0	; select bank0
  8156  1F31  0098               	movwf	24	;volatile
  8157                           
  8158                           ;tmr1.c: 71: T1GCON = 0x00;
  8159  1F32  0199               	clrf	25	;volatile
  8160                           
  8161                           ;tmr1.c: 74: TMR1H = 0xF4;
  8162  1F33  30F4               	movlw	244
  8163  1F34  0097               	movwf	23	;volatile
  8164                           
  8165                           ;tmr1.c: 77: TMR1L = 0xA6;
  8166  1F35  30A6               	movlw	166
  8167  1F36  0096               	movwf	22	;volatile
  8168                           
  8169                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
  8170  1F37  0817               	movf	23,w	;volatile
  8171  1F38  0023               	movlb	3	; select bank3
  8172  1F39  00DD               	movwf	(_timer1ReloadVal+1)^(0+384)	;volatile
  8173  1F3A  0020               	movlb	0	; select bank0
  8174  1F3B  0816               	movf	22,w	;volatile
  8175  1F3C  0023               	movlb	3	; select bank3
  8176  1F3D  00DC               	movwf	_timer1ReloadVal^(0+384)	;volatile
  8177                           
  8178                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  8179  1F3E  0020               	movlb	0	; select bank0
  8180  1F3F  1011               	bcf	17,0	;volatile
  8181                           
  8182                           ;tmr1.c: 86: TMR1_StartTimer();
  8183  1F40  319E  26A4         	fcall	_TMR1_StartTimer
  8184  1F42  0008               	return
  8185  1F43                     __end_of_TMR1_Initialize:	
  8186                           
  8187                           	psect	text25
  8188  1EA4                     __ptext25:	
  8189 ;; *************** function _TMR1_StartTimer *****************
  8190 ;; Defined at:
  8191 ;;		line 89 in file "mcc_generated_files/tmr1.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;		None
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1    wreg      void 
  8198 ;; Registers used:
  8199 ;;		None
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8209 ;;Total ram usage:        0 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; Hardware stack levels required when called:   10
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_TMR1_Initialize
  8216 ;;		_main
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           
  8221                           ;psect for function _TMR1_StartTimer
  8222  1EA4                     _TMR1_StartTimer:	
  8223                           
  8224                           ;tmr1.c: 92: T1CONbits.TMR1ON = 1;
  8225                           
  8226                           ;incstack = 0
  8227                           ; Regs used in _TMR1_StartTimer: []
  8228  1EA4  0020               	movlb	0	; select bank0
  8229  1EA5  1418               	bsf	24,0	;volatile
  8230  1EA6  0008               	return
  8231  1EA7                     __end_of_TMR1_StartTimer:	
  8232                           
  8233                           	psect	text26
  8234  1EC1                     __ptext26:	
  8235 ;; *************** function _PWM2_Initialize *****************
  8236 ;; Defined at:
  8237 ;;		line 57 in file "mcc_generated_files/pwm2.c"
  8238 ;; Parameters:    Size  Location     Type
  8239 ;;		None
  8240 ;; Auto vars:     Size  Location     Type
  8241 ;;		None
  8242 ;; Return value:  Size  Location     Type
  8243 ;;                  1    wreg      void 
  8244 ;; Registers used:
  8245 ;;		wreg, status,2
  8246 ;; Tracked objects:
  8247 ;;		On entry : 0/0
  8248 ;;		On exit  : 0/0
  8249 ;;		Unchanged: 0/0
  8250 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8255 ;;Total ram usage:        0 bytes
  8256 ;; Hardware stack levels used:    1
  8257 ;; Hardware stack levels required when called:   10
  8258 ;; This function calls:
  8259 ;;		Nothing
  8260 ;; This function is called by:
  8261 ;;		_SYSTEM_Initialize
  8262 ;; This function uses a non-reentrant model
  8263 ;;
  8264                           
  8265                           
  8266                           ;psect for function _PWM2_Initialize
  8267  1EC1                     _PWM2_Initialize:	
  8268                           
  8269                           ;pwm2.c: 61: PWM2CON = 0xD0;
  8270                           
  8271                           ;incstack = 0
  8272                           ; Regs used in _PWM2_Initialize: [wreg+status,2]
  8273  1EC1  30D0               	movlw	208
  8274  1EC2  002C               	movlb	12	; select bank12
  8275  1EC3  0096               	movwf	22	;volatile
  8276                           
  8277                           ;pwm2.c: 64: PWM2DCH = 0x00;
  8278  1EC4  0195               	clrf	21	;volatile
  8279                           
  8280                           ;pwm2.c: 67: PWM2DCL = 0x00;
  8281  1EC5  0194               	clrf	20	;volatile
  8282  1EC6  0008               	return
  8283  1EC7                     __end_of_PWM2_Initialize:	
  8284                           
  8285                           	psect	text27
  8286  1F6F                     __ptext27:	
  8287 ;; *************** function _PIN_MANAGER_Initialize *****************
  8288 ;; Defined at:
  8289 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  8290 ;; Parameters:    Size  Location     Type
  8291 ;;		None
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;		None
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      void 
  8296 ;; Registers used:
  8297 ;;		wreg, status,2
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8307 ;;Total ram usage:        0 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:   10
  8310 ;; This function calls:
  8311 ;;		Nothing
  8312 ;; This function is called by:
  8313 ;;		_SYSTEM_Initialize
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           
  8318                           ;psect for function _PIN_MANAGER_Initialize
  8319  1F6F                     _PIN_MANAGER_Initialize:	
  8320                           
  8321                           ;pin_manager.c: 56: LATA = 0x20;
  8322                           
  8323                           ;incstack = 0
  8324                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8325  1F6F  3020               	movlw	32
  8326  1F70  0022               	movlb	2	; select bank2
  8327  1F71  008C               	movwf	12	;volatile
  8328                           
  8329                           ;pin_manager.c: 57: LATC = 0x00;
  8330  1F72  018E               	clrf	14	;volatile
  8331                           
  8332                           ;pin_manager.c: 62: TRISA = 0x10;
  8333  1F73  3010               	movlw	16
  8334  1F74  0021               	movlb	1	; select bank1
  8335  1F75  008C               	movwf	12	;volatile
  8336                           
  8337                           ;pin_manager.c: 63: TRISC = 0x24;
  8338  1F76  3024               	movlw	36
  8339  1F77  008E               	movwf	14	;volatile
  8340                           
  8341                           ;pin_manager.c: 68: ANSELC = 0x0F;
  8342  1F78  300F               	movlw	15
  8343  1F79  0023               	movlb	3	; select bank3
  8344  1F7A  008E               	movwf	14	;volatile
  8345                           
  8346                           ;pin_manager.c: 69: ANSELA = 0x10;
  8347  1F7B  3010               	movlw	16
  8348  1F7C  008C               	movwf	12	;volatile
  8349                           
  8350                           ;pin_manager.c: 74: WPUA = 0x08;
  8351  1F7D  3008               	movlw	8
  8352  1F7E  0024               	movlb	4	; select bank4
  8353  1F7F  008C               	movwf	12	;volatile
  8354                           
  8355                           ;pin_manager.c: 75: OPTION_REGbits.nWPUEN = 0;
  8356  1F80  0021               	movlb	1	; select bank1
  8357  1F81  1395               	bcf	21,7	;volatile
  8358                           
  8359                           ;pin_manager.c: 81: APFCON = 0x04;
  8360  1F82  3004               	movlw	4
  8361  1F83  0022               	movlb	2	; select bank2
  8362  1F84  009D               	movwf	29	;volatile
  8363  1F85  0008               	return
  8364  1F86                     __end_of_PIN_MANAGER_Initialize:	
  8365                           
  8366                           	psect	text28
  8367  1EF9                     __ptext28:	
  8368 ;; *************** function _OSCILLATOR_Initialize *****************
  8369 ;; Defined at:
  8370 ;;		line 86 in file "mcc_generated_files/mcc.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8388 ;;Total ram usage:        0 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; Hardware stack levels required when called:   10
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		_SYSTEM_Initialize
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           
  8399                           ;psect for function _OSCILLATOR_Initialize
  8400  1EF9                     _OSCILLATOR_Initialize:	
  8401                           
  8402                           ;mcc.c: 89: OSCCON = 0xFC;
  8403                           
  8404                           ;incstack = 0
  8405                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8406  1EF9  30FC               	movlw	252
  8407  1EFA  0021               	movlb	1	; select bank1
  8408  1EFB  0099               	movwf	25	;volatile
  8409                           
  8410                           ;mcc.c: 91: OSCTUNE = 0x00;
  8411  1EFC  0198               	clrf	24	;volatile
  8412                           
  8413                           ;mcc.c: 93: ACTCON = 0x90;
  8414  1EFD  3090               	movlw	144
  8415  1EFE  0027               	movlb	7	; select bank7
  8416  1EFF  009B               	movwf	27	;volatile
  8417  1F00                     l107:	
  8418                           ;mcc.c: 98: {
  8419                           
  8420                           ;mcc.c: 97: while(PLLRDY == 0)
  8421                           
  8422  1F00  0021               	movlb	1	; select bank1
  8423  1F01  1B1A               	btfsc	26,6	;volatile
  8424  1F02  0008               	return
  8425  1F03  2F00               	goto	l107
  8426  1F04                     __end_of_OSCILLATOR_Initialize:	
  8427                           
  8428                           	psect	text29
  8429  1EAA                     __ptext29:	
  8430 ;; *************** function _FVR_Initialize *****************
  8431 ;; Defined at:
  8432 ;;		line 57 in file "mcc_generated_files/fvr.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;		None
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		wreg
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8450 ;;Total ram usage:        0 bytes
  8451 ;; Hardware stack levels used:    1
  8452 ;; Hardware stack levels required when called:   10
  8453 ;; This function calls:
  8454 ;;		Nothing
  8455 ;; This function is called by:
  8456 ;;		_SYSTEM_Initialize
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           
  8461                           ;psect for function _FVR_Initialize
  8462  1EAA                     _FVR_Initialize:	
  8463                           
  8464                           ;fvr.c: 60: FVRCON = 0x83;
  8465                           
  8466                           ;incstack = 0
  8467                           ; Regs used in _FVR_Initialize: [wreg]
  8468  1EAA  3083               	movlw	131
  8469  1EAB  0022               	movlb	2	; select bank2
  8470  1EAC  0097               	movwf	23	;volatile
  8471  1EAD  0008               	return
  8472  1EAE                     __end_of_FVR_Initialize:	
  8473                           
  8474                           	psect	text30
  8475  1F04                     __ptext30:	
  8476 ;; *************** function _EUSART_Initialize *****************
  8477 ;; Defined at:
  8478 ;;		line 55 in file "mcc_generated_files/eusart.c"
  8479 ;; Parameters:    Size  Location     Type
  8480 ;;		None
  8481 ;; Auto vars:     Size  Location     Type
  8482 ;;		None
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  1    wreg      void 
  8485 ;; Registers used:
  8486 ;;		wreg
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8496 ;;Total ram usage:        0 bytes
  8497 ;; Hardware stack levels used:    1
  8498 ;; Hardware stack levels required when called:   10
  8499 ;; This function calls:
  8500 ;;		Nothing
  8501 ;; This function is called by:
  8502 ;;		_SYSTEM_Initialize
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506                           
  8507                           ;psect for function _EUSART_Initialize
  8508  1F04                     _EUSART_Initialize:	
  8509                           
  8510                           ;eusart.c: 60: BAUDCON = 0x48;
  8511                           
  8512                           ;incstack = 0
  8513                           ; Regs used in _EUSART_Initialize: [wreg]
  8514  1F04  3048               	movlw	72
  8515  1F05  0023               	movlb	3	; select bank3
  8516  1F06  009F               	movwf	31	;volatile
  8517                           
  8518                           ;eusart.c: 63: RCSTA = 0x90;
  8519  1F07  3090               	movlw	144
  8520  1F08  009D               	movwf	29	;volatile
  8521                           
  8522                           ;eusart.c: 66: TXSTA = 0x26;
  8523  1F09  3026               	movlw	38
  8524  1F0A  009E               	movwf	30	;volatile
  8525                           
  8526                           ;eusart.c: 69: SPBRGL = 0xE1;
  8527  1F0B  30E1               	movlw	225
  8528  1F0C  009B               	movwf	27	;volatile
  8529                           
  8530                           ;eusart.c: 72: SPBRGH = 0x04;
  8531  1F0D  3004               	movlw	4
  8532  1F0E  009C               	movwf	28	;volatile
  8533  1F0F  0008               	return
  8534  1F10                     __end_of_EUSART_Initialize:	
  8535                           
  8536                           	psect	text31
  8537  1EEF                     __ptext31:	
  8538 ;; *************** function _ADC_Initialize *****************
  8539 ;; Defined at:
  8540 ;;		line 64 in file "mcc_generated_files/adc.c"
  8541 ;; Parameters:    Size  Location     Type
  8542 ;;		None
  8543 ;; Auto vars:     Size  Location     Type
  8544 ;;		None
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  1    wreg      void 
  8547 ;; Registers used:
  8548 ;;		wreg, status,2
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8558 ;;Total ram usage:        0 bytes
  8559 ;; Hardware stack levels used:    1
  8560 ;; Hardware stack levels required when called:   10
  8561 ;; This function calls:
  8562 ;;		Nothing
  8563 ;; This function is called by:
  8564 ;;		_SYSTEM_Initialize
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568                           
  8569                           ;psect for function _ADC_Initialize
  8570  1EEF                     _ADC_Initialize:	
  8571                           
  8572                           ;adc.c: 69: ADCON0 = 0x19;
  8573                           
  8574                           ;incstack = 0
  8575                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  8576  1EEF  3019               	movlw	25
  8577  1EF0  0021               	movlb	1	; select bank1
  8578  1EF1  009D               	movwf	29	;volatile
  8579                           
  8580                           ;adc.c: 72: ADCON1 = 0xE3;
  8581  1EF2  30E3               	movlw	227
  8582  1EF3  009E               	movwf	30	;volatile
  8583                           
  8584                           ;adc.c: 75: ADCON2 = 0x00;
  8585  1EF4  019F               	clrf	31	;volatile
  8586                           
  8587                           ;adc.c: 78: ADRESL = 0x00;
  8588  1EF5  019B               	clrf	27	;volatile
  8589                           
  8590                           ;adc.c: 81: ADRESH = 0x00;
  8591  1EF6  019C               	clrf	28	;volatile
  8592                           
  8593                           ;adc.c: 84: PIE1bits.ADIE = 1;
  8594  1EF7  1711               	bsf	17,6	;volatile
  8595  1EF8  0008               	return
  8596  1EF9                     __end_of_ADC_Initialize:	
  8597                           
  8598                           	psect	text32
  8599  1EA1                     __ptext32:	
  8600 ;; *************** function _ADC_StartConversion *****************
  8601 ;; Defined at:
  8602 ;;		line 95 in file "mcc_generated_files/adc.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;		None
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;		None
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  1    wreg      void 
  8609 ;; Registers used:
  8610 ;;		None
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8620 ;;Total ram usage:        0 bytes
  8621 ;; Hardware stack levels used:    1
  8622 ;; Hardware stack levels required when called:   10
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_main
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           
  8631                           ;psect for function _ADC_StartConversion
  8632  1EA1                     _ADC_StartConversion:	
  8633                           
  8634                           ;adc.c: 98: ADCON0bits.GO_nDONE = 1;
  8635                           
  8636                           ;incstack = 0
  8637                           ; Regs used in _ADC_StartConversion: []
  8638  1EA1  0021               	movlb	1	; select bank1
  8639  1EA2  149D               	bsf	29,1	;volatile
  8640  1EA3  0008               	return
  8641  1EA4                     __end_of_ADC_StartConversion:	
  8642                           
  8643                           	psect	intentry
  8644  0004                     __pintentry:	
  8645 ;; *************** function _INTERRUPT_InterruptManager *****************
  8646 ;; Defined at:
  8647 ;;		line 493 in file "main.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;		None
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;  pwm             2   12[BANK2 ] unsigned int 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8662 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0
  8663 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0
  8664 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0
  8665 ;;Total ram usage:        9 bytes
  8666 ;; Hardware stack levels used:    1
  8667 ;; Hardware stack levels required when called:    9
  8668 ;; This function calls:
  8669 ;;		_ADC_GetConversionResult
  8670 ;;		_ADC_IsConversionDone
  8671 ;;		_ADC_SelectChannel
  8672 ;;		_USBDeviceTasks
  8673 ;;		_main_CDC_to_RS485_Tasks
  8674 ;;		i1_ADC_StartConversion
  8675 ;;		i1_PWM2_LoadDutyValue
  8676 ;; This function is called by:
  8677 ;;		Interrupt level 1
  8678 ;; This function uses a non-reentrant model
  8679 ;;
  8680                           
  8681  0004                     _INTERRUPT_InterruptManager:	
  8682                           
  8683                           ;incstack = 0
  8684  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8685                           
  8686                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8687  0005  3180               	pagesel	$
  8688  0006  0020               	movlb	0	; select bank0
  8689  0007  087F               	movf	127,w
  8690  0008  0022               	movlb	2	; select bank2
  8691  0009  00EB               	movwf	(??_INTERRUPT_InterruptManager+6)^(0+256)
  8692                           
  8693                           ;main.c: 495: static int8_t pwmCorrection = 0;
  8694                           ;main.c: 496: uint16_t pwm;
  8695                           ;main.c: 498: Uadc = (Uadc + ADC_GetConversionResult() - (Iadc>>1))>>1;
  8696  000A  0023               	movlb	3	; select bank3
  8697  000B  085B               	movf	(_Iadc+1)^(0+384),w	;volatile
  8698  000C  0022               	movlb	2	; select bank2
  8699  000D  00E6               	movwf	(??_INTERRUPT_InterruptManager^(0+256)+1)
  8700  000E  0023               	movlb	3	; select bank3
  8701  000F  085A               	movf	_Iadc^(0+384),w	;volatile
  8702  0010  0022               	movlb	2	; select bank2
  8703  0011  00E5               	movwf	??_INTERRUPT_InterruptManager^(0+256)
  8704  0012  36E6               	lsrf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8705  0013  0CE5               	rrf	??_INTERRUPT_InterruptManager^(0+256),f
  8706  0014  09E5               	comf	??_INTERRUPT_InterruptManager^(0+256),f
  8707  0015  09E6               	comf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8708  0016  0AE5               	incf	??_INTERRUPT_InterruptManager^(0+256),f
  8709  0017  1903               	skipnz
  8710  0018  0AE6               	incf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8711  0019  319E  26BB  3180   	fcall	_ADC_GetConversionResult
  8712  001C  0022               	movlb	2	; select bank2
  8713  001D  0865               	movf	??_INTERRUPT_InterruptManager^(0+256),w
  8714  001E  0770               	addwf	?_ADC_GetConversionResult,w
  8715  001F  00E7               	movwf	(??_INTERRUPT_InterruptManager+2)^(0+256)
  8716  0020  0866               	movf	(??_INTERRUPT_InterruptManager+1)^(0+256),w
  8717  0021  3D71               	addwfc	?_ADC_GetConversionResult+1,w
  8718  0022  00E8               	movwf	(??_INTERRUPT_InterruptManager+3)^(0+256)
  8719  0023  0023               	movlb	3	; select bank3
  8720  0024  086C               	movf	_Uadc^(0+384),w	;volatile
  8721  0025  0022               	movlb	2	; select bank2
  8722  0026  0767               	addwf	(??_INTERRUPT_InterruptManager+2)^(0+256),w
  8723  0027  00E9               	movwf	(??_INTERRUPT_InterruptManager+4)^(0+256)
  8724  0028  0023               	movlb	3	; select bank3
  8725  0029  086D               	movf	(_Uadc+1)^(0+384),w	;volatile
  8726  002A  0022               	movlb	2	; select bank2
  8727  002B  3D68               	addwfc	(??_INTERRUPT_InterruptManager+3)^(0+256),w
  8728  002C  00EA               	movwf	(??_INTERRUPT_InterruptManager+5)^(0+256)
  8729  002D  36EA               	lsrf	((??_INTERRUPT_InterruptManager+4)^(0+256)+1),f
  8730  002E  0CE9               	rrf	(??_INTERRUPT_InterruptManager+4)^(0+256),f
  8731  002F  0869               	movf	(??_INTERRUPT_InterruptManager+4)^(0+256),w
  8732  0030  0023               	movlb	3	; select bank3
  8733  0031  00EC               	movwf	_Uadc^(0+384)	;volatile
  8734  0032  0022               	movlb	2	; select bank2
  8735  0033  086A               	movf	(??_INTERRUPT_InterruptManager+5)^(0+256),w
  8736  0034  0023               	movlb	3	; select bank3
  8737  0035  00ED               	movwf	(_Uadc+1)^(0+384)	;volatile
  8738                           
  8739                           ;main.c: 499: FVRCON = 0x82;
  8740  0036  3082               	movlw	130
  8741  0037  0022               	movlb	2	; select bank2
  8742  0038  0097               	movwf	23	;volatile
  8743                           
  8744                           ;main.c: 500: ADC_SelectChannel(channel_AN3);
  8745  0039  3003               	movlw	3
  8746  003A  3190  208E  3180   	fcall	_ADC_SelectChannel
  8747                           
  8748                           ;main.c: 501: if(MAIN_upConverterFlag) pwmCorrection = ((pwmCorrection<<2) + Iadc)>>3;
  8749  003D  0024               	movlb	4	; select bank4
  8750  003E  084B               	movf	_MAIN_upConverterFlag^(0+512),w
  8751  003F  1903               	btfsc	3,2
  8752  0040  2858               	goto	i1l6021
  8753  0041  0845               	movf	INTERRUPT_InterruptManager@pwmCorrection^(0+512),w
  8754  0042  0022               	movlb	2	; select bank2
  8755  0043  00E5               	movwf	??_INTERRUPT_InterruptManager^(0+256)
  8756  0044  01E6               	clrf	(??_INTERRUPT_InterruptManager^(0+256)+1)
  8757  0045  1BE5               	btfsc	??_INTERRUPT_InterruptManager^(0+256),7
  8758  0046  03E6               	decf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8759  0047  35E5               	lslf	??_INTERRUPT_InterruptManager^(0+256),f
  8760  0048  0DE6               	rlf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8761  0049  35E5               	lslf	??_INTERRUPT_InterruptManager^(0+256),f
  8762  004A  0DE6               	rlf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8763  004B  0023               	movlb	3	; select bank3
  8764  004C  085A               	movf	_Iadc^(0+384),w	;volatile
  8765  004D  0022               	movlb	2	; select bank2
  8766  004E  0765               	addwf	??_INTERRUPT_InterruptManager^(0+256),w
  8767  004F  00E7               	movwf	(??_INTERRUPT_InterruptManager+2)^(0+256)
  8768  0050  0023               	movlb	3	; select bank3
  8769  0051  085B               	movf	(_Iadc+1)^(0+384),w	;volatile
  8770  0052  0022               	movlb	2	; select bank2
  8771  0053  3D66               	addwfc	(??_INTERRUPT_InterruptManager+1)^(0+256),w
  8772  0054  00E8               	movwf	(??_INTERRUPT_InterruptManager+3)^(0+256)
  8773  0055  36E8               	lsrf	((??_INTERRUPT_InterruptManager+2)^(0+256)+1),f
  8774  0056  0CE7               	rrf	(??_INTERRUPT_InterruptManager+2)^(0+256),f
  8775  0057  286A               	goto	L10
  8776  0058                     i1l6021:	
  8777                           
  8778                           ;main.c: 502: else pwmCorrection = ((pwmCorrection<<1) + Iadc)>>2;
  8779  0058  0845               	movf	INTERRUPT_InterruptManager@pwmCorrection^(0+512),w
  8780  0059  0022               	movlb	2	; select bank2
  8781  005A  00E5               	movwf	??_INTERRUPT_InterruptManager^(0+256)
  8782  005B  01E6               	clrf	(??_INTERRUPT_InterruptManager^(0+256)+1)
  8783  005C  1BE5               	btfsc	??_INTERRUPT_InterruptManager^(0+256),7
  8784  005D  03E6               	decf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8785  005E  35E5               	lslf	??_INTERRUPT_InterruptManager^(0+256),f
  8786  005F  0DE6               	rlf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8787  0060  0023               	movlb	3	; select bank3
  8788  0061  085A               	movf	_Iadc^(0+384),w	;volatile
  8789  0062  0022               	movlb	2	; select bank2
  8790  0063  0765               	addwf	??_INTERRUPT_InterruptManager^(0+256),w
  8791  0064  00E7               	movwf	(??_INTERRUPT_InterruptManager+2)^(0+256)
  8792  0065  0023               	movlb	3	; select bank3
  8793  0066  085B               	movf	(_Iadc+1)^(0+384),w	;volatile
  8794  0067  0022               	movlb	2	; select bank2
  8795  0068  3D66               	addwfc	(??_INTERRUPT_InterruptManager+1)^(0+256),w
  8796  0069  00E8               	movwf	(??_INTERRUPT_InterruptManager+3)^(0+256)
  8797  006A                     L10:	
  8798  006A  36E8               	lsrf	((??_INTERRUPT_InterruptManager+2)^(0+256)+1),f
  8799  006B  0CE7               	rrf	(??_INTERRUPT_InterruptManager+2)^(0+256),f
  8800  006C  36E8               	lsrf	((??_INTERRUPT_InterruptManager+2)^(0+256)+1),f
  8801  006D  0CE7               	rrf	(??_INTERRUPT_InterruptManager+2)^(0+256),f
  8802  006E  0867               	movf	(??_INTERRUPT_InterruptManager+2)^(0+256),w
  8803  006F  00E9               	movwf	(??_INTERRUPT_InterruptManager+4)^(0+256)
  8804  0070  0869               	movf	(??_INTERRUPT_InterruptManager+4)^(0+256),w
  8805  0071  0024               	movlb	4	; select bank4
  8806  0072  00C5               	movwf	INTERRUPT_InterruptManager@pwmCorrection^(0+512)
  8807                           
  8808                           ;main.c: 504: if((Uadc > Uadc_target) || (2 == MAIN_ovcFlag)) {
  8809  0073  0023               	movlb	3	; select bank3
  8810  0074  086D               	movf	(_Uadc+1)^(0+384),w	;volatile
  8811  0075  0024               	movlb	4	; select bank4
  8812  0076  022E               	subwf	(_Uadc_target+1)^(0+512),w
  8813  0077  1D03               	skipz
  8814  0078  287D               	goto	u609_25
  8815  0079  0023               	movlb	3	; select bank3
  8816  007A  086C               	movf	_Uadc^(0+384),w	;volatile
  8817  007B  0024               	movlb	4	; select bank4
  8818  007C  022D               	subwf	_Uadc_target^(0+512),w
  8819  007D                     u609_25:	
  8820  007D  1C03               	skipc
  8821  007E  2883               	goto	i1l6027
  8822  007F  3002               	movlw	2
  8823  0080  064C               	xorwf	_MAIN_ovcFlag^(0+512),w
  8824  0081  1D03               	btfss	3,2
  8825  0082  2887               	goto	i1l6029
  8826  0083                     i1l6027:	
  8827                           
  8828                           ;main.c: 505: PWM2_LoadDutyValue(0);
  8829  0083  3000               	movlw	0
  8830  0084  00F0               	movwf	i1PWM2_LoadDutyValue@dutyValue
  8831  0085  00F1               	movwf	i1PWM2_LoadDutyValue@dutyValue+1
  8832  0086  28BE               	goto	L11
  8833  0087                     i1l6029:	
  8834                           ;main.c: 506: } else {
  8835                           
  8836                           
  8837                           ;main.c: 507: pwm = PwmDutyCycleVoltageLimit+pwmCorrection;
  8838  0087  0024               	movlb	4	; select bank4
  8839  0088  084D               	movf	_PwmDutyCycleVoltageLimit^(0+512),w
  8840  0089  0745               	addwf	INTERRUPT_InterruptManager@pwmCorrection^(0+512),w
  8841  008A  0022               	movlb	2	; select bank2
  8842  008B  00EC               	movwf	INTERRUPT_InterruptManager@pwm^(0+256)
  8843  008C  01ED               	clrf	(INTERRUPT_InterruptManager@pwm+1)^(0+256)
  8844  008D  1803               	skipnc
  8845  008E  0AED               	incf	(INTERRUPT_InterruptManager@pwm^(0+256)+1),f
  8846  008F  0024               	movlb	4	; select bank4
  8847  0090  1FC5               	btfss	INTERRUPT_InterruptManager@pwmCorrection^(0+512),7
  8848  0091  2894               	goto	u611_24
  8849  0092  0022               	movlb	2	; select bank2
  8850  0093  03ED               	decf	(INTERRUPT_InterruptManager@pwm^(0+256)+1),f
  8851  0094                     u611_24:	
  8852                           
  8853                           ;main.c: 508: if(pwm > ((188))) pwm = ((188));
  8854  0094  3000               	movlw	0
  8855  0095  0022               	movlb	2	; select bank2
  8856  0096  026D               	subwf	(INTERRUPT_InterruptManager@pwm+1)^(0+256),w
  8857  0097  30BD               	movlw	189
  8858  0098  1903               	skipnz
  8859  0099  026C               	subwf	INTERRUPT_InterruptManager@pwm^(0+256),w
  8860  009A  1C03               	skipc
  8861  009B  28A0               	goto	i1l1187
  8862  009C  30BC               	movlw	188
  8863  009D  00EC               	movwf	INTERRUPT_InterruptManager@pwm^(0+256)
  8864  009E  3000               	movlw	0
  8865  009F  00ED               	movwf	(INTERRUPT_InterruptManager@pwm^(0+256)+1)
  8866  00A0                     i1l1187:	
  8867                           
  8868                           ;main.c: 509: if(pwm > PwmDutyCycleCurrentLimit) {
  8869  00A0  0023               	movlb	3	; select bank3
  8870  00A1  0860               	movf	_PwmDutyCycleCurrentLimit^(0+384),w
  8871  00A2  0022               	movlb	2	; select bank2
  8872  00A3  00E5               	movwf	??_INTERRUPT_InterruptManager^(0+256)
  8873  00A4  01E6               	clrf	(??_INTERRUPT_InterruptManager^(0+256)+1)
  8874  00A5  086D               	movf	(INTERRUPT_InterruptManager@pwm+1)^(0+256),w
  8875  00A6  0266               	subwf	(??_INTERRUPT_InterruptManager+1)^(0+256),w
  8876  00A7  1D03               	skipz
  8877  00A8  28AB               	goto	u613_25
  8878  00A9  086C               	movf	INTERRUPT_InterruptManager@pwm^(0+256),w
  8879  00AA  0265               	subwf	??_INTERRUPT_InterruptManager^(0+256),w
  8880  00AB                     u613_25:	
  8881  00AB  1803               	skipnc
  8882  00AC  28B9               	goto	i1l6037
  8883                           
  8884                           ;main.c: 510: pwm = PwmDutyCycleCurrentLimit;
  8885  00AD  0023               	movlb	3	; select bank3
  8886  00AE  0860               	movf	_PwmDutyCycleCurrentLimit^(0+384),w
  8887  00AF  0022               	movlb	2	; select bank2
  8888  00B0  00E5               	movwf	??_INTERRUPT_InterruptManager^(0+256)
  8889  00B1  01E6               	clrf	(??_INTERRUPT_InterruptManager^(0+256)+1)
  8890  00B2  0865               	movf	??_INTERRUPT_InterruptManager^(0+256),w
  8891  00B3  00EC               	movwf	INTERRUPT_InterruptManager@pwm^(0+256)
  8892  00B4  0866               	movf	(??_INTERRUPT_InterruptManager+1)^(0+256),w
  8893  00B5  00ED               	movwf	(INTERRUPT_InterruptManager@pwm+1)^(0+256)
  8894                           
  8895                           ;main.c: 511: MAIN_ovcFlag = 1;
  8896  00B6  0024               	movlb	4	; select bank4
  8897  00B7  01CC               	clrf	_MAIN_ovcFlag^(0+512)
  8898  00B8  0ACC               	incf	_MAIN_ovcFlag^(0+512),f
  8899  00B9                     i1l6037:	
  8900                           
  8901                           ;main.c: 512: }
  8902                           ;main.c: 513: PWM2_LoadDutyValue(pwm);
  8903  00B9  0022               	movlb	2	; select bank2
  8904  00BA  086D               	movf	(INTERRUPT_InterruptManager@pwm+1)^(0+256),w
  8905  00BB  00F1               	movwf	i1PWM2_LoadDutyValue@dutyValue+1
  8906  00BC  086C               	movf	INTERRUPT_InterruptManager@pwm^(0+256),w
  8907  00BD  00F0               	movwf	i1PWM2_LoadDutyValue@dutyValue
  8908  00BE                     L11:	
  8909  00BE  319F  2759  3180   	fcall	i1_PWM2_LoadDutyValue
  8910                           
  8911                           ;main.c: 514: }
  8912                           ;main.c: 517: ADC_StartConversion();
  8913  00C1  319E  269E  3180   	fcall	i1_ADC_StartConversion
  8914                           
  8915                           ;main.c: 518: main_CDC_to_RS485_Tasks();
  8916  00C4  3188  2091  3180   	fcall	_main_CDC_to_RS485_Tasks
  8917  00C7                     i1l6041:	
  8918                           ;main.c: 519: while(0 == ADC_IsConversionDone());
  8919                           
  8920  00C7  319E  26CD  3180   	fcall	_ADC_IsConversionDone
  8921  00CA  3A00               	xorlw	0
  8922  00CB  1903               	skipnz
  8923  00CC  28C7               	goto	i1l6041
  8924                           
  8925                           ;main.c: 520: Iadc = ADC_GetConversionResult();
  8926  00CD  319E  26BB  3180   	fcall	_ADC_GetConversionResult
  8927  00D0  0871               	movf	?_ADC_GetConversionResult+1,w
  8928  00D1  0023               	movlb	3	; select bank3
  8929  00D2  00DB               	movwf	(_Iadc+1)^(0+384)	;volatile
  8930  00D3  0870               	movf	?_ADC_GetConversionResult,w
  8931  00D4  00DA               	movwf	_Iadc^(0+384)	;volatile
  8932                           
  8933                           ;main.c: 521: FVRCON = 0x83;
  8934  00D5  3083               	movlw	131
  8935  00D6  0022               	movlb	2	; select bank2
  8936  00D7  0097               	movwf	23	;volatile
  8937                           
  8938                           ;main.c: 522: ADC_SelectChannel(channel_AN6);
  8939  00D8  3006               	movlw	6
  8940  00D9  3190  208E  3180   	fcall	_ADC_SelectChannel
  8941                           
  8942                           ;main.c: 523: USBDeviceTasks();
  8943  00DC  3185  2547  3180   	fcall	_USBDeviceTasks
  8944                           
  8945                           ;main.c: 524: ADC_StartConversion();
  8946  00DF  319E  269E         	fcall	i1_ADC_StartConversion
  8947                           
  8948                           ;main.c: 527: PIR1bits.ADIF = 0;
  8949  00E1  0020               	movlb	0	; select bank0
  8950  00E2  1311               	bcf	17,6	;volatile
  8951  00E3  0022               	movlb	2	; select bank2
  8952  00E4  086B               	movf	(??_INTERRUPT_InterruptManager+6)^(0+256),w
  8953  00E5  0020               	movlb	0	; select bank0
  8954  00E6  00FF               	movwf	127
  8955  00E7  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8956  00E8  0009               	retfie
  8957  00E9                     __end_of_INTERRUPT_InterruptManager:	
  8958                           
  8959                           	psect	text34
  8960  1F59                     __ptext34:	
  8961 ;; *************** function i1_PWM2_LoadDutyValue *****************
  8962 ;; Defined at:
  8963 ;;		line 71 in file "mcc_generated_files/pwm2.c"
  8964 ;; Parameters:    Size  Location     Type
  8965 ;;  dutyValue       2    0[COMMON] unsigned int 
  8966 ;; Auto vars:     Size  Location     Type
  8967 ;;		None
  8968 ;; Return value:  Size  Location     Type
  8969 ;;                  1    wreg      void 
  8970 ;; Registers used:
  8971 ;;		wreg, status,2, status,0
  8972 ;; Tracked objects:
  8973 ;;		On entry : 0/0
  8974 ;;		On exit  : 0/0
  8975 ;;		Unchanged: 0/0
  8976 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8980 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8981 ;;Total ram usage:        4 bytes
  8982 ;; Hardware stack levels used:    1
  8983 ;; This function calls:
  8984 ;;		Nothing
  8985 ;; This function is called by:
  8986 ;;		_INTERRUPT_InterruptManager
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           
  8991                           ;psect for function i1_PWM2_LoadDutyValue
  8992  1F59                     i1_PWM2_LoadDutyValue:	
  8993                           
  8994                           ;pwm2.c: 74: PWM2DCH = (dutyValue & 0x03FC)>>2;
  8995                           
  8996                           ;incstack = 0
  8997                           ; Regs used in i1_PWM2_LoadDutyValue: [wreg+status,2+status,0]
  8998  1F59  0871               	movf	i1PWM2_LoadDutyValue@dutyValue+1,w
  8999  1F5A  00F3               	movwf	??i1_PWM2_LoadDutyValue+1
  9000  1F5B  0870               	movf	i1PWM2_LoadDutyValue@dutyValue,w
  9001  1F5C  00F2               	movwf	??i1_PWM2_LoadDutyValue
  9002  1F5D  36F3               	lsrf	??i1_PWM2_LoadDutyValue+1,f
  9003  1F5E  0CF2               	rrf	??i1_PWM2_LoadDutyValue,f
  9004  1F5F  36F3               	lsrf	??i1_PWM2_LoadDutyValue+1,f
  9005  1F60  0CF2               	rrf	??i1_PWM2_LoadDutyValue,f
  9006  1F61  0872               	movf	??i1_PWM2_LoadDutyValue,w
  9007  1F62  002C               	movlb	12	; select bank12
  9008  1F63  0095               	movwf	21	;volatile
  9009                           
  9010                           ;pwm2.c: 77: PWM2DCL = (dutyValue & 0x0003)<<6;
  9011  1F64  0870               	movf	i1PWM2_LoadDutyValue@dutyValue,w
  9012  1F65  3903               	andlw	3
  9013  1F66  00F2               	movwf	??i1_PWM2_LoadDutyValue
  9014  1F67  3005               	movlw	5
  9015  1F68                     u583_25:	
  9016  1F68  35F2               	lslf	??i1_PWM2_LoadDutyValue,f
  9017  1F69  3EFF               	addlw	-1
  9018  1F6A  1D03               	skipz
  9019  1F6B  2F68               	goto	u583_25
  9020  1F6C  3572               	lslf	??i1_PWM2_LoadDutyValue,w
  9021  1F6D  0094               	movwf	20	;volatile
  9022  1F6E  0008               	return
  9023  1F6F                     __end_ofi1_PWM2_LoadDutyValue:	
  9024                           
  9025                           	psect	text35
  9026  1E9E                     __ptext35:	
  9027 ;; *************** function i1_ADC_StartConversion *****************
  9028 ;; Defined at:
  9029 ;;		line 95 in file "mcc_generated_files/adc.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;		None
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;		None
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  1    wreg      void 
  9036 ;; Registers used:
  9037 ;;		None
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9047 ;;Total ram usage:        0 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; This function calls:
  9050 ;;		Nothing
  9051 ;; This function is called by:
  9052 ;;		_INTERRUPT_InterruptManager
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           
  9057                           ;psect for function i1_ADC_StartConversion
  9058  1E9E                     i1_ADC_StartConversion:	
  9059                           
  9060                           ;adc.c: 98: ADCON0bits.GO_nDONE = 1;
  9061                           
  9062                           ;incstack = 0
  9063                           ; Regs used in i1_ADC_StartConversion: []
  9064  1E9E  0021               	movlb	1	; select bank1
  9065  1E9F  149D               	bsf	29,1	;volatile
  9066  1EA0  0008               	return
  9067  1EA1                     __end_ofi1_ADC_StartConversion:	
  9068                           
  9069                           	psect	text36
  9070  0891                     __ptext36:	
  9071 ;; *************** function _main_CDC_to_RS485_Tasks *****************
  9072 ;; Defined at:
  9073 ;;		line 126 in file "main.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;		None
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;		None
  9078 ;; Return value:  Size  Location     Type
  9079 ;;                  1    wreg      void 
  9080 ;; Registers used:
  9081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9082 ;; Tracked objects:
  9083 ;;		On entry : 0/0
  9084 ;;		On exit  : 0/0
  9085 ;;		Unchanged: 0/0
  9086 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9089 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0
  9090 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0
  9091 ;;Total ram usage:        2 bytes
  9092 ;; Hardware stack levels used:    1
  9093 ;; Hardware stack levels required when called:    2
  9094 ;; This function calls:
  9095 ;;		_CDCTxService2
  9096 ;;		_USART_getcUSART
  9097 ;;		_USART_putcUSART
  9098 ;;		_getsUSBUSART2
  9099 ;;		_putUSBUSART2
  9100 ;; This function is called by:
  9101 ;;		_INTERRUPT_InterruptManager
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           
  9105                           
  9106                           ;psect for function _main_CDC_to_RS485_Tasks
  9107  0891                     _main_CDC_to_RS485_Tasks:	
  9108                           
  9109                           ;main.c: 131: if( USBDeviceState < CONFIGURED_STATE )
  9110                           
  9111                           ;incstack = 0
  9112                           ; Regs used in _main_CDC_to_RS485_Tasks: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  9113  0891  3020               	movlw	32
  9114  0892  0023               	movlb	3	; select bank3
  9115  0893  026B               	subwf	_USBDeviceState^(0+384),w
  9116  0894  1C03               	btfss	3,0
  9117  0895  0008               	return
  9118                           
  9119                           ;main.c: 134: }
  9120                           ;main.c: 140: if( UCONbits.SUSPND== 1 )
  9121                           
  9122                           ;main.c: 132: {
  9123                           ;main.c: 133: return;
  9124  0896  003D               	movlb	29	; select bank29
  9125  0897  188E               	btfsc	14,1	;volatile
  9126  0898  0008               	return
  9127                           
  9128                           ;main.c: 143: }
  9129                           ;main.c: 165: if (RS232_Out_Data_Rdy == 0)
  9130                           
  9131                           ;main.c: 141: {
  9132                           ;main.c: 142: return;
  9133  0899  0024               	movlb	4	; select bank4
  9134  089A  0848               	movf	_RS232_Out_Data_Rdy^(0+512),w
  9135  089B  1D03               	btfss	3,2
  9136  089C  28B9               	goto	i1l5681
  9137                           
  9138                           ;main.c: 166: {
  9139                           ;main.c: 167: LastRS232Out = getsUSBUSART2(RS232_Out_Data,64);
  9140  089D  3040               	movlw	64
  9141  089E  0021               	movlb	1	; select bank1
  9142  089F  00E1               	movwf	??_main_CDC_to_RS485_Tasks^(0+128)
  9143  08A0  0861               	movf	??_main_CDC_to_RS485_Tasks^(0+128),w
  9144  08A1  00FB               	movwf	getsUSBUSART2@len
  9145  08A2  30A0               	movlw	(low (_RS232_Out_Data| (0+1280)))& (0+255)
  9146  08A3  3193  23A6  3188   	fcall	_getsUSBUSART2
  9147  08A6  0021               	movlb	1	; select bank1
  9148  08A7  00E2               	movwf	(??_main_CDC_to_RS485_Tasks+1)^(0+128)
  9149  08A8  0862               	movf	(??_main_CDC_to_RS485_Tasks+1)^(0+128),w
  9150  08A9  0024               	movlb	4	; select bank4
  9151  08AA  00CA               	movwf	_LastRS232Out^(0+512)
  9152                           
  9153                           ;main.c: 168: if(LastRS232Out > 0)
  9154  08AB  084A               	movf	_LastRS232Out^(0+512),w
  9155  08AC  1903               	btfsc	3,2
  9156  08AD  28B4               	goto	i1l1054
  9157                           
  9158                           ;main.c: 169: {
  9159                           ;main.c: 170: RS232_Out_Data_Rdy = 1;
  9160  08AE  01C8               	clrf	_RS232_Out_Data_Rdy^(0+512)
  9161  08AF  0AC8               	incf	_RS232_Out_Data_Rdy^(0+512),f
  9162                           
  9163                           ;main.c: 171: RS232cp = 0;
  9164  08B0  01C9               	clrf	_RS232cp^(0+512)
  9165                           
  9166                           ;main.c: 172: do { LATCbits.LATC1 = 1; } while(0);
  9167  08B1  0022               	movlb	2	; select bank2
  9168  08B2  148E               	bsf	14,1	;volatile
  9169                           
  9170                           ;main.c: 173: } else {
  9171  08B3  28B9               	goto	i1l5681
  9172  08B4                     i1l1054:	
  9173                           
  9174                           ;main.c: 174: if(TXSTAbits.TRMT) do { LATCbits.LATC1 = 0; } while(0);
  9175  08B4  0023               	movlb	3	; select bank3
  9176  08B5  1C9E               	btfss	30,1	;volatile
  9177  08B6  28B9               	goto	i1l5681
  9178  08B7  0022               	movlb	2	; select bank2
  9179  08B8  108E               	bcf	14,1	;volatile
  9180  08B9                     i1l5681:	
  9181                           
  9182                           ;main.c: 175: }
  9183                           ;main.c: 176: }
  9184                           ;main.c: 181: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
  9185  08B9  0024               	movlb	4	; select bank4
  9186  08BA  0848               	movf	_RS232_Out_Data_Rdy^(0+512),w
  9187  08BB  1903               	btfsc	3,2
  9188  08BC  28D4               	goto	i1l5693
  9189  08BD  0023               	movlb	3	; select bank3
  9190  08BE  1C9E               	btfss	30,1	;volatile
  9191  08BF  28D4               	goto	i1l5693
  9192                           
  9193                           ;main.c: 182: {
  9194                           ;main.c: 184: USART_putcUSART(RS232_Out_Data[RS232cp]);
  9195  08C0  0024               	movlb	4	; select bank4
  9196  08C1  0849               	movf	_RS232cp^(0+512),w
  9197  08C2  3EA0               	addlw	(low (_RS232_Out_Data| (0+1280)))& (0+255)
  9198  08C3  0086               	movwf	6
  9199  08C4  3005               	movlw	5	; select bank11/12
  9200  08C5  0087               	movwf	7
  9201  08C6  0801               	movf	1,w
  9202  08C7  319E  26B6  3188   	fcall	_USART_putcUSART
  9203                           
  9204                           ;main.c: 185: ++RS232cp;
  9205  08CA  3001               	movlw	1
  9206  08CB  0021               	movlb	1	; select bank1
  9207  08CC  00E1               	movwf	??_main_CDC_to_RS485_Tasks^(0+128)
  9208  08CD  0861               	movf	??_main_CDC_to_RS485_Tasks^(0+128),w
  9209  08CE  0024               	movlb	4	; select bank4
  9210  08CF  07C9               	addwf	_RS232cp^(0+512),f
  9211                           
  9212                           ;main.c: 186: if (RS232cp == LastRS232Out) {
  9213  08D0  0849               	movf	_RS232cp^(0+512),w
  9214  08D1  064A               	xorwf	_LastRS232Out^(0+512),w
  9215  08D2  1903               	btfsc	3,2
  9216                           
  9217                           ;main.c: 187: RS232_Out_Data_Rdy = 0;
  9218  08D3  01C8               	clrf	_RS232_Out_Data_Rdy^(0+512)
  9219  08D4                     i1l5693:	
  9220                           
  9221                           ;main.c: 188: }
  9222                           ;main.c: 189: }
  9223                           ;main.c: 193: if(PIR1bits.RCIF && (NextUSBOut < (64 - 1)))
  9224  08D4  0020               	movlb	0	; select bank0
  9225  08D5  1E91               	btfss	17,5	;volatile
  9226  08D6  28F5               	goto	i1l5703
  9227  08D7  303F               	movlw	63
  9228  08D8  0023               	movlb	3	; select bank3
  9229  08D9  025F               	subwf	_NextUSBOut^(0+384),w
  9230  08DA  1803               	skipnc
  9231  08DB  28F5               	goto	i1l5703
  9232                           
  9233                           ;main.c: 194: {
  9234                           ;main.c: 195: USB_Out_Buffer[NextUSBOut] = USART_getcUSART();
  9235  08DC  319F  271F  3188   	fcall	_USART_getcUSART
  9236  08DF  0021               	movlb	1	; select bank1
  9237  08E0  00E1               	movwf	??_main_CDC_to_RS485_Tasks^(0+128)
  9238  08E1  0023               	movlb	3	; select bank3
  9239  08E2  085F               	movf	_NextUSBOut^(0+384),w
  9240  08E3  3E20               	addlw	(low (_USB_Out_Buffer| (0+1024)))& (0+255)
  9241  08E4  0086               	movwf	6
  9242  08E5  3004               	movlw	4	; select bank8/9
  9243  08E6  0087               	movwf	7
  9244  08E7  0021               	movlb	1	; select bank1
  9245  08E8  0861               	movf	??_main_CDC_to_RS485_Tasks^(0+128),w
  9246  08E9  0081               	movwf	1
  9247                           
  9248                           ;main.c: 196: ++NextUSBOut;
  9249  08EA  3001               	movlw	1
  9250  08EB  00E1               	movwf	??_main_CDC_to_RS485_Tasks^(0+128)
  9251  08EC  0861               	movf	??_main_CDC_to_RS485_Tasks^(0+128),w
  9252  08ED  0023               	movlb	3	; select bank3
  9253  08EE  07DF               	addwf	_NextUSBOut^(0+384),f
  9254                           
  9255                           ;main.c: 197: USB_Out_Buffer[NextUSBOut] = 0;
  9256  08EF  085F               	movf	_NextUSBOut^(0+384),w
  9257  08F0  3E20               	addlw	(low (_USB_Out_Buffer| (0+1024)))& (0+255)
  9258  08F1  0086               	movwf	6
  9259  08F2  3004               	movlw	4	; select bank8/9
  9260  08F3  0087               	movwf	7
  9261  08F4  0181               	clrf	1
  9262  08F5                     i1l5703:	
  9263                           
  9264                           ;main.c: 198: }
  9265                           ;main.c: 203: if(((cdc_trf_state2 == 0)) && (NextUSBOut > 0))
  9266  08F5  0023               	movlb	3	; select bank3
  9267  08F6  0862               	movf	_cdc_trf_state2^(0+384),w
  9268  08F7  1D03               	btfss	3,2
  9269  08F8  2907               	goto	i1l5711
  9270  08F9  085F               	movf	_NextUSBOut^(0+384),w
  9271  08FA  1903               	btfsc	3,2
  9272  08FB  2907               	goto	i1l5711
  9273                           
  9274                           ;main.c: 204: {
  9275                           ;main.c: 205: putUSBUSART2(&USB_Out_Buffer[0], NextUSBOut);
  9276  08FC  085F               	movf	_NextUSBOut^(0+384),w
  9277  08FD  0021               	movlb	1	; select bank1
  9278  08FE  00E1               	movwf	??_main_CDC_to_RS485_Tasks^(0+128)
  9279  08FF  0861               	movf	??_main_CDC_to_RS485_Tasks^(0+128),w
  9280  0900  00F0               	movwf	putUSBUSART2@length
  9281  0901  3020               	movlw	(low (_USB_Out_Buffer| (0+1024)))& (0+255)
  9282  0902  319F  2743  3188   	fcall	_putUSBUSART2
  9283                           
  9284                           ;main.c: 206: NextUSBOut = 0;
  9285  0905  0023               	movlb	3	; select bank3
  9286  0906  01DF               	clrf	_NextUSBOut^(0+384)
  9287  0907                     i1l5711:	
  9288                           
  9289                           ;main.c: 207: }
  9290                           ;main.c: 209: CDCTxService2();
  9291  0907  318D  2547         	fcall	_CDCTxService2
  9292  0909  0008               	return
  9293  090A                     __end_of_main_CDC_to_RS485_Tasks:	
  9294                           
  9295                           	psect	text37
  9296  1F43                     __ptext37:	
  9297 ;; *************** function _putUSBUSART2 *****************
  9298 ;; Defined at:
  9299 ;;		line 556 in file "usb/core/usb_device_cdc2.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;  data            1    wreg     PTR unsigned char 
  9302 ;;		 -> USB_Out_Buffer(64), 
  9303 ;;  length          1    0[COMMON] unsigned char 
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;  data            1    2[COMMON] PTR unsigned char 
  9306 ;;		 -> USB_Out_Buffer(64), 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      void 
  9309 ;; Registers used:
  9310 ;;		wreg, status,2, status,0
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9316 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9319 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9320 ;;Total ram usage:        3 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; This function calls:
  9323 ;;		Nothing
  9324 ;; This function is called by:
  9325 ;;		_main_CDC_to_RS485_Tasks
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           
  9330                           ;psect for function _putUSBUSART2
  9331  1F43                     _putUSBUSART2:	
  9332                           
  9333                           ;incstack = 0
  9334                           ; Regs used in _putUSBUSART2: [wreg+status,2+status,0]
  9335                           ;putUSBUSART2@data stored from wreg
  9336  1F43  00F2               	movwf	putUSBUSART2@data
  9337                           
  9338                           ;usb_device_cdc2.c: 581: ;
  9339                           ;usb_device_cdc2.c: 582: if(cdc_trf_state2 == 0)
  9340  1F44  0023               	movlb	3	; select bank3
  9341  1F45  0862               	movf	_cdc_trf_state2^(0+384),w
  9342  1F46  1D03               	btfss	3,2
  9343  1F47  0008               	return
  9344                           
  9345                           ;usb_device_cdc2.c: 583: {
  9346                           ;usb_device_cdc2.c: 584: { pCDCSrc2.bRam = (uint8_t*)data; cdc_tx_len2 = length; cdc_mem
      +                          _type2 = 0x01; cdc_trf_state2 = 1; };
  9347  1F48  0872               	movf	putUSBUSART2@data,w
  9348  1F49  00F1               	movwf	??_putUSBUSART2
  9349  1F4A  0871               	movf	??_putUSBUSART2,w
  9350  1F4B  0024               	movlb	4	; select bank4
  9351  1F4C  00B7               	movwf	_pCDCSrc2^(0+512)
  9352  1F4D  0870               	movf	putUSBUSART2@length,w
  9353  1F4E  00F1               	movwf	??_putUSBUSART2
  9354  1F4F  0871               	movf	??_putUSBUSART2,w
  9355  1F50  0023               	movlb	3	; select bank3
  9356  1F51  00E1               	movwf	_cdc_tx_len2^(0+384)
  9357  1F52  0024               	movlb	4	; select bank4
  9358  1F53  01CF               	clrf	_cdc_mem_type2^(0+512)
  9359  1F54  0ACF               	incf	_cdc_mem_type2^(0+512),f
  9360  1F55  0023               	movlb	3	; select bank3
  9361  1F56  01E2               	clrf	_cdc_trf_state2^(0+384)
  9362  1F57  0AE2               	incf	_cdc_trf_state2^(0+384),f
  9363  1F58  0008               	return
  9364  1F59                     __end_of_putUSBUSART2:	
  9365                           
  9366                           	psect	text38
  9367  13A6                     __ptext38:	
  9368 ;; *************** function _getsUSBUSART2 *****************
  9369 ;; Defined at:
  9370 ;;		line 485 in file "usb/core/usb_device_cdc2.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;  buffer          1    wreg     PTR unsigned char 
  9373 ;;		 -> RS232_Out_Data(64), 
  9374 ;;  len             1   11[COMMON] unsigned char 
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;  buffer          1    0[BANK1 ] PTR unsigned char 
  9377 ;;		 -> RS232_Out_Data(64), 
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  1    wreg      unsigned char 
  9380 ;; Registers used:
  9381 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9387 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
  9389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9390 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0
  9391 ;;Total ram usage:        4 bytes
  9392 ;; Hardware stack levels used:    1
  9393 ;; Hardware stack levels required when called:    1
  9394 ;; This function calls:
  9395 ;;		i1_USBTransferOnePacket
  9396 ;; This function is called by:
  9397 ;;		_main_CDC_to_RS485_Tasks
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           
  9402                           ;psect for function _getsUSBUSART2
  9403  13A6                     _getsUSBUSART2:	
  9404                           
  9405                           ;incstack = 0
  9406                           ; Regs used in _getsUSBUSART2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9407                           ;getsUSBUSART2@buffer stored from wreg
  9408  13A6  0021               	movlb	1	; select bank1
  9409  13A7  00E0               	movwf	getsUSBUSART2@buffer^(0+128)
  9410                           
  9411                           ;usb_device_cdc2.c: 487: cdc_rx_len2 = 0;
  9412  13A8  0023               	movlb	3	; select bank3
  9413  13A9  01E3               	clrf	_cdc_rx_len2^(0+384)
  9414                           
  9415                           ;usb_device_cdc2.c: 489: if(!((CDCDataOutHandle2 != 0x0000) && ((*(volatile uint8_t*)CDC
      +                          DataOutHandle2 & 0x80) != 0x00)))
  9416  13AA  0024               	movlb	4	; select bank4
  9417  13AB  0833               	movf	_CDCDataOutHandle2^(0+512),w
  9418  13AC  0434               	iorwf	(_CDCDataOutHandle2+1)^(0+512),w
  9419  13AD  1903               	btfsc	3,2
  9420  13AE  2BB5               	goto	i1l5153
  9421  13AF  0833               	movf	_CDCDataOutHandle2^(0+512),w
  9422  13B0  0086               	movwf	6
  9423  13B1  0834               	movf	(_CDCDataOutHandle2+1)^(0+512),w
  9424  13B2  0087               	movwf	7
  9425  13B3  1B81               	btfsc	1,7
  9426  13B4  2BF5               	goto	i1l5167
  9427  13B5                     i1l5153:	
  9428                           
  9429                           ;usb_device_cdc2.c: 490: {
  9430                           ;usb_device_cdc2.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle2)->CNT))
  9431  13B5  0833               	movf	_CDCDataOutHandle2^(0+512),w
  9432  13B6  0086               	movwf	6
  9433  13B7  0834               	movf	(_CDCDataOutHandle2+1)^(0+512),w
  9434  13B8  0087               	movwf	7
  9435  13B9  3141               	addfsr 1,1
  9436  13BA  087B               	movf	getsUSBUSART2@len,w
  9437  13BB  0201               	subwf	1,w
  9438  13BC  1803               	skipnc
  9439  13BD  2BC7               	goto	i1l5157
  9440                           
  9441                           ;usb_device_cdc2.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle2)->CNT);
  9442  13BE  0833               	movf	_CDCDataOutHandle2^(0+512),w
  9443  13BF  0086               	movwf	6
  9444  13C0  0834               	movf	(_CDCDataOutHandle2+1)^(0+512),w
  9445  13C1  0087               	movwf	7
  9446  13C2  3141               	addfsr 1,1
  9447  13C3  0801               	movf	1,w
  9448  13C4  00FC               	movwf	??_getsUSBUSART2
  9449  13C5  087C               	movf	??_getsUSBUSART2,w
  9450  13C6  00FB               	movwf	getsUSBUSART2@len
  9451  13C7                     i1l5157:	
  9452                           
  9453                           ;usb_device_cdc2.c: 501: for(cdc_rx_len2 = 0; cdc_rx_len2 < len; cdc_rx_len2++)
  9454  13C7  0023               	movlb	3	; select bank3
  9455  13C8  01E3               	clrf	_cdc_rx_len2^(0+384)
  9456  13C9                     i1l5163:	
  9457  13C9  087B               	movf	getsUSBUSART2@len,w
  9458  13CA  0263               	subwf	_cdc_rx_len2^(0+384),w
  9459  13CB  1803               	btfsc	3,0
  9460  13CC  2BE4               	goto	i1l5165
  9461                           
  9462                           ;usb_device_cdc2.c: 502: buffer[cdc_rx_len2] = cdc_data_rx2[cdc_rx_len2];
  9463  13CD  0863               	movf	_cdc_rx_len2^(0+384),w
  9464  13CE  3E20               	addlw	32
  9465  13CF  0086               	movwf	6
  9466  13D0  3001               	movlw	1	; select bank2/3
  9467  13D1  0087               	movwf	7
  9468  13D2  0801               	movf	1,w
  9469  13D3  00FC               	movwf	??_getsUSBUSART2
  9470  13D4  0863               	movf	_cdc_rx_len2^(0+384),w
  9471  13D5  0021               	movlb	1	; select bank1
  9472  13D6  0760               	addwf	getsUSBUSART2@buffer^(0+128),w
  9473  13D7  00FD               	movwf	??_getsUSBUSART2+1
  9474  13D8  087D               	movf	??_getsUSBUSART2+1,w
  9475  13D9  0086               	movwf	6
  9476  13DA  3005               	movlw	5	; select bank10/11
  9477  13DB  0087               	movwf	7
  9478  13DC  087C               	movf	??_getsUSBUSART2,w
  9479  13DD  0081               	movwf	1
  9480  13DE  3001               	movlw	1
  9481  13DF  00FC               	movwf	??_getsUSBUSART2
  9482  13E0  087C               	movf	??_getsUSBUSART2,w
  9483  13E1  0023               	movlb	3	; select bank3
  9484  13E2  07E3               	addwf	_cdc_rx_len2^(0+384),f
  9485  13E3  2BC9               	goto	i1l5163
  9486  13E4                     i1l5165:	
  9487                           
  9488                           ;usb_device_cdc2.c: 508: CDCDataOutHandle2 = USBTransferOnePacket(4,0,(uint8_t*)&cdc_dat
      +                          a_rx2,sizeof(cdc_data_rx2));
  9489  13E4  01F0               	clrf	i1USBTransferOnePacket@dir
  9490  13E5  3020               	movlw	32
  9491  13E6  00F1               	movwf	i1USBTransferOnePacket@data
  9492  13E7  3001               	movlw	1
  9493  13E8  00F2               	movwf	i1USBTransferOnePacket@data+1
  9494  13E9  3040               	movlw	64
  9495  13EA  00FC               	movwf	??_getsUSBUSART2
  9496  13EB  087C               	movf	??_getsUSBUSART2,w
  9497  13EC  00F3               	movwf	i1USBTransferOnePacket@len
  9498  13ED  3004               	movlw	4
  9499  13EE  318A  228B         	fcall	i1_USBTransferOnePacket
  9500  13F0  0871               	movf	?i1_USBTransferOnePacket+1,w
  9501  13F1  0024               	movlb	4	; select bank4
  9502  13F2  00B4               	movwf	(_CDCDataOutHandle2+1)^(0+512)
  9503  13F3  0870               	movf	?i1_USBTransferOnePacket,w
  9504  13F4  00B3               	movwf	_CDCDataOutHandle2^(0+512)
  9505  13F5                     i1l5167:	
  9506                           
  9507                           ;usb_device_cdc2.c: 510: }
  9508                           ;usb_device_cdc2.c: 512: return cdc_rx_len2;
  9509  13F5  0023               	movlb	3	; select bank3
  9510  13F6  0863               	movf	_cdc_rx_len2^(0+384),w
  9511  13F7  0008               	return
  9512  13F8                     __end_of_getsUSBUSART2:	
  9513                           
  9514                           	psect	text39
  9515  1EB6                     __ptext39:	
  9516 ;; *************** function _USART_putcUSART *****************
  9517 ;; Defined at:
  9518 ;;		line 66 in file "app_uart_usb_utils.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;  c               1    wreg     unsigned char 
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;  c               1    0[COMMON] unsigned char 
  9523 ;; Return value:  Size  Location     Type
  9524 ;;                  1    wreg      void 
  9525 ;; Registers used:
  9526 ;;		wreg
  9527 ;; Tracked objects:
  9528 ;;		On entry : 0/0
  9529 ;;		On exit  : 0/0
  9530 ;;		Unchanged: 0/0
  9531 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9535 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9536 ;;Total ram usage:        1 bytes
  9537 ;; Hardware stack levels used:    1
  9538 ;; This function calls:
  9539 ;;		Nothing
  9540 ;; This function is called by:
  9541 ;;		_main_CDC_to_RS485_Tasks
  9542 ;; This function uses a non-reentrant model
  9543 ;;
  9544                           
  9545                           
  9546                           ;psect for function _USART_putcUSART
  9547  1EB6                     _USART_putcUSART:	
  9548                           
  9549                           ;incstack = 0
  9550                           ; Regs used in _USART_putcUSART: [wreg]
  9551                           ;USART_putcUSART@c stored from wreg
  9552  1EB6  00F0               	movwf	USART_putcUSART@c
  9553                           
  9554                           ;app_uart_usb_utils.c: 68: TXREG = c;
  9555  1EB7  0870               	movf	USART_putcUSART@c,w
  9556  1EB8  0023               	movlb	3	; select bank3
  9557  1EB9  009A               	movwf	26	;volatile
  9558  1EBA  0008               	return
  9559  1EBB                     __end_of_USART_putcUSART:	
  9560                           
  9561                           	psect	text40
  9562  1F1F                     __ptext40:	
  9563 ;; *************** function _USART_getcUSART *****************
  9564 ;; Defined at:
  9565 ;;		line 142 in file "app_uart_usb_utils.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;		None
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;  c               1    1[COMMON] unsigned char 
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  1    wreg      unsigned char 
  9572 ;; Registers used:
  9573 ;;		wreg
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9581 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9583 ;;Total ram usage:        2 bytes
  9584 ;; Hardware stack levels used:    1
  9585 ;; This function calls:
  9586 ;;		Nothing
  9587 ;; This function is called by:
  9588 ;;		_main_CDC_to_RS485_Tasks
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           
  9593                           ;psect for function _USART_getcUSART
  9594  1F1F                     _USART_getcUSART:	
  9595                           
  9596                           ;app_uart_usb_utils.c: 144: char c;
  9597                           ;app_uart_usb_utils.c: 146: if (RCSTAbits.OERR)
  9598                           
  9599                           ;incstack = 0
  9600                           ; Regs used in _USART_getcUSART: [wreg]
  9601  1F1F  0023               	movlb	3	; select bank3
  9602  1F20  1C9D               	btfss	29,1	;volatile
  9603  1F21  2F29               	goto	i1l5257
  9604                           
  9605                           ;app_uart_usb_utils.c: 147: {
  9606                           ;app_uart_usb_utils.c: 148: RCSTAbits.CREN = 0;
  9607  1F22  121D               	bcf	29,4	;volatile
  9608                           
  9609                           ;app_uart_usb_utils.c: 149: c = RCREG;
  9610  1F23  0819               	movf	25,w	;volatile
  9611  1F24  00F0               	movwf	??_USART_getcUSART
  9612  1F25  0870               	movf	??_USART_getcUSART,w
  9613  1F26  00F1               	movwf	USART_getcUSART@c
  9614                           
  9615                           ;app_uart_usb_utils.c: 150: RCSTAbits.CREN = 1;
  9616  1F27  161D               	bsf	29,4	;volatile
  9617                           
  9618                           ;app_uart_usb_utils.c: 151: }
  9619  1F28  2F2D               	goto	i1l1216
  9620  1F29                     i1l5257:	
  9621                           
  9622                           ;app_uart_usb_utils.c: 152: else
  9623                           ;app_uart_usb_utils.c: 153: {
  9624                           ;app_uart_usb_utils.c: 154: c = RCREG;
  9625  1F29  0819               	movf	25,w	;volatile
  9626  1F2A  00F0               	movwf	??_USART_getcUSART
  9627  1F2B  0870               	movf	??_USART_getcUSART,w
  9628  1F2C  00F1               	movwf	USART_getcUSART@c
  9629  1F2D                     i1l1216:	
  9630                           
  9631                           ;app_uart_usb_utils.c: 155: }
  9632                           ;app_uart_usb_utils.c: 160: return c;
  9633  1F2D  0871               	movf	USART_getcUSART@c,w
  9634  1F2E  0008               	return
  9635  1F2F                     __end_of_USART_getcUSART:	
  9636                           
  9637                           	psect	text41
  9638  0D47                     __ptext41:	
  9639 ;; *************** function _CDCTxService2 *****************
  9640 ;; Defined at:
  9641 ;;		line 836 in file "usb/core/usb_device_cdc2.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;		None
  9644 ;; Auto vars:     Size  Location     Type
  9645 ;;  byte_to_send    1   13[COMMON] unsigned char 
  9646 ;;  i               1   12[COMMON] unsigned char 
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1    wreg      void 
  9649 ;; Registers used:
  9650 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9659 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9660 ;;Total ram usage:        3 bytes
  9661 ;; Hardware stack levels used:    1
  9662 ;; Hardware stack levels required when called:    1
  9663 ;; This function calls:
  9664 ;;		i1_USBTransferOnePacket
  9665 ;; This function is called by:
  9666 ;;		_main_CDC_to_RS485_Tasks
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           
  9671                           ;psect for function _CDCTxService2
  9672  0D47                     _CDCTxService2:	
  9673                           
  9674                           ;usb_device_cdc2.c: 838: uint8_t byte_to_send;
  9675                           ;usb_device_cdc2.c: 839: uint8_t i;
  9676                           ;usb_device_cdc2.c: 841: ;
  9677                           ;usb_device_cdc2.c: 843: {};
  9678                           ;usb_device_cdc2.c: 845: if(((CDCDataInHandle2 != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taInHandle2 & 0x80) != 0x00)))
  9679                           
  9680                           ;incstack = 0
  9681                           ; Regs used in _CDCTxService2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9682  0D47  0024               	movlb	4	; select bank4
  9683  0D48  0831               	movf	_CDCDataInHandle2^(0+512),w
  9684  0D49  0432               	iorwf	(_CDCDataInHandle2+1)^(0+512),w
  9685  0D4A  1903               	btfsc	3,2
  9686  0D4B  2D52               	goto	i1l5185
  9687  0D4C  0831               	movf	_CDCDataInHandle2^(0+512),w
  9688  0D4D  0086               	movwf	6
  9689  0D4E  0832               	movf	(_CDCDataInHandle2+1)^(0+512),w
  9690  0D4F  0087               	movwf	7
  9691  0D50  1B81               	btfsc	1,7
  9692  0D51  0008               	return
  9693  0D52                     i1l5185:	
  9694                           ;usb_device_cdc2.c: 846: {
  9695                           ;usb_device_cdc2.c: 847: ;
  9696                           ;usb_device_cdc2.c: 848: return;
  9697                           
  9698                           
  9699                           ;usb_device_cdc2.c: 849: }
  9700                           ;usb_device_cdc2.c: 856: if(cdc_trf_state2 == 3)
  9701  0D52  3003               	movlw	3
  9702  0D53  0023               	movlb	3	; select bank3
  9703  0D54  0662               	xorwf	_cdc_trf_state2^(0+384),w
  9704  0D55  1903               	btfsc	3,2
  9705                           
  9706                           ;usb_device_cdc2.c: 857: cdc_trf_state2 = 0;
  9707  0D56  01E2               	clrf	_cdc_trf_state2^(0+384)
  9708                           
  9709                           ;usb_device_cdc2.c: 862: if(cdc_trf_state2 == 0)
  9710  0D57  0862               	movf	_cdc_trf_state2^(0+384),w
  9711  0D58  1903               	btfsc	3,2
  9712  0D59  0008               	return
  9713                           
  9714                           ;usb_device_cdc2.c: 866: }
  9715                           ;usb_device_cdc2.c: 871: if(cdc_trf_state2 == 2)
  9716                           
  9717                           ;usb_device_cdc2.c: 863: {
  9718                           ;usb_device_cdc2.c: 864: ;
  9719                           ;usb_device_cdc2.c: 865: return;
  9720  0D5A  3002               	movlw	2
  9721  0D5B  0662               	xorwf	_cdc_trf_state2^(0+384),w
  9722  0D5C  1D03               	btfss	3,2
  9723  0D5D  2D73               	goto	i1l5199
  9724                           
  9725                           ;usb_device_cdc2.c: 872: {
  9726                           ;usb_device_cdc2.c: 873: CDCDataInHandle2 = USBTransferOnePacket(4,1,(0),0);
  9727  0D5E  01F0               	clrf	i1USBTransferOnePacket@dir
  9728  0D5F  0AF0               	incf	i1USBTransferOnePacket@dir,f
  9729  0D60  3000               	movlw	0
  9730  0D61  00F1               	movwf	i1USBTransferOnePacket@data
  9731  0D62  3000               	movlw	0
  9732  0D63  00F2               	movwf	i1USBTransferOnePacket@data+1
  9733  0D64  01F3               	clrf	i1USBTransferOnePacket@len
  9734  0D65  3004               	movlw	4
  9735  0D66  318A  228B         	fcall	i1_USBTransferOnePacket
  9736  0D68  0871               	movf	?i1_USBTransferOnePacket+1,w
  9737  0D69  0024               	movlb	4	; select bank4
  9738  0D6A  00B2               	movwf	(_CDCDataInHandle2+1)^(0+512)
  9739  0D6B  0870               	movf	?i1_USBTransferOnePacket,w
  9740  0D6C  00B1               	movwf	_CDCDataInHandle2^(0+512)
  9741                           
  9742                           ;usb_device_cdc2.c: 875: cdc_trf_state2 = 3;
  9743  0D6D  3003               	movlw	3
  9744  0D6E  00FB               	movwf	??_CDCTxService2
  9745  0D6F  087B               	movf	??_CDCTxService2,w
  9746  0D70  0023               	movlb	3	; select bank3
  9747  0D71  00E2               	movwf	_cdc_trf_state2^(0+384)
  9748                           
  9749                           ;usb_device_cdc2.c: 876: }
  9750  0D72  0008               	return
  9751  0D73                     i1l5199:	
  9752                           
  9753                           ;usb_device_cdc2.c: 877: else if(cdc_trf_state2 == 1)
  9754  0D73  0362               	decf	_cdc_trf_state2^(0+384),w
  9755  0D74  1D03               	btfss	3,2
  9756  0D75  0008               	return
  9757                           
  9758                           ;usb_device_cdc2.c: 878: {
  9759                           ;usb_device_cdc2.c: 882: if(cdc_tx_len2 > sizeof(cdc_data_tx2))
  9760  0D76  3041               	movlw	65
  9761  0D77  0261               	subwf	_cdc_tx_len2^(0+384),w
  9762  0D78  1C03               	skipc
  9763  0D79  2D7C               	goto	i1l5205
  9764                           
  9765                           ;usb_device_cdc2.c: 883: byte_to_send = sizeof(cdc_data_tx2);
  9766  0D7A  3040               	movlw	64
  9767  0D7B  2D7D               	goto	L12
  9768  0D7C                     i1l5205:	
  9769                           
  9770                           ;usb_device_cdc2.c: 884: else
  9771                           ;usb_device_cdc2.c: 885: byte_to_send = cdc_tx_len2;
  9772  0D7C  0861               	movf	_cdc_tx_len2^(0+384),w
  9773  0D7D                     L12:	
  9774  0D7D  00FB               	movwf	??_CDCTxService2
  9775  0D7E  087B               	movf	??_CDCTxService2,w
  9776  0D7F  00FD               	movwf	CDCTxService2@byte_to_send
  9777                           
  9778                           ;usb_device_cdc2.c: 890: cdc_tx_len2 = cdc_tx_len2 - byte_to_send;
  9779  0D80  037D               	decf	CDCTxService2@byte_to_send,w
  9780  0D81  3AFF               	xorlw	255
  9781  0D82  0761               	addwf	_cdc_tx_len2^(0+384),w
  9782  0D83  00FB               	movwf	??_CDCTxService2
  9783  0D84  087B               	movf	??_CDCTxService2,w
  9784  0D85  00E1               	movwf	_cdc_tx_len2^(0+384)
  9785                           
  9786                           ;usb_device_cdc2.c: 892: pCDCDst2.bRam = (uint8_t*)&cdc_data_tx2;
  9787  0D86  30A0               	movlw	160
  9788  0D87  00FB               	movwf	??_CDCTxService2
  9789  0D88  087B               	movf	??_CDCTxService2,w
  9790  0D89  0024               	movlb	4	; select bank4
  9791  0D8A  00B5               	movwf	_pCDCDst2^(0+512)
  9792                           
  9793                           ;usb_device_cdc2.c: 894: i = byte_to_send;
  9794  0D8B  087D               	movf	CDCTxService2@byte_to_send,w
  9795  0D8C  00FB               	movwf	??_CDCTxService2
  9796  0D8D  087B               	movf	??_CDCTxService2,w
  9797  0D8E  00FC               	movwf	CDCTxService2@i
  9798                           
  9799                           ;usb_device_cdc2.c: 895: if(cdc_mem_type2 == 0x00)
  9800  0D8F  084F               	movf	_cdc_mem_type2^(0+512),w
  9801  0D90  1903               	btfsc	3,2
  9802  0D91  2DA8               	goto	i1l5225
  9803  0D92  2DC1               	goto	i1l5235
  9804  0D93                     i1l5217:	
  9805                           ;usb_device_cdc2.c: 896: {
  9806                           ;usb_device_cdc2.c: 897: while(i)
  9807                           
  9808                           
  9809                           ;usb_device_cdc2.c: 898: {
  9810                           ;usb_device_cdc2.c: 899: *pCDCDst2.bRam = *pCDCSrc2.bRom;
  9811  0D93  0837               	movf	_pCDCSrc2^(0+512),w
  9812  0D94  0086               	movwf	6
  9813  0D95  3004               	movlw	4	; select bank8/9
  9814  0D96  0087               	movwf	7
  9815  0D97  0801               	movf	1,w
  9816  0D98  00FB               	movwf	??_CDCTxService2
  9817  0D99  0835               	movf	_pCDCDst2^(0+512),w
  9818  0D9A  0086               	movwf	6
  9819  0D9B  0187               	clrf	7
  9820  0D9C  087B               	movf	??_CDCTxService2,w
  9821  0D9D  0081               	movwf	1
  9822                           
  9823                           ;usb_device_cdc2.c: 900: pCDCDst2.bRam++;
  9824  0D9E  3001               	movlw	1
  9825  0D9F  00FB               	movwf	??_CDCTxService2
  9826  0DA0  087B               	movf	??_CDCTxService2,w
  9827  0DA1  07B5               	addwf	_pCDCDst2^(0+512),f
  9828                           
  9829                           ;usb_device_cdc2.c: 901: pCDCSrc2.bRom++;
  9830  0DA2  3001               	movlw	1
  9831  0DA3  00FB               	movwf	??_CDCTxService2
  9832  0DA4  087B               	movf	??_CDCTxService2,w
  9833  0DA5  07B7               	addwf	_pCDCSrc2^(0+512),f
  9834                           
  9835                           ;usb_device_cdc2.c: 902: i--;
  9836  0DA6  3001               	movlw	1
  9837  0DA7  02FC               	subwf	CDCTxService2@i,f
  9838  0DA8                     i1l5225:	
  9839  0DA8  087C               	movf	CDCTxService2@i,w
  9840  0DA9  1903               	btfsc	3,2
  9841  0DAA  2DC4               	goto	i1l5237
  9842  0DAB  2D93               	goto	i1l5217
  9843  0DAC                     i1l5227:	
  9844                           ;usb_device_cdc2.c: 905: else
  9845                           ;usb_device_cdc2.c: 906: {
  9846                           ;usb_device_cdc2.c: 907: while(i)
  9847                           
  9848                           ;usb_device_cdc2.c: 903: }
  9849                           ;usb_device_cdc2.c: 904: }
  9850                           
  9851                           
  9852                           ;usb_device_cdc2.c: 908: {
  9853                           ;usb_device_cdc2.c: 909: *pCDCDst2.bRam = *pCDCSrc2.bRam;
  9854  0DAC  0837               	movf	_pCDCSrc2^(0+512),w
  9855  0DAD  0086               	movwf	6
  9856  0DAE  3004               	movlw	4	; select bank8/9
  9857  0DAF  0087               	movwf	7
  9858  0DB0  0801               	movf	1,w
  9859  0DB1  00FB               	movwf	??_CDCTxService2
  9860  0DB2  0835               	movf	_pCDCDst2^(0+512),w
  9861  0DB3  0086               	movwf	6
  9862  0DB4  0187               	clrf	7
  9863  0DB5  087B               	movf	??_CDCTxService2,w
  9864  0DB6  0081               	movwf	1
  9865                           
  9866                           ;usb_device_cdc2.c: 910: pCDCDst2.bRam++;
  9867  0DB7  3001               	movlw	1
  9868  0DB8  00FB               	movwf	??_CDCTxService2
  9869  0DB9  087B               	movf	??_CDCTxService2,w
  9870  0DBA  07B5               	addwf	_pCDCDst2^(0+512),f
  9871                           
  9872                           ;usb_device_cdc2.c: 911: pCDCSrc2.bRam++;
  9873  0DBB  3001               	movlw	1
  9874  0DBC  00FB               	movwf	??_CDCTxService2
  9875  0DBD  087B               	movf	??_CDCTxService2,w
  9876  0DBE  07B7               	addwf	_pCDCSrc2^(0+512),f
  9877                           
  9878                           ;usb_device_cdc2.c: 912: i--;
  9879  0DBF  3001               	movlw	1
  9880  0DC0  02FC               	subwf	CDCTxService2@i,f
  9881  0DC1                     i1l5235:	
  9882  0DC1  087C               	movf	CDCTxService2@i,w
  9883  0DC2  1D03               	btfss	3,2
  9884  0DC3  2DAC               	goto	i1l5227
  9885  0DC4                     i1l5237:	
  9886                           
  9887                           ;usb_device_cdc2.c: 913: }
  9888                           ;usb_device_cdc2.c: 914: }
  9889                           ;usb_device_cdc2.c: 920: if(cdc_tx_len2 == 0)
  9890  0DC4  0023               	movlb	3	; select bank3
  9891  0DC5  0861               	movf	_cdc_tx_len2^(0+384),w
  9892  0DC6  1D03               	btfss	3,2
  9893  0DC7  2DD2               	goto	i1l5245
  9894                           
  9895                           ;usb_device_cdc2.c: 921: {
  9896                           ;usb_device_cdc2.c: 922: if(byte_to_send == 64)
  9897  0DC8  3040               	movlw	64
  9898  0DC9  067D               	xorwf	CDCTxService2@byte_to_send,w
  9899  0DCA  1D03               	btfss	3,2
  9900  0DCB  2DCE               	goto	i1l5243
  9901                           
  9902                           ;usb_device_cdc2.c: 923: cdc_trf_state2 = 2;
  9903  0DCC  3002               	movlw	2
  9904  0DCD  2DCF               	goto	L13
  9905  0DCE                     i1l5243:	
  9906                           
  9907                           ;usb_device_cdc2.c: 924: else
  9908                           ;usb_device_cdc2.c: 925: cdc_trf_state2 = 3;
  9909  0DCE  3003               	movlw	3
  9910  0DCF                     L13:	
  9911  0DCF  00FB               	movwf	??_CDCTxService2
  9912  0DD0  087B               	movf	??_CDCTxService2,w
  9913  0DD1  00E2               	movwf	_cdc_trf_state2^(0+384)
  9914  0DD2                     i1l5245:	
  9915                           
  9916                           ;usb_device_cdc2.c: 926: }
  9917                           ;usb_device_cdc2.c: 927: CDCDataInHandle2 = USBTransferOnePacket(4,1,(uint8_t*)&cdc_data
      +                          _tx2,byte_to_send);
  9918  0DD2  01F0               	clrf	i1USBTransferOnePacket@dir
  9919  0DD3  0AF0               	incf	i1USBTransferOnePacket@dir,f
  9920  0DD4  30A0               	movlw	160
  9921  0DD5  00F1               	movwf	i1USBTransferOnePacket@data
  9922  0DD6  3000               	movlw	0
  9923  0DD7  00F2               	movwf	i1USBTransferOnePacket@data+1
  9924  0DD8  087D               	movf	CDCTxService2@byte_to_send,w
  9925  0DD9  00FB               	movwf	??_CDCTxService2
  9926  0DDA  087B               	movf	??_CDCTxService2,w
  9927  0DDB  00F3               	movwf	i1USBTransferOnePacket@len
  9928  0DDC  3004               	movlw	4
  9929  0DDD  318A  228B         	fcall	i1_USBTransferOnePacket
  9930  0DDF  0871               	movf	?i1_USBTransferOnePacket+1,w
  9931  0DE0  0024               	movlb	4	; select bank4
  9932  0DE1  00B2               	movwf	(_CDCDataInHandle2+1)^(0+512)
  9933  0DE2  0870               	movf	?i1_USBTransferOnePacket,w
  9934  0DE3  00B1               	movwf	_CDCDataInHandle2^(0+512)
  9935  0DE4  0008               	return
  9936  0DE5                     __end_of_CDCTxService2:	
  9937                           
  9938                           	psect	text42
  9939  0547                     __ptext42:	
  9940 ;; *************** function _USBDeviceTasks *****************
  9941 ;; Defined at:
  9942 ;;		line 477 in file "usb/core/usb_device.c"
  9943 ;; Parameters:    Size  Location     Type
  9944 ;;		None
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;  i               1   15[BANK1 ] unsigned char 
  9947 ;; Return value:  Size  Location     Type
  9948 ;;                  1    wreg      void 
  9949 ;; Registers used:
  9950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9951 ;; Tracked objects:
  9952 ;;		On entry : 0/0
  9953 ;;		On exit  : 0/0
  9954 ;;		Unchanged: 0/0
  9955 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
  9958 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0
  9959 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0
  9960 ;;Total ram usage:        3 bytes
  9961 ;; Hardware stack levels used:    1
  9962 ;; Hardware stack levels required when called:    8
  9963 ;; This function calls:
  9964 ;;		_USBCtrlEPAllowStatusStage
  9965 ;;		_USBCtrlEPService
  9966 ;;		_USBIncrement1msInternalTimers
  9967 ;;		_USBStallHandler
  9968 ;;		_USBSuspend
  9969 ;;		_USBWakeFromSuspend
  9970 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9971 ;;		i1_USBDeviceInit
  9972 ;; This function is called by:
  9973 ;;		_INTERRUPT_InterruptManager
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977                           
  9978                           ;psect for function _USBDeviceTasks
  9979  0547                     _USBDeviceTasks:	
  9980                           
  9981                           ;usb_device.c: 544: }
  9982                           ;usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
  9983                           
  9984                           ;usb_device.c: 543: return;
  9985                           
  9986                           ;usb_device.c: 542: PIR2bits.USBIF = 0;;
  9987                           
  9988                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
  9989                           
  9990                           ;usb_device.c: 511: UIE = 0;
  9991                           
  9992                           ;usb_device.c: 506: {
  9993                           ;usb_device.c: 508: UCON = 0;
  9994                           
  9995                           ;usb_device.c: 479: uint8_t i;
  9996                           ;usb_device.c: 505: if (1 != 1)
  9997                           
  9998                           ;incstack = 0
  9999                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10000  0547  0023               	movlb	3	; select bank3
 10001  0548  086B               	movf	_USBDeviceState^(0+384),w
 10002  0549  1D03               	btfss	3,2
 10003  054A  2D5B               	goto	i1l5563
 10004                           
 10005                           ;usb_device.c: 567: {
 10006                           ;usb_device.c: 569: UCON = 0;
 10007  054B  003D               	movlb	29	; select bank29
 10008  054C  018E               	clrf	14	;volatile
 10009                           
 10010                           ;usb_device.c: 572: UIE = 0;
 10011  054D  0192               	clrf	18	;volatile
 10012                           
 10013                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10014  054E  3016               	movlw	22
 10015  054F  0091               	movwf	17	;volatile
 10016  0550  309F               	movlw	159
 10017  0551  0097               	movwf	23	;volatile
 10018  0552  307B               	movlw	123
 10019  0553  0092               	movwf	18	;volatile
 10020  0554                     i1l389:	
 10021                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 10022                           
 10023  0554  198E               	btfsc	14,3	;volatile
 10024  0555  2D58               	goto	i1l391
 10025  0556  158E               	bsf	14,3	;volatile
 10026  0557  2D54               	goto	i1l389
 10027  0558                     i1l391:	
 10028                           
 10029                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 10030  0558  0023               	movlb	3	; select bank3
 10031  0559  01EB               	clrf	_USBDeviceState^(0+384)
 10032  055A  0AEB               	incf	_USBDeviceState^(0+384),f
 10033  055B                     i1l5563:	
 10034                           
 10035                           ;usb_device.c: 587: }
 10036                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 10037  055B  036B               	decf	_USBDeviceState^(0+384),w
 10038  055C  1D03               	btfss	3,2
 10039  055D  2D6B               	goto	i1l5575
 10040                           
 10041                           ;usb_device.c: 591: {
 10042                           ;usb_device.c: 601: if(!UCONbits.SE0)
 10043  055E  003D               	movlb	29	; select bank29
 10044  055F  1A8E               	btfsc	14,5	;volatile
 10045  0560  2D6B               	goto	i1l5575
 10046                           
 10047                           ;usb_device.c: 602: {
 10048                           ;usb_device.c: 608: {UIR = 0;};
 10049  0561  0190               	clrf	16	;volatile
 10050                           
 10051                           ;usb_device.c: 612: UIE=0;
 10052  0562  0192               	clrf	18	;volatile
 10053                           
 10054                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 10055  0563  1412               	bsf	18,0	;volatile
 10056                           
 10057                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 10058  0564  1612               	bsf	18,4	;volatile
 10059                           
 10060                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 10061  0565  3002               	movlw	2
 10062  0566  0022               	movlb	2	; select bank2
 10063  0567  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10064  0568  0863               	movf	??_USBDeviceTasks^(0+256),w
 10065  0569  0023               	movlb	3	; select bank3
 10066  056A  00EB               	movwf	_USBDeviceState^(0+384)
 10067  056B                     i1l5575:	
 10068                           
 10069                           ;usb_device.c: 617: }
 10070                           ;usb_device.c: 618: }
 10071                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 10072  056B  003D               	movlb	29	; select bank29
 10073  056C  1910               	btfsc	16,2	;volatile
 10074  056D  1D12               	btfss	18,2	;volatile
 10075  056E  2D78               	goto	i1l5583
 10076                           
 10077                           ;usb_device.c: 635: {
 10078                           ;usb_device.c: 636: (UIR &= 0xFB);
 10079  056F  30FB               	movlw	251
 10080  0570  0022               	movlb	2	; select bank2
 10081  0571  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10082  0572  0863               	movf	??_USBDeviceTasks^(0+256),w
 10083  0573  003D               	movlb	29	; select bank29
 10084  0574  0590               	andwf	16,f	;volatile
 10085                           
 10086                           ;usb_device.c: 640: USBWakeFromSuspend();
 10087  0575  3191  2111  3185   	fcall	_USBWakeFromSuspend
 10088  0578                     i1l5583:	
 10089                           
 10090                           ;usb_device.c: 642: }
 10091                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 10092  0578  003D               	movlb	29	; select bank29
 10093  0579  1C8E               	btfss	14,1	;volatile
 10094  057A  2D7E               	goto	i1l395
 10095                           
 10096                           ;usb_device.c: 648: {
 10097                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
 10098  057B  0020               	movlb	0	; select bank0
 10099  057C  1112               	bcf	18,2	;volatile
 10100                           
 10101                           ;usb_device.c: 650: return;
 10102  057D  0008               	return
 10103  057E                     i1l395:	
 10104                           
 10105                           ;usb_device.c: 651: }
 10106                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 10107  057E  1810               	btfsc	16,0	;volatile
 10108  057F  1C12               	btfss	18,0	;volatile
 10109  0580  2D90               	goto	i1l5595
 10110                           
 10111                           ;usb_device.c: 664: {
 10112                           ;usb_device.c: 665: USBDeviceInit();
 10113  0581  318D  25E5  3185   	fcall	i1_USBDeviceInit
 10114                           
 10115                           ;usb_device.c: 669: ;
 10116                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 10117  0584  3004               	movlw	4
 10118  0585  0022               	movlb	2	; select bank2
 10119  0586  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10120  0587  0863               	movf	??_USBDeviceTasks^(0+256),w
 10121  0588  0023               	movlb	3	; select bank3
 10122  0589  00EB               	movwf	_USBDeviceState^(0+384)
 10123                           
 10124                           ;usb_device.c: 681: (UIR &= 0xFE);
 10125  058A  30FE               	movlw	254
 10126  058B  0022               	movlb	2	; select bank2
 10127  058C  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10128  058D  0863               	movf	??_USBDeviceTasks^(0+256),w
 10129  058E  003D               	movlb	29	; select bank29
 10130  058F  0590               	andwf	16,f	;volatile
 10131  0590                     i1l5595:	
 10132                           
 10133                           ;usb_device.c: 682: }
 10134                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 10135  0590  1A10               	btfsc	16,4	;volatile
 10136  0591  1E12               	btfss	18,4	;volatile
 10137  0592  2D96               	goto	i1l5601
 10138                           
 10139                           ;usb_device.c: 688: {
 10140                           ;usb_device.c: 694: USBSuspend();
 10141  0593  3190  20B6  3185   	fcall	_USBSuspend
 10142  0596                     i1l5601:	
 10143                           
 10144                           ;usb_device.c: 696: }
 10145                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 10146  0596  003D               	movlb	29	; select bank29
 10147  0597  1F10               	btfss	16,6	;volatile
 10148  0598  2DC0               	goto	i1l5617
 10149                           
 10150                           ;usb_device.c: 709: {
 10151                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 10152  0599  1F12               	btfss	18,6	;volatile
 10153  059A  2DAB               	goto	i1l5607
 10154                           
 10155                           ;usb_device.c: 712: {
 10156                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 10157  059B  3073               	movlw	115
 10158  059C  0021               	movlb	1	; select bank1
 10159  059D  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 10160  059E  3000               	movlw	0
 10161  059F  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
 10162  05A0  3000               	movlw	0
 10163  05A1  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 10164  05A2  3000               	movlw	0
 10165  05A3  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 10166  05A4  3001               	movlw	1
 10167  05A5  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 10168  05A6  3000               	movlw	0
 10169  05A7  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
 10170  05A8  3192  2208  3185   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10171  05AB                     i1l5607:	
 10172                           
 10173                           ;usb_device.c: 714: }
 10174                           ;usb_device.c: 715: (UIR &= 0xBF);
 10175  05AB  30BF               	movlw	191
 10176  05AC  0022               	movlb	2	; select bank2
 10177  05AD  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10178  05AE  0863               	movf	??_USBDeviceTasks^(0+256),w
 10179  05AF  003D               	movlb	29	; select bank29
 10180  05B0  0590               	andwf	16,f	;volatile
 10181                           
 10182                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 10183  05B1  319F  27B5  3185   	fcall	_USBIncrement1msInternalTimers
 10184                           
 10185                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 10186  05B4  0024               	movlb	4	; select bank4
 10187  05B5  0857               	movf	_USBStatusStageTimeoutCounter^(0+512),w
 10188  05B6  1903               	btfsc	3,2
 10189  05B7  2DBA               	goto	i1l400
 10190                           
 10191                           ;usb_device.c: 736: {
 10192                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 10193  05B8  3001               	movlw	1
 10194  05B9  02D7               	subwf	_USBStatusStageTimeoutCounter^(0+512),f
 10195  05BA                     i1l400:	
 10196                           
 10197                           ;usb_device.c: 738: }
 10198                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 10199  05BA  0857               	movf	_USBStatusStageTimeoutCounter^(0+512),w
 10200  05BB  1D03               	btfss	3,2
 10201  05BC  2DC0               	goto	i1l5617
 10202                           
 10203                           ;usb_device.c: 745: {
 10204                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 10205  05BD  3197  2721  3185   	fcall	_USBCtrlEPAllowStatusStage
 10206  05C0                     i1l5617:	
 10207                           
 10208                           ;usb_device.c: 747: }
 10209                           ;usb_device.c: 749: }
 10210                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 10211  05C0  003D               	movlb	29	; select bank29
 10212  05C1  1A90               	btfsc	16,5	;volatile
 10213  05C2  1E92               	btfss	18,5	;volatile
 10214  05C3  2DC7               	goto	i1l5623
 10215                           
 10216                           ;usb_device.c: 752: {
 10217                           ;usb_device.c: 753: USBStallHandler();
 10218  05C4  3191  2155  3185   	fcall	_USBStallHandler
 10219  05C7                     i1l5623:	
 10220                           
 10221                           ;usb_device.c: 754: }
 10222                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 10223  05C7  003D               	movlb	29	; select bank29
 10224  05C8  1890               	btfsc	16,1	;volatile
 10225  05C9  1C92               	btfss	18,1	;volatile
 10226  05CA  2DDD               	goto	i1l5631
 10227                           
 10228                           ;usb_device.c: 757: {
 10229                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 10230  05CB  30FF               	movlw	255
 10231  05CC  0021               	movlb	1	; select bank1
 10232  05CD  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 10233  05CE  307F               	movlw	127
 10234  05CF  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
 10235  05D0  3000               	movlw	0
 10236  05D1  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 10237  05D2  3000               	movlw	0
 10238  05D3  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 10239  05D4  3001               	movlw	1
 10240  05D5  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 10241  05D6  3000               	movlw	0
 10242  05D7  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
 10243  05D8  3192  2208  3185   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10244                           
 10245                           ;usb_device.c: 759: {UEIR = 0;};
 10246  05DB  003D               	movlb	29	; select bank29
 10247  05DC  0193               	clrf	19	;volatile
 10248  05DD                     i1l5631:	
 10249                           
 10250                           ;usb_device.c: 767: }
 10251                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 10252  05DD  3004               	movlw	4
 10253  05DE  0023               	movlb	3	; select bank3
 10254  05DF  026B               	subwf	_USBDeviceState^(0+384),w
 10255  05E0  1803               	skipnc
 10256  05E1  2DE5               	goto	i1l404
 10257                           
 10258                           ;usb_device.c: 775: {
 10259                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
 10260  05E2  0020               	movlb	0	; select bank0
 10261  05E3  1112               	bcf	18,2	;volatile
 10262                           
 10263                           ;usb_device.c: 777: return;
 10264  05E4  0008               	return
 10265  05E5                     i1l404:	
 10266                           
 10267                           ;usb_device.c: 778: }
 10268                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 10269  05E5  003D               	movlb	29	; select bank29
 10270  05E6  1D92               	btfss	18,3	;volatile
 10271  05E7  2E40               	goto	i1l405
 10272                           
 10273                           ;usb_device.c: 784: {
 10274                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 10275  05E8  0021               	movlb	1	; select bank1
 10276  05E9  01EF               	clrf	USBDeviceTasks@i^(0+128)
 10277  05EA  3004               	movlw	4
 10278  05EB  026F               	subwf	USBDeviceTasks@i^(0+128),w
 10279  05EC  1803               	btfsc	3,0
 10280  05ED  2E40               	goto	i1l405
 10281  05EE                     i1l406:	
 10282                           
 10283                           ;usb_device.c: 786: {
 10284                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 10285  05EE  003D               	movlb	29	; select bank29
 10286  05EF  1D90               	btfss	16,3	;volatile
 10287  05F0  2E40               	goto	i1l405
 10288                           
 10289                           ;usb_device.c: 788: {
 10290                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 10291  05F1  080F               	movf	15,w	;volatile
 10292  05F2  0022               	movlb	2	; select bank2
 10293  05F3  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10294  05F4  0863               	movf	??_USBDeviceTasks^(0+256),w
 10295  05F5  0023               	movlb	3	; select bank3
 10296  05F6  00EE               	movwf	_USTATcopy^(0+384)
 10297                           
 10298                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 10299  05F7  0C6E               	rrf	_USTATcopy^(0+384),w
 10300  05F8  0022               	movlb	2	; select bank2
 10301  05F9  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10302  05FA  0CE3               	rrf	??_USBDeviceTasks^(0+256),f
 10303  05FB  0C63               	rrf	??_USBDeviceTasks^(0+256),w
 10304  05FC  390F               	andlw	15
 10305  05FD  00E4               	movwf	(??_USBDeviceTasks+1)^(0+256)
 10306  05FE  0864               	movf	(??_USBDeviceTasks+1)^(0+256),w
 10307  05FF  0024               	movlb	4	; select bank4
 10308  0600  00D9               	movwf	_endpoint_number^(0+512)
 10309                           
 10310                           ;usb_device.c: 793: (UIR &= 0xF7);
 10311  0601  30F7               	movlw	247
 10312  0602  0022               	movlb	2	; select bank2
 10313  0603  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10314  0604  0863               	movf	??_USBDeviceTasks^(0+256),w
 10315  0605  003D               	movlb	29	; select bank29
 10316  0606  0590               	andwf	16,f	;volatile
 10317                           
 10318                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 10319  0607  0023               	movlb	3	; select bank3
 10320  0608  196E               	btfsc	_USTATcopy^(0+384),2
 10321  0609  2E0E               	goto	i1l5651
 10322                           
 10323                           ;usb_device.c: 799: {
 10324                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 10325  060A  0024               	movlb	4	; select bank4
 10326  060B  0859               	movf	_endpoint_number^(0+512),w
 10327  060C  3EB4               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 10328  060D  2E11               	goto	L14
 10329  060E                     i1l5651:	
 10330                           ;usb_device.c: 801: }
 10331                           
 10332                           
 10333                           ;usb_device.c: 802: else
 10334                           ;usb_device.c: 803: {
 10335                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 10336  060E  0024               	movlb	4	; select bank4
 10337  060F  0859               	movf	_endpoint_number^(0+512),w
 10338  0610  3EB9               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 10339  0611                     L14:	
 10340  0611  0086               	movwf	6
 10341  0612  3002               	movlw	2	; select bank5/6
 10342  0613  0087               	movwf	7
 10343  0614  0801               	movf	1,w
 10344  0615  3901               	andlw	1
 10345  0616  0022               	movlb	2	; select bank2
 10346  0617  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10347  0618  3001               	movlw	1
 10348  0619  06E3               	xorwf	??_USBDeviceTasks^(0+256),f
 10349  061A  0801               	movf	1,w
 10350  061B  0663               	xorwf	??_USBDeviceTasks^(0+256),w
 10351  061C  39FE               	andlw	-2
 10352  061D  0663               	xorwf	??_USBDeviceTasks^(0+256),w
 10353  061E  0081               	movwf	1
 10354                           
 10355                           ;usb_device.c: 805: }
 10356                           ;usb_device.c: 810: if(endpoint_number == 0)
 10357  061F  0024               	movlb	4	; select bank4
 10358  0620  0859               	movf	_endpoint_number^(0+512),w
 10359  0621  1D03               	btfss	3,2
 10360  0622  2E27               	goto	i1l5657
 10361                           
 10362                           ;usb_device.c: 811: {
 10363                           ;usb_device.c: 812: USBCtrlEPService();
 10364  0623  3196  2600  3185   	fcall	_USBCtrlEPService
 10365                           
 10366                           ;usb_device.c: 813: }
 10367  0626  2E36               	goto	i1l5659
 10368  0627                     i1l5657:	
 10369                           
 10370                           ;usb_device.c: 814: else
 10371                           ;usb_device.c: 815: {
 10372                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 10373  0627  3072               	movlw	114
 10374  0628  0021               	movlb	1	; select bank1
 10375  0629  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 10376  062A  3000               	movlw	0
 10377  062B  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
 10378  062C  30EE               	movlw	low _USTATcopy
 10379  062D  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 10380  062E  3001               	movlw	high _USTATcopy
 10381  062F  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 10382  0630  3000               	movlw	0
 10383  0631  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 10384  0632  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
 10385  0633  3192  2208  3185   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10386  0636                     i1l5659:	
 10387                           ;usb_device.c: 819: else
 10388                           ;usb_device.c: 820: {
 10389                           ;usb_device.c: 821: break;
 10390                           
 10391                           ;usb_device.c: 817: }
 10392                           ;usb_device.c: 818: }
 10393                           
 10394  0636  3001               	movlw	1
 10395  0637  0022               	movlb	2	; select bank2
 10396  0638  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10397  0639  0863               	movf	??_USBDeviceTasks^(0+256),w
 10398  063A  0021               	movlb	1	; select bank1
 10399  063B  07EF               	addwf	USBDeviceTasks@i^(0+128),f
 10400  063C  3004               	movlw	4
 10401  063D  026F               	subwf	USBDeviceTasks@i^(0+128),w
 10402  063E  1C03               	skipc
 10403  063F  2DEE               	goto	i1l406
 10404  0640                     i1l405:	
 10405                           
 10406                           ;usb_device.c: 822: }
 10407                           ;usb_device.c: 823: }
 10408                           ;usb_device.c: 824: }
 10409                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
 10410  0640  0020               	movlb	0	; select bank0
 10411  0641  1112               	bcf	18,2	;volatile
 10412  0642  0008               	return
 10413  0643                     __end_of_USBDeviceTasks:	
 10414                           
 10415                           	psect	text43
 10416  0DE5                     __ptext43:	
 10417 ;; *************** function i1_USBDeviceInit *****************
 10418 ;; Defined at:
 10419 ;;		line 277 in file "usb/core/usb_device.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;		None
 10422 ;; Auto vars:     Size  Location     Type
 10423 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
 10424 ;;		 -> UEP1(1), 
 10425 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
 10426 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      void 
 10429 ;; Registers used:
 10430 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 10436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10437 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10439 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10440 ;;Total ram usage:        5 bytes
 10441 ;; Hardware stack levels used:    1
 10442 ;; This function calls:
 10443 ;;		Nothing
 10444 ;; This function is called by:
 10445 ;;		_USBDeviceTasks
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449                           
 10450                           ;psect for function i1_USBDeviceInit
 10451  0DE5                     i1_USBDeviceInit:	
 10452                           
 10453                           ;usb_device.c: 279: uint8_t i;
 10454                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 10455                           
 10456                           ;incstack = 0
 10457                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 10458  0DE5  0021               	movlb	1	; select bank1
 10459  0DE6  1112               	bcf	18,2	;volatile
 10460                           
 10461                           ;usb_device.c: 285: ;
 10462                           ;usb_device.c: 288: {UEIR = 0;};
 10463  0DE7  003D               	movlb	29	; select bank29
 10464  0DE8  0193               	clrf	19	;volatile
 10465                           
 10466                           ;usb_device.c: 291: {UIR = 0;};
 10467  0DE9  0190               	clrf	16	;volatile
 10468                           
 10469                           ;usb_device.c: 294: UEP0 = 0;
 10470  0DEA  0198               	clrf	24	;volatile
 10471                           
 10472                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<4;i++) *p++ = 0
      +                          ; };
 10473  0DEB  300E               	movlw	14
 10474  0DEC  00F2               	movwf	i1USBDeviceInit@p+1
 10475  0DED  3099               	movlw	153
 10476  0DEE  00F1               	movwf	i1USBDeviceInit@p
 10477  0DEF  01F3               	clrf	i1USBDeviceInit@i_1118
 10478  0DF0  3004               	movlw	4
 10479  0DF1  0273               	subwf	i1USBDeviceInit@i_1118,w
 10480  0DF2  1803               	btfsc	3,0
 10481  0DF3  2E05               	goto	i1l5375
 10482  0DF4                     i1l5367:	
 10483  0DF4  0871               	movf	i1USBDeviceInit@p,w
 10484  0DF5  0086               	movwf	6
 10485  0DF6  0872               	movf	i1USBDeviceInit@p+1,w
 10486  0DF7  0087               	movwf	7
 10487  0DF8  0181               	clrf	1
 10488  0DF9  3001               	movlw	1
 10489  0DFA  07F1               	addwf	i1USBDeviceInit@p,f
 10490  0DFB  3000               	movlw	0
 10491  0DFC  3DF2               	addwfc	i1USBDeviceInit@p+1,f
 10492  0DFD  3001               	movlw	1
 10493  0DFE  00F0               	movwf	??i1_USBDeviceInit
 10494  0DFF  0870               	movf	??i1_USBDeviceInit,w
 10495  0E00  07F3               	addwf	i1USBDeviceInit@i_1118,f
 10496  0E01  3004               	movlw	4
 10497  0E02  0273               	subwf	i1USBDeviceInit@i_1118,w
 10498  0E03  1C03               	skipc
 10499  0E04  2DF4               	goto	i1l5367
 10500  0E05                     i1l5375:	
 10501                           
 10502                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10503  0E05  3016               	movlw	22
 10504  0E06  003D               	movlb	29	; select bank29
 10505  0E07  0091               	movwf	17	;volatile
 10506  0E08  309F               	movlw	159
 10507  0E09  0097               	movwf	23	;volatile
 10508  0E0A  307B               	movlw	123
 10509  0E0B  0092               	movwf	18	;volatile
 10510                           
 10511                           ;usb_device.c: 301: ;
 10512                           ;usb_device.c: 304: ;
 10513                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 10514  0E0C  01F4               	clrf	i1USBDeviceInit@i
 10515  0E0D  3014               	movlw	20
 10516  0E0E  0274               	subwf	i1USBDeviceInit@i,w
 10517  0E0F  1803               	btfsc	3,0
 10518  0E10  2E2A               	goto	i1l378
 10519  0E11                     i1l5383:	
 10520                           
 10521                           ;usb_device.c: 308: {
 10522                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 10523  0E11  0874               	movf	i1USBDeviceInit@i,w
 10524  0E12  00F0               	movwf	??i1_USBDeviceInit
 10525  0E13  3001               	movlw	1
 10526  0E14                     u507_25:	
 10527  0E14  35F0               	lslf	??i1_USBDeviceInit,f
 10528  0E15  3EFF               	addlw	-1
 10529  0E16  1D03               	skipz
 10530  0E17  2E14               	goto	u507_25
 10531  0E18  3570               	lslf	??i1_USBDeviceInit,w
 10532  0E19  3E20               	addlw	32
 10533  0E1A  0086               	movwf	6
 10534  0E1B  0187               	clrf	7
 10535  0E1C  3000               	movlw	0
 10536  0E1D  3FC0               	movwi [0]fsr1
 10537  0E1E  3000               	movlw	0
 10538  0E1F  3FC1               	movwi [1]fsr1
 10539  0E20  3FC2               	movwi [2]fsr1
 10540  0E21  3FC3               	movwi [3]fsr1
 10541  0E22  3001               	movlw	1
 10542  0E23  00F0               	movwf	??i1_USBDeviceInit
 10543  0E24  0870               	movf	??i1_USBDeviceInit,w
 10544  0E25  07F4               	addwf	i1USBDeviceInit@i,f
 10545  0E26  3014               	movlw	20
 10546  0E27  0274               	subwf	i1USBDeviceInit@i,w
 10547  0E28  1C03               	skipc
 10548  0E29  2E11               	goto	i1l5383
 10549  0E2A                     i1l378:	
 10550                           
 10551                           ;usb_device.c: 310: }
 10552                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 10553  0E2A  003D               	movlb	29	; select bank29
 10554  0E2B  170E               	bsf	14,6	;volatile
 10555                           
 10556                           ;usb_device.c: 316: UADDR = 0x00;
 10557  0E2C  0196               	clrf	22	;volatile
 10558                           
 10559                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 10560  0E2D  120E               	bcf	14,4	;volatile
 10561                           
 10562                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 10563  0E2E  130E               	bcf	14,6	;volatile
 10564  0E2F                     i1l5395:	
 10565                           ;usb_device.c: 325: do
 10566                           
 10567                           
 10568                           ;usb_device.c: 326: {
 10569                           ;usb_device.c: 327: (UIR &= 0xF7);
 10570  0E2F  30F7               	movlw	247
 10571  0E30  00F0               	movwf	??i1_USBDeviceInit
 10572  0E31  0870               	movf	??i1_USBDeviceInit,w
 10573  0E32  0590               	andwf	16,f	;volatile
 10574                           
 10575                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 10576  0E33  0023               	movlb	3	; select bank3
 10577  0E34  01D7               	clrf	(_inPipes^(0+384)+2)
 10578                           
 10579                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 10580  0E35  0024               	movlb	4	; select bank4
 10581  0E36  01A2               	clrf	(_outPipes^(0+512)+2)
 10582                           
 10583                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 10584  0E37  01A3               	clrf	(_outPipes^(0+512)+3)
 10585  0E38  01A4               	clrf	((_outPipes+1)^(0+512)+3)
 10586                           
 10587                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 10588  0E39  003D               	movlb	29	; select bank29
 10589  0E3A  1990               	btfsc	16,3	;volatile
 10590  0E3B  2E2F               	goto	i1l5395
 10591                           
 10592                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 10593  0E3C  3001               	movlw	1
 10594  0E3D  00F0               	movwf	??i1_USBDeviceInit
 10595  0E3E  0870               	movf	??i1_USBDeviceInit,w
 10596  0E3F  0024               	movlb	4	; select bank4
 10597  0E40  00D6               	movwf	_USBStatusStageEnabledFlag1^(0+512)	;volatile
 10598                           
 10599                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 10600  0E41  3001               	movlw	1
 10601  0E42  00F0               	movwf	??i1_USBDeviceInit
 10602  0E43  0870               	movf	??i1_USBDeviceInit,w
 10603  0E44  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+512)	;volatile
 10604                           
 10605                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 10606  0E45  01D4               	clrf	_USBDeferINDataStagePackets^(0+512)	;volatile
 10607                           
 10608                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 10609  0E46  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+512)	;volatile
 10610                           
 10611                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 10612  0E47  01DA               	clrf	_USBBusIsSuspended^(0+512)
 10613                           
 10614                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(4+1u); i++)
 10615  0E48  01F4               	clrf	i1USBDeviceInit@i
 10616  0E49  3005               	movlw	5
 10617  0E4A  0274               	subwf	i1USBDeviceInit@i,w
 10618  0E4B  1803               	btfsc	3,0
 10619  0E4C  2E71               	goto	i1l5423
 10620  0E4D                     i1l5417:	
 10621                           
 10622                           ;usb_device.c: 346: {
 10623                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 10624  0E4D  3574               	lslf	i1USBDeviceInit@i,w
 10625  0E4E  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 10626  0E4F  0086               	movwf	6
 10627  0E50  3001               	movlw	1	; select bank3/4
 10628  0E51  0087               	movwf	7
 10629  0E52  3000               	movlw	0
 10630  0E53  3FC0               	movwi [0]fsr1
 10631  0E54  3FC1               	movwi [1]fsr1
 10632                           
 10633                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 10634  0E55  3574               	lslf	i1USBDeviceInit@i,w
 10635  0E56  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 10636  0E57  0086               	movwf	6
 10637  0E58  3002               	movlw	2	; select bank5/6
 10638  0E59  0087               	movwf	7
 10639  0E5A  3000               	movlw	0
 10640  0E5B  3FC0               	movwi [0]fsr1
 10641  0E5C  3FC1               	movwi [1]fsr1
 10642                           
 10643                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 10644  0E5D  0874               	movf	i1USBDeviceInit@i,w
 10645  0E5E  3EB9               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 10646  0E5F  0086               	movwf	6
 10647  0E60  3002               	movlw	2	; select bank5/6
 10648  0E61  0087               	movwf	7
 10649  0E62  0181               	clrf	1
 10650                           
 10651                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 10652  0E63  0874               	movf	i1USBDeviceInit@i,w
 10653  0E64  3EB4               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 10654  0E65  0086               	movwf	6
 10655  0E66  3002               	movlw	2	; select bank5/6
 10656  0E67  0087               	movwf	7
 10657  0E68  0181               	clrf	1
 10658  0E69  3001               	movlw	1
 10659  0E6A  00F0               	movwf	??i1_USBDeviceInit
 10660  0E6B  0870               	movf	??i1_USBDeviceInit,w
 10661  0E6C  07F4               	addwf	i1USBDeviceInit@i,f
 10662  0E6D  3005               	movlw	5
 10663  0E6E  0274               	subwf	i1USBDeviceInit@i,w
 10664  0E6F  1C03               	skipc
 10665  0E70  2E4D               	goto	i1l5417
 10666  0E71                     i1l5423:	
 10667                           
 10668                           ;usb_device.c: 351: }
 10669                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10670  0E71  3028               	movlw	40
 10671  0E72  0023               	movlb	3	; select bank3
 10672  0E73  00CB               	movwf	_pBDTEntryIn^(0+384)
 10673  0E74  3000               	movlw	0
 10674  0E75  00CC               	movwf	(_pBDTEntryIn+1)^(0+384)
 10675                           
 10676                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 10677  0E76  3016               	movlw	22
 10678  0E77  003D               	movlb	29	; select bank29
 10679  0E78  0098               	movwf	24	;volatile
 10680                           
 10681                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10682  0E79  3000               	movlw	0
 10683  0E7A  0020               	movlb	0	; select bank0
 10684  0E7B  00A3               	movwf	35	;volatile
 10685  0E7C  30A0               	movlw	160
 10686  0E7D  00A2               	movwf	34	;volatile
 10687                           
 10688                           ;usb_device.c: 359: BDT[0].CNT = 8;
 10689  0E7E  3008               	movlw	8
 10690  0E7F  00A1               	movwf	33	;volatile
 10691                           
 10692                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 10693  0E80  3004               	movlw	4
 10694  0E81  00F0               	movwf	??i1_USBDeviceInit
 10695  0E82  0870               	movf	??i1_USBDeviceInit,w
 10696  0E83  00A0               	movwf	32	;volatile
 10697                           
 10698                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 10699  0E84  17A0               	bsf	32,7	;volatile
 10700                           
 10701                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 10702  0E85  0023               	movlb	3	; select bank3
 10703  0E86  01EF               	clrf	_USBActiveConfiguration^(0+384)
 10704                           
 10705                           ;usb_device.c: 366: USB1msTickCount = 0;
 10706  0E87  3000               	movlw	0
 10707  0E88  0025               	movlb	5	; select bank5
 10708  0E89  00C9               	movwf	(_USB1msTickCount+3)^(0+640)
 10709  0E8A  3000               	movlw	0
 10710  0E8B  00C8               	movwf	(_USB1msTickCount+2)^(0+640)
 10711  0E8C  3000               	movlw	0
 10712  0E8D  00C7               	movwf	(_USB1msTickCount+1)^(0+640)
 10713  0E8E  3000               	movlw	0
 10714  0E8F  00C6               	movwf	_USB1msTickCount^(0+640)
 10715                           
 10716                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 10717  0E90  0024               	movlb	4	; select bank4
 10718  0E91  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+512)
 10719                           
 10720                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 10721  0E92  0023               	movlb	3	; select bank3
 10722  0E93  01EB               	clrf	_USBDeviceState^(0+384)
 10723  0E94  0008               	return
 10724  0E95                     __end_ofi1_USBDeviceInit:	
 10725                           
 10726                           	psect	text44
 10727  1111                     __ptext44:	
 10728 ;; *************** function _USBWakeFromSuspend *****************
 10729 ;; Defined at:
 10730 ;;		line 2303 in file "usb/core/usb_device.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;		None
 10733 ;; Auto vars:     Size  Location     Type
 10734 ;;		None
 10735 ;; Return value:  Size  Location     Type
 10736 ;;                  1    wreg      void 
 10737 ;; Registers used:
 10738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10739 ;; Tracked objects:
 10740 ;;		On entry : 0/0
 10741 ;;		On exit  : 0/0
 10742 ;;		Unchanged: 0/0
 10743 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 10744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10746 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 10747 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 10748 ;;Total ram usage:        1 bytes
 10749 ;; Hardware stack levels used:    1
 10750 ;; Hardware stack levels required when called:    4
 10751 ;; This function calls:
 10752 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10753 ;; This function is called by:
 10754 ;;		_USBDeviceTasks
 10755 ;; This function uses a non-reentrant model
 10756 ;;
 10757                           
 10758                           
 10759                           ;psect for function _USBWakeFromSuspend
 10760  1111                     _USBWakeFromSuspend:	
 10761                           
 10762                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 10763                           
 10764                           ;incstack = 0
 10765                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10766  1111  0024               	movlb	4	; select bank4
 10767  1112  01DA               	clrf	_USBBusIsSuspended^(0+512)
 10768                           
 10769                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 10770  1113  3074               	movlw	116
 10771  1114  0021               	movlb	1	; select bank1
 10772  1115  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 10773  1116  3000               	movlw	0
 10774  1117  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
 10775  1118  3000               	movlw	0
 10776  1119  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 10777  111A  3000               	movlw	0
 10778  111B  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 10779  111C  3000               	movlw	0
 10780  111D  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 10781  111E  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
 10782  111F  3192  2208  3191   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10783                           
 10784                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 10785  1122  003D               	movlb	29	; select bank29
 10786  1123  108E               	bcf	14,1	;volatile
 10787                           
 10788                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 10789  1124  1112               	bcf	18,2	;volatile
 10790  1125                     i1l4981:	
 10791                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 10792                           
 10793  1125  1D10               	btfss	16,2	;volatile
 10794  1126  292E               	goto	i1l4983
 10795                           
 10796                           ;usb_device.c: 2343: {
 10797                           ;usb_device.c: 2344: (UIR &= 0xFB);
 10798  1127  30FB               	movlw	251
 10799  1128  0021               	movlb	1	; select bank1
 10800  1129  00E6               	movwf	??_USBWakeFromSuspend^(0+128)
 10801  112A  0866               	movf	??_USBWakeFromSuspend^(0+128),w
 10802  112B  003D               	movlb	29	; select bank29
 10803  112C  0590               	andwf	16,f	;volatile
 10804  112D  2925               	goto	i1l4981
 10805  112E                     i1l4983:	
 10806                           
 10807                           ;usb_device.c: 2345: }
 10808                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 10809  112E  0024               	movlb	4	; select bank4
 10810  112F  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+512)
 10811  1130  0008               	return
 10812  1131                     __end_of_USBWakeFromSuspend:	
 10813                           
 10814                           	psect	text45
 10815  10B6                     __ptext45:	
 10816 ;; *************** function _USBSuspend *****************
 10817 ;; Defined at:
 10818 ;;		line 2245 in file "usb/core/usb_device.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;		None
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;		None
 10823 ;; Return value:  Size  Location     Type
 10824 ;;                  1    wreg      void 
 10825 ;; Registers used:
 10826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10827 ;; Tracked objects:
 10828 ;;		On entry : 0/0
 10829 ;;		On exit  : 0/0
 10830 ;;		Unchanged: 0/0
 10831 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 10832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10834 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 10835 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 10836 ;;Total ram usage:        1 bytes
 10837 ;; Hardware stack levels used:    1
 10838 ;; Hardware stack levels required when called:    4
 10839 ;; This function calls:
 10840 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10841 ;; This function is called by:
 10842 ;;		_USBDeviceTasks
 10843 ;; This function uses a non-reentrant model
 10844 ;;
 10845                           
 10846                           
 10847                           ;psect for function _USBSuspend
 10848  10B6                     _USBSuspend:	
 10849                           
 10850                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 10851                           
 10852                           ;incstack = 0
 10853                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10854  10B6  003D               	movlb	29	; select bank29
 10855  10B7  1512               	bsf	18,2	;volatile
 10856                           
 10857                           ;usb_device.c: 2271: (UIR &= 0xEF);
 10858  10B8  30EF               	movlw	239
 10859  10B9  0021               	movlb	1	; select bank1
 10860  10BA  00E6               	movwf	??_USBSuspend^(0+128)
 10861  10BB  0866               	movf	??_USBSuspend^(0+128),w
 10862  10BC  003D               	movlb	29	; select bank29
 10863  10BD  0590               	andwf	16,f	;volatile
 10864                           
 10865                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 10866  10BE  148E               	bsf	14,1	;volatile
 10867                           
 10868                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 10869  10BF  0024               	movlb	4	; select bank4
 10870  10C0  01DA               	clrf	_USBBusIsSuspended^(0+512)
 10871  10C1  0ADA               	incf	_USBBusIsSuspended^(0+512),f
 10872                           
 10873                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 10874  10C2  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+512)
 10875                           
 10876                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 10877  10C3  3075               	movlw	117
 10878  10C4  0021               	movlb	1	; select bank1
 10879  10C5  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 10880  10C6  3000               	movlw	0
 10881  10C7  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
 10882  10C8  3000               	movlw	0
 10883  10C9  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 10884  10CA  3000               	movlw	0
 10885  10CB  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 10886  10CC  3000               	movlw	0
 10887  10CD  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 10888  10CE  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
 10889  10CF  3192  2208         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10890  10D1  0008               	return
 10891  10D2                     __end_of_USBSuspend:	
 10892                           
 10893                           	psect	text46
 10894  1155                     __ptext46:	
 10895 ;; *************** function _USBStallHandler *****************
 10896 ;; Defined at:
 10897 ;;		line 2202 in file "usb/core/usb_device.c"
 10898 ;; Parameters:    Size  Location     Type
 10899 ;;		None
 10900 ;; Auto vars:     Size  Location     Type
 10901 ;;		None
 10902 ;; Return value:  Size  Location     Type
 10903 ;;                  1    wreg      void 
 10904 ;; Registers used:
 10905 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10906 ;; Tracked objects:
 10907 ;;		On entry : 0/0
 10908 ;;		On exit  : 0/0
 10909 ;;		Unchanged: 0/0
 10910 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 10911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10913 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10914 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10915 ;;Total ram usage:        1 bytes
 10916 ;; Hardware stack levels used:    1
 10917 ;; This function calls:
 10918 ;;		Nothing
 10919 ;; This function is called by:
 10920 ;;		_USBDeviceTasks
 10921 ;; This function uses a non-reentrant model
 10922 ;;
 10923                           
 10924                           
 10925                           ;psect for function _USBStallHandler
 10926  1155                     _USBStallHandler:	
 10927                           
 10928                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 10929                           
 10930                           ;incstack = 0
 10931                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 10932  1155  003D               	movlb	29	; select bank29
 10933  1156  1C18               	btfss	24,0	;volatile
 10934  1157  2975               	goto	i1l5015
 10935                           
 10936                           ;usb_device.c: 2215: {
 10937                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 10938  1158  0023               	movlb	3	; select bank3
 10939  1159  086A               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10940  115A  0086               	movwf	6
 10941  115B  0187               	clrf	7
 10942  115C  3080               	movlw	128
 10943  115D  0601               	xorwf	1,w
 10944  115E  1D03               	btfss	3,2
 10945  115F  2973               	goto	i1l5013
 10946  1160  084B               	movf	_pBDTEntryIn^(0+384),w
 10947  1161  0086               	movwf	6
 10948  1162  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 10949  1163  0087               	movwf	7
 10950  1164  3084               	movlw	132
 10951  1165  0601               	xorwf	1,w
 10952  1166  1D03               	btfss	3,2
 10953  1167  2973               	goto	i1l5013
 10954                           
 10955                           ;usb_device.c: 2218: {
 10956                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10957  1168  300C               	movlw	12
 10958  1169  00F0               	movwf	??_USBStallHandler
 10959  116A  086A               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10960  116B  0086               	movwf	6
 10961  116C  0187               	clrf	7
 10962  116D  0870               	movf	??_USBStallHandler,w
 10963  116E  0081               	movwf	1
 10964                           
 10965                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10966  116F  086A               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10967  1170  0086               	movwf	6
 10968  1171  0187               	clrf	7
 10969  1172  1781               	bsf	1,7
 10970  1173                     i1l5013:	
 10971                           
 10972                           ;usb_device.c: 2222: }
 10973                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 10974  1173  003D               	movlb	29	; select bank29
 10975  1174  1018               	bcf	24,0	;volatile
 10976  1175                     i1l5015:	
 10977                           
 10978                           ;usb_device.c: 2224: }
 10979                           ;usb_device.c: 2226: (UIR &= 0xDF);
 10980  1175  30DF               	movlw	223
 10981  1176  00F0               	movwf	??_USBStallHandler
 10982  1177  0870               	movf	??_USBStallHandler,w
 10983  1178  0590               	andwf	16,f	;volatile
 10984  1179  0008               	return
 10985  117A                     __end_of_USBStallHandler:	
 10986                           
 10987                           	psect	text47
 10988  1FB5                     __ptext47:	
 10989 ;; *************** function _USBIncrement1msInternalTimers *****************
 10990 ;; Defined at:
 10991 ;;		line 3025 in file "usb/core/usb_device.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;		None
 10994 ;; Auto vars:     Size  Location     Type
 10995 ;;		None
 10996 ;; Return value:  Size  Location     Type
 10997 ;;                  1    wreg      void 
 10998 ;; Registers used:
 10999 ;;		wreg, status,2, status,0
 11000 ;; Tracked objects:
 11001 ;;		On entry : 0/0
 11002 ;;		On exit  : 0/0
 11003 ;;		Unchanged: 0/0
 11004 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 11005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11009 ;;Total ram usage:        1 bytes
 11010 ;; Hardware stack levels used:    1
 11011 ;; This function calls:
 11012 ;;		Nothing
 11013 ;; This function is called by:
 11014 ;;		_USBDeviceTasks
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           
 11019                           ;psect for function _USBIncrement1msInternalTimers
 11020  1FB5                     _USBIncrement1msInternalTimers:	
 11021                           
 11022                           ;usb_device.c: 3033: USB1msTickCount++;
 11023                           
 11024                           ;incstack = 0
 11025                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
 11026  1FB5  3001               	movlw	1
 11027  1FB6  0025               	movlb	5	; select bank5
 11028  1FB7  07C6               	addwf	_USB1msTickCount^(0+640),f
 11029  1FB8  3000               	movlw	0
 11030  1FB9  3DC7               	addwfc	(_USB1msTickCount+1)^(0+640),f
 11031  1FBA  3000               	movlw	0
 11032  1FBB  3DC8               	addwfc	(_USB1msTickCount+2)^(0+640),f
 11033  1FBC  3000               	movlw	0
 11034  1FBD  3DC9               	addwfc	(_USB1msTickCount+3)^(0+640),f
 11035                           
 11036                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 11037  1FBE  0024               	movlb	4	; select bank4
 11038  1FBF  085A               	movf	_USBBusIsSuspended^(0+512),w
 11039  1FC0  1D03               	btfss	3,2
 11040  1FC1  0008               	return
 11041                           
 11042                           ;usb_device.c: 3035: {
 11043                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 11044  1FC2  3001               	movlw	1
 11045  1FC3  00F0               	movwf	??_USBIncrement1msInternalTimers
 11046  1FC4  0870               	movf	??_USBIncrement1msInternalTimers,w
 11047  1FC5  07D2               	addwf	_USBTicksSinceSuspendEnd^(0+512),f
 11048                           
 11049                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 11050  1FC6  0852               	movf	_USBTicksSinceSuspendEnd^(0+512),w
 11051  1FC7  1D03               	btfss	3,2
 11052  1FC8  0008               	return
 11053                           
 11054                           ;usb_device.c: 3039: {
 11055                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 11056  1FC9  30FF               	movlw	255
 11057  1FCA  00F0               	movwf	??_USBIncrement1msInternalTimers
 11058  1FCB  0870               	movf	??_USBIncrement1msInternalTimers,w
 11059  1FCC  00D2               	movwf	_USBTicksSinceSuspendEnd^(0+512)
 11060  1FCD  0008               	return
 11061  1FCE                     __end_of_USBIncrement1msInternalTimers:	
 11062                           
 11063                           	psect	text48
 11064  1600                     __ptext48:	
 11065 ;; *************** function _USBCtrlEPService *****************
 11066 ;; Defined at:
 11067 ;;		line 2372 in file "usb/core/usb_device.c"
 11068 ;; Parameters:    Size  Location     Type
 11069 ;;		None
 11070 ;; Auto vars:     Size  Location     Type
 11071 ;;		None
 11072 ;; Return value:  Size  Location     Type
 11073 ;;                  1    wreg      void 
 11074 ;; Registers used:
 11075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11076 ;; Tracked objects:
 11077 ;;		On entry : 0/0
 11078 ;;		On exit  : 0/0
 11079 ;;		Unchanged: 0/0
 11080 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 11081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11083 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0
 11084 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0
 11085 ;;Total ram usage:        3 bytes
 11086 ;; Hardware stack levels used:    1
 11087 ;; Hardware stack levels required when called:    7
 11088 ;; This function calls:
 11089 ;;		_USBCtrlTrfInHandler
 11090 ;;		_USBCtrlTrfOutHandler
 11091 ;;		_USBCtrlTrfSetupHandler
 11092 ;; This function is called by:
 11093 ;;		_USBDeviceTasks
 11094 ;; This function uses a non-reentrant model
 11095 ;;
 11096                           
 11097                           
 11098                           ;psect for function _USBCtrlEPService
 11099  1600                     _USBCtrlEPService:	
 11100                           
 11101                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 11102                           
 11103                           ;incstack = 0
 11104                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11105  1600  302D               	movlw	45
 11106  1601  0022               	movlb	2	; select bank2
 11107  1602  00E0               	movwf	??_USBCtrlEPService^(0+256)
 11108  1603  0860               	movf	??_USBCtrlEPService^(0+256),w
 11109  1604  0024               	movlb	4	; select bank4
 11110  1605  00D7               	movwf	_USBStatusStageTimeoutCounter^(0+512)
 11111                           
 11112                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 11113  1606  0023               	movlb	3	; select bank3
 11114  1607  086E               	movf	_USTATcopy^(0+384),w
 11115  1608  39FD               	andlw	253
 11116  1609  1D03               	btfss	3,2
 11117  160A  2E51               	goto	i1l5035
 11118                           
 11119                           ;usb_device.c: 2383: {
 11120                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 11121  160B  366E               	lsrf	_USTATcopy^(0+384),w
 11122  160C  393F               	andlw	63
 11123  160D  0022               	movlb	2	; select bank2
 11124  160E  00E0               	movwf	??_USBCtrlEPService^(0+256)
 11125  160F  3001               	movlw	1
 11126  1610                     u448_25:	
 11127  1610  35E0               	lslf	??_USBCtrlEPService^(0+256),f
 11128  1611  3EFF               	addlw	-1
 11129  1612  1D03               	skipz
 11130  1613  2E10               	goto	u448_25
 11131  1614  3560               	lslf	??_USBCtrlEPService^(0+256),w
 11132  1615  3E20               	addlw	32
 11133  1616  00E1               	movwf	(??_USBCtrlEPService+1)^(0+256)
 11134  1617  0861               	movf	(??_USBCtrlEPService+1)^(0+256),w
 11135  1618  0023               	movlb	3	; select bank3
 11136  1619  00EA               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 11137                           
 11138                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11139  161A  086A               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11140  161B  0022               	movlb	2	; select bank2
 11141  161C  00EE               	movwf	_pBDTEntryEP0OutNext^(0+256)
 11142  161D  39FF               	andlw	255
 11143  161E  1D03               	skipz
 11144  161F  3000               	movlw	0
 11145  1620  00EF               	movwf	(_pBDTEntryEP0OutNext+1)^(0+256)
 11146                           
 11147                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 11148  1621  3004               	movlw	4
 11149  1622  066E               	xorwf	_pBDTEntryEP0OutNext^(0+256),w
 11150  1623  00EE               	movwf	_pBDTEntryEP0OutNext^(0+256)
 11151  1624  3000               	movlw	0
 11152  1625  066F               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11153  1626  00EF               	movwf	(_pBDTEntryEP0OutNext+1)^(0+256)
 11154                           
 11155                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 11156  1627  0023               	movlb	3	; select bank3
 11157  1628  086A               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11158  1629  0086               	movwf	6
 11159  162A  0187               	clrf	7
 11160  162B  0C01               	rrf	1,w
 11161  162C  0C89               	rrf	9,f
 11162  162D  390F               	andlw	15
 11163  162E  3A0D               	xorlw	13
 11164  162F  1D03               	skipz
 11165  1630  2E4E               	goto	i1l5033
 11166                           
 11167                           ;usb_device.c: 2400: {
 11168                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
 11169  1631  30A0               	movlw	160
 11170  1632  0086               	movwf	6
 11171  1633  0187               	clrf	7
 11172  1634  0023               	movlb	3	; select bank3
 11173  1635  086A               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11174  1636  3E02               	addlw	2
 11175  1637  0084               	movwf	4
 11176  1638  0185               	clrf	5
 11177  1639  3F00               	moviw [0]fsr0
 11178  163A  0022               	movlb	2	; select bank2
 11179  163B  00E0               	movwf	??_USBCtrlEPService^(0+256)
 11180  163C  3F01               	moviw [1]fsr0
 11181  163D  00E1               	movwf	(??_USBCtrlEPService^(0+256)+1)
 11182  163E  0860               	movf	??_USBCtrlEPService^(0+256),w
 11183  163F  0084               	movwf	4
 11184  1640  0861               	movf	(??_USBCtrlEPService+1)^(0+256),w
 11185  1641  0085               	movwf	5
 11186  1642  3008               	movlw	8
 11187  1643  00E2               	movwf	(??_USBCtrlEPService+2)^(0+256)
 11188  1644  0862               	movf	(??_USBCtrlEPService+2)^(0+256),w
 11189  1645  1903               	skipnz
 11190  1646  2E4B               	goto	i1l5031
 11191  1647                     u450_2m0:	
 11192  1647  0012               	moviw fsr0++
 11193  1648  001E               	movwi fsr1++
 11194  1649  0BE2               	decfsz	(??_USBCtrlEPService+2)^(0+256),f
 11195  164A  2E47               	goto	u450_2m0
 11196  164B                     i1l5031:	
 11197                           
 11198                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 11199  164B  3194  24F4         	fcall	_USBCtrlTrfSetupHandler
 11200                           
 11201                           ;usb_device.c: 2409: }
 11202  164D  0008               	return
 11203  164E                     i1l5033:	
 11204                           
 11205                           ;usb_device.c: 2410: else
 11206                           ;usb_device.c: 2411: {
 11207                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 11208  164E  3192  2244         	fcall	_USBCtrlTrfOutHandler
 11209                           
 11210                           ;usb_device.c: 2414: }
 11211                           ;usb_device.c: 2415: }
 11212  1650  0008               	return
 11213  1651                     i1l5035:	
 11214                           
 11215                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 11216  1651  30FD               	movlw	253
 11217  1652  0023               	movlb	3	; select bank3
 11218  1653  056E               	andwf	_USTATcopy^(0+384),w
 11219  1654  0022               	movlb	2	; select bank2
 11220  1655  00E0               	movwf	??_USBCtrlEPService^(0+256)
 11221  1656  3004               	movlw	4
 11222  1657  0660               	xorwf	??_USBCtrlEPService^(0+256),w
 11223  1658  1D03               	btfss	3,2
 11224  1659  0008               	return
 11225                           
 11226                           ;usb_device.c: 2417: {
 11227                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 11228  165A  3189  2189         	fcall	_USBCtrlTrfInHandler
 11229  165C  0008               	return
 11230  165D                     __end_of_USBCtrlEPService:	
 11231                           
 11232                           	psect	text49
 11233  14F4                     __ptext49:	
 11234 ;; *************** function _USBCtrlTrfSetupHandler *****************
 11235 ;; Defined at:
 11236 ;;		line 2465 in file "usb/core/usb_device.c"
 11237 ;; Parameters:    Size  Location     Type
 11238 ;;		None
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;		None
 11241 ;; Return value:  Size  Location     Type
 11242 ;;                  1    wreg      void 
 11243 ;; Registers used:
 11244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11245 ;; Tracked objects:
 11246 ;;		On entry : 0/0
 11247 ;;		On exit  : 0/0
 11248 ;;		Unchanged: 0/0
 11249 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 11250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11252 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 11253 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 11254 ;;Total ram usage:        1 bytes
 11255 ;; Hardware stack levels used:    1
 11256 ;; Hardware stack levels required when called:    6
 11257 ;; This function calls:
 11258 ;;		_USBCheckStdRequest
 11259 ;;		_USBCtrlEPServiceComplete
 11260 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11261 ;; This function is called by:
 11262 ;;		_USBCtrlEPService
 11263 ;; This function uses a non-reentrant model
 11264 ;;
 11265                           
 11266                           
 11267                           ;psect for function _USBCtrlTrfSetupHandler
 11268  14F4                     _USBCtrlTrfSetupHandler:	
 11269                           
 11270                           ;usb_device.c: 2470: shortPacketStatus = 0;
 11271                           
 11272                           ;incstack = 0
 11273                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11274  14F4  0023               	movlb	3	; select bank3
 11275  14F5  01E9               	clrf	_shortPacketStatus^(0+384)
 11276                           
 11277                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 11278  14F6  01E7               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
 11279                           
 11280                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 11281  14F7  0024               	movlb	4	; select bank4
 11282  14F8  01D4               	clrf	_USBDeferINDataStagePackets^(0+512)	;volatile
 11283                           
 11284                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 11285  14F9  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+512)	;volatile
 11286                           
 11287                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 11288  14FA  01D8               	clrf	_BothEP0OutUOWNsSet^(0+512)
 11289                           
 11290                           ;usb_device.c: 2475: controlTransferState = 0;
 11291  14FB  0023               	movlb	3	; select bank3
 11292  14FC  01E8               	clrf	_controlTransferState^(0+384)
 11293                           
 11294                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 11295  14FD  307F               	movlw	127
 11296  14FE  0021               	movlb	1	; select bank1
 11297  14FF  00EE               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 11298  1500  0023               	movlb	3	; select bank3
 11299  1501  084B               	movf	_pBDTEntryIn^(0+384),w
 11300  1502  0086               	movwf	6
 11301  1503  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11302  1504  0087               	movwf	7
 11303  1505  0021               	movlb	1	; select bank1
 11304  1506  086E               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 11305  1507  0581               	andwf	1,f
 11306                           
 11307                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 11308  1508  3004               	movlw	4
 11309  1509  0023               	movlb	3	; select bank3
 11310  150A  064B               	xorwf	_pBDTEntryIn^(0+384),w
 11311  150B  00CB               	movwf	_pBDTEntryIn^(0+384)
 11312  150C  3000               	movlw	0
 11313  150D  064C               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 11314  150E  00CC               	movwf	(_pBDTEntryIn+1)^(0+384)
 11315                           
 11316                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 11317  150F  307F               	movlw	127
 11318  1510  0021               	movlb	1	; select bank1
 11319  1511  00EE               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 11320  1512  0023               	movlb	3	; select bank3
 11321  1513  084B               	movf	_pBDTEntryIn^(0+384),w
 11322  1514  0086               	movwf	6
 11323  1515  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11324  1516  0087               	movwf	7
 11325  1517  0021               	movlb	1	; select bank1
 11326  1518  086E               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 11327  1519  0581               	andwf	1,f
 11328                           
 11329                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 11330  151A  3004               	movlw	4
 11331  151B  0023               	movlb	3	; select bank3
 11332  151C  064B               	xorwf	_pBDTEntryIn^(0+384),w
 11333  151D  00CB               	movwf	_pBDTEntryIn^(0+384)
 11334  151E  3000               	movlw	0
 11335  151F  064C               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 11336  1520  00CC               	movwf	(_pBDTEntryIn+1)^(0+384)
 11337                           
 11338                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 11339  1521  307F               	movlw	127
 11340  1522  0021               	movlb	1	; select bank1
 11341  1523  00EE               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 11342  1524  0022               	movlb	2	; select bank2
 11343  1525  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11344  1526  0086               	movwf	6
 11345  1527  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11346  1528  0087               	movwf	7
 11347  1529  0021               	movlb	1	; select bank1
 11348  152A  086E               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 11349  152B  0581               	andwf	1,f
 11350                           
 11351                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 11352  152C  0023               	movlb	3	; select bank3
 11353  152D  01D7               	clrf	(_inPipes^(0+384)+2)
 11354                           
 11355                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 11356  152E  01D8               	clrf	(_inPipes^(0+384)+3)
 11357  152F  01D9               	clrf	((_inPipes+1)^(0+384)+3)
 11358                           
 11359                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 11360  1530  0024               	movlb	4	; select bank4
 11361  1531  01A2               	clrf	(_outPipes^(0+512)+2)
 11362                           
 11363                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 11364  1532  01A3               	clrf	(_outPipes^(0+512)+3)
 11365  1533  01A4               	clrf	((_outPipes+1)^(0+512)+3)
 11366                           
 11367                           ;usb_device.c: 2500: USBCheckStdRequest();
 11368  1534  3195  2549  3194   	fcall	_USBCheckStdRequest
 11369                           
 11370                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 11371  1537  3000               	movlw	0
 11372  1538  0021               	movlb	1	; select bank1
 11373  1539  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
 11374  153A  3003               	movlw	3
 11375  153B  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 11376  153C  3000               	movlw	0
 11377  153D  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 11378  153E  3000               	movlw	0
 11379  153F  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 11380  1540  3000               	movlw	0
 11381  1541  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 11382  1542  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
 11383  1543  3192  2208  3194   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11384                           
 11385                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 11386  1546  318C  24B3         	fcall	_USBCtrlEPServiceComplete
 11387  1548  0008               	return
 11388  1549                     __end_of_USBCtrlTrfSetupHandler:	
 11389                           
 11390                           	psect	text50
 11391  0CB3                     __ptext50:	
 11392 ;; *************** function _USBCtrlEPServiceComplete *****************
 11393 ;; Defined at:
 11394 ;;		line 1616 in file "usb/core/usb_device.c"
 11395 ;; Parameters:    Size  Location     Type
 11396 ;;		None
 11397 ;; Auto vars:     Size  Location     Type
 11398 ;;		None
 11399 ;; Return value:  Size  Location     Type
 11400 ;;                  1    wreg      void 
 11401 ;; Registers used:
 11402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11403 ;; Tracked objects:
 11404 ;;		On entry : 0/0
 11405 ;;		On exit  : 0/0
 11406 ;;		Unchanged: 0/0
 11407 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 11408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11412 ;;Total ram usage:        2 bytes
 11413 ;; Hardware stack levels used:    1
 11414 ;; Hardware stack levels required when called:    2
 11415 ;; This function calls:
 11416 ;;		_USBCtrlEPAllowDataStage
 11417 ;;		_USBCtrlEPAllowStatusStage
 11418 ;; This function is called by:
 11419 ;;		_USBCtrlTrfSetupHandler
 11420 ;; This function uses a non-reentrant model
 11421 ;;
 11422                           
 11423                           
 11424                           ;psect for function _USBCtrlEPServiceComplete
 11425  0CB3                     _USBCtrlEPServiceComplete:	
 11426                           
 11427                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 11428                           
 11429                           ;incstack = 0
 11430                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11431  0CB3  003D               	movlb	29	; select bank29
 11432  0CB4  120E               	bcf	14,4	;volatile
 11433                           
 11434                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 11435  0CB5  0023               	movlb	3	; select bank3
 11436  0CB6  1BD7               	btfsc	(_inPipes^(0+384)+2),7
 11437  0CB7  2CFC               	goto	i1l457
 11438                           
 11439                           ;usb_device.c: 1629: {
 11440                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 11441  0CB8  0024               	movlb	4	; select bank4
 11442  0CB9  1FA2               	btfss	(_outPipes^(0+512)+2),7
 11443  0CBA  2CCA               	goto	i1l4515
 11444                           
 11445                           ;usb_device.c: 1631: {
 11446                           ;usb_device.c: 1632: controlTransferState = 2;
 11447  0CBB  3002               	movlw	2
 11448  0CBC  00F5               	movwf	??_USBCtrlEPServiceComplete
 11449  0CBD  0875               	movf	??_USBCtrlEPServiceComplete,w
 11450  0CBE  0023               	movlb	3	; select bank3
 11451  0CBF  00E8               	movwf	_controlTransferState^(0+384)
 11452                           
 11453                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 11454  0CC0  0024               	movlb	4	; select bank4
 11455  0CC1  0853               	movf	_USBDeferOUTDataStagePackets^(0+512),w	;volatile
 11456  0CC2  1D03               	btfss	3,2
 11457  0CC3  2CC6               	goto	i1l4511
 11458                           
 11459                           ;usb_device.c: 1644: {
 11460                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 11461  0CC4  3195  25A3         	fcall	_USBCtrlEPAllowDataStage
 11462  0CC6                     i1l4511:	
 11463                           
 11464                           ;usb_device.c: 1646: }
 11465                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 11466  0CC6  0024               	movlb	4	; select bank4
 11467  0CC7  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+512)	;volatile
 11468                           
 11469                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 11470  0CC8  01D6               	clrf	_USBStatusStageEnabledFlag1^(0+512)	;volatile
 11471                           
 11472                           ;usb_device.c: 1652: }
 11473  0CC9  0008               	return
 11474  0CCA                     i1l4515:	
 11475                           
 11476                           ;usb_device.c: 1653: else
 11477                           ;usb_device.c: 1654: {
 11478                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 11479  0CCA  0022               	movlb	2	; select bank2
 11480  0CCB  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11481  0CCC  3E01               	addlw	1
 11482  0CCD  00F5               	movwf	??_USBCtrlEPServiceComplete
 11483  0CCE  3000               	movlw	0
 11484  0CCF  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11485  0CD0  00F6               	movwf	??_USBCtrlEPServiceComplete+1
 11486  0CD1  0875               	movf	??_USBCtrlEPServiceComplete,w
 11487  0CD2  0086               	movwf	6
 11488  0CD3  0876               	movf	??_USBCtrlEPServiceComplete+1,w
 11489  0CD4  0087               	movwf	7
 11490  0CD5  3008               	movlw	8
 11491  0CD6  0081               	movwf	1
 11492                           
 11493                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11494  0CD7  30A0               	movlw	160
 11495  0CD8  00F5               	movwf	??_USBCtrlEPServiceComplete
 11496  0CD9  3000               	movlw	0
 11497  0CDA  00F6               	movwf	??_USBCtrlEPServiceComplete+1
 11498  0CDB  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11499  0CDC  0086               	movwf	6
 11500  0CDD  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11501  0CDE  0087               	movwf	7
 11502  0CDF  3142               	addfsr 1,2
 11503  0CE0  0875               	movf	??_USBCtrlEPServiceComplete,w
 11504  0CE1  3FC0               	movwi [0]fsr1
 11505  0CE2  0876               	movf	??_USBCtrlEPServiceComplete+1,w
 11506  0CE3  3FC1               	movwi [1]fsr1
 11507                           
 11508                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11509  0CE4  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11510  0CE5  0086               	movwf	6
 11511  0CE6  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11512  0CE7  0087               	movwf	7
 11513  0CE8  300C               	movlw	12
 11514  0CE9  0081               	movwf	1
 11515                           
 11516                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11517  0CEA  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11518  0CEB  0086               	movwf	6
 11519  0CEC  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11520  0CED  0087               	movwf	7
 11521  0CEE  1781               	bsf	1,7
 11522                           
 11523                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 11524  0CEF  0023               	movlb	3	; select bank3
 11525  0CF0  084B               	movf	_pBDTEntryIn^(0+384),w
 11526  0CF1  0086               	movwf	6
 11527  0CF2  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11528  0CF3  0087               	movwf	7
 11529  0CF4  3004               	movlw	4
 11530  0CF5  0081               	movwf	1
 11531                           
 11532                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11533  0CF6  084B               	movf	_pBDTEntryIn^(0+384),w
 11534  0CF7  0086               	movwf	6
 11535  0CF8  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11536  0CF9  0087               	movwf	7
 11537  0CFA  1781               	bsf	1,7
 11538                           
 11539                           ;usb_device.c: 1665: }
 11540                           ;usb_device.c: 1666: }
 11541  0CFB  0008               	return
 11542  0CFC                     i1l457:	
 11543                           
 11544                           ;usb_device.c: 1667: else
 11545                           ;usb_device.c: 1668: {
 11546                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 11547  0CFC  0021               	movlb	1	; select bank1
 11548  0CFD  1FA0               	btfss	32,7	;volatile
 11549  0CFE  2D13               	goto	i1l4541
 11550                           
 11551                           ;usb_device.c: 1670: {
 11552                           ;usb_device.c: 1671: controlTransferState = 1;
 11553  0CFF  0023               	movlb	3	; select bank3
 11554  0D00  01E8               	clrf	_controlTransferState^(0+384)
 11555  0D01  0AE8               	incf	_controlTransferState^(0+384),f
 11556                           
 11557                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 11558  0D02  0024               	movlb	4	; select bank4
 11559  0D03  0854               	movf	_USBDeferINDataStagePackets^(0+512),w	;volatile
 11560  0D04  1D03               	btfss	3,2
 11561  0D05  2D09               	goto	i1l4533
 11562                           
 11563                           ;usb_device.c: 1686: {
 11564                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 11565  0D06  3195  25A3  318C   	fcall	_USBCtrlEPAllowDataStage
 11566  0D09                     i1l4533:	
 11567                           
 11568                           ;usb_device.c: 1688: }
 11569                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 11570  0D09  0024               	movlb	4	; select bank4
 11571  0D0A  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+512)	;volatile
 11572                           
 11573                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 11574  0D0B  01D6               	clrf	_USBStatusStageEnabledFlag1^(0+512)	;volatile
 11575                           
 11576                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 11577  0D0C  0023               	movlb	3	; select bank3
 11578  0D0D  0867               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 11579  0D0E  1D03               	btfss	3,2
 11580  0D0F  0008               	return
 11581                           
 11582                           ;usb_device.c: 1713: {
 11583                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 11584  0D10  3197  2721         	fcall	_USBCtrlEPAllowStatusStage
 11585                           
 11586                           ;usb_device.c: 1715: }
 11587                           ;usb_device.c: 1716: }
 11588  0D12  0008               	return
 11589  0D13                     i1l4541:	
 11590                           
 11591                           ;usb_device.c: 1717: else
 11592                           ;usb_device.c: 1718: {
 11593                           ;usb_device.c: 1729: controlTransferState = 2;
 11594  0D13  3002               	movlw	2
 11595  0D14  00F5               	movwf	??_USBCtrlEPServiceComplete
 11596  0D15  0875               	movf	??_USBCtrlEPServiceComplete,w
 11597  0D16  0023               	movlb	3	; select bank3
 11598  0D17  00E8               	movwf	_controlTransferState^(0+384)
 11599                           
 11600                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 11601  0D18  0022               	movlb	2	; select bank2
 11602  0D19  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11603  0D1A  3E01               	addlw	1
 11604  0D1B  00F5               	movwf	??_USBCtrlEPServiceComplete
 11605  0D1C  3000               	movlw	0
 11606  0D1D  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11607  0D1E  00F6               	movwf	??_USBCtrlEPServiceComplete+1
 11608  0D1F  0875               	movf	??_USBCtrlEPServiceComplete,w
 11609  0D20  0086               	movwf	6
 11610  0D21  0876               	movf	??_USBCtrlEPServiceComplete+1,w
 11611  0D22  0087               	movwf	7
 11612  0D23  3008               	movlw	8
 11613  0D24  0081               	movwf	1
 11614                           
 11615                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11616  0D25  30A0               	movlw	160
 11617  0D26  00F5               	movwf	??_USBCtrlEPServiceComplete
 11618  0D27  3000               	movlw	0
 11619  0D28  00F6               	movwf	??_USBCtrlEPServiceComplete+1
 11620  0D29  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11621  0D2A  0086               	movwf	6
 11622  0D2B  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11623  0D2C  0087               	movwf	7
 11624  0D2D  3142               	addfsr 1,2
 11625  0D2E  0875               	movf	??_USBCtrlEPServiceComplete,w
 11626  0D2F  3FC0               	movwi [0]fsr1
 11627  0D30  0876               	movf	??_USBCtrlEPServiceComplete+1,w
 11628  0D31  3FC1               	movwi [1]fsr1
 11629                           
 11630                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 11631  0D32  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11632  0D33  0086               	movwf	6
 11633  0D34  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11634  0D35  0087               	movwf	7
 11635  0D36  3004               	movlw	4
 11636  0D37  0081               	movwf	1
 11637                           
 11638                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11639  0D38  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11640  0D39  0086               	movwf	6
 11641  0D3A  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11642  0D3B  0087               	movwf	7
 11643  0D3C  1781               	bsf	1,7
 11644                           
 11645                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 11646  0D3D  0024               	movlb	4	; select bank4
 11647  0D3E  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+512)	;volatile
 11648                           
 11649                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 11650  0D3F  01D6               	clrf	_USBStatusStageEnabledFlag1^(0+512)	;volatile
 11651                           
 11652                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 11653  0D40  0023               	movlb	3	; select bank3
 11654  0D41  0867               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 11655  0D42  1D03               	btfss	3,2
 11656  0D43  0008               	return
 11657                           
 11658                           ;usb_device.c: 1741: {
 11659                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 11660  0D44  3197  2721         	fcall	_USBCtrlEPAllowStatusStage
 11661  0D46  0008               	return
 11662  0D47                     __end_of_USBCtrlEPServiceComplete:	
 11663                           
 11664                           	psect	text51
 11665  15A3                     __ptext51:	
 11666 ;; *************** function _USBCtrlEPAllowDataStage *****************
 11667 ;; Defined at:
 11668 ;;		line 1488 in file "usb/core/usb_device.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;		None
 11671 ;; Auto vars:     Size  Location     Type
 11672 ;;		None
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  1    wreg      void 
 11675 ;; Registers used:
 11676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 11682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11686 ;;Total ram usage:        2 bytes
 11687 ;; Hardware stack levels used:    1
 11688 ;; Hardware stack levels required when called:    1
 11689 ;; This function calls:
 11690 ;;		_USBCtrlTrfTxService
 11691 ;; This function is called by:
 11692 ;;		_USBCtrlEPServiceComplete
 11693 ;; This function uses a non-reentrant model
 11694 ;;
 11695                           
 11696                           
 11697                           ;psect for function _USBCtrlEPAllowDataStage
 11698  15A3                     _USBCtrlEPAllowDataStage:	
 11699                           
 11700                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 11701                           
 11702                           ;incstack = 0
 11703                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11704  15A3  0024               	movlb	4	; select bank4
 11705  15A4  01D4               	clrf	_USBDeferINDataStagePackets^(0+512)	;volatile
 11706                           
 11707                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 11708  15A5  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+512)	;volatile
 11709                           
 11710                           ;usb_device.c: 1493: if(controlTransferState == 2)
 11711  15A6  3002               	movlw	2
 11712  15A7  0023               	movlb	3	; select bank3
 11713  15A8  0668               	xorwf	_controlTransferState^(0+384),w
 11714  15A9  1D03               	btfss	3,2
 11715  15AA  2DD1               	goto	i1l4285
 11716                           
 11717                           ;usb_device.c: 1494: {
 11718                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 11719  15AB  0022               	movlb	2	; select bank2
 11720  15AC  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11721  15AD  3E01               	addlw	1
 11722  15AE  00F3               	movwf	??_USBCtrlEPAllowDataStage
 11723  15AF  3000               	movlw	0
 11724  15B0  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11725  15B1  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
 11726  15B2  0873               	movf	??_USBCtrlEPAllowDataStage,w
 11727  15B3  0086               	movwf	6
 11728  15B4  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
 11729  15B5  0087               	movwf	7
 11730  15B6  3008               	movlw	8
 11731  15B7  0081               	movwf	1
 11732                           
 11733                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 11734  15B8  30A8               	movlw	168
 11735  15B9  00F3               	movwf	??_USBCtrlEPAllowDataStage
 11736  15BA  3000               	movlw	0
 11737  15BB  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
 11738  15BC  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11739  15BD  0086               	movwf	6
 11740  15BE  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11741  15BF  0087               	movwf	7
 11742  15C0  3142               	addfsr 1,2
 11743  15C1  0873               	movf	??_USBCtrlEPAllowDataStage,w
 11744  15C2  3FC0               	movwi [0]fsr1
 11745  15C3  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
 11746  15C4  3FC1               	movwi [1]fsr1
 11747                           
 11748                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 11749  15C5  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11750  15C6  0086               	movwf	6
 11751  15C7  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11752  15C8  0087               	movwf	7
 11753  15C9  3048               	movlw	72
 11754  15CA  0081               	movwf	1
 11755                           
 11756                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11757  15CB  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11758  15CC  0086               	movwf	6
 11759  15CD  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11760  15CE  0087               	movwf	7
 11761  15CF  1781               	bsf	1,7
 11762                           
 11763                           ;usb_device.c: 1500: }
 11764  15D0  0008               	return
 11765  15D1                     i1l4285:	
 11766                           
 11767                           ;usb_device.c: 1501: else
 11768                           ;usb_device.c: 1502: {
 11769                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 11770  15D1  0023               	movlb	3	; select bank3
 11771  15D2  0859               	movf	((_inPipes+1)^(0+384)+3),w
 11772  15D3  0021               	movlb	1	; select bank1
 11773  15D4  0227               	subwf	39,w	;volatile
 11774  15D5  1D03               	skipz
 11775  15D6  2DDB               	goto	u351_25
 11776  15D7  0023               	movlb	3	; select bank3
 11777  15D8  0858               	movf	(_inPipes^(0+384)+3),w
 11778  15D9  0021               	movlb	1	; select bank1
 11779  15DA  0226               	subwf	38,w	;volatile
 11780  15DB                     u351_25:	
 11781  15DB  1803               	skipnc
 11782  15DC  2DE4               	goto	i1l4289
 11783                           
 11784                           ;usb_device.c: 1506: {
 11785                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 11786  15DD  0827               	movf	39,w	;volatile
 11787  15DE  0023               	movlb	3	; select bank3
 11788  15DF  00D9               	movwf	((_inPipes+1)^(0+384)+3)
 11789  15E0  0021               	movlb	1	; select bank1
 11790  15E1  0826               	movf	38,w	;volatile
 11791  15E2  0023               	movlb	3	; select bank3
 11792  15E3  00D8               	movwf	(_inPipes^(0+384)+3)
 11793  15E4                     i1l4289:	
 11794                           
 11795                           ;usb_device.c: 1508: }
 11796                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 11797  15E4  3188  201E         	fcall	_USBCtrlTrfTxService
 11798                           
 11799                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 11800  15E6  30A8               	movlw	168
 11801  15E7  00F3               	movwf	??_USBCtrlEPAllowDataStage
 11802  15E8  3000               	movlw	0
 11803  15E9  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
 11804  15EA  0023               	movlb	3	; select bank3
 11805  15EB  084B               	movf	_pBDTEntryIn^(0+384),w
 11806  15EC  0086               	movwf	6
 11807  15ED  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11808  15EE  0087               	movwf	7
 11809  15EF  3142               	addfsr 1,2
 11810  15F0  0873               	movf	??_USBCtrlEPAllowDataStage,w
 11811  15F1  3FC0               	movwi [0]fsr1
 11812  15F2  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
 11813  15F3  3FC1               	movwi [1]fsr1
 11814                           
 11815                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11816  15F4  084B               	movf	_pBDTEntryIn^(0+384),w
 11817  15F5  0086               	movwf	6
 11818  15F6  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11819  15F7  0087               	movwf	7
 11820  15F8  3048               	movlw	72
 11821  15F9  0081               	movwf	1
 11822                           
 11823                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11824  15FA  084B               	movf	_pBDTEntryIn^(0+384),w
 11825  15FB  0086               	movwf	6
 11826  15FC  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11827  15FD  0087               	movwf	7
 11828  15FE  1781               	bsf	1,7
 11829  15FF  0008               	return
 11830  1600                     __end_of_USBCtrlEPAllowDataStage:	
 11831                           
 11832                           	psect	text52
 11833  1549                     __ptext52:	
 11834 ;; *************** function _USBCheckStdRequest *****************
 11835 ;; Defined at:
 11836 ;;		line 2686 in file "usb/core/usb_device.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;		None
 11839 ;; Auto vars:     Size  Location     Type
 11840 ;;		None
 11841 ;; Return value:  Size  Location     Type
 11842 ;;                  1    wreg      void 
 11843 ;; Registers used:
 11844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11845 ;; Tracked objects:
 11846 ;;		On entry : 0/0
 11847 ;;		On exit  : 0/0
 11848 ;;		Unchanged: 0/0
 11849 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 11850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11852 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 11853 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 11854 ;;Total ram usage:        1 bytes
 11855 ;; Hardware stack levels used:    1
 11856 ;; Hardware stack levels required when called:    5
 11857 ;; This function calls:
 11858 ;;		_USBStdFeatureReqHandler
 11859 ;;		_USBStdGetDscHandler
 11860 ;;		_USBStdGetStatusHandler
 11861 ;;		_USBStdSetCfgHandler
 11862 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11863 ;; This function is called by:
 11864 ;;		_USBCtrlTrfSetupHandler
 11865 ;; This function uses a non-reentrant model
 11866 ;;
 11867                           
 11868                           
 11869                           ;psect for function _USBCheckStdRequest
 11870  1549                     _USBCheckStdRequest:	
 11871                           
 11872                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 11873                           
 11874                           ;incstack = 0
 11875                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11876  1549  0021               	movlb	1	; select bank1
 11877  154A  0E20               	swapf	32,w	;volatile
 11878  154B  0C89               	rrf	9,f
 11879  154C  3903               	andlw	3
 11880  154D  3A00               	xorlw	0
 11881  154E  1D03               	btfss	3,2
 11882  154F  0008               	return
 11883  1550  2D97               	goto	i1l4639
 11884  1551                     i1l584:	
 11885                           ;usb_device.c: 2691: {
 11886                           ;usb_device.c: 2692: case 5:
 11887                           
 11888                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
 11889                           
 11890                           
 11891                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 11892  1551  0023               	movlb	3	; select bank3
 11893  1552  17D7               	bsf	(_inPipes^(0+384)+2),7
 11894                           
 11895                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 11896  1553  3008               	movlw	8
 11897  1554  0021               	movlb	1	; select bank1
 11898  1555  00ED               	movwf	??_USBCheckStdRequest^(0+128)
 11899  1556  086D               	movf	??_USBCheckStdRequest^(0+128),w
 11900  1557  0023               	movlb	3	; select bank3
 11901  1558  00EB               	movwf	_USBDeviceState^(0+384)
 11902                           
 11903                           ;usb_device.c: 2696: break;
 11904  1559  0008               	return
 11905  155A                     i1l4609:	
 11906                           ;usb_device.c: 2697: case 6:
 11907                           
 11908                           
 11909                           ;usb_device.c: 2698: USBStdGetDscHandler();
 11910  155A  3189  210A         	fcall	_USBStdGetDscHandler
 11911                           
 11912                           ;usb_device.c: 2699: break;
 11913  155C  0008               	return
 11914  155D                     i1l4611:	
 11915                           ;usb_device.c: 2700: case 9:
 11916                           
 11917                           
 11918                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 11919  155D  318B  2392         	fcall	_USBStdSetCfgHandler
 11920                           
 11921                           ;usb_device.c: 2702: break;
 11922  155F  0008               	return
 11923  1560                     i1l4613:	
 11924                           ;usb_device.c: 2703: case 8:
 11925                           
 11926                           
 11927                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 11928  1560  30EF               	movlw	low _USBActiveConfiguration
 11929  1561  0023               	movlb	3	; select bank3
 11930  1562  00D5               	movwf	_inPipes^(0+384)
 11931  1563  3001               	movlw	high _USBActiveConfiguration
 11932  1564  00D6               	movwf	(_inPipes+1)^(0+384)
 11933                           
 11934                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11935  1565  1457               	bsf	(_inPipes^(0+384)+2),0
 11936                           
 11937                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 11938  1566  01D8               	clrf	(_inPipes^(0+384)+3)
 11939  1567  0AD8               	incf	(_inPipes^(0+384)+3),f
 11940                           
 11941                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 11942  1568  17D7               	bsf	(_inPipes^(0+384)+2),7
 11943                           
 11944                           ;usb_device.c: 2708: break;
 11945  1569  0008               	return
 11946  156A                     i1l4621:	
 11947                           ;usb_device.c: 2709: case 0:
 11948                           
 11949                           
 11950                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 11951  156A  3194  249F         	fcall	_USBStdGetStatusHandler
 11952                           
 11953                           ;usb_device.c: 2711: break;
 11954  156C  0008               	return
 11955  156D                     i1l4623:	
 11956                           ;usb_device.c: 2712: case 1:
 11957                           
 11958                           
 11959                           ;usb_device.c: 2713: case 3:
 11960                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 11961  156D  3184  2421         	fcall	_USBStdFeatureReqHandler
 11962                           
 11963                           ;usb_device.c: 2715: break;
 11964  156F  0008               	return
 11965  1570                     i1l4625:	
 11966                           ;usb_device.c: 2716: case 10:
 11967                           
 11968                           
 11969                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 11970  1570  0021               	movlb	1	; select bank1
 11971  1571  0824               	movf	36,w	;volatile
 11972  1572  3E68               	addlw	(low (_USBAlternateInterface| (0+512)))& (0+255)
 11973  1573  0023               	movlb	3	; select bank3
 11974  1574  00D5               	movwf	_inPipes^(0+384)
 11975  1575  3002               	movlw	2
 11976  1576  00D6               	movwf	(_inPipes+1)^(0+384)
 11977                           
 11978                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11979  1577  1457               	bsf	(_inPipes^(0+384)+2),0
 11980                           
 11981                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 11982  1578  01D8               	clrf	(_inPipes^(0+384)+3)
 11983  1579  0AD8               	incf	(_inPipes^(0+384)+3),f
 11984                           
 11985                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 11986  157A  17D7               	bsf	(_inPipes^(0+384)+2),7
 11987                           
 11988                           ;usb_device.c: 2721: break;
 11989  157B  0008               	return
 11990  157C                     i1l593:	
 11991                           ;usb_device.c: 2722: case 11:
 11992                           
 11993                           
 11994                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 11995  157C  0023               	movlb	3	; select bank3
 11996  157D  17D7               	bsf	(_inPipes^(0+384)+2),7
 11997                           
 11998                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 11999  157E  0021               	movlb	1	; select bank1
 12000  157F  0822               	movf	34,w	;volatile
 12001  1580  00ED               	movwf	??_USBCheckStdRequest^(0+128)
 12002  1581  0824               	movf	36,w	;volatile
 12003  1582  3E68               	addlw	(low (_USBAlternateInterface| (0+512)))& (0+255)
 12004  1583  0086               	movwf	6
 12005  1584  3002               	movlw	2	; select bank4/5
 12006  1585  0087               	movwf	7
 12007  1586  086D               	movf	??_USBCheckStdRequest^(0+128),w
 12008  1587  0081               	movwf	1
 12009                           
 12010                           ;usb_device.c: 2725: break;
 12011  1588  0008               	return
 12012  1589                     i1l4635:	
 12013                           ;usb_device.c: 2726: case 7:
 12014                           
 12015                           
 12016                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 12017  1589  3000               	movlw	0
 12018  158A  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
 12019  158B  3002               	movlw	2
 12020  158C  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 12021  158D  3000               	movlw	0
 12022  158E  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 12023  158F  3000               	movlw	0
 12024  1590  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 12025  1591  3000               	movlw	0
 12026  1592  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 12027  1593  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
 12028  1594  3192  2208         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 12029                           
 12030                           ;usb_device.c: 2732: }
 12031                           
 12032                           ;usb_device.c: 2731: break;
 12033                           
 12034                           ;usb_device.c: 2730: default:
 12035                           
 12036                           ;usb_device.c: 2729: case 12:
 12037                           
 12038                           ;usb_device.c: 2728: break;
 12039  1596  0008               	return
 12040  1597                     i1l4639:	
 12041  1597  0021               	movlb	1	; select bank1
 12042  1598  0821               	movf	33,w	;volatile
 12043                           
 12044                           ; Switch size 1, requested type "space"
 12045                           ; Number of cases is 11, Range of values is 0 to 12
 12046                           ; switch strategies available:
 12047                           ; Name         Instructions Cycles
 12048                           ; direct_byte           32     6 (fixed)
 12049                           ; simple_byte           34    18 (average)
 12050                           ; jumptable            260     6 (fixed)
 12051                           ;	Chosen strategy is direct_byte
 12052  1599  0084               	movwf	4
 12053  159A  300D               	movlw	13
 12054  159B  0204               	subwf	4,w
 12055  159C  1803               	skipnc
 12056  159D  0008               	return
 12057  159E  3199               	movlp	high i1S6115
 12058  159F  3504               	lslf	4,w
 12059  15A0  3E1D               	addlw	low i1S6115
 12060  15A1  0082               	movwf	2
 12061  15A2                     i1l582:	
 12062  15A2  0008               	return
 12063  15A3                     __end_of_USBCheckStdRequest:	
 12064                           
 12065                           	psect	swtext1
 12066  191D                     __pswtext1:	
 12067  191D                     i1S6115:	
 12068  191D  3195  2D6A         	ljmp	i1l4621
 12069  191F  3195  2D6D         	ljmp	i1l4623
 12070  1921  3195  2DA2         	ljmp	i1l582
 12071  1923  3195  2D6D         	ljmp	i1l4623
 12072  1925  3195  2DA2         	ljmp	i1l582
 12073  1927  3195  2D51         	ljmp	i1l584
 12074  1929  3195  2D5A         	ljmp	i1l4609
 12075  192B  3195  2D89         	ljmp	i1l4635
 12076  192D  3195  2D60         	ljmp	i1l4613
 12077  192F  3195  2D5D         	ljmp	i1l4611
 12078  1931  3195  2D70         	ljmp	i1l4625
 12079  1933  3195  2D7C         	ljmp	i1l593
 12080  1935  3195  2DA2         	ljmp	i1l582
 12081                           
 12082                           	psect	text53
 12083  0B92                     __ptext53:	
 12084 ;; *************** function _USBStdSetCfgHandler *****************
 12085 ;; Defined at:
 12086 ;;		line 1968 in file "usb/core/usb_device.c"
 12087 ;; Parameters:    Size  Location     Type
 12088 ;;		None
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;  p               2    7[BANK1 ] PTR unsigned char 
 12091 ;;		 -> UEP1(1), 
 12092 ;;  i               1    9[BANK1 ] unsigned char 
 12093 ;;  i               1   10[BANK1 ] unsigned char 
 12094 ;; Return value:  Size  Location     Type
 12095 ;;                  1    wreg      void 
 12096 ;; Registers used:
 12097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12098 ;; Tracked objects:
 12099 ;;		On entry : 0/0
 12100 ;;		On exit  : 0/0
 12101 ;;		Unchanged: 0/0
 12102 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 12103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12104 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0
 12105 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 12106 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0
 12107 ;;Total ram usage:        5 bytes
 12108 ;; Hardware stack levels used:    1
 12109 ;; Hardware stack levels required when called:    4
 12110 ;; This function calls:
 12111 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12112 ;;		i1_memset
 12113 ;; This function is called by:
 12114 ;;		_USBCheckStdRequest
 12115 ;; This function uses a non-reentrant model
 12116 ;;
 12117                           
 12118                           
 12119                           ;psect for function _USBStdSetCfgHandler
 12120  0B92                     _USBStdSetCfgHandler:	
 12121                           
 12122                           ;usb_device.c: 1970: uint8_t i;
 12123                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 12124                           
 12125                           ;incstack = 0
 12126                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12127  0B92  0023               	movlb	3	; select bank3
 12128  0B93  17D7               	bsf	(_inPipes^(0+384)+2),7
 12129                           
 12130                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<4;i++) *p++ = 
      +                          0; };
 12131  0B94  300E               	movlw	14
 12132  0B95  0021               	movlb	1	; select bank1
 12133  0B96  00E8               	movwf	(USBStdSetCfgHandler@p+1)^(0+128)
 12134  0B97  3099               	movlw	153
 12135  0B98  00E7               	movwf	USBStdSetCfgHandler@p^(0+128)
 12136  0B99  01E9               	clrf	USBStdSetCfgHandler@i_1857^(0+128)
 12137  0B9A  3004               	movlw	4
 12138  0B9B  0269               	subwf	USBStdSetCfgHandler@i_1857^(0+128),w
 12139  0B9C  1803               	btfsc	3,0
 12140  0B9D  2BAF               	goto	i1l4313
 12141  0B9E                     i1l4305:	
 12142  0B9E  0867               	movf	USBStdSetCfgHandler@p^(0+128),w
 12143  0B9F  0086               	movwf	6
 12144  0BA0  0868               	movf	(USBStdSetCfgHandler@p+1)^(0+128),w
 12145  0BA1  0087               	movwf	7
 12146  0BA2  0181               	clrf	1
 12147  0BA3  3001               	movlw	1
 12148  0BA4  07E7               	addwf	USBStdSetCfgHandler@p^(0+128),f
 12149  0BA5  3000               	movlw	0
 12150  0BA6  3DE8               	addwfc	(USBStdSetCfgHandler@p+1)^(0+128),f
 12151  0BA7  3001               	movlw	1
 12152  0BA8  00E6               	movwf	??_USBStdSetCfgHandler^(0+128)
 12153  0BA9  0866               	movf	??_USBStdSetCfgHandler^(0+128),w
 12154  0BAA  07E9               	addwf	USBStdSetCfgHandler@i_1857^(0+128),f
 12155  0BAB  3004               	movlw	4
 12156  0BAC  0269               	subwf	USBStdSetCfgHandler@i_1857^(0+128),w
 12157  0BAD  1C03               	skipc
 12158  0BAE  2B9E               	goto	i1l4305
 12159  0BAF                     i1l4313:	
 12160                           
 12161                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 12162  0BAF  3020               	movlw	32
 12163  0BB0  00F0               	movwf	i1memset@p1
 12164  0BB1  3000               	movlw	0
 12165  0BB2  00F1               	movwf	i1memset@p1+1
 12166  0BB3  3000               	movlw	0
 12167  0BB4  00F2               	movwf	i1memset@c
 12168  0BB5  00F3               	movwf	i1memset@c+1
 12169  0BB6  3050               	movlw	80
 12170  0BB7  00F4               	movwf	i1memset@n
 12171  0BB8  3000               	movlw	0
 12172  0BB9  00F5               	movwf	i1memset@n+1
 12173  0BBA  319F  279D  318B   	fcall	i1_memset
 12174                           
 12175                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 12176  0BBD  003D               	movlb	29	; select bank29
 12177  0BBE  170E               	bsf	14,6	;volatile
 12178                           
 12179                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(4+1u); i++)
 12180  0BBF  0021               	movlb	1	; select bank1
 12181  0BC0  01EA               	clrf	USBStdSetCfgHandler@i^(0+128)
 12182  0BC1  3005               	movlw	5
 12183  0BC2  026A               	subwf	USBStdSetCfgHandler@i^(0+128),w
 12184  0BC3  1803               	btfsc	3,0
 12185  0BC4  2BD9               	goto	i1l4329
 12186  0BC5                     i1l4323:	
 12187                           
 12188                           ;usb_device.c: 1988: {
 12189                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 12190  0BC5  086A               	movf	USBStdSetCfgHandler@i^(0+128),w
 12191  0BC6  3EB9               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 12192  0BC7  0086               	movwf	6
 12193  0BC8  3002               	movlw	2	; select bank5/6
 12194  0BC9  0087               	movwf	7
 12195  0BCA  0181               	clrf	1
 12196                           
 12197                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 12198  0BCB  086A               	movf	USBStdSetCfgHandler@i^(0+128),w
 12199  0BCC  3EB4               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 12200  0BCD  0086               	movwf	6
 12201  0BCE  3002               	movlw	2	; select bank5/6
 12202  0BCF  0087               	movwf	7
 12203  0BD0  0181               	clrf	1
 12204  0BD1  3001               	movlw	1
 12205  0BD2  00E6               	movwf	??_USBStdSetCfgHandler^(0+128)
 12206  0BD3  0866               	movf	??_USBStdSetCfgHandler^(0+128),w
 12207  0BD4  07EA               	addwf	USBStdSetCfgHandler@i^(0+128),f
 12208  0BD5  3005               	movlw	5
 12209  0BD6  026A               	subwf	USBStdSetCfgHandler@i^(0+128),w
 12210  0BD7  1C03               	skipc
 12211  0BD8  2BC5               	goto	i1l4323
 12212  0BD9                     i1l4329:	
 12213                           
 12214                           ;usb_device.c: 1991: }
 12215                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 12216  0BD9  3068               	movlw	low _USBAlternateInterface
 12217  0BDA  00F0               	movwf	i1memset@p1
 12218  0BDB  3002               	movlw	high _USBAlternateInterface
 12219  0BDC  00F1               	movwf	i1memset@p1+1
 12220  0BDD  3000               	movlw	0
 12221  0BDE  00F2               	movwf	i1memset@c
 12222  0BDF  00F3               	movwf	i1memset@c+1
 12223  0BE0  3002               	movlw	2
 12224  0BE1  00F4               	movwf	i1memset@n
 12225  0BE2  3000               	movlw	0
 12226  0BE3  00F5               	movwf	i1memset@n+1
 12227  0BE4  319F  279D  318B   	fcall	i1_memset
 12228                           
 12229                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 12230  0BE7  003D               	movlb	29	; select bank29
 12231  0BE8  130E               	bcf	14,6	;volatile
 12232                           
 12233                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12234  0BE9  3028               	movlw	40
 12235  0BEA  0023               	movlb	3	; select bank3
 12236  0BEB  00CB               	movwf	_pBDTEntryIn^(0+384)
 12237  0BEC  3000               	movlw	0
 12238  0BED  00CC               	movwf	(_pBDTEntryIn+1)^(0+384)
 12239                           
 12240                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 12241  0BEE  3020               	movlw	32
 12242  0BEF  0021               	movlb	1	; select bank1
 12243  0BF0  00E6               	movwf	??_USBStdSetCfgHandler^(0+128)
 12244  0BF1  0866               	movf	??_USBStdSetCfgHandler^(0+128),w
 12245  0BF2  0023               	movlb	3	; select bank3
 12246  0BF3  00EA               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 12247                           
 12248                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12249  0BF4  086A               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 12250  0BF5  0022               	movlb	2	; select bank2
 12251  0BF6  00EE               	movwf	_pBDTEntryEP0OutNext^(0+256)
 12252  0BF7  39FF               	andlw	255
 12253  0BF8  1D03               	skipz
 12254  0BF9  3000               	movlw	0
 12255  0BFA  00EF               	movwf	(_pBDTEntryEP0OutNext+1)^(0+256)
 12256                           
 12257                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 12258  0BFB  0021               	movlb	1	; select bank1
 12259  0BFC  0822               	movf	34,w	;volatile
 12260  0BFD  00E6               	movwf	??_USBStdSetCfgHandler^(0+128)
 12261  0BFE  0866               	movf	??_USBStdSetCfgHandler^(0+128),w
 12262  0BFF  0023               	movlb	3	; select bank3
 12263  0C00  00EF               	movwf	_USBActiveConfiguration^(0+384)
 12264                           
 12265                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 12266  0C01  086F               	movf	_USBActiveConfiguration^(0+384),w
 12267  0C02  1D03               	btfss	3,2
 12268  0C03  2C0B               	goto	i1l4345
 12269                           
 12270                           ;usb_device.c: 2010: {
 12271                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 12272  0C04  3010               	movlw	16
 12273  0C05  0021               	movlb	1	; select bank1
 12274  0C06  00E6               	movwf	??_USBStdSetCfgHandler^(0+128)
 12275  0C07  0866               	movf	??_USBStdSetCfgHandler^(0+128),w
 12276  0C08  0023               	movlb	3	; select bank3
 12277  0C09  00EB               	movwf	_USBDeviceState^(0+384)
 12278                           
 12279                           ;usb_device.c: 2013: }
 12280  0C0A  0008               	return
 12281  0C0B                     i1l4345:	
 12282                           
 12283                           ;usb_device.c: 2014: else
 12284                           ;usb_device.c: 2015: {
 12285                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 12286  0C0B  3000               	movlw	0
 12287  0C0C  0021               	movlb	1	; select bank1
 12288  0C0D  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
 12289  0C0E  3001               	movlw	1
 12290  0C0F  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 12291  0C10  30EF               	movlw	low _USBActiveConfiguration
 12292  0C11  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 12293  0C12  3001               	movlw	high _USBActiveConfiguration
 12294  0C13  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 12295  0C14  3001               	movlw	1
 12296  0C15  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 12297  0C16  3000               	movlw	0
 12298  0C17  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
 12299  0C18  3192  2208         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 12300                           
 12301                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 12302  0C1A  3020               	movlw	32
 12303  0C1B  0021               	movlb	1	; select bank1
 12304  0C1C  00E6               	movwf	??_USBStdSetCfgHandler^(0+128)
 12305  0C1D  0866               	movf	??_USBStdSetCfgHandler^(0+128),w
 12306  0C1E  0023               	movlb	3	; select bank3
 12307  0C1F  00EB               	movwf	_USBDeviceState^(0+384)
 12308  0C20  0008               	return
 12309  0C21                     __end_of_USBStdSetCfgHandler:	
 12310                           
 12311                           	psect	text54
 12312  1F9D                     __ptext54:	
 12313 ;; *************** function i1_memset *****************
 12314 ;; Defined at:
 12315 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 12316 ;; Parameters:    Size  Location     Type
 12317 ;;  p1              2    0[COMMON] PTR void 
 12318 ;;		 -> cmdRxBuffer(64), USBAlternateInterface(2), BDT(80), 
 12319 ;;  c               2    2[COMMON] int 
 12320 ;;  n               2    4[COMMON] unsigned int 
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;  memset          2    6[COMMON] PTR unsigned char 
 12323 ;;		 -> cmdRxBuffer(64), USBAlternateInterface(2), BDT(80), 
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  1    wreg      PTR void 
 12326 ;; Registers used:
 12327 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12328 ;; Tracked objects:
 12329 ;;		On entry : 0/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 12333 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12336 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12337 ;;Total ram usage:        8 bytes
 12338 ;; Hardware stack levels used:    1
 12339 ;; This function calls:
 12340 ;;		Nothing
 12341 ;; This function is called by:
 12342 ;;		_USBStdSetCfgHandler
 12343 ;; This function uses a non-reentrant model
 12344 ;;
 12345                           
 12346                           
 12347                           ;psect for function i1_memset
 12348  1F9D                     i1_memset:	
 12349                           
 12350                           ;incstack = 0
 12351                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 12352  1F9D  0871               	movf	i1memset@p1+1,w
 12353  1F9E  00F7               	movwf	i1memset@p+1
 12354  1F9F  0870               	movf	i1memset@p1,w
 12355  1FA0  00F6               	movwf	i1memset@p
 12356  1FA1                     i1l4235:	
 12357  1FA1  3001               	movlw	1
 12358  1FA2  02F4               	subwf	i1memset@n,f
 12359  1FA3  3000               	movlw	0
 12360  1FA4  3BF5               	subwfb	i1memset@n+1,f
 12361  1FA5  0A74               	incf	i1memset@n,w
 12362  1FA6  1903               	btfsc	3,2
 12363  1FA7  0A75               	incf	i1memset@n+1,w
 12364  1FA8  1903               	btfsc	3,2
 12365  1FA9  0008               	return
 12366  1FAA  0876               	movf	i1memset@p,w
 12367  1FAB  0086               	movwf	6
 12368  1FAC  0877               	movf	i1memset@p+1,w
 12369  1FAD  0087               	movwf	7
 12370  1FAE  0872               	movf	i1memset@c,w
 12371  1FAF  0081               	movwf	1
 12372  1FB0  3001               	movlw	1
 12373  1FB1  07F6               	addwf	i1memset@p,f
 12374  1FB2  3000               	movlw	0
 12375  1FB3  3DF7               	addwfc	i1memset@p+1,f
 12376  1FB4  2FA1               	goto	i1l4235
 12377  1FB5                     __end_ofi1_memset:	
 12378                           ;	Return value of i1_memset is never used
 12379                           
 12380                           
 12381                           	psect	text55
 12382  149F                     __ptext55:	
 12383 ;; *************** function _USBStdGetStatusHandler *****************
 12384 ;; Defined at:
 12385 ;;		line 2129 in file "usb/core/usb_device.c"
 12386 ;; Parameters:    Size  Location     Type
 12387 ;;		None
 12388 ;; Auto vars:     Size  Location     Type
 12389 ;;  p               2    1[COMMON] PTR struct __BDT
 12390 ;;		 -> RAM(4096), NULL(0), BDT(80), 
 12391 ;; Return value:  Size  Location     Type
 12392 ;;                  1    wreg      void 
 12393 ;; Registers used:
 12394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12395 ;; Tracked objects:
 12396 ;;		On entry : 0/0
 12397 ;;		On exit  : 0/0
 12398 ;;		Unchanged: 0/0
 12399 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 12400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12401 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12403 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12404 ;;Total ram usage:        3 bytes
 12405 ;; Hardware stack levels used:    1
 12406 ;; This function calls:
 12407 ;;		Nothing
 12408 ;; This function is called by:
 12409 ;;		_USBCheckStdRequest
 12410 ;; This function uses a non-reentrant model
 12411 ;;
 12412                           
 12413                           
 12414                           ;psect for function _USBStdGetStatusHandler
 12415  149F                     _USBStdGetStatusHandler:	
 12416                           
 12417                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 12418                           
 12419                           ;incstack = 0
 12420                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 12421  149F  0021               	movlb	1	; select bank1
 12422  14A0  01A8               	clrf	40	;volatile
 12423                           
 12424                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 12425  14A1  01A9               	clrf	41	;volatile
 12426                           
 12427                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 12428  14A2  2CDB               	goto	i1l4399
 12429  14A3                     i1l522:	
 12430                           ;usb_device.c: 2135: {
 12431                           ;usb_device.c: 2136: case (0x00):
 12432                           
 12433                           
 12434                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 12435  14A3  0023               	movlb	3	; select bank3
 12436  14A4  17D7               	bsf	(_inPipes^(0+384)+2),7
 12437                           
 12438                           ;usb_device.c: 2145: }
 12439                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 12440                           
 12441                           ;usb_device.c: 2143: {
 12442                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 12443                           
 12444                           ;usb_device.c: 2142: if(0 == 1)
 12445  14A5  0024               	movlb	4	; select bank4
 12446  14A6  035B               	decf	_RemoteWakeup^(0+512),w
 12447  14A7  1D03               	btfss	3,2
 12448  14A8  2CE7               	goto	i1l525
 12449                           
 12450                           ;usb_device.c: 2148: {
 12451                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 12452  14A9  0021               	movlb	1	; select bank1
 12453  14AA  14A8               	bsf	40,1	;volatile
 12454                           
 12455                           ;usb_device.c: 2150: }
 12456                           ;usb_device.c: 2151: break;
 12457  14AB  2CE7               	goto	i1l525
 12458  14AC                     i1l526:	
 12459                           ;usb_device.c: 2152: case (0x01):
 12460                           
 12461                           
 12462                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 12463  14AC  0023               	movlb	3	; select bank3
 12464  14AD  17D7               	bsf	(_inPipes^(0+384)+2),7
 12465                           
 12466                           ;usb_device.c: 2154: break;
 12467  14AE  2CE7               	goto	i1l525
 12468  14AF                     i1l527:	
 12469                           ;usb_device.c: 2155: case (0x02):
 12470                           
 12471                           
 12472                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 12473  14AF  0023               	movlb	3	; select bank3
 12474  14B0  17D7               	bsf	(_inPipes^(0+384)+2),7
 12475                           
 12476                           ;usb_device.c: 2160: {
 12477                           ;usb_device.c: 2161: BDT_ENTRY *p;
 12478                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 12479  14B1  0021               	movlb	1	; select bank1
 12480  14B2  1BA4               	btfsc	36,7	;volatile
 12481  14B3  2CBF               	goto	i1l4389
 12482                           
 12483                           ;usb_device.c: 2164: {
 12484                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 12485  14B4  0824               	movf	36,w	;volatile
 12486  14B5  390F               	andlw	15
 12487  14B6  0709               	addwf	9,w
 12488  14B7  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 12489  14B8  0086               	movwf	6
 12490  14B9  3002               	movlw	2	; select bank5/6
 12491  14BA  0087               	movwf	7
 12492  14BB  3F40               	moviw [0]fsr1
 12493  14BC  00F1               	movwf	USBStdGetStatusHandler@p
 12494  14BD  3F41               	moviw [1]fsr1
 12495  14BE  2CC9               	goto	L15
 12496  14BF                     i1l4389:	
 12497                           ;usb_device.c: 2166: }
 12498                           
 12499                           
 12500                           ;usb_device.c: 2167: else
 12501                           ;usb_device.c: 2168: {
 12502                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 12503  14BF  0824               	movf	36,w	;volatile
 12504  14C0  390F               	andlw	15
 12505  14C1  0709               	addwf	9,w
 12506  14C2  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 12507  14C3  0086               	movwf	6
 12508  14C4  3001               	movlw	1	; select bank3/4
 12509  14C5  0087               	movwf	7
 12510  14C6  3F40               	moviw [0]fsr1
 12511  14C7  00F1               	movwf	USBStdGetStatusHandler@p
 12512  14C8  3F41               	moviw [1]fsr1
 12513  14C9                     L15:	
 12514  14C9  00F2               	movwf	USBStdGetStatusHandler@p+1
 12515                           
 12516                           ;usb_device.c: 2170: }
 12517                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 12518  14CA  0871               	movf	USBStdGetStatusHandler@p,w
 12519  14CB  0086               	movwf	6
 12520  14CC  0872               	movf	USBStdGetStatusHandler@p+1,w
 12521  14CD  0087               	movwf	7
 12522  14CE  1F81               	btfss	1,7
 12523  14CF  2CE7               	goto	i1l525
 12524  14D0  0871               	movf	USBStdGetStatusHandler@p,w
 12525  14D1  0086               	movwf	6
 12526  14D2  0872               	movf	USBStdGetStatusHandler@p+1,w
 12527  14D3  0087               	movwf	7
 12528  14D4  1D01               	btfss	1,2
 12529  14D5  2CE7               	goto	i1l525
 12530                           
 12531                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 12532  14D6  3001               	movlw	1
 12533  14D7  00F0               	movwf	??_USBStdGetStatusHandler
 12534  14D8  0870               	movf	??_USBStdGetStatusHandler,w
 12535  14D9  00A8               	movwf	40	;volatile
 12536                           
 12537                           ;usb_device.c: 2175: }
 12538                           ;usb_device.c: 2176: }
 12539                           
 12540                           ;usb_device.c: 2174: break;
 12541  14DA  2CE7               	goto	i1l525
 12542  14DB                     i1l4399:	
 12543  14DB  0820               	movf	32,w	;volatile
 12544  14DC  391F               	andlw	31
 12545                           
 12546                           ; Switch size 1, requested type "space"
 12547                           ; Number of cases is 3, Range of values is 0 to 2
 12548                           ; switch strategies available:
 12549                           ; Name         Instructions Cycles
 12550                           ; simple_byte           10     6 (average)
 12551                           ; direct_byte           12     6 (fixed)
 12552                           ; jumptable            260     6 (fixed)
 12553                           ;	Chosen strategy is simple_byte
 12554  14DD  3A00               	xorlw	0	; case 0
 12555  14DE  1903               	skipnz
 12556  14DF  2CA3               	goto	i1l522
 12557  14E0  3A01               	xorlw	1	; case 1
 12558  14E1  1903               	skipnz
 12559  14E2  2CAC               	goto	i1l526
 12560  14E3  3A03               	xorlw	3	; case 2
 12561  14E4  1903               	skipnz
 12562  14E5  2CAF               	goto	i1l527
 12563  14E6  2CE7               	goto	i1l525
 12564  14E7                     i1l525:	
 12565                           
 12566                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 12567  14E7  0023               	movlb	3	; select bank3
 12568  14E8  1FD7               	btfss	(_inPipes^(0+384)+2),7
 12569  14E9  0008               	return
 12570                           
 12571                           ;usb_device.c: 2179: {
 12572                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 12573  14EA  30A8               	movlw	168
 12574  14EB  00D5               	movwf	_inPipes^(0+384)
 12575  14EC  3000               	movlw	0
 12576  14ED  00D6               	movwf	(_inPipes+1)^(0+384)
 12577                           
 12578                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12579  14EE  1457               	bsf	(_inPipes^(0+384)+2),0
 12580                           
 12581                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 12582  14EF  3002               	movlw	2
 12583  14F0  00F0               	movwf	??_USBStdGetStatusHandler
 12584  14F1  0870               	movf	??_USBStdGetStatusHandler,w
 12585  14F2  00D8               	movwf	(_inPipes^(0+384)+3)
 12586  14F3  0008               	return
 12587  14F4                     __end_of_USBStdGetStatusHandler:	
 12588                           
 12589                           	psect	text56
 12590  090A                     __ptext56:	
 12591 ;; *************** function _USBStdGetDscHandler *****************
 12592 ;; Defined at:
 12593 ;;		line 2043 in file "usb/core/usb_device.c"
 12594 ;; Parameters:    Size  Location     Type
 12595 ;;		None
 12596 ;; Auto vars:     Size  Location     Type
 12597 ;;		None
 12598 ;; Return value:  Size  Location     Type
 12599 ;;                  1    wreg      void 
 12600 ;; Registers used:
 12601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 12602 ;; Tracked objects:
 12603 ;;		On entry : 0/0
 12604 ;;		On exit  : 0/0
 12605 ;;		Unchanged: 0/0
 12606 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 12607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12609 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12610 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12611 ;;Total ram usage:        3 bytes
 12612 ;; Hardware stack levels used:    1
 12613 ;; This function calls:
 12614 ;;		Nothing
 12615 ;; This function is called by:
 12616 ;;		_USBCheckStdRequest
 12617 ;; This function uses a non-reentrant model
 12618 ;;
 12619                           
 12620                           
 12621                           ;psect for function _USBStdGetDscHandler
 12622  090A                     _USBStdGetDscHandler:	
 12623                           
 12624                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 12625                           
 12626                           ;incstack = 0
 12627                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 12628  090A  3080               	movlw	128
 12629  090B  0021               	movlb	1	; select bank1
 12630  090C  0620               	xorwf	32,w	;volatile
 12631  090D  1D03               	btfss	3,2
 12632  090E  0008               	return
 12633                           
 12634                           ;usb_device.c: 2046: {
 12635                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 12636  090F  30C0               	movlw	192
 12637  0910  00F0               	movwf	??_USBStdGetDscHandler
 12638  0911  0870               	movf	??_USBStdGetDscHandler,w
 12639  0912  0023               	movlb	3	; select bank3
 12640  0913  00D7               	movwf	(_inPipes^(0+384)+2)
 12641                           
 12642                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 12643  0914  297C               	goto	i1l4377
 12644  0915                     i1l4353:	
 12645                           ;usb_device.c: 2050: {
 12646                           ;usb_device.c: 2051: case 0x01:
 12647                           
 12648                           
 12649                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 12650  0915  304D               	movlw	low (_device_dsc| (0+32768))
 12651  0916  0023               	movlb	3	; select bank3
 12652  0917  00D5               	movwf	_inPipes^(0+384)
 12653  0918  3099               	movlw	high (_device_dsc| (0+32768))
 12654  0919  00D6               	movwf	(_inPipes^(0+384)+1)
 12655                           
 12656                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 12657  091A  3012               	movlw	18
 12658  091B  00D8               	movwf	(_inPipes^(0+384)+3)
 12659  091C  3000               	movlw	0
 12660  091D  00D9               	movwf	(_inPipes^(0+384)+4)
 12661                           
 12662                           ;usb_device.c: 2058: break;
 12663  091E  0008               	return
 12664  091F                     i1l4355:	
 12665                           ;usb_device.c: 2059: case 0x02:
 12666                           
 12667                           
 12668                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 12669  091F  0021               	movlb	1	; select bank1
 12670  0920  0822               	movf	34,w	;volatile
 12671  0921  1D03               	btfss	3,2
 12672  0922  2952               	goto	i1l4363
 12673                           
 12674                           ;usb_device.c: 2064: {
 12675                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 12676  0923  0822               	movf	34,w	;volatile
 12677  0924  00F0               	movwf	??_USBStdGetDscHandler
 12678  0925  01F1               	clrf	??_USBStdGetDscHandler+1
 12679  0926  35F0               	lslf	??_USBStdGetDscHandler,f
 12680  0927  0DF1               	rlf	??_USBStdGetDscHandler+1,f
 12681  0928  307B               	movlw	low (_USB_CD_Ptr| (0+32768))
 12682  0929  0770               	addwf	??_USBStdGetDscHandler,w
 12683  092A  0084               	movwf	4
 12684  092B  3099               	movlw	high (_USB_CD_Ptr| (0+32768))
 12685  092C  3D71               	addwfc	??_USBStdGetDscHandler+1,w
 12686  092D  0085               	movwf	5
 12687  092E  3F00               	moviw [0]fsr0
 12688  092F  0023               	movlb	3	; select bank3
 12689  0930  00D5               	movwf	_inPipes^(0+384)
 12690  0931  3F01               	moviw [1]fsr0
 12691  0932  00D6               	movwf	(_inPipes+1)^(0+384)
 12692                           
 12693                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 12694  0933  0856               	movf	(_inPipes+1)^(0+384),w
 12695  0934  00F1               	movwf	??_USBStdGetDscHandler+1
 12696  0935  0855               	movf	_inPipes^(0+384),w
 12697  0936  00F0               	movwf	??_USBStdGetDscHandler
 12698  0937  3002               	movlw	2
 12699  0938  0770               	addwf	??_USBStdGetDscHandler,w
 12700  0939  0084               	movwf	4
 12701  093A  0871               	movf	??_USBStdGetDscHandler+1,w
 12702  093B  1803               	skipnc
 12703  093C  0A71               	incf	??_USBStdGetDscHandler+1,w
 12704  093D  0085               	movwf	5
 12705  093E  0800               	movf	0,w	;code access
 12706  093F  00F2               	movwf	??_USBStdGetDscHandler+2
 12707  0940  0872               	movf	??_USBStdGetDscHandler+2,w
 12708  0941  00D8               	movwf	(_inPipes^(0+384)+3)
 12709                           
 12710                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 12711  0942  0856               	movf	(_inPipes+1)^(0+384),w
 12712  0943  00F1               	movwf	??_USBStdGetDscHandler+1
 12713  0944  0855               	movf	_inPipes^(0+384),w
 12714  0945  00F0               	movwf	??_USBStdGetDscHandler
 12715  0946  3003               	movlw	3
 12716  0947  0770               	addwf	??_USBStdGetDscHandler,w
 12717  0948  0084               	movwf	4
 12718  0949  0871               	movf	??_USBStdGetDscHandler+1,w
 12719  094A  1803               	skipnc
 12720  094B  0A71               	incf	??_USBStdGetDscHandler+1,w
 12721  094C  0085               	movwf	5
 12722  094D  0800               	movf	0,w	;code access
 12723  094E  00F2               	movwf	??_USBStdGetDscHandler+2
 12724  094F  0872               	movf	??_USBStdGetDscHandler+2,w
 12725  0950  00D9               	movwf	(_inPipes^(0+384)+4)
 12726                           
 12727                           ;usb_device.c: 2076: }
 12728  0951  0008               	return
 12729  0952                     i1l4363:	
 12730                           
 12731                           ;usb_device.c: 2077: else
 12732                           ;usb_device.c: 2078: {
 12733                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 12734  0952  0023               	movlb	3	; select bank3
 12735  0953  01D7               	clrf	(_inPipes^(0+384)+2)
 12736                           
 12737                           ;usb_device.c: 2080: }
 12738                           ;usb_device.c: 2081: break;
 12739  0954  0008               	return
 12740  0955                     i1l4365:	
 12741                           ;usb_device.c: 2082: case 0x03:
 12742                           
 12743                           
 12744                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<5)
 12745  0955  3005               	movlw	5
 12746  0956  0021               	movlb	1	; select bank1
 12747  0957  0222               	subwf	34,w	;volatile
 12748  0958  1803               	skipnc
 12749  0959  2976               	goto	i1l4371
 12750                           
 12751                           ;usb_device.c: 2087: {
 12752                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 12753  095A  0822               	movf	34,w	;volatile
 12754  095B  00F0               	movwf	??_USBStdGetDscHandler
 12755  095C  01F1               	clrf	??_USBStdGetDscHandler+1
 12756  095D  35F0               	lslf	??_USBStdGetDscHandler,f
 12757  095E  0DF1               	rlf	??_USBStdGetDscHandler+1,f
 12758  095F  306C               	movlw	low (_USB_SD_Ptr| (0+32768))
 12759  0960  0770               	addwf	??_USBStdGetDscHandler,w
 12760  0961  0084               	movwf	4
 12761  0962  3099               	movlw	high (_USB_SD_Ptr| (0+32768))
 12762  0963  3D71               	addwfc	??_USBStdGetDscHandler+1,w
 12763  0964  0085               	movwf	5
 12764  0965  3F00               	moviw [0]fsr0
 12765  0966  0023               	movlb	3	; select bank3
 12766  0967  00D5               	movwf	_inPipes^(0+384)
 12767  0968  3F01               	moviw [1]fsr0
 12768  0969  00D6               	movwf	(_inPipes+1)^(0+384)
 12769                           
 12770                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 12771  096A  0855               	movf	_inPipes^(0+384),w
 12772  096B  0084               	movwf	4
 12773  096C  0856               	movf	(_inPipes+1)^(0+384),w
 12774  096D  0085               	movwf	5
 12775  096E  0800               	movf	0,w	;code access
 12776  096F  00F0               	movwf	??_USBStdGetDscHandler
 12777  0970  01F1               	clrf	??_USBStdGetDscHandler+1
 12778  0971  0870               	movf	??_USBStdGetDscHandler,w
 12779  0972  00D8               	movwf	(_inPipes^(0+384)+3)
 12780  0973  0871               	movf	??_USBStdGetDscHandler+1,w
 12781  0974  00D9               	movwf	((_inPipes+1)^(0+384)+3)
 12782                           
 12783                           ;usb_device.c: 2092: }
 12784  0975  0008               	return
 12785  0976                     i1l4371:	
 12786                           
 12787                           ;usb_device.c: 2102: else
 12788                           ;usb_device.c: 2103: {
 12789                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 12790  0976  0023               	movlb	3	; select bank3
 12791  0977  01D7               	clrf	(_inPipes^(0+384)+2)
 12792                           
 12793                           ;usb_device.c: 2105: }
 12794                           ;usb_device.c: 2106: break;
 12795  0978  0008               	return
 12796  0979                     i1l4373:	
 12797                           ;usb_device.c: 2107: default:
 12798                           
 12799                           
 12800                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 12801  0979  0023               	movlb	3	; select bank3
 12802  097A  01D7               	clrf	(_inPipes^(0+384)+2)
 12803                           
 12804                           ;usb_device.c: 2110: }
 12805                           
 12806                           ;usb_device.c: 2109: break;
 12807  097B  0008               	return
 12808  097C                     i1l4377:	
 12809  097C  0021               	movlb	1	; select bank1
 12810  097D  0823               	movf	35,w	;volatile
 12811                           
 12812                           ; Switch size 1, requested type "space"
 12813                           ; Number of cases is 3, Range of values is 1 to 3
 12814                           ; switch strategies available:
 12815                           ; Name         Instructions Cycles
 12816                           ; simple_byte           10     6 (average)
 12817                           ; direct_byte           15     9 (fixed)
 12818                           ; jumptable            263     9 (fixed)
 12819                           ;	Chosen strategy is simple_byte
 12820  097E  3A01               	xorlw	1	; case 1
 12821  097F  1903               	skipnz
 12822  0980  2915               	goto	i1l4353
 12823  0981  3A03               	xorlw	3	; case 2
 12824  0982  1903               	skipnz
 12825  0983  291F               	goto	i1l4355
 12826  0984  3A01               	xorlw	1	; case 3
 12827  0985  1903               	skipnz
 12828  0986  2955               	goto	i1l4365
 12829  0987  2979               	goto	i1l4373
 12830  0988  0008               	return
 12831  0989                     __end_of_USBStdGetDscHandler:	
 12832                           
 12833                           	psect	text57
 12834  0421                     __ptext57:	
 12835 ;; *************** function _USBStdFeatureReqHandler *****************
 12836 ;; Defined at:
 12837 ;;		line 2754 in file "usb/core/usb_device.c"
 12838 ;; Parameters:    Size  Location     Type
 12839 ;;		None
 12840 ;; Auto vars:     Size  Location     Type
 12841 ;;  p               2   11[BANK1 ] PTR struct __BDT
 12842 ;;		 -> RAM(4096), NULL(0), BDT(80), 
 12843 ;;  pUEP            2    8[BANK1 ] PTR unsigned char 
 12844 ;;		 -> UEP0(1), 
 12845 ;;  current_ep_d    1   10[BANK1 ] struct .
 12846 ;; Return value:  Size  Location     Type
 12847 ;;                  1    wreg      void 
 12848 ;; Registers used:
 12849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12850 ;; Tracked objects:
 12851 ;;		On entry : 0/0
 12852 ;;		On exit  : 0/0
 12853 ;;		Unchanged: 0/0
 12854 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 12855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12856 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0
 12857 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0
 12858 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0
 12859 ;;Total ram usage:        7 bytes
 12860 ;; Hardware stack levels used:    1
 12861 ;; Hardware stack levels required when called:    4
 12862 ;; This function calls:
 12863 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12864 ;; This function is called by:
 12865 ;;		_USBCheckStdRequest
 12866 ;; This function uses a non-reentrant model
 12867 ;;
 12868                           
 12869                           
 12870                           ;psect for function _USBStdFeatureReqHandler
 12871  0421                     _USBStdFeatureReqHandler:	
 12872                           
 12873                           ;usb_device.c: 2756: BDT_ENTRY *p;
 12874                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 12875                           ;usb_device.c: 2761: unsigned char* pUEP;
 12876                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 12877                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 12878                           
 12879                           ;incstack = 0
 12880                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12881  0421  0021               	movlb	1	; select bank1
 12882  0422  0322               	decf	34,w	;volatile
 12883  0423  1D03               	btfss	3,2
 12884  0424  2C37               	goto	i1l4419
 12885  0425  0820               	movf	32,w	;volatile
 12886  0426  391F               	andlw	31
 12887  0427  3A00               	xorlw	0
 12888  0428  1D03               	skipz
 12889  0429  2C37               	goto	i1l4419
 12890                           
 12891                           ;usb_device.c: 2801: {
 12892                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 12893  042A  0023               	movlb	3	; select bank3
 12894  042B  17D7               	bsf	(_inPipes^(0+384)+2),7
 12895                           
 12896                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 12897  042C  3003               	movlw	3
 12898  042D  0021               	movlb	1	; select bank1
 12899  042E  0621               	xorwf	33,w	;volatile
 12900  042F  1D03               	btfss	3,2
 12901  0430  2C35               	goto	i1l4417
 12902                           
 12903                           ;usb_device.c: 2804: RemoteWakeup = 1;
 12904  0431  0024               	movlb	4	; select bank4
 12905  0432  01DB               	clrf	_RemoteWakeup^(0+512)
 12906  0433  0ADB               	incf	_RemoteWakeup^(0+512),f
 12907  0434  2C37               	goto	i1l4419
 12908  0435                     i1l4417:	
 12909                           
 12910                           ;usb_device.c: 2805: else
 12911                           ;usb_device.c: 2806: RemoteWakeup = 0;
 12912  0435  0024               	movlb	4	; select bank4
 12913  0436  01DB               	clrf	_RemoteWakeup^(0+512)
 12914  0437                     i1l4419:	
 12915                           
 12916                           ;usb_device.c: 2807: }
 12917                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 12918                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 12919                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 4)&&
 12920                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 12921  0437  0021               	movlb	1	; select bank1
 12922  0438  0822               	movf	34,w	;volatile
 12923  0439  1D03               	btfss	3,2
 12924  043A  0008               	return
 12925  043B  0820               	movf	32,w	;volatile
 12926  043C  391F               	andlw	31
 12927  043D  3A02               	xorlw	2
 12928  043E  1D03               	skipz
 12929  043F  0008               	return
 12930  0440  0824               	movf	36,w	;volatile
 12931  0441  390F               	andlw	15
 12932  0442  3A00               	xorlw	0
 12933  0443  1903               	skipnz
 12934  0444  0008               	return
 12935  0445  0824               	movf	36,w	;volatile
 12936  0446  390F               	andlw	15
 12937  0447  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 12938  0448  3005               	movlw	5
 12939  0449  0266               	subwf	??_USBStdFeatureReqHandler^(0+128),w
 12940  044A  1803               	skipnc
 12941  044B  0008               	return
 12942  044C  3020               	movlw	32
 12943  044D  0023               	movlb	3	; select bank3
 12944  044E  066B               	xorwf	_USBDeviceState^(0+384),w
 12945  044F  1D03               	btfss	3,2
 12946  0450  0008               	return
 12947                           
 12948                           ;usb_device.c: 2814: {
 12949                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 12950  0451  17D7               	bsf	(_inPipes^(0+384)+2),7
 12951                           
 12952                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 12953  0452  0021               	movlb	1	; select bank1
 12954  0453  1BA4               	btfsc	36,7	;volatile
 12955  0454  2C64               	goto	i1l4433
 12956                           
 12957                           ;usb_device.c: 2821: {
 12958                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 12959  0455  0824               	movf	36,w	;volatile
 12960  0456  390F               	andlw	15
 12961  0457  0709               	addwf	9,w
 12962  0458  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 12963  0459  0086               	movwf	6
 12964  045A  3002               	movlw	2	; select bank5/6
 12965  045B  0087               	movwf	7
 12966  045C  3F40               	moviw [0]fsr1
 12967  045D  00EB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 12968  045E  3F41               	moviw [1]fsr1
 12969  045F  00EC               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
 12970                           
 12971                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 12972  0460  0824               	movf	36,w	;volatile
 12973  0461  390F               	andlw	15
 12974  0462  3EB4               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 12975  0463  2C72               	goto	L16
 12976  0464                     i1l4433:	
 12977                           ;usb_device.c: 2824: }
 12978                           
 12979                           
 12980                           ;usb_device.c: 2825: else
 12981                           ;usb_device.c: 2826: {
 12982                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 12983  0464  0824               	movf	36,w	;volatile
 12984  0465  390F               	andlw	15
 12985  0466  0709               	addwf	9,w
 12986  0467  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 12987  0468  0086               	movwf	6
 12988  0469  3001               	movlw	1	; select bank3/4
 12989  046A  0087               	movwf	7
 12990  046B  3F40               	moviw [0]fsr1
 12991  046C  00EB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 12992  046D  3F41               	moviw [1]fsr1
 12993  046E  00EC               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
 12994                           
 12995                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 12996  046F  0824               	movf	36,w	;volatile
 12997  0470  390F               	andlw	15
 12998  0471  3EB9               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 12999  0472                     L16:	
 13000  0472  0086               	movwf	6
 13001  0473  3002               	movlw	2	; select bank5/6
 13002  0474  0087               	movwf	7
 13003  0475  0801               	movf	1,w
 13004  0476  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 13005  0477  0866               	movf	??_USBStdFeatureReqHandler^(0+128),w
 13006  0478  00EA               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+128)
 13007                           
 13008                           ;usb_device.c: 2829: }
 13009                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 13010  0479  186A               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),0
 13011  047A  2C85               	goto	i1l4439
 13012                           
 13013                           ;usb_device.c: 2836: {
 13014                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 13015  047B  30FB               	movlw	251
 13016  047C  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 13017  047D  30FF               	movlw	255
 13018  047E  00E7               	movwf	(??_USBStdFeatureReqHandler^(0+128)+1)
 13019  047F  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13020  0480  0566               	andwf	??_USBStdFeatureReqHandler^(0+128),w
 13021  0481  00EB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 13022  0482  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13023  0483  0567               	andwf	(??_USBStdFeatureReqHandler+1)^(0+128),w
 13024  0484  2C8A               	goto	L17
 13025  0485                     i1l4439:	
 13026                           ;usb_device.c: 2838: }
 13027                           
 13028                           
 13029                           ;usb_device.c: 2839: else
 13030                           ;usb_device.c: 2840: {
 13031                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 13032  0485  3004               	movlw	4
 13033  0486  046B               	iorwf	USBStdFeatureReqHandler@p^(0+128),w
 13034  0487  00EB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 13035  0488  3000               	movlw	0
 13036  0489  046C               	iorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13037  048A                     L17:	
 13038  048A  00EC               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
 13039                           
 13040                           ;usb_device.c: 2842: }
 13041                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 13042  048B  1BA4               	btfsc	36,7	;volatile
 13043  048C  2C99               	goto	i1l4445
 13044                           
 13045                           ;usb_device.c: 2848: {
 13046                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 13047  048D  0824               	movf	36,w	;volatile
 13048  048E  390F               	andlw	15
 13049  048F  0709               	addwf	9,w
 13050  0490  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 13051  0491  0086               	movwf	6
 13052  0492  3002               	movlw	2	; select bank5/6
 13053  0493  0087               	movwf	7
 13054  0494  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13055  0495  3FC0               	movwi [0]fsr1
 13056  0496  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13057  0497  3FC1               	movwi [1]fsr1
 13058                           
 13059                           ;usb_device.c: 2850: }
 13060  0498  2CA4               	goto	i1l4447
 13061  0499                     i1l4445:	
 13062                           
 13063                           ;usb_device.c: 2851: else
 13064                           ;usb_device.c: 2852: {
 13065                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 13066  0499  0824               	movf	36,w	;volatile
 13067  049A  390F               	andlw	15
 13068  049B  0709               	addwf	9,w
 13069  049C  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 13070  049D  0086               	movwf	6
 13071  049E  3001               	movlw	1	; select bank3/4
 13072  049F  0087               	movwf	7
 13073  04A0  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13074  04A1  3FC0               	movwi [0]fsr1
 13075  04A2  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13076  04A3  3FC1               	movwi [1]fsr1
 13077  04A4                     i1l4447:	
 13078                           
 13079                           ;usb_device.c: 2854: }
 13080                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 13081  04A4  3003               	movlw	3
 13082  04A5  0621               	xorwf	33,w	;volatile
 13083  04A6  1D03               	btfss	3,2
 13084  04A7  2CC6               	goto	i1l4461
 13085                           
 13086                           ;usb_device.c: 2858: {
 13087                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 13088  04A8  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13089  04A9  0086               	movwf	6
 13090  04AA  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13091  04AB  0087               	movwf	7
 13092  04AC  1F81               	btfss	1,7
 13093  04AD  2CBB               	goto	i1l4457
 13094                           
 13095                           ;usb_device.c: 2860: {
 13096                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 13097  04AE  1BA4               	btfsc	36,7	;volatile
 13098  04AF  2CB4               	goto	i1l4455
 13099                           
 13100                           ;usb_device.c: 2864: {
 13101                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 13102  04B0  0824               	movf	36,w	;volatile
 13103  04B1  390F               	andlw	15
 13104  04B2  3EB4               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 13105  04B3  2CB7               	goto	L18
 13106  04B4                     i1l4455:	
 13107                           ;usb_device.c: 2866: }
 13108                           
 13109                           
 13110                           ;usb_device.c: 2867: else
 13111                           ;usb_device.c: 2868: {
 13112                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 13113  04B4  0824               	movf	36,w	;volatile
 13114  04B5  390F               	andlw	15
 13115  04B6  3EB9               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 13116  04B7                     L18:	
 13117  04B7  0086               	movwf	6
 13118  04B8  3002               	movlw	2	; select bank5/6
 13119  04B9  0087               	movwf	7
 13120  04BA  1481               	bsf	1,1
 13121  04BB                     i1l4457:	
 13122                           
 13123                           ;usb_device.c: 2870: }
 13124                           ;usb_device.c: 2871: }
 13125                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 13126  04BB  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13127  04BC  0086               	movwf	6
 13128  04BD  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13129  04BE  0087               	movwf	7
 13130  04BF  1501               	bsf	1,2
 13131                           
 13132                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 13133  04C0  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13134  04C1  0086               	movwf	6
 13135  04C2  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13136  04C3  0087               	movwf	7
 13137  04C4  1781               	bsf	1,7
 13138                           
 13139                           ;usb_device.c: 2876: }
 13140  04C5  0008               	return
 13141  04C6                     i1l4461:	
 13142                           
 13143                           ;usb_device.c: 2877: else
 13144                           ;usb_device.c: 2878: {
 13145                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 13146  04C6  3004               	movlw	4
 13147  04C7  066B               	xorwf	USBStdFeatureReqHandler@p^(0+128),w
 13148  04C8  00EB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 13149  04C9  3000               	movlw	0
 13150  04CA  066C               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13151  04CB  00EC               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
 13152                           
 13153                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 13154  04CC  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13155  04CD  0086               	movwf	6
 13156  04CE  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13157  04CF  0087               	movwf	7
 13158  04D0  1F81               	btfss	1,7
 13159  04D1  2CEF               	goto	i1l4471
 13160                           
 13161                           ;usb_device.c: 2885: {
 13162                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 13163  04D2  307F               	movlw	127
 13164  04D3  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 13165  04D4  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13166  04D5  0086               	movwf	6
 13167  04D6  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13168  04D7  0087               	movwf	7
 13169  04D8  0866               	movf	??_USBStdFeatureReqHandler^(0+128),w
 13170  04D9  0581               	andwf	1,f
 13171                           
 13172                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 13173  04DA  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13174  04DB  0086               	movwf	6
 13175  04DC  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13176  04DD  0087               	movwf	7
 13177  04DE  1701               	bsf	1,6
 13178                           
 13179                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 13180  04DF  3000               	movlw	0
 13181  04E0  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
 13182  04E1  3005               	movlw	5
 13183  04E2  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 13184  04E3  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13185  04E4  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 13186  04E5  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13187  04E6  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 13188  04E7  3002               	movlw	2
 13189  04E8  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 13190  04E9  3000               	movlw	0
 13191  04EA  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
 13192  04EB  3192  2208  3184   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 13193                           
 13194                           ;usb_device.c: 2891: }
 13195  04EE  2CF5               	goto	i1l4473
 13196  04EF                     i1l4471:	
 13197                           
 13198                           ;usb_device.c: 2892: else
 13199                           ;usb_device.c: 2893: {
 13200                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 13201  04EF  0021               	movlb	1	; select bank1
 13202  04F0  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13203  04F1  0086               	movwf	6
 13204  04F2  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13205  04F3  0087               	movwf	7
 13206  04F4  1701               	bsf	1,6
 13207  04F5                     i1l4473:	
 13208                           
 13209                           ;usb_device.c: 2896: }
 13210                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 13211  04F5  3004               	movlw	4
 13212  04F6  0021               	movlb	1	; select bank1
 13213  04F7  066B               	xorwf	USBStdFeatureReqHandler@p^(0+128),w
 13214  04F8  00EB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 13215  04F9  3000               	movlw	0
 13216  04FA  066C               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13217  04FB  00EC               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
 13218                           
 13219                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 13220  04FC  18EA               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),1
 13221  04FD  2D04               	goto	i1l618
 13222  04FE  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13223  04FF  0086               	movwf	6
 13224  0500  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13225  0501  0087               	movwf	7
 13226  0502  1F81               	btfss	1,7
 13227  0503  2D29               	goto	i1l4485
 13228  0504                     i1l618:	
 13229                           
 13230                           ;usb_device.c: 2907: {
 13231                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 13232  0504  1BA4               	btfsc	36,7	;volatile
 13233  0505  2D0A               	goto	i1l4481
 13234                           
 13235                           ;usb_device.c: 2909: {
 13236                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 13237  0506  0824               	movf	36,w	;volatile
 13238  0507  390F               	andlw	15
 13239  0508  3EB4               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 13240  0509  2D0D               	goto	L19
 13241  050A                     i1l4481:	
 13242                           ;usb_device.c: 2911: }
 13243                           
 13244                           
 13245                           ;usb_device.c: 2912: else
 13246                           ;usb_device.c: 2913: {
 13247                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 13248  050A  0824               	movf	36,w	;volatile
 13249  050B  390F               	andlw	15
 13250  050C  3EB9               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 13251  050D                     L19:	
 13252  050D  0086               	movwf	6
 13253  050E  3002               	movlw	2	; select bank5/6
 13254  050F  0087               	movwf	7
 13255  0510  1081               	bcf	1,1
 13256                           
 13257                           ;usb_device.c: 2915: }
 13258                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 13259  0511  303B               	movlw	59
 13260  0512  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 13261  0513  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13262  0514  0086               	movwf	6
 13263  0515  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13264  0516  0087               	movwf	7
 13265  0517  0866               	movf	??_USBStdFeatureReqHandler^(0+128),w
 13266  0518  0581               	andwf	1,f
 13267                           
 13268                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 13269  0519  3000               	movlw	0
 13270  051A  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
 13271  051B  3005               	movlw	5
 13272  051C  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 13273  051D  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13274  051E  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 13275  051F  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13276  0520  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 13277  0521  3002               	movlw	2
 13278  0522  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 13279  0523  3000               	movlw	0
 13280  0524  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
 13281  0525  3192  2208  3184   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 13282                           
 13283                           ;usb_device.c: 2921: }
 13284  0528  2D32               	goto	i1l4487
 13285  0529                     i1l4485:	
 13286                           
 13287                           ;usb_device.c: 2922: else
 13288                           ;usb_device.c: 2923: {
 13289                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 13290  0529  303B               	movlw	59
 13291  052A  0021               	movlb	1	; select bank1
 13292  052B  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 13293  052C  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13294  052D  0086               	movwf	6
 13295  052E  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13296  052F  0087               	movwf	7
 13297  0530  0866               	movf	??_USBStdFeatureReqHandler^(0+128),w
 13298  0531  0581               	andwf	1,f
 13299  0532                     i1l4487:	
 13300                           
 13301                           ;usb_device.c: 2926: }
 13302                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 13303  0532  0021               	movlb	1	; select bank1
 13304  0533  0824               	movf	36,w	;volatile
 13305  0534  390F               	andlw	15
 13306  0535  3E98               	addlw	152
 13307  0536  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 13308  0537  01E7               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
 13309  0538  300E               	movlw	14
 13310  0539  3DE7               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
 13311  053A  0866               	movf	??_USBStdFeatureReqHandler^(0+128),w
 13312  053B  00E8               	movwf	USBStdFeatureReqHandler@pUEP^(0+128)
 13313  053C  0867               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
 13314  053D  00E9               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+128)
 13315                           
 13316                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 13317  053E  30FE               	movlw	254
 13318  053F  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 13319  0540  0868               	movf	USBStdFeatureReqHandler@pUEP^(0+128),w
 13320  0541  0086               	movwf	6
 13321  0542  0869               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+128),w
 13322  0543  0087               	movwf	7
 13323  0544  0866               	movf	??_USBStdFeatureReqHandler^(0+128),w
 13324  0545  0581               	andwf	1,f
 13325  0546  0008               	return
 13326  0547                     __end_of_USBStdFeatureReqHandler:	
 13327                           
 13328                           	psect	text58
 13329  1208                     __ptext58:	
 13330 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 13331 ;; Defined at:
 13332 ;;		line 53 in file "usb/usb_events.c"
 13333 ;; Parameters:    Size  Location     Type
 13334 ;;  event           2    0[BANK1 ] enum E2485
 13335 ;;  pdata           2    2[BANK1 ] PTR void 
 13336 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 13337 ;;		 -> BDT(80), 
 13338 ;;  size            2    4[BANK1 ] unsigned int 
 13339 ;; Auto vars:     Size  Location     Type
 13340 ;;		None
 13341 ;; Return value:  Size  Location     Type
 13342 ;;                  1    wreg      unsigned char 
 13343 ;; Registers used:
 13344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13345 ;; Tracked objects:
 13346 ;;		On entry : 0/0
 13347 ;;		On exit  : 0/0
 13348 ;;		Unchanged: 0/0
 13349 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 13350 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0
 13351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13353 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0
 13354 ;;Total ram usage:        6 bytes
 13355 ;; Hardware stack levels used:    1
 13356 ;; Hardware stack levels required when called:    3
 13357 ;; This function calls:
 13358 ;;		_CDCInitEP
 13359 ;;		_CDCInitEP2
 13360 ;;		_USBCheckCDCRequest
 13361 ;;		_USBCheckCDCRequest2
 13362 ;;		_main_CDC_to_RS485_Initialize
 13363 ;;		_main_Communication_Initialize
 13364 ;; This function is called by:
 13365 ;;		_USBDeviceTasks
 13366 ;;		_USBStdSetCfgHandler
 13367 ;;		_USBSuspend
 13368 ;;		_USBWakeFromSuspend
 13369 ;;		_USBCtrlTrfSetupHandler
 13370 ;;		_USBCheckStdRequest
 13371 ;;		_USBStdFeatureReqHandler
 13372 ;; This function uses a non-reentrant model
 13373 ;;
 13374                           
 13375                           
 13376                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
 13377  1208                     _USER_USB_CALLBACK_EVENT_HANDLER:	
 13378                           
 13379                           ;usb_events.c: 55: switch( (int) event )
 13380                           
 13381                           ;incstack = 0
 13382                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 13383  1208  2A1B               	goto	i1l4155
 13384  1209                     i1l4149:	
 13385                           ;usb_events.c: 90: case EVENT_CONFIGURED:
 13386                           
 13387                           ;usb_events.c: 88: break;
 13388                           
 13389                           ;usb_events.c: 79: case EVENT_RESUME:
 13390                           
 13391                           ;usb_events.c: 77: break;
 13392                           
 13393                           ;usb_events.c: 66: case EVENT_SUSPEND:
 13394                           
 13395                           ;usb_events.c: 64: break;
 13396                           
 13397                           ;usb_events.c: 60: case EVENT_SOF:
 13398                           
 13399                           ;usb_events.c: 58: break;
 13400                           
 13401                           ;usb_events.c: 56: {
 13402                           ;usb_events.c: 57: case EVENT_TRANSFER:
 13403                           
 13404                           
 13405                           ;usb_events.c: 93: CDCInitEP();
 13406  1209  3191  21D1  3192   	fcall	_CDCInitEP
 13407                           
 13408                           ;usb_events.c: 94: CDCInitEP2();
 13409  120C  3187  27C7  3192   	fcall	_CDCInitEP2
 13410                           
 13411                           ;usb_events.c: 96: main_CDC_to_RS485_Initialize();
 13412  120F  3191  217A  3192   	fcall	_main_CDC_to_RS485_Initialize
 13413                           
 13414                           ;usb_events.c: 97: main_Communication_Initialize();
 13415  1212  3191  2131         	fcall	_main_Communication_Initialize
 13416                           
 13417                           ;usb_events.c: 101: break;
 13418                           
 13419                           ;usb_events.c: 100: case EVENT_SET_DESCRIPTOR:
 13420                           
 13421                           ;usb_events.c: 98: break;
 13422  1214  0008               	return
 13423  1215                     i1l4151:	
 13424                           ;usb_events.c: 103: case EVENT_EP0_REQUEST:
 13425                           
 13426                           
 13427                           ;usb_events.c: 106: USBCheckCDCRequest();
 13428  1215  3196  265D  3192   	fcall	_USBCheckCDCRequest
 13429                           
 13430                           ;usb_events.c: 107: USBCheckCDCRequest2();
 13431  1218  3196  26BD         	fcall	_USBCheckCDCRequest2
 13432                           
 13433                           ;usb_events.c: 118: }
 13434                           
 13435                           ;usb_events.c: 117: break;
 13436                           
 13437                           ;usb_events.c: 116: default:
 13438                           
 13439                           ;usb_events.c: 114: break;
 13440                           
 13441                           ;usb_events.c: 113: case EVENT_TRANSFER_TERMINATED:
 13442                           
 13443                           ;usb_events.c: 111: break;
 13444                           
 13445                           ;usb_events.c: 110: case EVENT_BUS_ERROR:
 13446                           
 13447                           ;usb_events.c: 108: break;
 13448  121A  0008               	return
 13449  121B                     i1l4155:	
 13450                           
 13451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 13452                           ; Switch size 1, requested type "space"
 13453                           ; Number of cases is 2, Range of values is 0 to 127
 13454                           ; switch strategies available:
 13455                           ; Name         Instructions Cycles
 13456                           ; simple_byte            7     4 (average)
 13457                           ; direct_byte          262     6 (fixed)
 13458                           ; jumptable            260     6 (fixed)
 13459                           ;	Chosen strategy is simple_byte
 13460  121B  0021               	movlb	1	; select bank1
 13461  121C  0861               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
 13462  121D  3A00               	xorlw	0	; case 0
 13463  121E  1903               	skipnz
 13464  121F  2A24               	goto	i1l6117
 13465  1220  3A7F               	xorlw	127	; case 127
 13466  1221  1903               	skipnz
 13467  1222  2A3E               	goto	i1l6119
 13468  1223  2A43               	goto	i1l909
 13469  1224                     i1l6117:	
 13470                           
 13471                           ; Switch size 1, requested type "space"
 13472                           ; Number of cases is 8, Range of values is 1 to 117
 13473                           ; switch strategies available:
 13474                           ; Name         Instructions Cycles
 13475                           ; simple_byte           25    13 (average)
 13476                           ; direct_byte          243     9 (fixed)
 13477                           ; jumptable            263     9 (fixed)
 13478                           ;	Chosen strategy is simple_byte
 13479  1224  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 13480  1225  3A01               	xorlw	1	; case 1
 13481  1226  1903               	skipnz
 13482  1227  2A09               	goto	i1l4149
 13483  1228  3A03               	xorlw	3	; case 2
 13484  1229  1903               	skipnz
 13485  122A  2A43               	goto	i1l909
 13486  122B  3A01               	xorlw	1	; case 3
 13487  122C  1903               	skipnz
 13488  122D  2A15               	goto	i1l4151
 13489  122E  3A06               	xorlw	6	; case 5
 13490  122F  1903               	skipnz
 13491  1230  2A43               	goto	i1l909
 13492  1231  3A77               	xorlw	119	; case 114
 13493  1232  1903               	skipnz
 13494  1233  2A43               	goto	i1l909
 13495  1234  3A01               	xorlw	1	; case 115
 13496  1235  1903               	skipnz
 13497  1236  2A43               	goto	i1l909
 13498  1237  3A07               	xorlw	7	; case 116
 13499  1238  1903               	skipnz
 13500  1239  2A43               	goto	i1l909
 13501  123A  3A01               	xorlw	1	; case 117
 13502  123B  1903               	skipnz
 13503  123C  2A43               	goto	i1l909
 13504  123D  2A43               	goto	i1l909
 13505  123E                     i1l6119:	
 13506                           
 13507                           ; Switch size 1, requested type "space"
 13508                           ; Number of cases is 1, Range of values is 255 to 255
 13509                           ; switch strategies available:
 13510                           ; Name         Instructions Cycles
 13511                           ; simple_byte            4     3 (average)
 13512                           ; direct_byte            7     5 (fixed)
 13513                           ; jumptable            263     9 (fixed)
 13514                           ;	Chosen strategy is simple_byte
 13515  123E  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 13516  123F  3AFF               	xorlw	255	; case 255
 13517  1240  1903               	skipnz
 13518  1241  2A43               	goto	i1l909
 13519  1242  2A43               	goto	i1l909
 13520  1243                     i1l909:	
 13521                           ;usb_events.c: 119: return 1;
 13522                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
 13523                           
 13524  1243  0008               	return
 13525  1244                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
 13526                           
 13527                           	psect	text59
 13528  1131                     __ptext59:	
 13529 ;; *************** function _main_Communication_Initialize *****************
 13530 ;; Defined at:
 13531 ;;		line 266 in file "main.c"
 13532 ;; Parameters:    Size  Location     Type
 13533 ;;		None
 13534 ;; Auto vars:     Size  Location     Type
 13535 ;;  i               1    1[COMMON] unsigned char 
 13536 ;; Return value:  Size  Location     Type
 13537 ;;                  1    wreg      void 
 13538 ;; Registers used:
 13539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13540 ;; Tracked objects:
 13541 ;;		On entry : 0/0
 13542 ;;		On exit  : 0/0
 13543 ;;		Unchanged: 0/0
 13544 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 13545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13549 ;;Total ram usage:        2 bytes
 13550 ;; Hardware stack levels used:    1
 13551 ;; Hardware stack levels required when called:    1
 13552 ;; This function calls:
 13553 ;;		i1_TMR1_Reload
 13554 ;; This function is called by:
 13555 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13556 ;; This function uses a non-reentrant model
 13557 ;;
 13558                           
 13559                           
 13560                           ;psect for function _main_Communication_Initialize
 13561  1131                     _main_Communication_Initialize:	
 13562                           
 13563                           ;main.c: 268: unsigned char i;
 13564                           ;main.c: 270: line_coding.bCharFormat = 0;
 13565                           
 13566                           ;incstack = 0
 13567                           ; Regs used in _main_Communication_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
 13568  1131  0024               	movlb	4	; select bank4
 13569  1132  01E1               	clrf	(_line_coding^(0+512)+4)
 13570                           
 13571                           ;main.c: 271: line_coding.bDataBits = 8;
 13572  1133  3008               	movlw	8
 13573  1134  00F0               	movwf	??_main_Communication_Initialize
 13574  1135  0870               	movf	??_main_Communication_Initialize,w
 13575  1136  00E3               	movwf	(_line_coding^(0+512)+6)
 13576                           
 13577                           ;main.c: 272: line_coding.bParityType = 0;
 13578  1137  01E2               	clrf	(_line_coding^(0+512)+5)
 13579                           
 13580                           ;main.c: 273: line_coding.dwDTERate = 9600;
 13581  1138  3000               	movlw	0
 13582  1139  00E0               	movwf	(_line_coding+3)^(0+512)
 13583  113A  3000               	movlw	0
 13584  113B  00DF               	movwf	(_line_coding+2)^(0+512)
 13585  113C  3025               	movlw	37
 13586  113D  00DE               	movwf	(_line_coding+1)^(0+512)
 13587  113E  3080               	movlw	128
 13588  113F  00DD               	movwf	_line_coding^(0+512)
 13589                           
 13590                           ;main.c: 276: TMR1IF = 0;
 13591  1140  0020               	movlb	0	; select bank0
 13592  1141  1011               	bcf	17,0	;volatile
 13593                           
 13594                           ;main.c: 278: TMR1_Reload();
 13595  1142  319E  26D4  3191   	fcall	i1_TMR1_Reload
 13596                           
 13597                           ;main.c: 281: for (i=0; i<sizeof(writeBuffer); i++)
 13598  1145  01F1               	clrf	main_Communication_Initialize@i
 13599  1146                     L20:	
 13600  1146  3040               	movlw	64
 13601  1147  0271               	subwf	main_Communication_Initialize@i,w
 13602  1148  1803               	btfsc	3,0
 13603  1149  0008               	return
 13604                           
 13605                           ;main.c: 282: {
 13606                           ;main.c: 283: writeBuffer[i] = 0;
 13607  114A  0871               	movf	main_Communication_Initialize@i,w
 13608  114B  3EA0               	addlw	(low (_writeBuffer| (0+1024)))& (0+255)
 13609  114C  0086               	movwf	6
 13610  114D  3004               	movlw	4	; select bank9/10
 13611  114E  0087               	movwf	7
 13612  114F  0181               	clrf	1
 13613  1150  3001               	movlw	1
 13614  1151  00F0               	movwf	??_main_Communication_Initialize
 13615  1152  0870               	movf	??_main_Communication_Initialize,w
 13616  1153  07F1               	addwf	main_Communication_Initialize@i,f
 13617  1154  2946               	goto	L20
 13618  1155                     __end_of_main_Communication_Initialize:	
 13619                           
 13620                           	psect	text60
 13621  1ED4                     __ptext60:	
 13622 ;; *************** function i1_TMR1_Reload *****************
 13623 ;; Defined at:
 13624 ;;		line 132 in file "mcc_generated_files/tmr1.c"
 13625 ;; Parameters:    Size  Location     Type
 13626 ;;		None
 13627 ;; Auto vars:     Size  Location     Type
 13628 ;;		None
 13629 ;; Return value:  Size  Location     Type
 13630 ;;                  1    wreg      void 
 13631 ;; Registers used:
 13632 ;;		wreg, status,2
 13633 ;; Tracked objects:
 13634 ;;		On entry : 0/0
 13635 ;;		On exit  : 0/0
 13636 ;;		Unchanged: 0/0
 13637 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 13638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13642 ;;Total ram usage:        0 bytes
 13643 ;; Hardware stack levels used:    1
 13644 ;; This function calls:
 13645 ;;		Nothing
 13646 ;; This function is called by:
 13647 ;;		_main_Communication_Initialize
 13648 ;; This function uses a non-reentrant model
 13649 ;;
 13650                           
 13651                           
 13652                           ;psect for function i1_TMR1_Reload
 13653  1ED4                     i1_TMR1_Reload:	
 13654                           
 13655                           ;tmr1.c: 135: TMR1H = (timer1ReloadVal >> 8);
 13656                           
 13657                           ;incstack = 0
 13658                           ; Regs used in i1_TMR1_Reload: [wreg+status,2]
 13659  1ED4  0023               	movlb	3	; select bank3
 13660  1ED5  085D               	movf	(_timer1ReloadVal+1)^(0+384),w	;volatile
 13661  1ED6  0020               	movlb	0	; select bank0
 13662  1ED7  0097               	movwf	23	;volatile
 13663                           
 13664                           ;tmr1.c: 136: TMR1L = timer1ReloadVal;
 13665  1ED8  0023               	movlb	3	; select bank3
 13666  1ED9  085C               	movf	_timer1ReloadVal^(0+384),w	;volatile
 13667  1EDA  0020               	movlb	0	; select bank0
 13668  1EDB  0096               	movwf	22	;volatile
 13669  1EDC  0008               	return
 13670  1EDD                     __end_ofi1_TMR1_Reload:	
 13671                           
 13672                           	psect	text61
 13673  117A                     __ptext61:	
 13674 ;; *************** function _main_CDC_to_RS485_Initialize *****************
 13675 ;; Defined at:
 13676 ;;		line 104 in file "main.c"
 13677 ;; Parameters:    Size  Location     Type
 13678 ;;		None
 13679 ;; Auto vars:     Size  Location     Type
 13680 ;;  i               1    1[COMMON] unsigned char 
 13681 ;; Return value:  Size  Location     Type
 13682 ;;                  1    wreg      void 
 13683 ;; Registers used:
 13684 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13685 ;; Tracked objects:
 13686 ;;		On entry : 0/0
 13687 ;;		On exit  : 0/0
 13688 ;;		Unchanged: 0/0
 13689 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 13690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13694 ;;Total ram usage:        2 bytes
 13695 ;; Hardware stack levels used:    1
 13696 ;; This function calls:
 13697 ;;		Nothing
 13698 ;; This function is called by:
 13699 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13700 ;; This function uses a non-reentrant model
 13701 ;;
 13702                           
 13703                           
 13704                           ;psect for function _main_CDC_to_RS485_Initialize
 13705  117A                     _main_CDC_to_RS485_Initialize:	
 13706                           
 13707                           ;main.c: 106: unsigned char i;
 13708                           ;main.c: 108: line_coding2.bCharFormat = 0;
 13709                           
 13710                           ;incstack = 0
 13711                           ; Regs used in _main_CDC_to_RS485_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0]
 13712  117A  0025               	movlb	5	; select bank5
 13713  117B  01E8               	clrf	(_line_coding2^(0+640)+4)
 13714                           
 13715                           ;main.c: 109: line_coding2.bDataBits = 8;
 13716  117C  3008               	movlw	8
 13717  117D  00F0               	movwf	??_main_CDC_to_RS485_Initialize
 13718  117E  0870               	movf	??_main_CDC_to_RS485_Initialize,w
 13719  117F  00EA               	movwf	(_line_coding2^(0+640)+6)
 13720                           
 13721                           ;main.c: 110: line_coding2.bParityType = 0;
 13722  1180  01E9               	clrf	(_line_coding2^(0+640)+5)
 13723                           
 13724                           ;main.c: 111: line_coding2.dwDTERate = 9600;
 13725  1181  3000               	movlw	0
 13726  1182  00E7               	movwf	(_line_coding2+3)^(0+640)
 13727  1183  3000               	movlw	0
 13728  1184  00E6               	movwf	(_line_coding2+2)^(0+640)
 13729  1185  3025               	movlw	37
 13730  1186  00E5               	movwf	(_line_coding2+1)^(0+640)
 13731  1187  3080               	movlw	128
 13732  1188  00E4               	movwf	_line_coding2^(0+640)
 13733                           
 13734                           ;main.c: 114: for (i=0; i<sizeof(USB_Out_Buffer); i++)
 13735  1189  01F1               	clrf	main_CDC_to_RS485_Initialize@i
 13736  118A  3040               	movlw	64
 13737  118B  0271               	subwf	main_CDC_to_RS485_Initialize@i,w
 13738  118C  1803               	btfsc	3,0
 13739  118D  299C               	goto	i1l4123
 13740  118E                     i1l4117:	
 13741                           
 13742                           ;main.c: 115: {
 13743                           ;main.c: 116: USB_Out_Buffer[i] = 0;
 13744  118E  0871               	movf	main_CDC_to_RS485_Initialize@i,w
 13745  118F  3E20               	addlw	(low (_USB_Out_Buffer| (0+1024)))& (0+255)
 13746  1190  0086               	movwf	6
 13747  1191  3004               	movlw	4	; select bank8/9
 13748  1192  0087               	movwf	7
 13749  1193  0181               	clrf	1
 13750  1194  3001               	movlw	1
 13751  1195  00F0               	movwf	??_main_CDC_to_RS485_Initialize
 13752  1196  0870               	movf	??_main_CDC_to_RS485_Initialize,w
 13753  1197  07F1               	addwf	main_CDC_to_RS485_Initialize@i,f
 13754  1198  3040               	movlw	64
 13755  1199  0271               	subwf	main_CDC_to_RS485_Initialize@i,w
 13756  119A  1C03               	skipc
 13757  119B  298E               	goto	i1l4117
 13758  119C                     i1l4123:	
 13759                           
 13760                           ;main.c: 117: }
 13761                           ;main.c: 119: NextUSBOut = 0;
 13762  119C  0023               	movlb	3	; select bank3
 13763  119D  01DF               	clrf	_NextUSBOut^(0+384)
 13764                           
 13765                           ;main.c: 120: LastRS232Out = 0;
 13766  119E  0024               	movlb	4	; select bank4
 13767  119F  01CA               	clrf	_LastRS232Out^(0+512)
 13768  11A0  0008               	return
 13769  11A1                     __end_of_main_CDC_to_RS485_Initialize:	
 13770                           
 13771                           	psect	text62
 13772  16BD                     __ptext62:	
 13773 ;; *************** function _USBCheckCDCRequest2 *****************
 13774 ;; Defined at:
 13775 ;;		line 147 in file "usb/core/usb_device_cdc2.c"
 13776 ;; Parameters:    Size  Location     Type
 13777 ;;		None
 13778 ;; Auto vars:     Size  Location     Type
 13779 ;;		None
 13780 ;; Return value:  Size  Location     Type
 13781 ;;                  1    wreg      void 
 13782 ;; Registers used:
 13783 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13784 ;; Tracked objects:
 13785 ;;		On entry : 0/0
 13786 ;;		On exit  : 0/0
 13787 ;;		Unchanged: 0/0
 13788 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 13789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13792 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13793 ;;Total ram usage:        1 bytes
 13794 ;; Hardware stack levels used:    1
 13795 ;; This function calls:
 13796 ;;		Nothing
 13797 ;; This function is called by:
 13798 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13799 ;; This function uses a non-reentrant model
 13800 ;;
 13801                           
 13802                           
 13803                           ;psect for function _USBCheckCDCRequest2
 13804  16BD                     _USBCheckCDCRequest2:	
 13805                           
 13806                           ;usb_device_cdc2.c: 152: if(SetupPkt.Recipient != (0x01)) return;
 13807                           
 13808                           ;incstack = 0
 13809                           ; Regs used in _USBCheckCDCRequest2: [wreg-fsr0h+status,2+status,0]
 13810  16BD  0021               	movlb	1	; select bank1
 13811  16BE  0820               	movf	32,w	;volatile
 13812  16BF  391F               	andlw	31
 13813  16C0  3A01               	xorlw	1
 13814  16C1  1D03               	btfss	3,2
 13815  16C2  0008               	return
 13816                           
 13817                           ;usb_device_cdc2.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
 13818  16C3  0E20               	swapf	32,w	;volatile
 13819  16C4  0C89               	rrf	9,f
 13820  16C5  3903               	andlw	3
 13821  16C6  3A01               	xorlw	1
 13822  16C7  1D03               	btfss	3,2
 13823  16C8  0008               	return
 13824                           
 13825                           ;usb_device_cdc2.c: 163: if((SetupPkt.bIntfID != 0x02)&&
 13826                           ;usb_device_cdc2.c: 164: (SetupPkt.bIntfID != 0x03)) return;
 13827  16C9  3002               	movlw	2
 13828  16CA  0624               	xorwf	36,w	;volatile
 13829  16CB  1903               	btfsc	3,2
 13830  16CC  2F0E               	goto	i1l4085
 13831  16CD  3003               	movlw	3
 13832  16CE  0624               	xorwf	36,w	;volatile
 13833  16CF  1D03               	btfss	3,2
 13834  16D0  0008               	return
 13835  16D1  2F0E               	goto	i1l4085
 13836  16D2                     i1l4057:	
 13837                           ;usb_device_cdc2.c: 167: {
 13838                           ;usb_device_cdc2.c: 169: case 0x00:
 13839                           
 13840                           ;usb_device_cdc2.c: 166: switch(SetupPkt.bRequest)
 13841                           
 13842                           
 13843                           ;usb_device_cdc2.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respon
      +                          se2;
 13844  16D2  30D4               	movlw	low _dummy_encapsulated_cmd_response2
 13845  16D3  0023               	movlb	3	; select bank3
 13846  16D4  00D5               	movwf	_inPipes^(0+384)
 13847  16D5  3002               	movlw	high _dummy_encapsulated_cmd_response2
 13848  16D6  00D6               	movwf	(_inPipes+1)^(0+384)
 13849                           
 13850                           ;usb_device_cdc2.c: 172: inPipes[0].wCount.Val = 0x08;
 13851  16D7  3008               	movlw	8
 13852  16D8  00D8               	movwf	(_inPipes^(0+384)+3)
 13853  16D9  3000               	movlw	0
 13854  16DA  00D9               	movwf	(_inPipes^(0+384)+4)
 13855                           
 13856                           ;usb_device_cdc2.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13857  16DB  1457               	bsf	(_inPipes^(0+384)+2),0
 13858                           
 13859                           ;usb_device_cdc2.c: 174: inPipes[0].info.bits.busy = 1;
 13860  16DC  17D7               	bsf	(_inPipes^(0+384)+2),7
 13861                           
 13862                           ;usb_device_cdc2.c: 175: break;
 13863  16DD  0008               	return
 13864  16DE                     i1l4065:	
 13865                           ;usb_device_cdc2.c: 176: case 0x01:
 13866                           
 13867                           
 13868                           ;usb_device_cdc2.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respon
      +                          se2;
 13869  16DE  30D4               	movlw	low _dummy_encapsulated_cmd_response2
 13870  16DF  0023               	movlb	3	; select bank3
 13871  16E0  00D5               	movwf	_inPipes^(0+384)
 13872  16E1  3002               	movlw	high _dummy_encapsulated_cmd_response2
 13873  16E2  00D6               	movwf	(_inPipes+1)^(0+384)
 13874                           
 13875                           ;usb_device_cdc2.c: 179: inPipes[0].info.bits.busy = 1;
 13876  16E3  17D7               	bsf	(_inPipes^(0+384)+2),7
 13877                           
 13878                           ;usb_device_cdc2.c: 180: break;
 13879  16E4  0008               	return
 13880  16E5                     i1l4069:	
 13881                           ;usb_device_cdc2.c: 184: case 0x20:
 13882                           
 13883                           
 13884                           ;usb_device_cdc2.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
 13885  16E5  0021               	movlb	1	; select bank1
 13886  16E6  0827               	movf	39,w	;volatile
 13887  16E7  0024               	movlb	4	; select bank4
 13888  16E8  00A4               	movwf	((_outPipes+1)^(0+512)+3)
 13889  16E9  0021               	movlb	1	; select bank1
 13890  16EA  0826               	movf	38,w	;volatile
 13891  16EB  0024               	movlb	4	; select bank4
 13892  16EC  00A3               	movwf	(_outPipes^(0+512)+3)
 13893                           
 13894                           ;usb_device_cdc2.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice2.SetLineCoding._b
      +                          yte[0];
 13895  16ED  30CA               	movlw	(low (_cdc_notice2| (0+512)))& (0+255)
 13896  16EE  00F0               	movwf	??_USBCheckCDCRequest2
 13897  16EF  0870               	movf	??_USBCheckCDCRequest2,w
 13898  16F0  00A0               	movwf	_outPipes^(0+512)
 13899                           
 13900                           ;usb_device_cdc2.c: 187: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 13901  16F1  30C3               	movlw	low _USART_mySetLineCodingHandler
 13902  16F2  00A5               	movwf	(low ((_outPipes| (0+512)+5)))^0
 13903  16F3  3012               	movlw	high _USART_mySetLineCodingHandler
 13904  16F4  00A6               	movwf	((low ((_outPipes| (0+512)+5)))^0+1)
 13905                           
 13906                           ;usb_device_cdc2.c: 188: outPipes[0].info.bits.busy = 1;
 13907  16F5  17A2               	bsf	(_outPipes^(0+512)+2),7
 13908                           
 13909                           ;usb_device_cdc2.c: 189: break;
 13910  16F6  0008               	return
 13911  16F7                     i1l4073:	
 13912                           ;usb_device_cdc2.c: 191: case 0x21:
 13913                           
 13914                           
 13915                           ;usb_device_cdc2.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding2; inPipes[0].wC
      +                          ount.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 13916  16F7  30E4               	movlw	low _line_coding2
 13917  16F8  0023               	movlb	3	; select bank3
 13918  16F9  00D5               	movwf	_inPipes^(0+384)
 13919  16FA  3002               	movlw	high _line_coding2
 13920  16FB  00D6               	movwf	(_inPipes+1)^(0+384)
 13921  16FC  3007               	movlw	7
 13922  16FD  00D8               	movwf	(_inPipes^(0+384)+3)
 13923  16FE  3000               	movlw	0
 13924  16FF  00D9               	movwf	(_inPipes^(0+384)+4)
 13925  1700  30C1               	movlw	193
 13926  1701  00F0               	movwf	??_USBCheckCDCRequest2
 13927  1702  0870               	movf	??_USBCheckCDCRequest2,w
 13928  1703  00D7               	movwf	(_inPipes^(0+384)+2)
 13929                           
 13930                           ;usb_device_cdc2.c: 196: break;
 13931  1704  0008               	return
 13932  1705                     i1l4079:	
 13933                           ;usb_device_cdc2.c: 198: case 0x22:
 13934                           
 13935                           
 13936                           ;usb_device_cdc2.c: 199: control_signal_bitmap2._byte = (uint8_t)SetupPkt.wValue;
 13937  1705  0021               	movlb	1	; select bank1
 13938  1706  0822               	movf	34,w	;volatile
 13939  1707  00F0               	movwf	??_USBCheckCDCRequest2
 13940  1708  0870               	movf	??_USBCheckCDCRequest2,w
 13941  1709  0024               	movlb	4	; select bank4
 13942  170A  00CE               	movwf	_control_signal_bitmap2^(0+512)
 13943                           
 13944                           ;usb_device_cdc2.c: 231: inPipes[0].info.bits.busy = 1;
 13945  170B  0023               	movlb	3	; select bank3
 13946  170C  17D7               	bsf	(_inPipes^(0+384)+2),7
 13947                           
 13948                           ;usb_device_cdc2.c: 258: }
 13949                           
 13950                           ;usb_device_cdc2.c: 257: break;
 13951                           
 13952                           ;usb_device_cdc2.c: 256: default:
 13953                           
 13954                           ;usb_device_cdc2.c: 232: break;
 13955  170D  0008               	return
 13956  170E                     i1l4085:	
 13957  170E  0021               	movlb	1	; select bank1
 13958  170F  0821               	movf	33,w	;volatile
 13959                           
 13960                           ; Switch size 1, requested type "space"
 13961                           ; Number of cases is 5, Range of values is 0 to 34
 13962                           ; switch strategies available:
 13963                           ; Name         Instructions Cycles
 13964                           ; simple_byte           16     9 (average)
 13965                           ; direct_byte           76     6 (fixed)
 13966                           ; jumptable            260     6 (fixed)
 13967                           ;	Chosen strategy is simple_byte
 13968  1710  3A00               	xorlw	0	; case 0
 13969  1711  1903               	skipnz
 13970  1712  2ED2               	goto	i1l4057
 13971  1713  3A01               	xorlw	1	; case 1
 13972  1714  1903               	skipnz
 13973  1715  2EDE               	goto	i1l4065
 13974  1716  3A21               	xorlw	33	; case 32
 13975  1717  1903               	skipnz
 13976  1718  2EE5               	goto	i1l4069
 13977  1719  3A01               	xorlw	1	; case 33
 13978  171A  1903               	skipnz
 13979  171B  2EF7               	goto	i1l4073
 13980  171C  3A03               	xorlw	3	; case 34
 13981  171D  1903               	skipnz
 13982  171E  2F05               	goto	i1l4079
 13983  171F  2F20               	goto	i1l792
 13984  1720                     i1l792:	
 13985  1720  0008               	return
 13986  1721                     __end_of_USBCheckCDCRequest2:	
 13987                           
 13988                           	psect	text63
 13989  165D                     __ptext63:	
 13990 ;; *************** function _USBCheckCDCRequest *****************
 13991 ;; Defined at:
 13992 ;;		line 147 in file "usb/core/usb_device_cdc.c"
 13993 ;; Parameters:    Size  Location     Type
 13994 ;;		None
 13995 ;; Auto vars:     Size  Location     Type
 13996 ;;		None
 13997 ;; Return value:  Size  Location     Type
 13998 ;;                  1    wreg      void 
 13999 ;; Registers used:
 14000 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14001 ;; Tracked objects:
 14002 ;;		On entry : 0/0
 14003 ;;		On exit  : 0/0
 14004 ;;		Unchanged: 0/0
 14005 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14010 ;;Total ram usage:        1 bytes
 14011 ;; Hardware stack levels used:    1
 14012 ;; This function calls:
 14013 ;;		Nothing
 14014 ;; This function is called by:
 14015 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14016 ;; This function uses a non-reentrant model
 14017 ;;
 14018                           
 14019                           
 14020                           ;psect for function _USBCheckCDCRequest
 14021  165D                     _USBCheckCDCRequest:	
 14022                           
 14023                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
 14024                           
 14025                           ;incstack = 0
 14026                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
 14027  165D  0021               	movlb	1	; select bank1
 14028  165E  0820               	movf	32,w	;volatile
 14029  165F  391F               	andlw	31
 14030  1660  3A01               	xorlw	1
 14031  1661  1D03               	btfss	3,2
 14032  1662  0008               	return
 14033                           
 14034                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
 14035  1663  0E20               	swapf	32,w	;volatile
 14036  1664  0C89               	rrf	9,f
 14037  1665  3903               	andlw	3
 14038  1666  3A01               	xorlw	1
 14039  1667  1D03               	btfss	3,2
 14040  1668  0008               	return
 14041                           
 14042                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
 14043                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
 14044  1669  0824               	movf	36,w	;volatile
 14045  166A  1903               	btfsc	3,2
 14046  166B  2EAA               	goto	i1l4023
 14047  166C  0324               	decf	36,w	;volatile
 14048  166D  1D03               	btfss	3,2
 14049  166E  0008               	return
 14050  166F  2EAA               	goto	i1l4023
 14051  1670                     i1l3993:	
 14052                           ;usb_device_cdc.c: 167: {
 14053                           ;usb_device_cdc.c: 169: case 0x00:
 14054                           
 14055                           ;usb_device_cdc.c: 166: switch(SetupPkt.bRequest)
 14056                           
 14057                           
 14058                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 14059  1670  30DC               	movlw	low _dummy_encapsulated_cmd_response
 14060  1671  0023               	movlb	3	; select bank3
 14061  1672  00D5               	movwf	_inPipes^(0+384)
 14062  1673  3002               	movlw	high _dummy_encapsulated_cmd_response
 14063  1674  00D6               	movwf	(_inPipes+1)^(0+384)
 14064                           
 14065                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
 14066  1675  3008               	movlw	8
 14067  1676  00D8               	movwf	(_inPipes^(0+384)+3)
 14068  1677  3000               	movlw	0
 14069  1678  00D9               	movwf	(_inPipes^(0+384)+4)
 14070                           
 14071                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14072  1679  1457               	bsf	(_inPipes^(0+384)+2),0
 14073                           
 14074                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
 14075  167A  17D7               	bsf	(_inPipes^(0+384)+2),7
 14076                           
 14077                           ;usb_device_cdc.c: 175: break;
 14078  167B  0008               	return
 14079  167C                     i1l4001:	
 14080                           ;usb_device_cdc.c: 176: case 0x01:
 14081                           
 14082                           
 14083                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 14084  167C  30DC               	movlw	low _dummy_encapsulated_cmd_response
 14085  167D  0023               	movlb	3	; select bank3
 14086  167E  00D5               	movwf	_inPipes^(0+384)
 14087  167F  3002               	movlw	high _dummy_encapsulated_cmd_response
 14088  1680  00D6               	movwf	(_inPipes+1)^(0+384)
 14089                           
 14090                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
 14091  1681  17D7               	bsf	(_inPipes^(0+384)+2),7
 14092                           
 14093                           ;usb_device_cdc.c: 180: break;
 14094  1682  0008               	return
 14095  1683                     i1l4005:	
 14096                           ;usb_device_cdc.c: 184: case 0x20:
 14097                           
 14098                           
 14099                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
 14100  1683  0021               	movlb	1	; select bank1
 14101  1684  0827               	movf	39,w	;volatile
 14102  1685  0024               	movlb	4	; select bank4
 14103  1686  00A4               	movwf	((_outPipes+1)^(0+512)+3)
 14104  1687  0021               	movlb	1	; select bank1
 14105  1688  0826               	movf	38,w	;volatile
 14106  1689  0024               	movlb	4	; select bank4
 14107  168A  00A3               	movwf	(_outPipes^(0+512)+3)
 14108                           
 14109                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 14110  168B  305D               	movlw	(low (_line_coding| (0+512)))& (0+255)
 14111  168C  00F0               	movwf	??_USBCheckCDCRequest
 14112  168D  0870               	movf	??_USBCheckCDCRequest,w
 14113  168E  00A0               	movwf	_outPipes^(0+512)
 14114                           
 14115                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
 14116  168F  01A5               	clrf	(low ((_outPipes| (0+512)+5)))^0
 14117  1690  01A6               	clrf	((low ((_outPipes| (0+512)+5))+1))^0
 14118                           
 14119                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
 14120  1691  17A2               	bsf	(_outPipes^(0+512)+2),7
 14121                           
 14122                           ;usb_device_cdc.c: 189: break;
 14123  1692  0008               	return
 14124  1693                     i1l4011:	
 14125                           ;usb_device_cdc.c: 191: case 0x21:
 14126                           
 14127                           
 14128                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 14129  1693  305D               	movlw	low _line_coding
 14130  1694  0023               	movlb	3	; select bank3
 14131  1695  00D5               	movwf	_inPipes^(0+384)
 14132  1696  3002               	movlw	high _line_coding
 14133  1697  00D6               	movwf	(_inPipes+1)^(0+384)
 14134  1698  3007               	movlw	7
 14135  1699  00D8               	movwf	(_inPipes^(0+384)+3)
 14136  169A  3000               	movlw	0
 14137  169B  00D9               	movwf	(_inPipes^(0+384)+4)
 14138  169C  30C1               	movlw	193
 14139  169D  00F0               	movwf	??_USBCheckCDCRequest
 14140  169E  0870               	movf	??_USBCheckCDCRequest,w
 14141  169F  00D7               	movwf	(_inPipes^(0+384)+2)
 14142                           
 14143                           ;usb_device_cdc.c: 196: break;
 14144  16A0  0008               	return
 14145  16A1                     i1l4017:	
 14146                           ;usb_device_cdc.c: 198: case 0x22:
 14147                           
 14148                           
 14149                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 14150  16A1  0021               	movlb	1	; select bank1
 14151  16A2  0822               	movf	34,w	;volatile
 14152  16A3  00F0               	movwf	??_USBCheckCDCRequest
 14153  16A4  0870               	movf	??_USBCheckCDCRequest,w
 14154  16A5  0024               	movlb	4	; select bank4
 14155  16A6  00D0               	movwf	_control_signal_bitmap^(0+512)
 14156                           
 14157                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 14158  16A7  0023               	movlb	3	; select bank3
 14159  16A8  17D7               	bsf	(_inPipes^(0+384)+2),7
 14160                           
 14161                           ;usb_device_cdc.c: 258: }
 14162                           
 14163                           ;usb_device_cdc.c: 257: break;
 14164                           
 14165                           ;usb_device_cdc.c: 256: default:
 14166                           
 14167                           ;usb_device_cdc.c: 232: break;
 14168  16A9  0008               	return
 14169  16AA                     i1l4023:	
 14170  16AA  0021               	movlb	1	; select bank1
 14171  16AB  0821               	movf	33,w	;volatile
 14172                           
 14173                           ; Switch size 1, requested type "space"
 14174                           ; Number of cases is 5, Range of values is 0 to 34
 14175                           ; switch strategies available:
 14176                           ; Name         Instructions Cycles
 14177                           ; simple_byte           16     9 (average)
 14178                           ; direct_byte           76     6 (fixed)
 14179                           ; jumptable            260     6 (fixed)
 14180                           ;	Chosen strategy is simple_byte
 14181  16AC  3A00               	xorlw	0	; case 0
 14182  16AD  1903               	skipnz
 14183  16AE  2E70               	goto	i1l3993
 14184  16AF  3A01               	xorlw	1	; case 1
 14185  16B0  1903               	skipnz
 14186  16B1  2E7C               	goto	i1l4001
 14187  16B2  3A21               	xorlw	33	; case 32
 14188  16B3  1903               	skipnz
 14189  16B4  2E83               	goto	i1l4005
 14190  16B5  3A01               	xorlw	1	; case 33
 14191  16B6  1903               	skipnz
 14192  16B7  2E93               	goto	i1l4011
 14193  16B8  3A03               	xorlw	3	; case 34
 14194  16B9  1903               	skipnz
 14195  16BA  2EA1               	goto	i1l4017
 14196  16BB  2EBC               	goto	i1l674
 14197  16BC                     i1l674:	
 14198  16BC  0008               	return
 14199  16BD                     __end_of_USBCheckCDCRequest:	
 14200                           
 14201                           	psect	text64
 14202  07C7                     __ptext64:	
 14203 ;; *************** function _CDCInitEP2 *****************
 14204 ;; Defined at:
 14205 ;;		line 294 in file "usb/core/usb_device_cdc2.c"
 14206 ;; Parameters:    Size  Location     Type
 14207 ;;		None
 14208 ;; Auto vars:     Size  Location     Type
 14209 ;;		None
 14210 ;; Return value:  Size  Location     Type
 14211 ;;                  1    wreg      void 
 14212 ;; Registers used:
 14213 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14214 ;; Tracked objects:
 14215 ;;		On entry : 0/0
 14216 ;;		On exit  : 0/0
 14217 ;;		Unchanged: 0/0
 14218 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14222 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14223 ;;Total ram usage:        1 bytes
 14224 ;; Hardware stack levels used:    1
 14225 ;; Hardware stack levels required when called:    2
 14226 ;; This function calls:
 14227 ;;		_USBEnableEndpoint
 14228 ;;		i1_USBTransferOnePacket
 14229 ;; This function is called by:
 14230 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14231 ;; This function uses a non-reentrant model
 14232 ;;
 14233                           
 14234                           
 14235                           ;psect for function _CDCInitEP2
 14236  07C7                     _CDCInitEP2:	
 14237                           
 14238                           ;usb_device_cdc2.c: 297: line_coding2.dwDTERate = 19200;
 14239                           
 14240                           ;incstack = 0
 14241                           ; Regs used in _CDCInitEP2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14242  07C7  3000               	movlw	0
 14243  07C8  0025               	movlb	5	; select bank5
 14244  07C9  00E7               	movwf	(_line_coding2+3)^(0+640)
 14245  07CA  3000               	movlw	0
 14246  07CB  00E6               	movwf	(_line_coding2+2)^(0+640)
 14247  07CC  304B               	movlw	75
 14248  07CD  00E5               	movwf	(_line_coding2+1)^(0+640)
 14249  07CE  3000               	movlw	0
 14250  07CF  00E4               	movwf	_line_coding2^(0+640)
 14251                           
 14252                           ;usb_device_cdc2.c: 298: line_coding2.bCharFormat = 0x00;
 14253  07D0  01E8               	clrf	(_line_coding2^(0+640)+4)
 14254                           
 14255                           ;usb_device_cdc2.c: 299: line_coding2.bParityType = 0x00;
 14256  07D1  01E9               	clrf	(_line_coding2^(0+640)+5)
 14257                           
 14258                           ;usb_device_cdc2.c: 300: line_coding2.bDataBits = 0x08;
 14259  07D2  3008               	movlw	8
 14260  07D3  00FD               	movwf	??_CDCInitEP2
 14261  07D4  087D               	movf	??_CDCInitEP2,w
 14262  07D5  00EA               	movwf	(_line_coding2^(0+640)+6)
 14263                           
 14264                           ;usb_device_cdc2.c: 302: cdc_rx_len2 = 0;
 14265  07D6  0023               	movlb	3	; select bank3
 14266  07D7  01E3               	clrf	_cdc_rx_len2^(0+384)
 14267                           
 14268                           ;usb_device_cdc2.c: 315: USBEnableEndpoint(3,0x02|0x10|0x08);
 14269  07D8  301A               	movlw	26
 14270  07D9  00FD               	movwf	??_CDCInitEP2
 14271  07DA  087D               	movf	??_CDCInitEP2,w
 14272  07DB  00F7               	movwf	USBEnableEndpoint@options
 14273  07DC  3003               	movlw	3
 14274  07DD  3190  20F1  3187   	fcall	_USBEnableEndpoint
 14275                           
 14276                           ;usb_device_cdc2.c: 316: USBEnableEndpoint(4,0x02|0x04|0x10|0x08);
 14277  07E0  301E               	movlw	30
 14278  07E1  00FD               	movwf	??_CDCInitEP2
 14279  07E2  087D               	movf	??_CDCInitEP2,w
 14280  07E3  00F7               	movwf	USBEnableEndpoint@options
 14281  07E4  3004               	movlw	4
 14282  07E5  3190  20F1  3187   	fcall	_USBEnableEndpoint
 14283                           
 14284                           ;usb_device_cdc2.c: 318: CDCDataOutHandle2 = USBTransferOnePacket(4,0,(uint8_t*)&cdc_dat
      +                          a_rx2,sizeof(cdc_data_rx2));
 14285  07E8  01F0               	clrf	i1USBTransferOnePacket@dir
 14286  07E9  3020               	movlw	32
 14287  07EA  00F1               	movwf	i1USBTransferOnePacket@data
 14288  07EB  3001               	movlw	1
 14289  07EC  00F2               	movwf	i1USBTransferOnePacket@data+1
 14290  07ED  3040               	movlw	64
 14291  07EE  00FD               	movwf	??_CDCInitEP2
 14292  07EF  087D               	movf	??_CDCInitEP2,w
 14293  07F0  00F3               	movwf	i1USBTransferOnePacket@len
 14294  07F1  3004               	movlw	4
 14295  07F2  318A  228B         	fcall	i1_USBTransferOnePacket
 14296  07F4  0871               	movf	?i1_USBTransferOnePacket+1,w
 14297  07F5  0024               	movlb	4	; select bank4
 14298  07F6  00B4               	movwf	(_CDCDataOutHandle2+1)^(0+512)
 14299  07F7  0870               	movf	?i1_USBTransferOnePacket,w
 14300  07F8  00B3               	movwf	_CDCDataOutHandle2^(0+512)
 14301                           
 14302                           ;usb_device_cdc2.c: 319: CDCDataInHandle2 = (0);
 14303  07F9  01B1               	clrf	_CDCDataInHandle2^(0+512)
 14304  07FA  01B2               	clrf	(_CDCDataInHandle2+1)^(0+512)
 14305                           
 14306                           ;usb_device_cdc2.c: 346: cdc_trf_state2 = 0;
 14307  07FB  0023               	movlb	3	; select bank3
 14308  07FC  01E2               	clrf	_cdc_trf_state2^(0+384)
 14309  07FD  0008               	return
 14310  07FE                     __end_of_CDCInitEP2:	
 14311                           
 14312                           	psect	text65
 14313  11D1                     __ptext65:	
 14314 ;; *************** function _CDCInitEP *****************
 14315 ;; Defined at:
 14316 ;;		line 294 in file "usb/core/usb_device_cdc.c"
 14317 ;; Parameters:    Size  Location     Type
 14318 ;;		None
 14319 ;; Auto vars:     Size  Location     Type
 14320 ;;		None
 14321 ;; Return value:  Size  Location     Type
 14322 ;;                  1    wreg      void 
 14323 ;; Registers used:
 14324 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14325 ;; Tracked objects:
 14326 ;;		On entry : 0/0
 14327 ;;		On exit  : 0/0
 14328 ;;		Unchanged: 0/0
 14329 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14332 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14333 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14334 ;;Total ram usage:        1 bytes
 14335 ;; Hardware stack levels used:    1
 14336 ;; Hardware stack levels required when called:    2
 14337 ;; This function calls:
 14338 ;;		_USBEnableEndpoint
 14339 ;;		i1_USBTransferOnePacket
 14340 ;; This function is called by:
 14341 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14342 ;; This function uses a non-reentrant model
 14343 ;;
 14344                           
 14345                           
 14346                           ;psect for function _CDCInitEP
 14347  11D1                     _CDCInitEP:	
 14348                           
 14349                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
 14350                           
 14351                           ;incstack = 0
 14352                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14353  11D1  3000               	movlw	0
 14354  11D2  0024               	movlb	4	; select bank4
 14355  11D3  00E0               	movwf	(_line_coding+3)^(0+512)
 14356  11D4  3000               	movlw	0
 14357  11D5  00DF               	movwf	(_line_coding+2)^(0+512)
 14358  11D6  304B               	movlw	75
 14359  11D7  00DE               	movwf	(_line_coding+1)^(0+512)
 14360  11D8  3000               	movlw	0
 14361  11D9  00DD               	movwf	_line_coding^(0+512)
 14362                           
 14363                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
 14364  11DA  01E1               	clrf	(_line_coding^(0+512)+4)
 14365                           
 14366                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
 14367  11DB  01E2               	clrf	(_line_coding^(0+512)+5)
 14368                           
 14369                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
 14370  11DC  3008               	movlw	8
 14371  11DD  00FD               	movwf	??_CDCInitEP
 14372  11DE  087D               	movf	??_CDCInitEP,w
 14373  11DF  00E3               	movwf	(_line_coding^(0+512)+6)
 14374                           
 14375                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
 14376  11E0  0023               	movlb	3	; select bank3
 14377  11E1  01E6               	clrf	_cdc_rx_len^(0+384)
 14378                           
 14379                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
 14380  11E2  301A               	movlw	26
 14381  11E3  00FD               	movwf	??_CDCInitEP
 14382  11E4  087D               	movf	??_CDCInitEP,w
 14383  11E5  00F7               	movwf	USBEnableEndpoint@options
 14384  11E6  3001               	movlw	1
 14385  11E7  3190  20F1  3191   	fcall	_USBEnableEndpoint
 14386                           
 14387                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 14388  11EA  301E               	movlw	30
 14389  11EB  00FD               	movwf	??_CDCInitEP
 14390  11EC  087D               	movf	??_CDCInitEP,w
 14391  11ED  00F7               	movwf	USBEnableEndpoint@options
 14392  11EE  3002               	movlw	2
 14393  11EF  3190  20F1  3191   	fcall	_USBEnableEndpoint
 14394                           
 14395                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 14396  11F2  01F0               	clrf	i1USBTransferOnePacket@dir
 14397  11F3  3020               	movlw	32
 14398  11F4  00F1               	movwf	i1USBTransferOnePacket@data
 14399  11F5  3001               	movlw	1
 14400  11F6  00F2               	movwf	i1USBTransferOnePacket@data+1
 14401  11F7  3040               	movlw	64
 14402  11F8  00FD               	movwf	??_CDCInitEP
 14403  11F9  087D               	movf	??_CDCInitEP,w
 14404  11FA  00F3               	movwf	i1USBTransferOnePacket@len
 14405  11FB  3002               	movlw	2
 14406  11FC  318A  228B         	fcall	i1_USBTransferOnePacket
 14407  11FE  0871               	movf	?i1_USBTransferOnePacket+1,w
 14408  11FF  0024               	movlb	4	; select bank4
 14409  1200  00BC               	movwf	(_CDCDataOutHandle+1)^(0+512)
 14410  1201  0870               	movf	?i1_USBTransferOnePacket,w
 14411  1202  00BB               	movwf	_CDCDataOutHandle^(0+512)
 14412                           
 14413                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
 14414  1203  01B9               	clrf	_CDCDataInHandle^(0+512)
 14415  1204  01BA               	clrf	(_CDCDataInHandle+1)^(0+512)
 14416                           
 14417                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
 14418  1205  0023               	movlb	3	; select bank3
 14419  1206  01E5               	clrf	_cdc_trf_state^(0+384)
 14420  1207  0008               	return
 14421  1208                     __end_of_CDCInitEP:	
 14422                           
 14423                           	psect	text66
 14424  0A8B                     __ptext66:	
 14425 ;; *************** function i1_USBTransferOnePacket *****************
 14426 ;; Defined at:
 14427 ;;		line 995 in file "usb/core/usb_device.c"
 14428 ;; Parameters:    Size  Location     Type
 14429 ;;  ep              1    wreg     unsigned char 
 14430 ;;  dir             1    0[COMMON] unsigned char 
 14431 ;;  data            2    1[COMMON] PTR unsigned char 
 14432 ;;		 -> cdc_data_tx2(64), cdc_data_rx2(64), cdc_data_tx(64), cdc_data_rx(64), 
 14433 ;;		 -> NULL(0), 
 14434 ;;  len             1    3[COMMON] unsigned char 
 14435 ;; Auto vars:     Size  Location     Type
 14436 ;;  ep              1    8[COMMON] unsigned char 
 14437 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
 14438 ;;		 -> RAM(4096), NULL(0), BDT(80), 
 14439 ;; Return value:  Size  Location     Type
 14440 ;;                  2    0[COMMON] PTR void 
 14441 ;; Registers used:
 14442 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14443 ;; Tracked objects:
 14444 ;;		On entry : 0/0
 14445 ;;		On exit  : 0/0
 14446 ;;		Unchanged: 0/0
 14447 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14449 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14450 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14451 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14452 ;;Total ram usage:       11 bytes
 14453 ;; Hardware stack levels used:    1
 14454 ;; This function calls:
 14455 ;;		Nothing
 14456 ;; This function is called by:
 14457 ;;		_CDCInitEP
 14458 ;;		_CDCInitEP2
 14459 ;;		_getsUSBUSART2
 14460 ;;		_CDCTxService2
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464                           
 14465                           ;psect for function i1_USBTransferOnePacket
 14466  0A8B                     i1_USBTransferOnePacket:	
 14467                           
 14468                           ;incstack = 0
 14469                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 14470                           ;i1USBTransferOnePacket@ep stored from wreg
 14471  0A8B  00F8               	movwf	i1USBTransferOnePacket@ep
 14472                           
 14473                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 14474                           ;usb_device.c: 1000: if(dir != 0)
 14475  0A8C  0870               	movf	i1USBTransferOnePacket@dir,w
 14476  0A8D  1903               	btfsc	3,2
 14477  0A8E  2A98               	goto	i1l3955
 14478                           
 14479                           ;usb_device.c: 1001: {
 14480                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 14481  0A8F  3578               	lslf	i1USBTransferOnePacket@ep,w
 14482  0A90  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14483  0A91  0086               	movwf	6
 14484  0A92  3001               	movlw	1	; select bank3/4
 14485  0A93  0087               	movwf	7
 14486  0A94  3F40               	moviw [0]fsr1
 14487  0A95  00F9               	movwf	i1USBTransferOnePacket@handle
 14488  0A96  3F41               	moviw [1]fsr1
 14489  0A97  2AA0               	goto	L21
 14490  0A98                     i1l3955:	
 14491                           ;usb_device.c: 1004: }
 14492                           
 14493                           
 14494                           ;usb_device.c: 1005: else
 14495                           ;usb_device.c: 1006: {
 14496                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 14497  0A98  3578               	lslf	i1USBTransferOnePacket@ep,w
 14498  0A99  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 14499  0A9A  0086               	movwf	6
 14500  0A9B  3002               	movlw	2	; select bank5/6
 14501  0A9C  0087               	movwf	7
 14502  0A9D  3F40               	moviw [0]fsr1
 14503  0A9E  00F9               	movwf	i1USBTransferOnePacket@handle
 14504  0A9F  3F41               	moviw [1]fsr1
 14505  0AA0                     L21:	
 14506  0AA0  00FA               	movwf	i1USBTransferOnePacket@handle+1
 14507                           
 14508                           ;usb_device.c: 1009: }
 14509                           ;usb_device.c: 1013: if(handle == 0)
 14510  0AA1  0879               	movf	i1USBTransferOnePacket@handle,w
 14511  0AA2  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
 14512  0AA3  1D03               	btfss	3,2
 14513  0AA4  2AA8               	goto	i1l3963
 14514                           
 14515                           ;usb_device.c: 1014: {
 14516                           ;usb_device.c: 1015: return 0;
 14517  0AA5  01F0               	clrf	?i1_USBTransferOnePacket
 14518  0AA6  01F1               	clrf	?i1_USBTransferOnePacket+1
 14519  0AA7  0008               	return
 14520  0AA8                     i1l3963:	
 14521                           
 14522                           ;usb_device.c: 1016: }
 14523                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 14524  0AA8  30FF               	movlw	255
 14525  0AA9  0571               	andwf	i1USBTransferOnePacket@data,w
 14526  0AAA  00F4               	movwf	??i1_USBTransferOnePacket
 14527  0AAB  307F               	movlw	127
 14528  0AAC  0572               	andwf	i1USBTransferOnePacket@data+1,w
 14529  0AAD  00F5               	movwf	??i1_USBTransferOnePacket+1
 14530  0AAE  0879               	movf	i1USBTransferOnePacket@handle,w
 14531  0AAF  0086               	movwf	6
 14532  0AB0  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14533  0AB1  0087               	movwf	7
 14534  0AB2  3142               	addfsr 1,2
 14535  0AB3  0874               	movf	??i1_USBTransferOnePacket,w
 14536  0AB4  3FC0               	movwi [0]fsr1
 14537  0AB5  0875               	movf	??i1_USBTransferOnePacket+1,w
 14538  0AB6  3FC1               	movwi [1]fsr1
 14539                           
 14540                           ;usb_device.c: 1030: handle->CNT = len;
 14541  0AB7  0879               	movf	i1USBTransferOnePacket@handle,w
 14542  0AB8  3E01               	addlw	1
 14543  0AB9  00F4               	movwf	??i1_USBTransferOnePacket
 14544  0ABA  3000               	movlw	0
 14545  0ABB  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
 14546  0ABC  00F5               	movwf	??i1_USBTransferOnePacket+1
 14547  0ABD  0874               	movf	??i1_USBTransferOnePacket,w
 14548  0ABE  0086               	movwf	6
 14549  0ABF  0875               	movf	??i1_USBTransferOnePacket+1,w
 14550  0AC0  0087               	movwf	7
 14551  0AC1  0873               	movf	i1USBTransferOnePacket@len,w
 14552  0AC2  0081               	movwf	1
 14553                           
 14554                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 14555  0AC3  3040               	movlw	64
 14556  0AC4  00F4               	movwf	??i1_USBTransferOnePacket
 14557  0AC5  0879               	movf	i1USBTransferOnePacket@handle,w
 14558  0AC6  0086               	movwf	6
 14559  0AC7  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14560  0AC8  0087               	movwf	7
 14561  0AC9  0874               	movf	??i1_USBTransferOnePacket,w
 14562  0ACA  0581               	andwf	1,f
 14563                           
 14564                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 14565  0ACB  0879               	movf	i1USBTransferOnePacket@handle,w
 14566  0ACC  0086               	movwf	6
 14567  0ACD  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14568  0ACE  0087               	movwf	7
 14569  0ACF  1581               	bsf	1,3
 14570                           
 14571                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 14572  0AD0  0879               	movf	i1USBTransferOnePacket@handle,w
 14573  0AD1  0086               	movwf	6
 14574  0AD2  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14575  0AD3  0087               	movwf	7
 14576  0AD4  1781               	bsf	1,7
 14577                           
 14578                           ;usb_device.c: 1036: if(dir != 0)
 14579  0AD5  0870               	movf	i1USBTransferOnePacket@dir,w
 14580  0AD6  1903               	btfsc	3,2
 14581  0AD7  2AF1               	goto	i1l3973
 14582                           
 14583                           ;usb_device.c: 1037: {
 14584                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 14585  0AD8  3578               	lslf	i1USBTransferOnePacket@ep,w
 14586  0AD9  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14587  0ADA  0086               	movwf	6
 14588  0ADB  3001               	movlw	1	; select bank3/4
 14589  0ADC  0087               	movwf	7
 14590  0ADD  3F40               	moviw [0]fsr1
 14591  0ADE  00F4               	movwf	??i1_USBTransferOnePacket
 14592  0ADF  3F41               	moviw [1]fsr1
 14593  0AE0  00F5               	movwf	??i1_USBTransferOnePacket+1
 14594  0AE1  3004               	movlw	4
 14595  0AE2  0674               	xorwf	??i1_USBTransferOnePacket,w
 14596  0AE3  00F6               	movwf	??i1_USBTransferOnePacket+2
 14597  0AE4  3000               	movlw	0
 14598  0AE5  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 14599  0AE6  00F7               	movwf	??i1_USBTransferOnePacket+3
 14600  0AE7  3578               	lslf	i1USBTransferOnePacket@ep,w
 14601  0AE8  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14602  0AE9  0086               	movwf	6
 14603  0AEA  3001               	movlw	1	; select bank3/4
 14604  0AEB  0087               	movwf	7
 14605  0AEC  0876               	movf	??i1_USBTransferOnePacket+2,w
 14606  0AED  3FC0               	movwi [0]fsr1
 14607  0AEE  0877               	movf	??i1_USBTransferOnePacket+3,w
 14608  0AEF  3FC1               	movwi [1]fsr1
 14609                           
 14610                           ;usb_device.c: 1040: }
 14611  0AF0  2B09               	goto	i1l3975
 14612  0AF1                     i1l3973:	
 14613                           
 14614                           ;usb_device.c: 1041: else
 14615                           ;usb_device.c: 1042: {
 14616                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 14617  0AF1  3578               	lslf	i1USBTransferOnePacket@ep,w
 14618  0AF2  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 14619  0AF3  0086               	movwf	6
 14620  0AF4  3002               	movlw	2	; select bank5/6
 14621  0AF5  0087               	movwf	7
 14622  0AF6  3F40               	moviw [0]fsr1
 14623  0AF7  00F4               	movwf	??i1_USBTransferOnePacket
 14624  0AF8  3F41               	moviw [1]fsr1
 14625  0AF9  00F5               	movwf	??i1_USBTransferOnePacket+1
 14626  0AFA  3004               	movlw	4
 14627  0AFB  0674               	xorwf	??i1_USBTransferOnePacket,w
 14628  0AFC  00F6               	movwf	??i1_USBTransferOnePacket+2
 14629  0AFD  3000               	movlw	0
 14630  0AFE  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 14631  0AFF  00F7               	movwf	??i1_USBTransferOnePacket+3
 14632  0B00  3578               	lslf	i1USBTransferOnePacket@ep,w
 14633  0B01  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 14634  0B02  0086               	movwf	6
 14635  0B03  3002               	movlw	2	; select bank5/6
 14636  0B04  0087               	movwf	7
 14637  0B05  0876               	movf	??i1_USBTransferOnePacket+2,w
 14638  0B06  3FC0               	movwi [0]fsr1
 14639  0B07  0877               	movf	??i1_USBTransferOnePacket+3,w
 14640  0B08  3FC1               	movwi [1]fsr1
 14641  0B09                     i1l3975:	
 14642                           
 14643                           ;usb_device.c: 1045: }
 14644                           ;usb_device.c: 1046: return (void*)handle;
 14645  0B09  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14646  0B0A  00F1               	movwf	?i1_USBTransferOnePacket+1
 14647  0B0B  0879               	movf	i1USBTransferOnePacket@handle,w
 14648  0B0C  00F0               	movwf	?i1_USBTransferOnePacket
 14649  0B0D  0008               	return
 14650  0B0E                     __end_ofi1_USBTransferOnePacket:	
 14651                           
 14652                           	psect	text67
 14653  10F1                     __ptext67:	
 14654 ;; *************** function _USBEnableEndpoint *****************
 14655 ;; Defined at:
 14656 ;;		line 878 in file "usb/core/usb_device.c"
 14657 ;; Parameters:    Size  Location     Type
 14658 ;;  ep              1    wreg     unsigned char 
 14659 ;;  options         1    7[COMMON] unsigned char 
 14660 ;; Auto vars:     Size  Location     Type
 14661 ;;  ep              1   12[COMMON] unsigned char 
 14662 ;;  p               2   10[COMMON] PTR unsigned char 
 14663 ;;		 -> UEP0(1), 
 14664 ;; Return value:  Size  Location     Type
 14665 ;;                  1    wreg      void 
 14666 ;; Registers used:
 14667 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14668 ;; Tracked objects:
 14669 ;;		On entry : 0/0
 14670 ;;		On exit  : 0/0
 14671 ;;		Unchanged: 0/0
 14672 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14673 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14674 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14675 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14676 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14677 ;;Total ram usage:        6 bytes
 14678 ;; Hardware stack levels used:    1
 14679 ;; Hardware stack levels required when called:    1
 14680 ;; This function calls:
 14681 ;;		_USBConfigureEndpoint
 14682 ;; This function is called by:
 14683 ;;		_CDCInitEP
 14684 ;;		_CDCInitEP2
 14685 ;; This function uses a non-reentrant model
 14686 ;;
 14687                           
 14688                           
 14689                           ;psect for function _USBEnableEndpoint
 14690  10F1                     _USBEnableEndpoint:	
 14691                           
 14692                           ;incstack = 0
 14693                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14694                           ;USBEnableEndpoint@ep stored from wreg
 14695  10F1  00FC               	movwf	USBEnableEndpoint@ep
 14696                           
 14697                           ;usb_device.c: 880: unsigned char* p;
 14698                           ;usb_device.c: 884: if(options & 0x04)
 14699  10F2  1D77               	btfss	USBEnableEndpoint@options,2
 14700  10F3  28F9               	goto	i1l3939
 14701                           
 14702                           ;usb_device.c: 885: {
 14703                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 14704  10F4  01F0               	clrf	USBConfigureEndpoint@direction
 14705  10F5  087C               	movf	USBEnableEndpoint@ep,w
 14706  10F6  3192  2281  3190   	fcall	_USBConfigureEndpoint
 14707  10F9                     i1l3939:	
 14708                           
 14709                           ;usb_device.c: 887: }
 14710                           ;usb_device.c: 888: if(options & 0x02)
 14711  10F9  1CF7               	btfss	USBEnableEndpoint@options,1
 14712  10FA  2900               	goto	i1l3943
 14713                           
 14714                           ;usb_device.c: 889: {
 14715                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 14716  10FB  01F0               	clrf	USBConfigureEndpoint@direction
 14717  10FC  0AF0               	incf	USBConfigureEndpoint@direction,f
 14718  10FD  087C               	movf	USBEnableEndpoint@ep,w
 14719  10FE  3192  2281         	fcall	_USBConfigureEndpoint
 14720  1100                     i1l3943:	
 14721                           
 14722                           ;usb_device.c: 891: }
 14723                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 14724  1100  087C               	movf	USBEnableEndpoint@ep,w
 14725  1101  3E98               	addlw	152
 14726  1102  00F8               	movwf	??_USBEnableEndpoint
 14727  1103  01F9               	clrf	??_USBEnableEndpoint+1
 14728  1104  300E               	movlw	14
 14729  1105  3DF9               	addwfc	??_USBEnableEndpoint+1,f
 14730  1106  0878               	movf	??_USBEnableEndpoint,w
 14731  1107  00FA               	movwf	USBEnableEndpoint@p
 14732  1108  0879               	movf	??_USBEnableEndpoint+1,w
 14733  1109  00FB               	movwf	USBEnableEndpoint@p+1
 14734                           
 14735                           ;usb_device.c: 901: *p = options;
 14736  110A  087A               	movf	USBEnableEndpoint@p,w
 14737  110B  0086               	movwf	6
 14738  110C  087B               	movf	USBEnableEndpoint@p+1,w
 14739  110D  0087               	movwf	7
 14740  110E  0877               	movf	USBEnableEndpoint@options,w
 14741  110F  0081               	movwf	1
 14742  1110  0008               	return
 14743  1111                     __end_of_USBEnableEndpoint:	
 14744                           
 14745                           	psect	text68
 14746  1281                     __ptext68:	
 14747 ;; *************** function _USBConfigureEndpoint *****************
 14748 ;; Defined at:
 14749 ;;		line 1543 in file "usb/core/usb_device.c"
 14750 ;; Parameters:    Size  Location     Type
 14751 ;;  EPNum           1    wreg     unsigned char 
 14752 ;;  direction       1    0[COMMON] unsigned char 
 14753 ;; Auto vars:     Size  Location     Type
 14754 ;;  EPNum           1    5[COMMON] unsigned char 
 14755 ;;  handle          1    6[COMMON] PTR volatile struct __BD
 14756 ;;		 -> BDT(80), 
 14757 ;; Return value:  Size  Location     Type
 14758 ;;                  1    wreg      void 
 14759 ;; Registers used:
 14760 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14761 ;; Tracked objects:
 14762 ;;		On entry : 0/0
 14763 ;;		On exit  : 0/0
 14764 ;;		Unchanged: 0/0
 14765 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14766 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14768 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14769 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14770 ;;Total ram usage:        7 bytes
 14771 ;; Hardware stack levels used:    1
 14772 ;; This function calls:
 14773 ;;		Nothing
 14774 ;; This function is called by:
 14775 ;;		_USBEnableEndpoint
 14776 ;; This function uses a non-reentrant model
 14777 ;;
 14778                           
 14779                           
 14780                           ;psect for function _USBConfigureEndpoint
 14781  1281                     _USBConfigureEndpoint:	
 14782                           
 14783                           ;incstack = 0
 14784                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 14785                           ;USBConfigureEndpoint@EPNum stored from wreg
 14786  1281  00F5               	movwf	USBConfigureEndpoint@EPNum
 14787                           
 14788                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 14789                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 14790  1282  3020               	movlw	32
 14791  1283  00F1               	movwf	??_USBConfigureEndpoint
 14792  1284  0871               	movf	??_USBConfigureEndpoint,w
 14793  1285  00F6               	movwf	USBConfigureEndpoint@handle
 14794                           
 14795                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 14796  1286  0870               	movf	USBConfigureEndpoint@direction,w
 14797  1287  00F1               	movwf	??_USBConfigureEndpoint
 14798  1288  3001               	movlw	1
 14799  1289                     u311_25:	
 14800  1289  35F1               	lslf	??_USBConfigureEndpoint,f
 14801  128A  0B89               	decfsz	9,f
 14802  128B  2A89               	goto	u311_25
 14803  128C  0875               	movf	USBConfigureEndpoint@EPNum,w
 14804  128D  00F2               	movwf	??_USBConfigureEndpoint+1
 14805  128E  3001               	movlw	1
 14806  128F                     u312_25:	
 14807  128F  35F2               	lslf	??_USBConfigureEndpoint+1,f
 14808  1290  3EFF               	addlw	-1
 14809  1291  1D03               	skipz
 14810  1292  2A8F               	goto	u312_25
 14811  1293  3572               	lslf	??_USBConfigureEndpoint+1,w
 14812  1294  0771               	addwf	??_USBConfigureEndpoint,w
 14813  1295  00F3               	movwf	??_USBConfigureEndpoint+2
 14814  1296  3001               	movlw	1
 14815  1297                     u313_25:	
 14816  1297  35F3               	lslf	??_USBConfigureEndpoint+2,f
 14817  1298  3EFF               	addlw	-1
 14818  1299  1D03               	skipz
 14819  129A  2A97               	goto	u313_25
 14820  129B  3573               	lslf	??_USBConfigureEndpoint+2,w
 14821  129C  00F4               	movwf	??_USBConfigureEndpoint+3
 14822  129D  0874               	movf	??_USBConfigureEndpoint+3,w
 14823  129E  07F6               	addwf	USBConfigureEndpoint@handle,f
 14824                           
 14825                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 14826  129F  0876               	movf	USBConfigureEndpoint@handle,w
 14827  12A0  0086               	movwf	6
 14828  12A1  0187               	clrf	7
 14829  12A2  1381               	bcf	1,7
 14830                           
 14831                           ;usb_device.c: 1557: if(direction == 0)
 14832  12A3  0870               	movf	USBConfigureEndpoint@direction,w
 14833  12A4  1D03               	btfss	3,2
 14834  12A5  2AB0               	goto	i1l3929
 14835                           
 14836                           ;usb_device.c: 1558: {
 14837                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 14838  12A6  3575               	lslf	USBConfigureEndpoint@EPNum,w
 14839  12A7  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 14840  12A8  0086               	movwf	6
 14841  12A9  3002               	movlw	2	; select bank5/6
 14842  12AA  0087               	movwf	7
 14843  12AB  0876               	movf	USBConfigureEndpoint@handle,w
 14844  12AC  3FC0               	movwi [0]fsr1
 14845  12AD  3000               	movlw	0
 14846  12AE  3FC1               	movwi [1]fsr1
 14847                           
 14848                           ;usb_device.c: 1560: }
 14849  12AF  2AB9               	goto	i1l3931
 14850  12B0                     i1l3929:	
 14851                           
 14852                           ;usb_device.c: 1561: else
 14853                           ;usb_device.c: 1562: {
 14854                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 14855  12B0  3575               	lslf	USBConfigureEndpoint@EPNum,w
 14856  12B1  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14857  12B2  0086               	movwf	6
 14858  12B3  3001               	movlw	1	; select bank3/4
 14859  12B4  0087               	movwf	7
 14860  12B5  0876               	movf	USBConfigureEndpoint@handle,w
 14861  12B6  3FC0               	movwi [0]fsr1
 14862  12B7  3000               	movlw	0
 14863  12B8  3FC1               	movwi [1]fsr1
 14864  12B9                     i1l3931:	
 14865                           
 14866                           ;usb_device.c: 1564: }
 14867                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 14868  12B9  0876               	movf	USBConfigureEndpoint@handle,w
 14869  12BA  0086               	movwf	6
 14870  12BB  0187               	clrf	7
 14871  12BC  1301               	bcf	1,6
 14872                           
 14873                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 14874  12BD  0876               	movf	USBConfigureEndpoint@handle,w
 14875  12BE  3E04               	addlw	4
 14876  12BF  0086               	movwf	6
 14877  12C0  0187               	clrf	7
 14878  12C1  1701               	bsf	1,6
 14879  12C2  0008               	return
 14880  12C3                     __end_of_USBConfigureEndpoint:	
 14881                           
 14882                           	psect	text69
 14883  1244                     __ptext69:	
 14884 ;; *************** function _USBCtrlTrfOutHandler *****************
 14885 ;; Defined at:
 14886 ;;		line 2538 in file "usb/core/usb_device.c"
 14887 ;; Parameters:    Size  Location     Type
 14888 ;;		None
 14889 ;; Auto vars:     Size  Location     Type
 14890 ;;		None
 14891 ;; Return value:  Size  Location     Type
 14892 ;;                  1    wreg      void 
 14893 ;; Registers used:
 14894 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14895 ;; Tracked objects:
 14896 ;;		On entry : 0/0
 14897 ;;		On exit  : 0/0
 14898 ;;		Unchanged: 0/0
 14899 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14902 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0
 14903 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0
 14904 ;;Total ram usage:        2 bytes
 14905 ;; Hardware stack levels used:    1
 14906 ;; Hardware stack levels required when called:    3
 14907 ;; This function calls:
 14908 ;;		_USBCtrlTrfRxService
 14909 ;; This function is called by:
 14910 ;;		_USBCtrlEPService
 14911 ;; This function uses a non-reentrant model
 14912 ;;
 14913                           
 14914                           
 14915                           ;psect for function _USBCtrlTrfOutHandler
 14916  1244                     _USBCtrlTrfOutHandler:	
 14917                           
 14918                           ;usb_device.c: 2540: if(controlTransferState == 2)
 14919                           
 14920                           ;incstack = 0
 14921                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14922  1244  3002               	movlw	2
 14923  1245  0023               	movlb	3	; select bank3
 14924  1246  0668               	xorwf	_controlTransferState^(0+384),w
 14925  1247  1D03               	btfss	3,2
 14926  1248  2A4C               	goto	i1l4761
 14927                           
 14928                           ;usb_device.c: 2541: {
 14929                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 14930  1249  3186  2643         	fcall	_USBCtrlTrfRxService
 14931                           
 14932                           ;usb_device.c: 2543: }
 14933  124B  0008               	return
 14934  124C                     i1l4761:	
 14935                           
 14936                           ;usb_device.c: 2544: else
 14937                           ;usb_device.c: 2545: {
 14938                           ;usb_device.c: 2548: controlTransferState = 0;
 14939  124C  0023               	movlb	3	; select bank3
 14940  124D  01E8               	clrf	_controlTransferState^(0+384)
 14941                           
 14942                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 14943  124E  0024               	movlb	4	; select bank4
 14944  124F  0858               	movf	_BothEP0OutUOWNsSet^(0+512),w
 14945  1250  1D03               	btfss	3,2
 14946  1251  2A7E               	goto	i1l4773
 14947                           
 14948                           ;usb_device.c: 2556: {
 14949                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 14950  1252  0022               	movlb	2	; select bank2
 14951  1253  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 14952  1254  3E01               	addlw	1
 14953  1255  0021               	movlb	1	; select bank1
 14954  1256  00EC               	movwf	??_USBCtrlTrfOutHandler^(0+128)
 14955  1257  3000               	movlw	0
 14956  1258  0022               	movlb	2	; select bank2
 14957  1259  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 14958  125A  0021               	movlb	1	; select bank1
 14959  125B  00ED               	movwf	(??_USBCtrlTrfOutHandler+1)^(0+128)
 14960  125C  086C               	movf	??_USBCtrlTrfOutHandler^(0+128),w
 14961  125D  0086               	movwf	6
 14962  125E  086D               	movf	(??_USBCtrlTrfOutHandler+1)^(0+128),w
 14963  125F  0087               	movwf	7
 14964  1260  3008               	movlw	8
 14965  1261  0081               	movwf	1
 14966                           
 14967                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14968  1262  30A0               	movlw	160
 14969  1263  00EC               	movwf	??_USBCtrlTrfOutHandler^(0+128)
 14970  1264  3000               	movlw	0
 14971  1265  00ED               	movwf	(??_USBCtrlTrfOutHandler^(0+128)+1)
 14972  1266  0022               	movlb	2	; select bank2
 14973  1267  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 14974  1268  0086               	movwf	6
 14975  1269  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 14976  126A  0087               	movwf	7
 14977  126B  3142               	addfsr 1,2
 14978  126C  0021               	movlb	1	; select bank1
 14979  126D  086C               	movf	??_USBCtrlTrfOutHandler^(0+128),w
 14980  126E  3FC0               	movwi [0]fsr1
 14981  126F  086D               	movf	(??_USBCtrlTrfOutHandler^(0+128)+1),w
 14982  1270  3FC1               	movwi [1]fsr1
 14983                           
 14984                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14985  1271  0022               	movlb	2	; select bank2
 14986  1272  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 14987  1273  0086               	movwf	6
 14988  1274  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 14989  1275  0087               	movwf	7
 14990  1276  300C               	movlw	12
 14991  1277  0081               	movwf	1
 14992                           
 14993                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14994  1278  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 14995  1279  0086               	movwf	6
 14996  127A  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 14997  127B  0087               	movwf	7
 14998  127C  1781               	bsf	1,7
 14999                           
 15000                           ;usb_device.c: 2561: }
 15001  127D  0008               	return
 15002  127E                     i1l4773:	
 15003                           
 15004                           ;usb_device.c: 2562: else
 15005                           ;usb_device.c: 2563: {
 15006                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 15007  127E  0024               	movlb	4	; select bank4
 15008  127F  01D8               	clrf	_BothEP0OutUOWNsSet^(0+512)
 15009  1280  0008               	return
 15010  1281                     __end_of_USBCtrlTrfOutHandler:	
 15011                           
 15012                           	psect	text70
 15013  0643                     __ptext70:	
 15014 ;; *************** function _USBCtrlTrfRxService *****************
 15015 ;; Defined at:
 15016 ;;		line 1852 in file "usb/core/usb_device.c"
 15017 ;; Parameters:    Size  Location     Type
 15018 ;;		None
 15019 ;; Auto vars:     Size  Location     Type
 15020 ;;  byteToRead      1   11[BANK1 ] unsigned char 
 15021 ;;  i               1   10[BANK1 ] unsigned char 
 15022 ;; Return value:  Size  Location     Type
 15023 ;;                  1    wreg      void 
 15024 ;; Registers used:
 15025 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15026 ;; Tracked objects:
 15027 ;;		On entry : 0/0
 15028 ;;		On exit  : 0/0
 15029 ;;		Unchanged: 0/0
 15030 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 15031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15032 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0
 15033 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0
 15034 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0
 15035 ;;Total ram usage:        4 bytes
 15036 ;; Hardware stack levels used:    1
 15037 ;; Hardware stack levels required when called:    2
 15038 ;; This function calls:
 15039 ;;		Absolute function
 15040 ;;		_USART_mySetLineCodingHandler
 15041 ;;		_USBCtrlEPAllowStatusStage
 15042 ;; This function is called by:
 15043 ;;		_USBCtrlTrfOutHandler
 15044 ;; This function uses a non-reentrant model
 15045 ;;
 15046                           
 15047                           
 15048                           ;psect for function _USBCtrlTrfRxService
 15049  0643                     _USBCtrlTrfRxService:	
 15050                           
 15051                           ;usb_device.c: 1854: uint8_t byteToRead;
 15052                           ;usb_device.c: 1855: uint8_t i;
 15053                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 15054                           
 15055                           ;incstack = 0
 15056                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15057  0643  0023               	movlb	3	; select bank3
 15058  0644  086A               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 15059  0645  0086               	movwf	6
 15060  0646  0187               	clrf	7
 15061  0647  3F41               	moviw [1]fsr1
 15062  0648  0021               	movlb	1	; select bank1
 15063  0649  00EB               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
 15064                           
 15065                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 15066  064A  086B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
 15067  064B  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15068  064C  01E9               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
 15069  064D  0869               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
 15070  064E  0024               	movlb	4	; select bank4
 15071  064F  0224               	subwf	((_outPipes+1)^(0+512)+3),w
 15072  0650  1D03               	skipz
 15073  0651  2E56               	goto	u392_25
 15074  0652  0021               	movlb	1	; select bank1
 15075  0653  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15076  0654  0024               	movlb	4	; select bank4
 15077  0655  0223               	subwf	(_outPipes^(0+512)+3),w
 15078  0656                     u392_25:	
 15079  0656  1803               	skipnc
 15080  0657  2E5D               	goto	i1l485
 15081                           
 15082                           ;usb_device.c: 1866: {
 15083                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 15084  0658  0823               	movf	(_outPipes^(0+512)+3),w
 15085  0659  0021               	movlb	1	; select bank1
 15086  065A  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15087  065B  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15088  065C  00EB               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
 15089  065D                     i1l485:	
 15090                           
 15091                           ;usb_device.c: 1868: }
 15092                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 15093  065D  0021               	movlb	1	; select bank1
 15094  065E  086B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
 15095  065F  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15096  0660  01E9               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
 15097  0661  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15098  0662  0024               	movlb	4	; select bank4
 15099  0663  02A3               	subwf	(_outPipes^(0+512)+3),f
 15100  0664  0021               	movlb	1	; select bank1
 15101  0665  0869               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
 15102  0666  0024               	movlb	4	; select bank4
 15103  0667  3BA4               	subwfb	((_outPipes+1)^(0+512)+3),f
 15104                           
 15105                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 15106  0668  0021               	movlb	1	; select bank1
 15107  0669  01EA               	clrf	USBCtrlTrfRxService@i^(0+128)
 15108  066A                     i1l4571:	
 15109  066A  086B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
 15110  066B  026A               	subwf	USBCtrlTrfRxService@i^(0+128),w
 15111  066C  1803               	btfsc	3,0
 15112  066D  2E87               	goto	i1l4573
 15113                           
 15114                           ;usb_device.c: 1875: {
 15115                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 15116  066E  086A               	movf	USBCtrlTrfRxService@i^(0+128),w
 15117  066F  3EA8               	addlw	168
 15118  0670  0086               	movwf	6
 15119  0671  0187               	clrf	7
 15120  0672  0801               	movf	1,w
 15121  0673  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15122  0674  0024               	movlb	4	; select bank4
 15123  0675  0820               	movf	_outPipes^(0+512),w
 15124  0676  0086               	movwf	6
 15125  0677  3002               	movlw	2	; select bank4/5
 15126  0678  0087               	movwf	7
 15127  0679  0021               	movlb	1	; select bank1
 15128  067A  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15129  067B  0081               	movwf	1
 15130  067C  3001               	movlw	1
 15131  067D  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15132  067E  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15133  067F  0024               	movlb	4	; select bank4
 15134  0680  07A0               	addwf	_outPipes^(0+512),f
 15135  0681  3001               	movlw	1
 15136  0682  0021               	movlb	1	; select bank1
 15137  0683  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15138  0684  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15139  0685  07EA               	addwf	USBCtrlTrfRxService@i^(0+128),f
 15140  0686  2E6A               	goto	i1l4571
 15141  0687                     i1l4573:	
 15142                           
 15143                           ;usb_device.c: 1877: }
 15144                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 15145  0687  0024               	movlb	4	; select bank4
 15146  0688  0823               	movf	(_outPipes^(0+512)+3),w
 15147  0689  0424               	iorwf	((_outPipes+1)^(0+512)+3),w
 15148  068A  1903               	btfsc	3,2
 15149  068B  2ECB               	goto	i1l4585
 15150                           
 15151                           ;usb_device.c: 1882: {
 15152                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 15153  068C  0022               	movlb	2	; select bank2
 15154  068D  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15155  068E  3E01               	addlw	1
 15156  068F  0021               	movlb	1	; select bank1
 15157  0690  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15158  0691  3000               	movlw	0
 15159  0692  0022               	movlb	2	; select bank2
 15160  0693  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15161  0694  0021               	movlb	1	; select bank1
 15162  0695  00E9               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
 15163  0696  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15164  0697  0086               	movwf	6
 15165  0698  0869               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
 15166  0699  0087               	movwf	7
 15167  069A  3008               	movlw	8
 15168  069B  0081               	movwf	1
 15169                           
 15170                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 15171  069C  30A8               	movlw	168
 15172  069D  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15173  069E  3000               	movlw	0
 15174  069F  00E9               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
 15175  06A0  0022               	movlb	2	; select bank2
 15176  06A1  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15177  06A2  0086               	movwf	6
 15178  06A3  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15179  06A4  0087               	movwf	7
 15180  06A5  3142               	addfsr 1,2
 15181  06A6  0021               	movlb	1	; select bank1
 15182  06A7  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15183  06A8  3FC0               	movwi [0]fsr1
 15184  06A9  0869               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
 15185  06AA  3FC1               	movwi [1]fsr1
 15186                           
 15187                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 15188  06AB  0023               	movlb	3	; select bank3
 15189  06AC  086A               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 15190  06AD  0086               	movwf	6
 15191  06AE  0187               	clrf	7
 15192  06AF  1B01               	btfsc	1,6
 15193  06B0  2EBE               	goto	i1l4583
 15194                           
 15195                           ;usb_device.c: 1886: {
 15196                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 15197  06B1  0022               	movlb	2	; select bank2
 15198  06B2  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15199  06B3  0086               	movwf	6
 15200  06B4  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15201  06B5  0087               	movwf	7
 15202  06B6  3048               	movlw	72
 15203  06B7  0081               	movwf	1
 15204                           
 15205                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15206  06B8  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15207  06B9  0086               	movwf	6
 15208  06BA  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15209  06BB  0087               	movwf	7
 15210  06BC  1781               	bsf	1,7
 15211                           
 15212                           ;usb_device.c: 1889: }
 15213  06BD  0008               	return
 15214  06BE                     i1l4583:	
 15215                           
 15216                           ;usb_device.c: 1890: else
 15217                           ;usb_device.c: 1891: {
 15218                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 15219  06BE  0022               	movlb	2	; select bank2
 15220  06BF  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15221  06C0  0086               	movwf	6
 15222  06C1  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15223  06C2  0087               	movwf	7
 15224  06C3  3008               	movlw	8
 15225  06C4  0081               	movwf	1
 15226                           
 15227                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15228  06C5  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15229  06C6  0086               	movwf	6
 15230  06C7  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15231  06C8  0087               	movwf	7
 15232  06C9  1781               	bsf	1,7
 15233                           
 15234                           ;usb_device.c: 1894: }
 15235                           ;usb_device.c: 1895: }
 15236  06CA  0008               	return
 15237  06CB                     i1l4585:	
 15238                           
 15239                           ;usb_device.c: 1896: else
 15240                           ;usb_device.c: 1897: {
 15241                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 15242  06CB  0022               	movlb	2	; select bank2
 15243  06CC  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15244  06CD  3E01               	addlw	1
 15245  06CE  0021               	movlb	1	; select bank1
 15246  06CF  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15247  06D0  3000               	movlw	0
 15248  06D1  0022               	movlb	2	; select bank2
 15249  06D2  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15250  06D3  0021               	movlb	1	; select bank1
 15251  06D4  00E9               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
 15252  06D5  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15253  06D6  0086               	movwf	6
 15254  06D7  0869               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
 15255  06D8  0087               	movwf	7
 15256  06D9  3008               	movlw	8
 15257  06DA  0081               	movwf	1
 15258                           
 15259                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 15260  06DB  30A0               	movlw	160
 15261  06DC  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15262  06DD  3000               	movlw	0
 15263  06DE  00E9               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
 15264  06DF  0022               	movlb	2	; select bank2
 15265  06E0  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15266  06E1  0086               	movwf	6
 15267  06E2  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15268  06E3  0087               	movwf	7
 15269  06E4  3142               	addfsr 1,2
 15270  06E5  0021               	movlb	1	; select bank1
 15271  06E6  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15272  06E7  3FC0               	movwi [0]fsr1
 15273  06E8  0869               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
 15274  06E9  3FC1               	movwi [1]fsr1
 15275                           
 15276                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 15277  06EA  0022               	movlb	2	; select bank2
 15278  06EB  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15279  06EC  0086               	movwf	6
 15280  06ED  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15281  06EE  0087               	movwf	7
 15282  06EF  3004               	movlw	4
 15283  06F0  0081               	movwf	1
 15284                           
 15285                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15286  06F1  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15287  06F2  0086               	movwf	6
 15288  06F3  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15289  06F4  0087               	movwf	7
 15290  06F5  1781               	bsf	1,7
 15291                           
 15292                           ;usb_device.c: 1914: if(outPipes[0].pFunc != (0))
 15293  06F6  0024               	movlb	4	; select bank4
 15294  06F7  0825               	movf	(low ((_outPipes| (0+512)+5)))^0,w
 15295  06F8  0426               	iorwf	((low ((_outPipes| (0+512)+5))+1))^0,w
 15296  06F9  1903               	btfsc	3,2
 15297  06FA  2F05               	goto	i1l4597
 15298                           
 15299                           ;usb_device.c: 1915: {
 15300                           ;usb_device.c: 1921: outPipes[0].pFunc();
 15301  06FB  3005               	movlw	5
 15302  06FC  3E20               	addlw	(low (_outPipes| (0+512)))& (0+255)
 15303  06FD  0086               	movwf	6
 15304  06FE  3002               	movlw	2	; select bank4/5
 15305  06FF  0087               	movwf	7
 15306  0700  3F41               	moviw [1]fsr1
 15307  0701  008A               	movwf	10
 15308  0702  3F40               	moviw [0]fsr1
 15309  0703  000A               	callw
 15310  0704  3186               	pagesel	$
 15311  0705                     i1l4597:	
 15312                           
 15313                           ;usb_device.c: 1926: }
 15314                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 15315  0705  0024               	movlb	4	; select bank4
 15316  0706  13A2               	bcf	(_outPipes^(0+512)+2),7
 15317                           
 15318                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 15319  0707  0023               	movlb	3	; select bank3
 15320  0708  0867               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 15321  0709  1D03               	btfss	3,2
 15322  070A  0008               	return
 15323                           
 15324                           ;usb_device.c: 1942: {
 15325                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 15326  070B  3197  2721         	fcall	_USBCtrlEPAllowStatusStage
 15327  070D  0008               	return
 15328  070E                     __end_of_USBCtrlTrfRxService:	
 15329                           
 15330                           	psect	text71
 15331  1721                     __ptext71:	
 15332 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 15333 ;; Defined at:
 15334 ;;		line 1416 in file "usb/core/usb_device.c"
 15335 ;; Parameters:    Size  Location     Type
 15336 ;;		None
 15337 ;; Auto vars:     Size  Location     Type
 15338 ;;		None
 15339 ;; Return value:  Size  Location     Type
 15340 ;;                  1    wreg      void 
 15341 ;; Registers used:
 15342 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15343 ;; Tracked objects:
 15344 ;;		On entry : 0/0
 15345 ;;		On exit  : 0/0
 15346 ;;		Unchanged: 0/0
 15347 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 15348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15350 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15352 ;;Total ram usage:        2 bytes
 15353 ;; Hardware stack levels used:    1
 15354 ;; This function calls:
 15355 ;;		Nothing
 15356 ;; This function is called by:
 15357 ;;		_USBDeviceTasks
 15358 ;;		_USBCtrlEPServiceComplete
 15359 ;;		_USBCtrlTrfRxService
 15360 ;; This function uses a non-reentrant model
 15361 ;;
 15362                           
 15363                           
 15364                           ;psect for function _USBCtrlEPAllowStatusStage
 15365  1721                     _USBCtrlEPAllowStatusStage:	
 15366                           
 15367                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 15368                           
 15369                           ;incstack = 0
 15370                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 15371  1721  0024               	movlb	4	; select bank4
 15372  1722  0856               	movf	_USBStatusStageEnabledFlag1^(0+512),w	;volatile
 15373  1723  1D03               	btfss	3,2
 15374  1724  0008               	return
 15375                           
 15376                           ;usb_device.c: 1424: {
 15377                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 15378  1725  3001               	movlw	1
 15379  1726  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15380  1727  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15381  1728  00D6               	movwf	_USBStatusStageEnabledFlag1^(0+512)	;volatile
 15382                           
 15383                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 15384  1729  0855               	movf	_USBStatusStageEnabledFlag2^(0+512),w	;volatile
 15385  172A  1D03               	btfss	3,2
 15386  172B  0008               	return
 15387                           
 15388                           ;usb_device.c: 1427: {
 15389                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 15390  172C  3001               	movlw	1
 15391  172D  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15392  172E  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15393  172F  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+512)	;volatile
 15394                           
 15395                           ;usb_device.c: 1432: if(controlTransferState == 2)
 15396  1730  3002               	movlw	2
 15397  1731  0023               	movlb	3	; select bank3
 15398  1732  0668               	xorwf	_controlTransferState^(0+384),w
 15399  1733  1D03               	btfss	3,2
 15400  1734  2F47               	goto	i1l4253
 15401                           
 15402                           ;usb_device.c: 1433: {
 15403                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 15404  1735  084B               	movf	_pBDTEntryIn^(0+384),w
 15405  1736  0086               	movwf	6
 15406  1737  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15407  1738  0087               	movwf	7
 15408  1739  3141               	addfsr 1,1
 15409  173A  0181               	clrf	1
 15410                           
 15411                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 15412  173B  084B               	movf	_pBDTEntryIn^(0+384),w
 15413  173C  0086               	movwf	6
 15414  173D  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15415  173E  0087               	movwf	7
 15416  173F  3048               	movlw	72
 15417  1740  0081               	movwf	1
 15418                           
 15419                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15420  1741  084B               	movf	_pBDTEntryIn^(0+384),w
 15421  1742  0086               	movwf	6
 15422  1743  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15423  1744  0087               	movwf	7
 15424  1745  1781               	bsf	1,7
 15425                           
 15426                           ;usb_device.c: 1437: }
 15427  1746  0008               	return
 15428  1747                     i1l4253:	
 15429                           
 15430                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 15431  1747  0368               	decf	_controlTransferState^(0+384),w
 15432  1748  1D03               	btfss	3,2
 15433  1749  0008               	return
 15434                           
 15435                           ;usb_device.c: 1439: {
 15436                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 15437  174A  0024               	movlb	4	; select bank4
 15438  174B  01D8               	clrf	_BothEP0OutUOWNsSet^(0+512)
 15439                           
 15440                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 15441  174C  3008               	movlw	8
 15442  174D  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15443  174E  0023               	movlb	3	; select bank3
 15444  174F  0A6A               	incf	_pBDTEntryEP0OutCurrent^(0+384),w
 15445  1750  0086               	movwf	6
 15446  1751  0187               	clrf	7
 15447  1752  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15448  1753  0081               	movwf	1
 15449                           
 15450                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 15451  1754  30A0               	movlw	160
 15452  1755  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15453  1756  3000               	movlw	0
 15454  1757  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
 15455  1758  086A               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 15456  1759  3E02               	addlw	2
 15457  175A  0086               	movwf	6
 15458  175B  0187               	clrf	7
 15459  175C  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15460  175D  3FC0               	movwi [0]fsr1
 15461  175E  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
 15462  175F  3FC1               	movwi [1]fsr1
 15463                           
 15464                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 15465  1760  3004               	movlw	4
 15466  1761  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15467  1762  086A               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 15468  1763  0086               	movwf	6
 15469  1764  0187               	clrf	7
 15470  1765  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15471  1766  0081               	movwf	1
 15472                           
 15473                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 15474  1767  086A               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 15475  1768  0086               	movwf	6
 15476  1769  0187               	clrf	7
 15477  176A  1781               	bsf	1,7
 15478                           
 15479                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 15480  176B  0024               	movlb	4	; select bank4
 15481  176C  01D8               	clrf	_BothEP0OutUOWNsSet^(0+512)
 15482  176D  0AD8               	incf	_BothEP0OutUOWNsSet^(0+512),f
 15483                           
 15484                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 15485  176E  0022               	movlb	2	; select bank2
 15486  176F  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15487  1770  3E01               	addlw	1
 15488  1771  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15489  1772  3000               	movlw	0
 15490  1773  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15491  1774  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
 15492  1775  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15493  1776  0086               	movwf	6
 15494  1777  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
 15495  1778  0087               	movwf	7
 15496  1779  3008               	movlw	8
 15497  177A  0081               	movwf	1
 15498                           
 15499                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 15500  177B  30A0               	movlw	160
 15501  177C  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15502  177D  3000               	movlw	0
 15503  177E  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
 15504  177F  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15505  1780  0086               	movwf	6
 15506  1781  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15507  1782  0087               	movwf	7
 15508  1783  3142               	addfsr 1,2
 15509  1784  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15510  1785  3FC0               	movwi [0]fsr1
 15511  1786  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
 15512  1787  3FC1               	movwi [1]fsr1
 15513                           
 15514                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 15515  1788  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15516  1789  0086               	movwf	6
 15517  178A  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15518  178B  0087               	movwf	7
 15519  178C  3080               	movlw	128
 15520  178D  0081               	movwf	1
 15521  178E  0008               	return
 15522  178F                     __end_of_USBCtrlEPAllowStatusStage:	
 15523                           
 15524                           	psect	text72
 15525  0989                     __ptext72:	
 15526 ;; *************** function _USBCtrlTrfInHandler *****************
 15527 ;; Defined at:
 15528 ;;		line 2592 in file "usb/core/usb_device.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;		None
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;  lastDTS         1   10[BANK1 ] unsigned char 
 15533 ;; Return value:  Size  Location     Type
 15534 ;;                  1    wreg      void 
 15535 ;; Registers used:
 15536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15537 ;; Tracked objects:
 15538 ;;		On entry : 0/0
 15539 ;;		On exit  : 0/0
 15540 ;;		Unchanged: 0/0
 15541 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 15542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15543 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 15544 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0
 15545 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0
 15546 ;;Total ram usage:        3 bytes
 15547 ;; Hardware stack levels used:    1
 15548 ;; Hardware stack levels required when called:    2
 15549 ;; This function calls:
 15550 ;;		Absolute function
 15551 ;;		_USART_mySetLineCodingHandler
 15552 ;;		_USBCtrlTrfTxService
 15553 ;; This function is called by:
 15554 ;;		_USBCtrlEPService
 15555 ;; This function uses a non-reentrant model
 15556 ;;
 15557                           
 15558                           
 15559                           ;psect for function _USBCtrlTrfInHandler
 15560  0989                     _USBCtrlTrfInHandler:	
 15561                           
 15562                           ;usb_device.c: 2594: uint8_t lastDTS;
 15563                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 15564                           
 15565                           ;incstack = 0
 15566                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15567  0989  0023               	movlb	3	; select bank3
 15568  098A  084B               	movf	_pBDTEntryIn^(0+384),w
 15569  098B  0086               	movwf	6
 15570  098C  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15571  098D  0087               	movwf	7
 15572  098E  3000               	movlw	0
 15573  098F  1B01               	btfsc	1,6
 15574  0990  3001               	movlw	1
 15575  0991  0021               	movlb	1	; select bank1
 15576  0992  00EA               	movwf	USBCtrlTrfInHandler@lastDTS^(0+128)
 15577                           
 15578                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 15579  0993  3004               	movlw	4
 15580  0994  0023               	movlb	3	; select bank3
 15581  0995  064B               	xorwf	_pBDTEntryIn^(0+384),w
 15582  0996  00CB               	movwf	_pBDTEntryIn^(0+384)
 15583  0997  3000               	movlw	0
 15584  0998  064C               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 15585  0999  00CC               	movwf	(_pBDTEntryIn+1)^(0+384)
 15586                           
 15587                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 15588  099A  3008               	movlw	8
 15589  099B  066B               	xorwf	_USBDeviceState^(0+384),w
 15590  099C  1D03               	btfss	3,2
 15591  099D  29AE               	goto	i1l4789
 15592                           
 15593                           ;usb_device.c: 2605: {
 15594                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 15595  099E  0021               	movlb	1	; select bank1
 15596  099F  0822               	movf	34,w	;volatile
 15597  09A0  397F               	andlw	127
 15598  09A1  003D               	movlb	29	; select bank29
 15599  09A2  0096               	movwf	22	;volatile
 15600                           
 15601                           ;usb_device.c: 2607: if(UADDR != 0u)
 15602  09A3  0816               	movf	22,w	;volatile
 15603  09A4  1903               	btfsc	3,2
 15604  09A5  29A8               	goto	i1l4787
 15605                           
 15606                           ;usb_device.c: 2608: {
 15607                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 15608  09A6  3010               	movlw	16
 15609  09A7  29A9               	goto	L22
 15610  09A8                     i1l4787:	
 15611                           ;usb_device.c: 2610: }
 15612                           
 15613                           
 15614                           ;usb_device.c: 2611: else
 15615                           ;usb_device.c: 2612: {
 15616                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 15617  09A8  3004               	movlw	4
 15618  09A9                     L22:	
 15619  09A9  0021               	movlb	1	; select bank1
 15620  09AA  00E8               	movwf	??_USBCtrlTrfInHandler^(0+128)
 15621  09AB  0868               	movf	??_USBCtrlTrfInHandler^(0+128),w
 15622  09AC  0023               	movlb	3	; select bank3
 15623  09AD  00EB               	movwf	_USBDeviceState^(0+384)
 15624  09AE                     i1l4789:	
 15625                           
 15626                           ;usb_device.c: 2614: }
 15627                           ;usb_device.c: 2615: }
 15628                           ;usb_device.c: 2618: if(controlTransferState == 1)
 15629  09AE  0368               	decf	_controlTransferState^(0+384),w
 15630  09AF  1D03               	btfss	3,2
 15631  09B0  29F3               	goto	i1l570
 15632                           
 15633                           ;usb_device.c: 2619: {
 15634                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
 15635  09B1  30A8               	movlw	168
 15636  09B2  0021               	movlb	1	; select bank1
 15637  09B3  00E8               	movwf	??_USBCtrlTrfInHandler^(0+128)
 15638  09B4  3000               	movlw	0
 15639  09B5  00E9               	movwf	(??_USBCtrlTrfInHandler^(0+128)+1)
 15640  09B6  0023               	movlb	3	; select bank3
 15641  09B7  084B               	movf	_pBDTEntryIn^(0+384),w
 15642  09B8  0086               	movwf	6
 15643  09B9  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15644  09BA  0087               	movwf	7
 15645  09BB  3142               	addfsr 1,2
 15646  09BC  0021               	movlb	1	; select bank1
 15647  09BD  0868               	movf	??_USBCtrlTrfInHandler^(0+128),w
 15648  09BE  3FC0               	movwi [0]fsr1
 15649  09BF  0869               	movf	(??_USBCtrlTrfInHandler^(0+128)+1),w
 15650  09C0  3FC1               	movwi [1]fsr1
 15651                           
 15652                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 15653  09C1  3188  201E  3189   	fcall	_USBCtrlTrfTxService
 15654                           
 15655                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 15656  09C4  3002               	movlw	2
 15657  09C5  0023               	movlb	3	; select bank3
 15658  09C6  0669               	xorwf	_shortPacketStatus^(0+384),w
 15659  09C7  1D03               	btfss	3,2
 15660  09C8  29D5               	goto	i1l4799
 15661                           
 15662                           ;usb_device.c: 2628: {
 15663                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 15664  09C9  084B               	movf	_pBDTEntryIn^(0+384),w
 15665  09CA  0086               	movwf	6
 15666  09CB  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15667  09CC  0087               	movwf	7
 15668  09CD  3004               	movlw	4
 15669  09CE  0081               	movwf	1
 15670                           
 15671                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15672  09CF  084B               	movf	_pBDTEntryIn^(0+384),w
 15673  09D0  0086               	movwf	6
 15674  09D1  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15675  09D2  0087               	movwf	7
 15676  09D3  1781               	bsf	1,7
 15677                           
 15678                           ;usb_device.c: 2633: }
 15679  09D4  0008               	return
 15680  09D5                     i1l4799:	
 15681                           
 15682                           ;usb_device.c: 2634: else
 15683                           ;usb_device.c: 2635: {
 15684                           ;usb_device.c: 2636: if(lastDTS == 0)
 15685  09D5  0021               	movlb	1	; select bank1
 15686  09D6  086A               	movf	USBCtrlTrfInHandler@lastDTS^(0+128),w
 15687  09D7  1D03               	btfss	3,2
 15688  09D8  29E6               	goto	i1l4803
 15689                           
 15690                           ;usb_device.c: 2637: {
 15691                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 15692  09D9  0023               	movlb	3	; select bank3
 15693  09DA  084B               	movf	_pBDTEntryIn^(0+384),w
 15694  09DB  0086               	movwf	6
 15695  09DC  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15696  09DD  0087               	movwf	7
 15697  09DE  3048               	movlw	72
 15698  09DF  0081               	movwf	1
 15699                           
 15700                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15701  09E0  084B               	movf	_pBDTEntryIn^(0+384),w
 15702  09E1  0086               	movwf	6
 15703  09E2  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15704  09E3  0087               	movwf	7
 15705  09E4  1781               	bsf	1,7
 15706                           
 15707                           ;usb_device.c: 2640: }
 15708  09E5  0008               	return
 15709  09E6                     i1l4803:	
 15710                           
 15711                           ;usb_device.c: 2641: else
 15712                           ;usb_device.c: 2642: {
 15713                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 15714  09E6  0023               	movlb	3	; select bank3
 15715  09E7  084B               	movf	_pBDTEntryIn^(0+384),w
 15716  09E8  0086               	movwf	6
 15717  09E9  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15718  09EA  0087               	movwf	7
 15719  09EB  3008               	movlw	8
 15720  09EC  0081               	movwf	1
 15721                           
 15722                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15723  09ED  084B               	movf	_pBDTEntryIn^(0+384),w
 15724  09EE  0086               	movwf	6
 15725  09EF  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15726  09F0  0087               	movwf	7
 15727  09F1  1781               	bsf	1,7
 15728                           
 15729                           ;usb_device.c: 2645: }
 15730                           ;usb_device.c: 2646: }
 15731                           ;usb_device.c: 2647: }
 15732  09F2  0008               	return
 15733  09F3                     i1l570:	
 15734                           
 15735                           ;usb_device.c: 2648: else
 15736                           ;usb_device.c: 2649: {
 15737                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 15738  09F3  0024               	movlb	4	; select bank4
 15739  09F4  1FA2               	btfss	(_outPipes^(0+512)+2),7
 15740  09F5  2A06               	goto	i1l4811
 15741                           
 15742                           ;usb_device.c: 2654: {
 15743                           ;usb_device.c: 2655: if(outPipes[0].pFunc != (0))
 15744  09F6  0825               	movf	(low ((_outPipes| (0+512)+5)))^0,w
 15745  09F7  0426               	iorwf	((low ((_outPipes| (0+512)+5))+1))^0,w
 15746  09F8  1903               	btfsc	3,2
 15747  09F9  2A04               	goto	i1l4809
 15748                           
 15749                           ;usb_device.c: 2656: {
 15750                           ;usb_device.c: 2657: outPipes[0].pFunc();
 15751  09FA  3005               	movlw	5
 15752  09FB  3E20               	addlw	(low (_outPipes| (0+512)))& (0+255)
 15753  09FC  0086               	movwf	6
 15754  09FD  3002               	movlw	2	; select bank4/5
 15755  09FE  0087               	movwf	7
 15756  09FF  3F41               	moviw [1]fsr1
 15757  0A00  008A               	movwf	10
 15758  0A01  3F40               	moviw [0]fsr1
 15759  0A02  000A               	callw
 15760  0A03  3189               	pagesel	$
 15761  0A04                     i1l4809:	
 15762                           
 15763                           ;usb_device.c: 2658: }
 15764                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 15765  0A04  0024               	movlb	4	; select bank4
 15766  0A05  13A2               	bcf	(_outPipes^(0+512)+2),7
 15767  0A06                     i1l4811:	
 15768                           
 15769                           ;usb_device.c: 2660: }
 15770                           ;usb_device.c: 2662: controlTransferState = 0;
 15771  0A06  0023               	movlb	3	; select bank3
 15772  0A07  01E8               	clrf	_controlTransferState^(0+384)
 15773  0A08  0008               	return
 15774  0A09                     __end_of_USBCtrlTrfInHandler:	
 15775                           
 15776                           	psect	text73
 15777  081E                     __ptext73:	
 15778 ;; *************** function _USBCtrlTrfTxService *****************
 15779 ;; Defined at:
 15780 ;;		line 1771 in file "usb/core/usb_device.c"
 15781 ;; Parameters:    Size  Location     Type
 15782 ;;		None
 15783 ;; Auto vars:     Size  Location     Type
 15784 ;;  byteToSend      1    2[COMMON] unsigned char 
 15785 ;; Return value:  Size  Location     Type
 15786 ;;                  1    wreg      void 
 15787 ;; Registers used:
 15788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 15789 ;; Tracked objects:
 15790 ;;		On entry : 0/0
 15791 ;;		On exit  : 0/0
 15792 ;;		Unchanged: 0/0
 15793 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 15794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15796 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15797 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15798 ;;Total ram usage:        3 bytes
 15799 ;; Hardware stack levels used:    1
 15800 ;; This function calls:
 15801 ;;		Nothing
 15802 ;; This function is called by:
 15803 ;;		_USBCtrlEPAllowDataStage
 15804 ;;		_USBCtrlTrfInHandler
 15805 ;; This function uses a non-reentrant model
 15806 ;;
 15807                           
 15808                           
 15809                           ;psect for function _USBCtrlTrfTxService
 15810  081E                     _USBCtrlTrfTxService:	
 15811                           
 15812                           ;usb_device.c: 1773: uint8_t byteToSend;
 15813                           ;usb_device.c: 1777: byteToSend = 8;
 15814                           
 15815                           ;incstack = 0
 15816                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 15817  081E  3008               	movlw	8
 15818  081F  00F0               	movwf	??_USBCtrlTrfTxService
 15819  0820  0870               	movf	??_USBCtrlTrfTxService,w
 15820  0821  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 15821                           
 15822                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 15823  0822  3000               	movlw	0
 15824  0823  0023               	movlb	3	; select bank3
 15825  0824  0259               	subwf	((_inPipes+1)^(0+384)+3),w
 15826  0825  3008               	movlw	8
 15827  0826  1903               	skipnz
 15828  0827  0258               	subwf	(_inPipes^(0+384)+3),w
 15829  0828  1803               	skipnc
 15830  0829  283B               	goto	i1l470
 15831                           
 15832                           ;usb_device.c: 1779: {
 15833                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 15834  082A  0858               	movf	(_inPipes^(0+384)+3),w
 15835  082B  00F0               	movwf	??_USBCtrlTrfTxService
 15836  082C  0870               	movf	??_USBCtrlTrfTxService,w
 15837  082D  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 15838                           
 15839                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 15840  082E  0869               	movf	_shortPacketStatus^(0+384),w
 15841  082F  1D03               	btfss	3,2
 15842  0830  2834               	goto	i1l4173
 15843                           
 15844                           ;usb_device.c: 1788: {
 15845                           ;usb_device.c: 1789: shortPacketStatus = 1;
 15846  0831  01E9               	clrf	_shortPacketStatus^(0+384)
 15847  0832  0AE9               	incf	_shortPacketStatus^(0+384),f
 15848                           
 15849                           ;usb_device.c: 1790: }
 15850  0833  283B               	goto	i1l470
 15851  0834                     i1l4173:	
 15852                           
 15853                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 15854  0834  0369               	decf	_shortPacketStatus^(0+384),w
 15855  0835  1D03               	btfss	3,2
 15856  0836  283B               	goto	i1l470
 15857                           
 15858                           ;usb_device.c: 1792: {
 15859                           ;usb_device.c: 1793: shortPacketStatus = 2;
 15860  0837  3002               	movlw	2
 15861  0838  00F0               	movwf	??_USBCtrlTrfTxService
 15862  0839  0870               	movf	??_USBCtrlTrfTxService,w
 15863  083A  00E9               	movwf	_shortPacketStatus^(0+384)
 15864  083B                     i1l470:	
 15865                           
 15866                           ;usb_device.c: 1794: }
 15867                           ;usb_device.c: 1795: }
 15868                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 15869  083B  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 15870  083C  00F0               	movwf	??_USBCtrlTrfTxService
 15871  083D  01F1               	clrf	??_USBCtrlTrfTxService+1
 15872  083E  0870               	movf	??_USBCtrlTrfTxService,w
 15873  083F  02D8               	subwf	(_inPipes^(0+384)+3),f
 15874  0840  0871               	movf	??_USBCtrlTrfTxService+1,w
 15875  0841  3BD9               	subwfb	((_inPipes+1)^(0+384)+3),f
 15876                           
 15877                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 15878  0842  084B               	movf	_pBDTEntryIn^(0+384),w
 15879  0843  3E01               	addlw	1
 15880  0844  00F0               	movwf	??_USBCtrlTrfTxService
 15881  0845  3000               	movlw	0
 15882  0846  3D4C               	addwfc	(_pBDTEntryIn+1)^(0+384),w
 15883  0847  00F1               	movwf	??_USBCtrlTrfTxService+1
 15884  0848  0870               	movf	??_USBCtrlTrfTxService,w
 15885  0849  0086               	movwf	6
 15886  084A  0871               	movf	??_USBCtrlTrfTxService+1,w
 15887  084B  0087               	movwf	7
 15888  084C  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 15889  084D  0081               	movwf	1
 15890                           
 15891                           ;usb_device.c: 1808: pDst = ( uint8_t*)CtrlTrfData;
 15892  084E  30A8               	movlw	168
 15893  084F  00F0               	movwf	??_USBCtrlTrfTxService
 15894  0850  0870               	movf	??_USBCtrlTrfTxService,w
 15895  0851  0024               	movlb	4	; select bank4
 15896  0852  00DC               	movwf	_pDst^(0+512)
 15897                           
 15898                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 15899  0853  0023               	movlb	3	; select bank3
 15900  0854  1C57               	btfss	(_inPipes^(0+384)+2),0
 15901  0855  2870               	goto	i1l4193
 15902  0856  288D               	goto	i1l4203
 15903  0857                     i1l4185:	
 15904                           ;usb_device.c: 1810: {
 15905                           ;usb_device.c: 1811: while(byteToSend)
 15906                           
 15907                           
 15908                           ;usb_device.c: 1812: {
 15909                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 15910  0857  0023               	movlb	3	; select bank3
 15911  0858  0855               	movf	_inPipes^(0+384),w
 15912  0859  0084               	movwf	4
 15913  085A  0856               	movf	(_inPipes+1)^(0+384),w
 15914  085B  0085               	movwf	5
 15915  085C  0800               	movf	0,w	;code access
 15916  085D  00F0               	movwf	??_USBCtrlTrfTxService
 15917  085E  0024               	movlb	4	; select bank4
 15918  085F  085C               	movf	_pDst^(0+512),w
 15919  0860  0086               	movwf	6
 15920  0861  0187               	clrf	7
 15921  0862  0870               	movf	??_USBCtrlTrfTxService,w
 15922  0863  0081               	movwf	1
 15923  0864  3001               	movlw	1
 15924  0865  0023               	movlb	3	; select bank3
 15925  0866  07D5               	addwf	_inPipes^(0+384),f
 15926  0867  3000               	movlw	0
 15927  0868  3DD6               	addwfc	(_inPipes+1)^(0+384),f
 15928  0869  3001               	movlw	1
 15929  086A  00F0               	movwf	??_USBCtrlTrfTxService
 15930  086B  0870               	movf	??_USBCtrlTrfTxService,w
 15931  086C  0024               	movlb	4	; select bank4
 15932  086D  07DC               	addwf	_pDst^(0+512),f
 15933                           
 15934                           ;usb_device.c: 1814: byteToSend--;
 15935  086E  3001               	movlw	1
 15936  086F  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 15937  0870                     i1l4193:	
 15938  0870  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 15939  0871  1903               	btfsc	3,2
 15940  0872  0008               	return
 15941  0873  2857               	goto	i1l4185
 15942  0874                     i1l4195:	
 15943                           ;usb_device.c: 1817: else
 15944                           ;usb_device.c: 1818: {
 15945                           ;usb_device.c: 1819: while(byteToSend)
 15946                           
 15947                           ;usb_device.c: 1815: }
 15948                           ;usb_device.c: 1816: }
 15949                           
 15950                           
 15951                           ;usb_device.c: 1820: {
 15952                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 15953  0874  0023               	movlb	3	; select bank3
 15954  0875  0855               	movf	_inPipes^(0+384),w
 15955  0876  0084               	movwf	4
 15956  0877  0856               	movf	(_inPipes+1)^(0+384),w
 15957  0878  0085               	movwf	5
 15958  0879  0800               	movf	0,w	;code access
 15959  087A  00F0               	movwf	??_USBCtrlTrfTxService
 15960  087B  0024               	movlb	4	; select bank4
 15961  087C  085C               	movf	_pDst^(0+512),w
 15962  087D  0086               	movwf	6
 15963  087E  0187               	clrf	7
 15964  087F  0870               	movf	??_USBCtrlTrfTxService,w
 15965  0880  0081               	movwf	1
 15966  0881  3001               	movlw	1
 15967  0882  0023               	movlb	3	; select bank3
 15968  0883  07D5               	addwf	_inPipes^(0+384),f
 15969  0884  3000               	movlw	0
 15970  0885  3DD6               	addwfc	(_inPipes+1)^(0+384),f
 15971  0886  3001               	movlw	1
 15972  0887  00F0               	movwf	??_USBCtrlTrfTxService
 15973  0888  0870               	movf	??_USBCtrlTrfTxService,w
 15974  0889  0024               	movlb	4	; select bank4
 15975  088A  07DC               	addwf	_pDst^(0+512),f
 15976                           
 15977                           ;usb_device.c: 1822: byteToSend--;
 15978  088B  3001               	movlw	1
 15979  088C  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 15980  088D                     i1l4203:	
 15981  088D  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 15982  088E  1903               	btfsc	3,2
 15983  088F  0008               	return
 15984  0890  2874               	goto	i1l4195
 15985  0891                     __end_of_USBCtrlTrfTxService:	
 15986                           
 15987                           	psect	text74
 15988  12C3                     __ptext74:	
 15989 ;; *************** function _USART_mySetLineCodingHandler *****************
 15990 ;; Defined at:
 15991 ;;		line 92 in file "app_uart_usb_utils.c"
 15992 ;; Parameters:    Size  Location     Type
 15993 ;;		None
 15994 ;; Auto vars:     Size  Location     Type
 15995 ;;  dwBaud          4    4[BANK1 ] unsigned long 
 15996 ;; Return value:  Size  Location     Type
 15997 ;;                  1    wreg      void 
 15998 ;; Registers used:
 15999 ;;		wreg, status,2, status,0, pclath, cstack
 16000 ;; Tracked objects:
 16001 ;;		On entry : 0/0
 16002 ;;		On exit  : 0/0
 16003 ;;		Unchanged: 0/0
 16004 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 16005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16006 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0
 16007 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0
 16008 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0
 16009 ;;Total ram usage:        8 bytes
 16010 ;; Hardware stack levels used:    1
 16011 ;; Hardware stack levels required when called:    1
 16012 ;; This function calls:
 16013 ;;		i1___lldiv
 16014 ;; This function is called by:
 16015 ;;		_USBCheckCDCRequest2
 16016 ;;		_USBCtrlTrfRxService
 16017 ;;		_USBCtrlTrfInHandler
 16018 ;; This function uses a non-reentrant model
 16019 ;;
 16020                           
 16021                           
 16022                           ;psect for function _USART_mySetLineCodingHandler
 16023  12C3                     _USART_mySetLineCodingHandler:	
 16024                           
 16025                           ;app_uart_usb_utils.c: 116: {line_coding2.dwDTERate=cdc_notice2.GetLineCoding.dwDTERate;
      +                          };
 16026                           
 16027                           ;incstack = 0
 16028                           ; Regs used in _USART_mySetLineCodingHandler: [wreg+status,2+status,0+pclath+cstack]
 16029  12C3  0025               	movlb	5	; select bank5
 16030  12C4  084D               	movf	(_cdc_notice2+3)^(0+640),w
 16031  12C5  00E7               	movwf	(_line_coding2+3)^(0+640)
 16032  12C6  084C               	movf	(_cdc_notice2+2)^(0+640),w
 16033  12C7  00E6               	movwf	(_line_coding2+2)^(0+640)
 16034  12C8  084B               	movf	(_cdc_notice2+1)^(0+640),w
 16035  12C9  00E5               	movwf	(_line_coding2+1)^(0+640)
 16036  12CA  084A               	movf	_cdc_notice2^(0+640),w
 16037  12CB  00E4               	movwf	_line_coding2^(0+640)
 16038                           
 16039                           ;app_uart_usb_utils.c: 118: uint32_t dwBaud;
 16040                           ;app_uart_usb_utils.c: 119: dwBaud = ((48000000/4) / line_coding2.dwDTERate) - 1;
 16041  12CC  0867               	movf	(_line_coding2+3)^(0+640),w
 16042  12CD  00F3               	movwf	i1___lldiv@divisor+3
 16043  12CE  0866               	movf	(_line_coding2+2)^(0+640),w
 16044  12CF  00F2               	movwf	i1___lldiv@divisor+2
 16045  12D0  0865               	movf	(_line_coding2+1)^(0+640),w
 16046  12D1  00F1               	movwf	i1___lldiv@divisor+1
 16047  12D2  0864               	movf	_line_coding2^(0+640),w
 16048  12D3  00F0               	movwf	i1___lldiv@divisor
 16049  12D4  3000               	movlw	0
 16050  12D5  00F7               	movwf	i1___lldiv@dividend+3
 16051  12D6  30B7               	movlw	183
 16052  12D7  00F6               	movwf	i1___lldiv@dividend+2
 16053  12D8  301B               	movlw	27
 16054  12D9  00F5               	movwf	i1___lldiv@dividend+1
 16055  12DA  3000               	movlw	0
 16056  12DB  00F4               	movwf	i1___lldiv@dividend
 16057  12DC  3193  2354  3192   	fcall	i1___lldiv
 16058  12DF  30FF               	movlw	255
 16059  12E0  0770               	addwf	?i1___lldiv,w
 16060  12E1  0021               	movlb	1	; select bank1
 16061  12E2  00E4               	movwf	USART_mySetLineCodingHandler@dwBaud^(0+128)
 16062  12E3  30FF               	movlw	255
 16063  12E4  3D71               	addwfc	?i1___lldiv+1,w
 16064  12E5  00E5               	movwf	(USART_mySetLineCodingHandler@dwBaud+1)^(0+128)
 16065  12E6  30FF               	movlw	255
 16066  12E7  3D72               	addwfc	?i1___lldiv+2,w
 16067  12E8  00E6               	movwf	(USART_mySetLineCodingHandler@dwBaud+2)^(0+128)
 16068  12E9  30FF               	movlw	255
 16069  12EA  3D73               	addwfc	?i1___lldiv+3,w
 16070  12EB  00E7               	movwf	(USART_mySetLineCodingHandler@dwBaud+3)^(0+128)
 16071                           
 16072                           ;app_uart_usb_utils.c: 120: SPBRG = (uint8_t) dwBaud;
 16073  12EC  0864               	movf	USART_mySetLineCodingHandler@dwBaud^(0+128),w
 16074  12ED  00E0               	movwf	??_USART_mySetLineCodingHandler^(0+128)
 16075  12EE  01E1               	clrf	(??_USART_mySetLineCodingHandler^(0+128)+1)
 16076  12EF  0860               	movf	??_USART_mySetLineCodingHandler^(0+128),w
 16077  12F0  0023               	movlb	3	; select bank3
 16078  12F1  009B               	movwf	27	;volatile
 16079  12F2  0021               	movlb	1	; select bank1
 16080  12F3  0861               	movf	(??_USART_mySetLineCodingHandler+1)^(0+128),w
 16081  12F4  0023               	movlb	3	; select bank3
 16082  12F5  009C               	movwf	28	;volatile
 16083                           
 16084                           ;app_uart_usb_utils.c: 121: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 16085  12F6  0021               	movlb	1	; select bank1
 16086  12F7  0864               	movf	USART_mySetLineCodingHandler@dwBaud^(0+128),w
 16087  12F8  00E0               	movwf	??_USART_mySetLineCodingHandler^(0+128)
 16088  12F9  0865               	movf	(USART_mySetLineCodingHandler@dwBaud+1)^(0+128),w
 16089  12FA  00E1               	movwf	(??_USART_mySetLineCodingHandler^(0+128)+1)
 16090  12FB  0866               	movf	(USART_mySetLineCodingHandler@dwBaud+2)^(0+128),w
 16091  12FC  00E2               	movwf	(??_USART_mySetLineCodingHandler^(0+128)+2)
 16092  12FD  0867               	movf	(USART_mySetLineCodingHandler@dwBaud+3)^(0+128),w
 16093  12FE  00E3               	movwf	(??_USART_mySetLineCodingHandler^(0+128)+3)
 16094  12FF  3008               	movlw	8
 16095  1300                     u383_25:	
 16096  1300  36E3               	lsrf	(??_USART_mySetLineCodingHandler^(0+128)+3),f
 16097  1301  0CE2               	rrf	(??_USART_mySetLineCodingHandler^(0+128)+2),f
 16098  1302  0CE1               	rrf	(??_USART_mySetLineCodingHandler^(0+128)+1),f
 16099  1303  0CE0               	rrf	??_USART_mySetLineCodingHandler^(0+128),f
 16100  1304  0B89               	decfsz	9,f
 16101  1305  2B00               	goto	u383_25
 16102  1306  0860               	movf	??_USART_mySetLineCodingHandler^(0+128),w
 16103  1307  0023               	movlb	3	; select bank3
 16104  1308  009C               	movwf	28	;volatile
 16105  1309  0008               	return
 16106  130A                     __end_of_USART_mySetLineCodingHandler:	
 16107                           
 16108                           	psect	text75
 16109  1354                     __ptext75:	
 16110 ;; *************** function i1___lldiv *****************
 16111 ;; Defined at:
 16112 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 16113 ;; Parameters:    Size  Location     Type
 16114 ;;  divisor         4    0[COMMON] unsigned long 
 16115 ;;  dividend        4    4[COMMON] unsigned long 
 16116 ;; Auto vars:     Size  Location     Type
 16117 ;;  __lldiv         4    9[COMMON] unsigned long 
 16118 ;;  __lldiv         1   13[COMMON] unsigned char 
 16119 ;; Return value:  Size  Location     Type
 16120 ;;                  4    0[COMMON] unsigned long 
 16121 ;; Registers used:
 16122 ;;		wreg, status,2, status,0
 16123 ;; Tracked objects:
 16124 ;;		On entry : 0/0
 16125 ;;		On exit  : 0/0
 16126 ;;		Unchanged: 0/0
 16127 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 16128 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16129 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16131 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16132 ;;Total ram usage:       14 bytes
 16133 ;; Hardware stack levels used:    1
 16134 ;; This function calls:
 16135 ;;		Nothing
 16136 ;; This function is called by:
 16137 ;;		_USART_mySetLineCodingHandler
 16138 ;; This function uses a non-reentrant model
 16139 ;;
 16140                           
 16141                           
 16142                           ;psect for function i1___lldiv
 16143  1354                     i1___lldiv:	
 16144                           
 16145                           ;incstack = 0
 16146                           ; Regs used in i1___lldiv: [wreg+status,2+status,0]
 16147  1354  3000               	movlw	0
 16148  1355  00FC               	movwf	i1___lldiv@quotient+3
 16149  1356  3000               	movlw	0
 16150  1357  00FB               	movwf	i1___lldiv@quotient+2
 16151  1358  3000               	movlw	0
 16152  1359  00FA               	movwf	i1___lldiv@quotient+1
 16153  135A  3000               	movlw	0
 16154  135B  00F9               	movwf	i1___lldiv@quotient
 16155  135C  0873               	movf	i1___lldiv@divisor+3,w
 16156  135D  0472               	iorwf	i1___lldiv@divisor+2,w
 16157  135E  0471               	iorwf	i1___lldiv@divisor+1,w
 16158  135F  0470               	iorwf	i1___lldiv@divisor,w
 16159  1360  1903               	skipnz
 16160  1361  2B9D               	goto	i1l4225
 16161  1362  01FD               	clrf	i1___lldiv@counter
 16162  1363  0AFD               	incf	i1___lldiv@counter,f
 16163  1364                     i1l4211:	
 16164  1364  1BF3               	btfsc	i1___lldiv@divisor+3,7
 16165  1365  2B72               	goto	i1l4213
 16166  1366  3001               	movlw	1
 16167  1367                     u339_25:	
 16168  1367  35F0               	lslf	i1___lldiv@divisor,f
 16169  1368  0DF1               	rlf	i1___lldiv@divisor+1,f
 16170  1369  0DF2               	rlf	i1___lldiv@divisor+2,f
 16171  136A  0DF3               	rlf	i1___lldiv@divisor+3,f
 16172  136B  0B89               	decfsz	9,f
 16173  136C  2B67               	goto	u339_25
 16174  136D  3001               	movlw	1
 16175  136E  00F8               	movwf	??i1___lldiv
 16176  136F  0878               	movf	??i1___lldiv,w
 16177  1370  07FD               	addwf	i1___lldiv@counter,f
 16178  1371  2B64               	goto	i1l4211
 16179  1372                     i1l4213:	
 16180  1372  3001               	movlw	1
 16181  1373                     u341_25:	
 16182  1373  35F9               	lslf	i1___lldiv@quotient,f
 16183  1374  0DFA               	rlf	i1___lldiv@quotient+1,f
 16184  1375  0DFB               	rlf	i1___lldiv@quotient+2,f
 16185  1376  0DFC               	rlf	i1___lldiv@quotient+3,f
 16186  1377  0B89               	decfsz	9,f
 16187  1378  2B73               	goto	u341_25
 16188  1379  0873               	movf	i1___lldiv@divisor+3,w
 16189  137A  0277               	subwf	i1___lldiv@dividend+3,w
 16190  137B  1D03               	skipz
 16191  137C  2B87               	goto	u342_25
 16192  137D  0872               	movf	i1___lldiv@divisor+2,w
 16193  137E  0276               	subwf	i1___lldiv@dividend+2,w
 16194  137F  1D03               	skipz
 16195  1380  2B87               	goto	u342_25
 16196  1381  0871               	movf	i1___lldiv@divisor+1,w
 16197  1382  0275               	subwf	i1___lldiv@dividend+1,w
 16198  1383  1D03               	skipz
 16199  1384  2B87               	goto	u342_25
 16200  1385  0870               	movf	i1___lldiv@divisor,w
 16201  1386  0274               	subwf	i1___lldiv@dividend,w
 16202  1387                     u342_25:	
 16203  1387  1C03               	skipc
 16204  1388  2B92               	goto	i1l4221
 16205  1389  0870               	movf	i1___lldiv@divisor,w
 16206  138A  02F4               	subwf	i1___lldiv@dividend,f
 16207  138B  0871               	movf	i1___lldiv@divisor+1,w
 16208  138C  3BF5               	subwfb	i1___lldiv@dividend+1,f
 16209  138D  0872               	movf	i1___lldiv@divisor+2,w
 16210  138E  3BF6               	subwfb	i1___lldiv@dividend+2,f
 16211  138F  0873               	movf	i1___lldiv@divisor+3,w
 16212  1390  3BF7               	subwfb	i1___lldiv@dividend+3,f
 16213  1391  1479               	bsf	i1___lldiv@quotient,0
 16214  1392                     i1l4221:	
 16215  1392  3001               	movlw	1
 16216  1393                     u343_25:	
 16217  1393  36F3               	lsrf	i1___lldiv@divisor+3,f
 16218  1394  0CF2               	rrf	i1___lldiv@divisor+2,f
 16219  1395  0CF1               	rrf	i1___lldiv@divisor+1,f
 16220  1396  0CF0               	rrf	i1___lldiv@divisor,f
 16221  1397  0B89               	decfsz	9,f
 16222  1398  2B93               	goto	u343_25
 16223  1399  3001               	movlw	1
 16224  139A  02FD               	subwf	i1___lldiv@counter,f
 16225  139B  1D03               	btfss	3,2
 16226  139C  2B72               	goto	i1l4213
 16227  139D                     i1l4225:	
 16228  139D  087C               	movf	i1___lldiv@quotient+3,w
 16229  139E  00F3               	movwf	?i1___lldiv+3
 16230  139F  087B               	movf	i1___lldiv@quotient+2,w
 16231  13A0  00F2               	movwf	?i1___lldiv+2
 16232  13A1  087A               	movf	i1___lldiv@quotient+1,w
 16233  13A2  00F1               	movwf	?i1___lldiv+1
 16234  13A3  0879               	movf	i1___lldiv@quotient,w
 16235  13A4  00F0               	movwf	?i1___lldiv
 16236  13A5  0008               	return
 16237  13A6                     __end_ofi1___lldiv:	
 16238                           
 16239                           	psect	text76
 16240  108E                     __ptext76:	
 16241 ;; *************** function _ADC_SelectChannel *****************
 16242 ;; Defined at:
 16243 ;;		line 87 in file "mcc_generated_files/adc.c"
 16244 ;; Parameters:    Size  Location     Type
 16245 ;;  channel         1    wreg     enum E2468
 16246 ;; Auto vars:     Size  Location     Type
 16247 ;;  channel         1    1[COMMON] enum E2468
 16248 ;; Return value:  Size  Location     Type
 16249 ;;                  1    wreg      void 
 16250 ;; Registers used:
 16251 ;;		wreg, status,2, status,0
 16252 ;; Tracked objects:
 16253 ;;		On entry : 0/0
 16254 ;;		On exit  : 0/0
 16255 ;;		Unchanged: 0/0
 16256 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 16257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16261 ;;Total ram usage:        2 bytes
 16262 ;; Hardware stack levels used:    1
 16263 ;; This function calls:
 16264 ;;		Nothing
 16265 ;; This function is called by:
 16266 ;;		_INTERRUPT_InterruptManager
 16267 ;; This function uses a non-reentrant model
 16268 ;;
 16269                           
 16270                           
 16271                           ;psect for function _ADC_SelectChannel
 16272  108E                     _ADC_SelectChannel:	
 16273                           
 16274                           ;incstack = 0
 16275                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 16276                           ;ADC_SelectChannel@channel stored from wreg
 16277  108E  00F1               	movwf	ADC_SelectChannel@channel
 16278                           
 16279                           ;adc.c: 90: ADCON0bits.CHS = channel;
 16280  108F  0871               	movf	ADC_SelectChannel@channel,w
 16281  1090  00F0               	movwf	??_ADC_SelectChannel
 16282  1091  0DF0               	rlf	??_ADC_SelectChannel,f
 16283  1092  0DF0               	rlf	??_ADC_SelectChannel,f
 16284  1093  0021               	movlb	1	; select bank1
 16285  1094  081D               	movf	29,w	;volatile
 16286  1095  0670               	xorwf	??_ADC_SelectChannel,w
 16287  1096  3983               	andlw	-125
 16288  1097  0670               	xorwf	??_ADC_SelectChannel,w
 16289  1098  009D               	movwf	29	;volatile
 16290                           
 16291                           ;adc.c: 92: ADCON0bits.ADON = 1;
 16292  1099  141D               	bsf	29,0	;volatile
 16293  109A  0008               	return
 16294  109B                     __end_of_ADC_SelectChannel:	
 16295                           
 16296                           	psect	text77
 16297  1ECD                     __ptext77:	
 16298 ;; *************** function _ADC_IsConversionDone *****************
 16299 ;; Defined at:
 16300 ;;		line 102 in file "mcc_generated_files/adc.c"
 16301 ;; Parameters:    Size  Location     Type
 16302 ;;		None
 16303 ;; Auto vars:     Size  Location     Type
 16304 ;;		None
 16305 ;; Return value:  Size  Location     Type
 16306 ;;                  1    wreg      unsigned char 
 16307 ;; Registers used:
 16308 ;;		wreg, status,0
 16309 ;; Tracked objects:
 16310 ;;		On entry : 0/0
 16311 ;;		On exit  : 0/0
 16312 ;;		Unchanged: 0/0
 16313 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 16314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16318 ;;Total ram usage:        0 bytes
 16319 ;; Hardware stack levels used:    1
 16320 ;; This function calls:
 16321 ;;		Nothing
 16322 ;; This function is called by:
 16323 ;;		_INTERRUPT_InterruptManager
 16324 ;; This function uses a non-reentrant model
 16325 ;;
 16326                           
 16327                           
 16328                           ;psect for function _ADC_IsConversionDone
 16329  1ECD                     _ADC_IsConversionDone:	
 16330                           
 16331                           ;adc.c: 105: return (!ADCON0bits.GO_nDONE);
 16332                           
 16333                           ;incstack = 0
 16334                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
 16335  1ECD  1003               	clrc
 16336  1ECE  0021               	movlb	1	; select bank1
 16337  1ECF  1C9D               	btfss	29,1	;volatile
 16338  1ED0  1403               	setc
 16339  1ED1  3000               	movlw	0
 16340  1ED2  3D09               	addwfc	9,w
 16341  1ED3  0008               	return
 16342  1ED4                     __end_of_ADC_IsConversionDone:	
 16343                           
 16344                           	psect	text78
 16345  1EBB                     __ptext78:	
 16346 ;; *************** function _ADC_GetConversionResult *****************
 16347 ;; Defined at:
 16348 ;;		line 108 in file "mcc_generated_files/adc.c"
 16349 ;; Parameters:    Size  Location     Type
 16350 ;;		None
 16351 ;; Auto vars:     Size  Location     Type
 16352 ;;		None
 16353 ;; Return value:  Size  Location     Type
 16354 ;;                  2    0[COMMON] unsigned int 
 16355 ;; Registers used:
 16356 ;;		wreg
 16357 ;; Tracked objects:
 16358 ;;		On entry : 0/0
 16359 ;;		On exit  : 0/0
 16360 ;;		Unchanged: 0/0
 16361 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 16362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16366 ;;Total ram usage:        2 bytes
 16367 ;; Hardware stack levels used:    1
 16368 ;; This function calls:
 16369 ;;		Nothing
 16370 ;; This function is called by:
 16371 ;;		_INTERRUPT_InterruptManager
 16372 ;; This function uses a non-reentrant model
 16373 ;;
 16374                           
 16375                           
 16376                           ;psect for function _ADC_GetConversionResult
 16377  1EBB                     _ADC_GetConversionResult:	
 16378                           
 16379                           ;adc.c: 111: return ((ADRESH << 8) + ADRESL);
 16380                           
 16381                           ;incstack = 0
 16382                           ; Regs used in _ADC_GetConversionResult: [wreg]
 16383  1EBB  0021               	movlb	1	; select bank1
 16384  1EBC  081C               	movf	28,w	;volatile
 16385  1EBD  00F1               	movwf	?_ADC_GetConversionResult+1
 16386  1EBE  081B               	movf	27,w	;volatile
 16387  1EBF  00F0               	movwf	?_ADC_GetConversionResult
 16388  1EC0  0008               	return
 16389  1EC1                     __end_of_ADC_GetConversionResult:	
 16390  007E                     btemp	set	126	;btemp
 16391  007E                     int$flags	set	126
 16392  007E                     wtemp0	set	126


Data Sizes:
    Strings     39
    Constant    459
    Data        4
    BSS         572
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK1            16     16      16
    BANK2            16     14      16
    BANK3            80     43      80
    BANK4            80      0      78
    BANK5            80      0      75
    BANK6            80      0      64
    BANK7            80      0      64
    BANK8            80      0      64
    BANK9            80      0      64
    BANK10           80      0      64
    BANK11           80      0      64
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> STR_1(CODE[39]), errorMsg(CODE[13]), CtrlTrfData(BANK1[8]), RAM(DATA[4096]), 
		 -> SetupPkt(BANK1[8]), 

    __builtin_memcpy$0	PTR void  size(2) Largest target is 64
		 -> writeStatusBuffer(BANK7[64]), writeBuffer(BANK9[64]), SetupPkt(BANK1[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK3[1]), USBActiveConfiguration(BANK3[1]), NULL(NULL[0]), 
		 -> BDT(ABS[80]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    memset@p1	PTR void  size(2) Largest target is 80
		 -> cmdRxBuffer(BANK6[64]), USBAlternateInterface(BANK4[2]), BDT(ABS[80]), 

    memset@p	PTR unsigned char  size(2) Largest target is 80
		 -> cmdRxBuffer(BANK6[64]), USBAlternateInterface(BANK4[2]), BDT(ABS[80]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdRxBuffer(BANK6[64]), 

    my_uitoa@str	PTR unsigned char  size(1) Largest target is 64
		 -> writeStatusBuffer(BANK7[64]), 

    main_SetDcDcRegulator@pI_mA	PTR long  size(1) Largest target is 4
		 -> MAIN_Iout_limit_mA(BANK4[4]), 

    main_SetDcDcRegulator@pU_mV	PTR long  size(1) Largest target is 4
		 -> MAIN_Uout_target_mV(BANK4[4]), 

    putUSBUSART2@data	PTR unsigned char  size(1) Largest target is 64
		 -> USB_Out_Buffer(BANK8[64]), 

    getsUSBUSART2@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> RS232_Out_Data(BANK11[64]), 

    CDCDataInHandle2	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    CDCDataOutHandle2	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    pCDCDst2.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst2.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst2.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst2.bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc2.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc2.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc2.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc2.bRam	PTR unsigned char  size(1) Largest target is 0

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeStatusBuffer(BANK7[64]), writeBuffer(BANK9[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK10[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S2061_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S2061_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S2061_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S2061_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    USB_SD_Ptr	const PTR const unsigned char [5] size(2) Largest target is 52
		 -> sd004(CODE[50]), sd003(CODE[52]), sd002(CODE[50]), sd001(CODE[22]), 
		 -> sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [2] size(2) Largest target is 141
		 -> configDescriptor1(CODE[141]), 

    sp__memset	PTR void  size(2) Largest target is 80
		 -> cmdRxBuffer(BANK6[64]), USBAlternateInterface(BANK4[2]), BDT(ABS[80]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK1[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 80
		 -> BDT(ABS[80]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 80
		 -> NULL(NULL[0]), BDT(ABS[80]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx2(ABS[64]), cdc_data_rx2(ABS[64]), cdc_data_tx(ABS[64]), cdc_data_rx(BANK2[64]), 
		 -> NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[5] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    pBDTEntryIn	PTR volatile struct __BDT[5] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    S558$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), Absolute function(), 

    S548$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S548$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S524$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S524$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S524$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S524$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _main_CDC_to_RS485_Tasks->_CDCTxService2
    _main_CDC_to_RS485_Tasks->_getsUSBUSART2
    _getsUSBUSART2->i1_USBTransferOnePacket
    _CDCTxService2->i1_USBTransferOnePacket
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->_CDCInitEP
    _USER_USB_CALLBACK_EVENT_HANDLER->_CDCInitEP2
    _CDCInitEP2->_USBEnableEndpoint
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USART_mySetLineCodingHandler->i1___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _main_CDC_to_RS485_Tasks->_getsUSBUSART2
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _main in BANK3

    _main->_main_CommunicationHandler
    _main_CommunicationHandler->_main_SetDcDcRegulator
    _my_uitoa->___wmul
    _main_SetDcDcRegulator->_main_switchStepUp_Down
    _main_switchStepUp_Down->___aldiv
    ___aldiv->___lmul
    ___lldiv->___lmul
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   44459
                                             42 BANK3      1     1      0
                _ADC_StartConversion
                  _SYSTEM_Initialize
                    _TMR1_StartTimer
                      _USBDeviceInit
          _main_CommunicationHandler
              _main_SetDcDcRegulator
         _main_overcurrentProtection
 ---------------------------------------------------------------------------------
 (1) _main_overcurrentProtection                           2     2      0       0
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _main_CommunicationHandler                            4     4      0   38214
                                             38 BANK3      4     4      0
                       _CDCTxService
                        _TMR1_Reload
                            ___lldiv
                             ___lmul
                             ___wmul
                               _atoi
                       _getsUSBUSART
              _main_SetDcDcRegulator
                             _memset
                           _my_uitoa
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          4     1      3     296
                                              0 BANK3      4     1      3
 ---------------------------------------------------------------------------------
 (2) _my_uitoa                                            16    14      2    8153
                                              6 BANK3     16    14      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     850
                                              0 BANK3      8     2      6
 ---------------------------------------------------------------------------------
 (1) _main_SetDcDcRegulator                                6     5      1    5973
                                             32 BANK3      6     5      1
                            ___aldiv
                            ___lldiv
                             ___lmul
             _main_switchStepUp_Down
 ---------------------------------------------------------------------------------
 (2) _main_switchStepUp_Down                               5     1      4    2630
                                             27 BANK3      5     1      4
                 _PWM2_LoadDutyValue
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     982
                                              0 BANK3     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    1012
                                             12 BANK3     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _PWM2_LoadDutyValue                                   4     2      2     437
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     644
                                             12 BANK3     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     3      1    2848
                                             11 BANK3      4     3      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    7976
                                              6 BANK3      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    7608
                                              0 BANK3      6     2      4
 ---------------------------------------------------------------------------------
 (2) _TMR1_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         3     3      0    2793
                                             11 BANK3      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    2656
                                              0 BANK3     11     7      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        5     5      0     272
                                              0 BANK3      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           9     9      0   47573
                                              5 BANK2      9     9      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                     _USBDeviceTasks
            _main_CDC_to_RS485_Tasks
              i1_ADC_StartConversion
               i1_PWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (6) i1_PWM2_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) i1_ADC_StartConversion                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _main_CDC_to_RS485_Tasks                              2     2      0    2076
                                              1 BANK1      2     2      0
                      _CDCTxService2
                    _USART_getcUSART
                    _USART_putcUSART
                      _getsUSBUSART2
                       _putUSBUSART2
 ---------------------------------------------------------------------------------
 (7) _putUSBUSART2                                         3     2      1     169
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (7) _getsUSBUSART2                                        4     3      1     958
                                             11 COMMON     3     2      1
                                              0 BANK1      1     1      0
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USART_putcUSART                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USART_getcUSART                                      2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _CDCTxService2                                        3     3      0     903
                                             11 COMMON     3     3      0
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _USBDeviceTasks                                       3     3      0   45310
                                             15 BANK1      1     1      0
                                              3 BANK2      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (7) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (7) _USBWakeFromSuspend                                   1     1      0    6182
                                              6 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBSuspend                                           1     1      0    6182
                                              6 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBIncrement1msInternalTimers                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPService                                     3     3      0   26446
                                              0 BANK2      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfSetupHandler                               1     1      0   25699
                                             14 BANK1      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowDataStage                             2     2      0      92
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCheckStdRequest                                   1     1      0   19425
                                             13 BANK1      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStdSetCfgHandler                                 5     5      0    6544
                                              6 BANK1      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (11) i1_memset                                            8     2      6     202
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (10) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (10) _USBStdGetDscHandler                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (10) _USBStdFeatureReqHandler                             7     7      0    6653
                                              6 BANK1      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    6182
                                              0 BANK1      6     0      6
                          _CDCInitEP
                         _CDCInitEP2
                 _USBCheckCDCRequest
                _USBCheckCDCRequest2
       _main_CDC_to_RS485_Initialize
      _main_Communication_Initialize
 ---------------------------------------------------------------------------------
 (8) _main_Communication_Initialize                        2     2      0      68
                                              0 COMMON     2     2      0
                      i1_TMR1_Reload
 ---------------------------------------------------------------------------------
 (9) i1_TMR1_Reload                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _main_CDC_to_RS485_Initialize                         2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBCheckCDCRequest2                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBCheckCDCRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP2                                           1     1      0    1677
                                             13 COMMON     1     1      0
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            1     1      0    1677
                                             13 COMMON     1     1      0
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) i1_USBTransferOnePacket                              11     7      4     766
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    6     5      1     911
                                              7 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                7     6      1     400
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfOutHandler                                 2     2      0     373
                                             12 BANK1      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfRxService                                  4     4      0     373
                                              8 BANK1      4     4      0
                   Absolute function *
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowStatusStage                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfInHandler                                  3     3      0     374
                                              8 BANK1      3     3      0
                   Absolute function *
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfTxService                                 3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (10) _USART_mySetLineCodingHandler                        8     8      0     259
                                              0 BANK1      8     8      0
                          i1___lldiv
 ---------------------------------------------------------------------------------
 (11) i1___lldiv                                          14     6      8     214
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _WDT_Initialize
   _TMR1_StartTimer
   _USBDeviceInit
   _main_CommunicationHandler
     _CDCTxService
       _USBTransferOnePacket
     _TMR1_Reload
     ___lldiv
       ___lmul (ARG)
     ___lmul
     ___wmul
     _atoi
       ___wmul
       _isdigit
     _getsUSBUSART
       _USBTransferOnePacket
     _main_SetDcDcRegulator
       ___aldiv
         ___lmul (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _main_switchStepUp_Down
         _PWM2_LoadDutyValue
         ___aldiv
           ___lmul (ARG)
         ___lmul
     _memset
     _my_uitoa
       ___wmul
     _putUSBUSART
   _main_SetDcDcRegulator
     ___aldiv
       ___lmul (ARG)
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _main_switchStepUp_Down
       _PWM2_LoadDutyValue
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _main_overcurrentProtection

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         Absolute function(Fake) *
         _USART_mySetLineCodingHandler *
           i1___lldiv
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           Absolute function(Fake) *
           _USART_mySetLineCodingHandler *
             i1___lldiv
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _CDCInitEP2
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _USBCheckCDCRequest
               _USBCheckCDCRequest2
               _main_CDC_to_RS485_Initialize
               _main_Communication_Initialize
                 i1_TMR1_Reload
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _CDCInitEP2
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _USBCheckCDCRequest
               _USBCheckCDCRequest2
               _main_CDC_to_RS485_Initialize
               _main_Communication_Initialize
                 i1_TMR1_Reload
             i1_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
             _CDCInitEP2
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
             _USBCheckCDCRequest
             _USBCheckCDCRequest2
             _main_CDC_to_RS485_Initialize
             _main_Communication_Initialize
               i1_TMR1_Reload
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
           _CDCInitEP2
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
           _USBCheckCDCRequest
           _USBCheckCDCRequest2
           _main_CDC_to_RS485_Initialize
           _main_Communication_Initialize
             i1_TMR1_Reload
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _CDCInitEP2
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _USBCheckCDCRequest
         _USBCheckCDCRequest2
         _main_CDC_to_RS485_Initialize
         _main_Communication_Initialize
           i1_TMR1_Reload
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _CDCInitEP2
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _USBCheckCDCRequest
         _USBCheckCDCRequest2
         _main_CDC_to_RS485_Initialize
         _main_Communication_Initialize
           i1_TMR1_Reload
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i1_USBTransferOnePacket
       _CDCInitEP2
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i1_USBTransferOnePacket
       _USBCheckCDCRequest
       _USBCheckCDCRequest2
       _main_CDC_to_RS485_Initialize
       _main_Communication_Initialize
         i1_TMR1_Reload
     i1_USBDeviceInit
   _main_CDC_to_RS485_Tasks
     _CDCTxService2
       i1_USBTransferOnePacket
     _USART_getcUSART
     _USART_putcUSART
     _getsUSBUSART2
       i1_USBTransferOnePacket
     _putUSBUSART2
   i1_ADC_StartConversion
   i1_PWM2_LoadDutyValue

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK1            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK2            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK2               10      E      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK3            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK3               50     2B      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK4            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK4               50      0      4E      11       97.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK5            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK5               50      0      4B      13       93.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK6            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK6               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK7            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK7               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
ABS                  0      0     297      18        0.0%
BITBANK8            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK8               50      0      40      20       80.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK9            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK9               50      0      40      22       80.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK10           50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK10              50      0      40      24       80.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK11           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK11              50      0      40      26       80.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK12           30      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK12              30      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
DATA                 0      0     297      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Nov 03 18:45:30 2017

                                 __CFG_CP$ON 0000                        __end_ofi1_TMR1_Reload 1EDD  
                                 _USB_SD_Ptr 196C                                            pc 0002  
                     __end_of_FVR_Initialize 1EAE                                _USBDeviceInit 070E  
                        ___wmul@multiplicand 01A2                           __size_of_CDCInitEP 0037  
                    _main_CDC_to_RS485_Tasks 0891         USER_USB_CALLBACK_EVENT_HANDLER@event 00E0  
       USER_USB_CALLBACK_EVENT_HANDLER@pdata 00E2                                          l107 1F00  
                __end_of_USBStdGetDscHandler 0989                                          l378 0755  
                                        _BDT 0020                                          _PR2 001B  
                                        _UIE 0E92                                          _UIR 0E90  
                            _timer1ReloadVal 01DC                                   _USBSuspend 10B6  
                       USBStdSetCfgHandler@i 00EA                         USBStdSetCfgHandler@p 00E7  
                            _TMR2_Initialize 1EDD                main_switchStepUp_Down@Uout_mV 01BB  
                               __CFG_BORV$LO 0000                                          wreg 0009  
                             _USBDeviceTasks 0547                          __size_of_CDCInitEP2 0037  
                             _USBDeviceState 01EB                        ??_USBCtrlTrfRxService 00E8  
                             ??_getsUSBUSART 01AC                     USBEnableEndpoint@options 0077  
                               __CFG_LVP$OFF 0000                                         l1121 01D2  
                                       l1221 080B                                         l1141 02A4  
                                       l1171 10E9                                         l1148 02B4  
                                       l1098 0223                                         l1276 0A1A  
                 USBConfigureEndpoint@handle 0076                                         l5105 0ECD  
                                       l5117 0EE6                                         l5125 0F01  
                                       l5053 1459                                         l5045 1FEC  
                                       l5143 0F2E                                         l5127 0F06  
                                       l5135 0F21                                         l5063 146F  
                                       l5311 0CA0                                         l5303 0C38  
                                       l5145 0F32                                         l5137 0F25  
                                       l5065 1488                                         l5057 146E  
                                       l5067 149C                                         l5315 0CA6  
                                       l5085 0EA0                                         l5325 1799  
                                       l5343 17BE                                         l5327 1791  
                                       l5271 033F                                         l5263 0305  
                                       l5353 17FB                                         l5345 17C2  
                                       l5337 17B6                                         l5329 179E  
                                       l5281 03AD                                         l5273 034B  
                                       l5265 0311                                         l4715 0B2C  
                                       l4707 0B1C                                         l5099 0EC4  
                                       l5347 17EB                                         l4651 11B4  
                                       l5525 07A2                                         l4725 0B75  
                                       l5277 0362                                         l5269 0328  
                                       l5519 077E                                         l4727 0B8D  
                                       l4647 11AA                                         l4815 0F59  
                                       l4823 0F99                                         l5279 0389  
                                       l4825 0FA8                                         l5801 02C6  
                                       l4691 0A74                                         l5731 018A  
                                       l5811 02E9                                         l5485 073C  
                                       l5477 072F                                         l5469 071E  
                                       l4677 0A3B                                         l4669 0A2B  
                                       l4837 0FBC                                         l4695 0A82  
                                       l4687 0A69                                         l4679 0A49  
                                       l5743 01AE                                         l5751 01F3  
                                       l5735 0193                                         l5823 1334  
                                       l5497 075A                                         l4849 0805  
                                       l4881 1417                                         l5809 02DA  
                                       l5825 1337                                         l5763 021D  
                                       l5747 01D5                                         l5739 01A5  
                                       l5755 0204                                         l4869 1F1D  
                                       l4893 1442                                         l5773 026A  
                                       l5749 01E7                                         l5765 0166  
                                       l5837 134D                                         l5829 133E  
                                       l4879 1409                                         l5791 02A7  
                                       l5783 0288                                         l4889 1437  
                                       l5793 02B2                                         l5785 0293  
                                       l5769 0227                                         l5787 029A  
                                       l5779 027F                                         l5799 02BD  
                                       STR_1 18F6                                 __CFG_WDTE$ON 0000  
                                       _LATA 010C                                         _LATC 010E  
                                       u4005 11B5                            _writeStatusBuffer 03A0  
                                       u4015 11BC                                         u4105 0A6A  
                                       u4065 0A3E                                         u4085 0A4A  
                                       u4095 0A5E                                         u4345 140C  
                                       u5155 073F                                         u4285 080C  
                                       u4365 1418                                         u4295 0811  
                                       u4375 142C                                         u4385 1438  
                                       u3845 1FDF                        ??_USBCtrlTrfTxService 0070  
                                       u5760 02B0                                         u4955 0C66  
                                       _UCFG 0E91                                         u5785 1324  
                                       _UEP0 0E98                                         _UEP1 0E99  
                                       _UEIE 0E97                                         _UEIR 0E93  
                                       _UCON 0E8E                                         _TMR2 001A  
                                       _WPUA 020C                                         _Iadc 01DA  
                                       _Uadc 01EC                                 __CFG_WRT$OFF 0000  
                            _CDCDataInHandle 0239       USBStdFeatureReqHandler@current_ep_data 00EA  
                                       _pDst 025C                                         _atoi 178F  
                          i1___lldiv@divisor 0070                                         _main 10D2  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                  _BaudRateGen 02C2  
                                       fsr1l 0006                                         btemp 007E  
                          i1___lldiv@counter 007D                                __CFG_BOREN$ON 0000  
                                       start 00E9                                   _Iadc_limit 022F  
                              __CFG_IESO$OFF 0000                main_CDC_to_RS485_Initialize@i 0071  
                 __end_of_USBCheckStdRequest 15A3                              _USART_putcUSART 1EB6  
                     ??_USBCtrlTrfOutHandler 00EC                                __CFG_MCLRE$ON 0000  
                        USBDeviceInit@i_1118 01A3                    ??_USBStdFeatureReqHandler 00E6  
             ?_main_Communication_Initialize 0070                ?_USART_mySetLineCodingHandler 0070  
                   ??_USBStdGetStatusHandler 0070                              ??_getsUSBUSART2 007C  
                             ?_USBDeviceInit 0070                      __end_of_PWM2_Initialize 1EC7  
                            ?_FVR_Initialize 0070               __size_of_OSCILLATOR_Initialize 000B  
              __end_of_OSCILLATOR_Initialize 1F04                                  _writeBuffer 04A0  
                            __end_of___aldiv 0A8B                                        ?_atoi 01A6  
                                      ?_main 0070            __size_of_USBCtrlEPServiceComplete 0094  
                            _TMR1_StartTimer 1EA4                              __end_of___lldiv 144B  
                                      _T1CON 0018                       __end_of_USBDeviceTasks 0643  
                                      _T2CON 001C                    ?_USBCtrlEPServiceComplete 0070  
                ??_main_CommunicationHandler 01C6                                        i1l400 05BA  
                                      i1l404 05E5                                        i1l405 0640  
                                      i1l406 05EE                                        i1l522 14A3  
                                      i1l525 14E7                                        i1l470 083B  
                                      i1l526 14AC                                        i1l527 14AF  
                                      i1l391 0558                                        i1l457 0CFC  
                                      i1l570 09F3                                        i1l618 0504  
                                      i1l378 0E2A                                        i1l395 057E  
                                      i1l485 065D                                        i1l389 0554  
                                      i1l582 15A2                                        i1l584 1551  
                                      i1l593 157C                                        i1l674 16BC  
                                      i1l909 1243                                        i1l792 1720  
                                      _UADDR 0E96                                        _RCREG 0199  
                                      _RCSTA 019D                                        u570m0 01E3  
                                      _TMR1H 0017                                        _TMR1L 0016  
                                      u574m0 027A                                        _SPBRG 019B  
                                      _TRISA 008C                                        _TRISC 008E  
                                      _USTAT 0E8F                       ?i1_ADC_StartConversion 0070  
                                      _TXREG 019A                                        _TXSTA 019E  
           __size_of_ADC_GetConversionResult 0006                                   i1memset@p1 0070  
         __size_of_USBCtrlEPAllowStatusStage 006E                          ___lmul@multiplicand 01A4  
                             __CFG_FCMEN$OFF 0000                             _CDCDataInHandle2 0231  
            __end_of_USBCtrlEPAllowDataStage 1600                                        _sd000 18F2  
                                      _sd001 1937                                        _sd002 18C0  
                                      _sd003 185A                                        _sd004 188E  
             ?_USBIncrement1msInternalTimers 0070                           i1___lldiv@dividend 0074  
                             _WDT_Initialize 1EAE                                        _okMsg 1976  
                            __end_of_isdigit 1F1F                                 _BaudRateGen2 02BE  
                                      atoi@a 01AB                                        atoi@s 01AD  
                    __end_of_USART_getcUSART 1F2F                 __end_ofi1_PWM2_LoadDutyValue 1F6F  
                    __end_of_TMR1_Initialize 1F43                                        pclath 000A  
                          __end_of_CDCInitEP 1208                                        status 0003  
                                      wtemp0 007E                              _TMR2_StartTimer 1EA7  
                           __end_ofi1_memset 1FB5                           __size_ofi1___lldiv 0052  
                           USART_getcUSART@c 0071                              putUSBUSART@data 01A0  
         USART_mySetLineCodingHandler@dwBaud 00E4                 __size_of_USBStdSetCfgHandler 008F  
                            __initialization 00EB              __size_of_main_switchStepUp_Down 00B8  
                               __end_of_atoi 1800                                 __end_of_main 10F1  
                      _control_signal_bitmap 0250                    ??_main_CDC_to_RS485_Tasks 00E1  
                         i1___lldiv@quotient 0079                                 _cdc_data_rx2 0120  
                               _cdc_data_tx2 00A0                      __end_of_TMR2_Initialize 1EE6  
                             __CFG_LPBOR$OFF 0000                  ?_INTERRUPT_InterruptManager 0070  
                  __size_of_USBCtrlEPService 005D                                       ??_atoi 01A8  
                                     ??_main 01CA                              ?_USBDeviceTasks 0070  
                                ?_USBSuspend 0070                                   _NextUSBOut 01DF  
               ??_main_overcurrentProtection 01A0                          __CFG_USBLSCLK$48MHz 0000  
                            i1_USBDeviceInit 0DE5                       __end_of_WDT_Initialize 1EB2  
              __size_of_ADC_IsConversionDone 0007                                 _cdc_mem_type 0251  
                                     _ADCON0 009D                                       _ADCON1 009E  
                                     _ADCON2 009F                             _CDCDataOutHandle 023B  
                                     i1S6115 191D                                       _ACTCON 039B  
                                     _ADRESH 009C                                       _ADRESL 009B  
                                     _APFCON 011D                                       _ANSELA 018C  
                                     _ANSELC 018E                              getsUSBUSART@len 01AB  
                                     _T1GCON 0019                                       i1l1054 08B4  
                      __size_of_CDCTxService 00B3                                       i1l1216 1F2D  
                                     i1l4001 167C                                       i1l4011 1693  
                                     i1l1187 00A0                                       i1l4005 1683  
                                     i1l4023 16AA                                       i1l4017 16A1  
                                     i1l4211 1364                                       i1l4203 088D  
                                     i1l4123 119C                                       i1l4221 1392  
                                     i1l4213 1372                                       i1l4117 118E  
                                     i1l5013 1173                                       i1l4151 1215  
                                     i1l5031 164B                                       i1l5015 1175  
                                     i1l4225 139D                                       i1l4073 16F7  
                                     i1l4065 16DE                                       i1l4057 16D2  
                                     i1l4313 0BAF                                       i1l4305 0B9E  
                                     i1l5033 164E                                       i1l4155 121B  
                                     i1l4235 1FA1                                       i1l4323 0BC5  
                                     i1l5035 1651                                       i1l4173 0834  
                                     i1l4253 1747                                       i1l4069 16E5  
                                     i1l4085 170E                                       i1l4149 1209  
                                     i1l5205 0D7C                                       i1l6021 0058  
                                     i1l4079 1705                                       i1l4511 0CC6  
                                     i1l4185 0857                                       i1l4193 0870  
                                     i1l4433 0464                                       i1l4417 0435  
                                     i1l4353 0915                                       i1l4345 0C0B  
                                     i1l4329 0BD9                                       i1l5217 0D93  
                                     i1l5225 0DA8                                       i1l5153 13B5  
                                     i1l6041 00C7                                       i1l4195 0874  
                                     i1l4419 0437                                       i1l4371 0976  
                                     i1l4363 0952                                       i1l4355 091F  
                                     i1l4611 155D                                       i1l4515 0CCA  
                                     i1l5243 0DCE                                       i1l5227 0DAC  
                                     i1l5235 0DC1                                       i1l5163 13C9  
                                     i1l6027 0083                                       i1l6117 1224  
                                     i1l4461 04C6                                       i1l4445 0499  
                                     i1l4373 0979                                       i1l4365 0955  
                                     i1l4621 156A                                       i1l4613 1560  
                                     i1l4285 15D1                                       i1l4533 0D09  
                                     i1l4541 0D13                                       i1l5245 0DD2  
                                     i1l5237 0DC4                                       i1l5165 13E4  
                                     i1l5157 13C7                                       i1l6037 00B9  
                                     i1l6029 0087                                       i1l6119 123E  
                                     i1l4471 04EF                                       i1l4455 04B4  
                                     i1l4447 04A4                                       i1l4439 0485  
                                     i1l4623 156D                                       i1l5423 0E71  
                                     i1l5167 13F5                                       i1l4481 050A  
                                     i1l4473 04F5                                       i1l4457 04BB  
                                     i1l4377 097C                                       i1l4625 1570  
                                     i1l4609 155A                                       i1l4289 15E4  
                                     i1l5417 0E4D                                       i1l5601 0596  
                                     i1l5185 0D52                                       i1l5257 1F29  
                                     i1l4811 0A06                                       i1l4803 09E6  
                                     i1l4571 066A                                       i1l3931 12B9  
                                     i1l4635 1589                                       i1l4573 0687  
                                     i1l4485 0529                                       i1l4389 14BF  
                                     i1l4583 06BE                                       i1l3943 1100  
                                     i1l4487 0532                                       i1l4399 14DB  
                                     i1l4639 1597                                       i1l5383 0E11  
                                     i1l5375 0E05                                       i1l5367 0DF4  
                                     i1l5631 05DD                                       i1l5623 05C7  
                                     i1l5607 05AB                                       i1l5199 0D73  
                                     i1l5711 0907                                       i1l5703 08F5  
                                     i1l4809 0A04                                       i1l4585 06CB  
                                     i1l4761 124C                                       i1l3929 12B0  
                                     i1l5617 05C0                                       i1l3939 10F9  
                                     i1l3963 0AA8                                       i1l3955 0A98  
                                     i1l5395 0E2F                                       i1l5651 060E  
                                     i1l5563 055B                                       i1l4597 0705  
                                     i1l4773 127E                                       i1l3973 0AF1  
                                     i1l3975 0B09                                       i1l5583 0578  
                                     i1l5575 056B                                       i1l3993 1670  
                                     i1l5657 0627                                       i1l5681 08B9  
                                     i1l4787 09A8                                       i1l5659 0636  
                                     i1l5595 0590                                       i1l4789 09AE  
                                     i1l4981 1125                                       i1l5693 08D4  
                                     i1l4799 09D5                                       i1l4983 112E  
                                     u311_25 1289                                       u312_25 128F  
                                     u313_25 1297                                       _FVRCON 0117  
                                     u341_25 1373                                       u342_25 1387  
                                     u343_25 1393                                       u351_25 15DB  
                    __end_of_USART_putcUSART 1EBB                                       u611_24 0094  
                                     u339_25 1367                                       u507_25 0E14  
                                     u613_25 00AB                                       u383_25 1300  
                                     u392_25 0656                                       u448_25 1610  
                                     u609_25 007D                                       _OSCCON 0099  
                                     _PLLRDY 04D6                                       u583_25 1F68  
                              CDCTxService@i 01AC                                       _TMR1IF 0088  
                                     _SPBRGH 019C                                       _SPBRGL 019B  
                                     _WDTCON 0097                 i1USBTransferOnePacket@handle 0079  
                  _main_CommunicationHandler 014A                                 ??_CDCInitEP2 007D  
                             __CFG_PWRTE$OFF 0000               __size_of_main_SetDcDcRegulator 0135  
              __end_of_main_SetDcDcRegulator 0421                            _shortPacketStatus 01E9  
                            USBDeviceTasks@i 00EF                  USBStdFeatureReqHandler@pUEP 00E8  
                   USBTransferOnePacket@data 01A1                   USBCtrlTrfInHandler@lastDTS 00EA  
                            ??_USBDeviceInit 01A0                                       ___lmul 11A1  
                    __end_of_TMR1_StartTimer 1EA7                                 ?_TMR1_Reload 0070  
                               ?_putUSBUSART 01A0                                    ??___aldiv 01B4  
                                     ___wmul 0802                               __CFG_STVREN$ON 0000  
                                  ??___lldiv 01B4          __size_of_main_overcurrentProtection 004A  
                       __end_of_getsUSBUSART 149F                            _USBEnableEndpoint 10F1  
            __size_of_USBStdGetStatusHandler 0055                             ?_PWM2_Initialize 0070  
                           __end_of_errorMsg 196C                                       _memset 1FE7  
                         ?_USBEnableEndpoint 0077               ??_USART_mySetLineCodingHandler 00E0  
              __size_of_USBTransferOnePacket 0084                            __end_ofi1___lldiv 13A6  
                                  ??_isdigit 01A0                         __end_of_dividerArray 185A  
                               _CDCTxService 0E95                             __end_of_my_uitoa 0CB3  
                            ?_WDT_Initialize 0070                       _main_switchStepUp_Down 0F48  
                         __end_of_CDCInitEP2 07FE                          ??_USBEnableEndpoint 0078  
                             _RS232_Out_Data 05A0                      __end_of_TMR2_StartTimer 1EAA  
            __end_of_main_CDC_to_RS485_Tasks 090A                                  _CtrlTrfData 00A8  
                           ?_USART_getcUSART 0070                             putUSBUSART2@data 0072  
                       _controlTransferState 01E8                             ?_TMR1_Initialize 0070  
                          _SYSTEM_Initialize 109B                      __end_of__initialization 0146  
                 i1USBTransferOnePacket@data 0071                           ?_SYSTEM_Initialize 0070  
                 __end_of_PWM2_LoadDutyValue 1FE7                     __size_of_USBStallHandler 0025  
                        __size_of_USBSuspend 001C                 __size_of_ADC_StartConversion 0003  
                             __pcstackCOMMON 0070                    __end_of_USBEnableEndpoint 1111  
                              __end_of_sd000 18F6                                __end_of_sd001 194D  
                              __end_of_sd002 18F2                                __end_of_sd003 188E  
                              __end_of_sd004 18C0                                 __pidataBANK4 1EB2  
                        ??_SYSTEM_Initialize 01A0             __size_of_USBCtrlEPAllowDataStage 005D  
                              __end_of_okMsg 197B                __size_of_USBConfigureEndpoint 0042  
                     _control_signal_bitmap2 024E                      __end_ofi1_USBDeviceInit 0E95  
                __end_of_USBCtrlTrfInHandler 0A09                             ?_TMR2_Initialize 0070  
                       i1_PWM2_LoadDutyValue 1F59           main_overcurrentProtection@Iadc_avg 0227  
                    _ADC_GetConversionResult 1EBB                               _OPTION_REGbits 0095  
                                  ?i1_memset 0070                                   _cdc_notice 02A0  
                                 _cdc_rx_len 01E6                                   _cdc_tx_len 01E4  
                   ??_USBCtrlTrfSetupHandler 00EE                      _USBTicksSinceSuspendEnd 0252  
                             _USB_Out_Buffer 0420                    __end_of_SYSTEM_Initialize 10B6  
                     _USBStdGetStatusHandler 149F                  __end_of_USBCheckCDCRequest2 1721  
                                 __pbssBANK2 016E                                   __pbssBANK3 01CB  
                                 __pbssBANK4 0220                                   __pbssBANK5 02A0  
                                 __pbssBANK6 0320                                   __pbssBANK7 03A0  
                                 __pbssBANK8 0420                                   __pbssBANK9 04A0  
                           ?_USART_putcUSART 0070                                  _Uadc_target 022D  
                __size_of_USBWakeFromSuspend 0020                                  _pBDTEntryIn 01CB  
           __end_of_USBCtrlEPServiceComplete 0D47                  __size_of_USBCheckCDCRequest 0060  
                           ??_FVR_Initialize 01A0                                   __pmaintext 10D2  
                              _cdc_mem_type2 024F                         USBCtrlTrfRxService@i 00EA  
                                    ?___lmul 01A0                              __CFG_PLLMULT$3x 0000  
                                    ?___wmul 01A0                             ?_TMR1_StartTimer 0070  
                                 __pintentry 0004                            _CDCDataOutHandle2 0233  
                           getsUSBUSART2@len 007B                                      _BAUDCON 019F  
                      ?i1_PWM2_LoadDutyValue 0070                                      ?_memset 01A0  
                             ___lmul@product 01A8                                   _device_dsc 194D  
                           _USBCtrlEPService 1600                      ??i1_ADC_StartConversion 0070  
                                 _ep_data_in 02B9                      __size_of_ADC_Initialize 000A  
         __end_of_main_overcurrentProtection 1354                   _main_overcurrentProtection 130A  
                __end_of_USBCtrlTrfRxService 070E                           _USBCheckStdRequest 1549  
                          _configDescriptor1 1000                       __size_of_CDCTxService2 009E  
                                 ??i1_memset 0076                                      _RS232cp 0249  
                __end_of_USBCtrlTrfTxService 0891                          _USBStdSetCfgHandler 0B92  
                                    u450_2m0 1647              ??_main_Communication_Initialize 0070  
                             CDCTxService2@i 007C                                      _PWM2DCH 0615  
                                    _PWM2DCL 0614                                      _OSCTUNE 0098  
                                    _PWM2CON 0616                          ?_USBCheckStdRequest 0070  
                           ?_TMR2_StartTimer 0070                 __size_of_USBStdGetDscHandler 007F  
                                    _UIEbits 0E92                       __size_ofi1_TMR1_Reload 0009  
                                    _UIRbits 0E90                                _cdc_trf_state 01E5  
                   _PwmDutyCycleVoltageLimit 024D                     ??i1_USBTransferOnePacket 0074  
                                    _pCDCDst 023D                                      _pCDCSrc 023F  
                      __size_of_getsUSBUSART 0054              ??_USBIncrement1msInternalTimers 0070  
                       ?_USBStdSetCfgHandler 0070                                    _CDCInitEP 11D1  
                 __size_of_USBEnableEndpoint 0020                                    ?_my_uitoa 01A6  
                                 _readBuffer 0520                         ??_USBCheckStdRequest 00ED  
                                    ___aldiv 0A09                __size_of_USBCtrlTrfOutHandler 003D  
                            __size_of___lmul 0030                                      ___lldiv 13F8  
                           ??_USBDeviceTasks 0163                              __size_of___wmul 001C  
         __size_of_main_CommunicationHandler 01A2                                ?_putUSBUSART2 0070  
                          ??_USBStallHandler 0070                    ??_ADC_GetConversionResult 0072  
                           ?i1_USBDeviceInit 0070                         __size_of_TMR1_Reload 0009  
                       __size_of_putUSBUSART 0017                           getsUSBUSART@buffer 01AE  
                      __end_of_getsUSBUSART2 13F8                              __size_of_memset 0019  
                  __end_of_configDescriptor1 108D                             USART_putcUSART@c 0070  
                                    __ptext1 130A                                      __ptext2 014A  
                                    __ptext3 1F86                                      __ptext4 0C21  
                                    __ptext5 1FE7                                      __ptext6 02EC  
                                    __ptext7 0F48                                      __ptext8 11A1  
                                    __ptext9 0A09                                      _inPipes 01D5  
                _USBDeferOUTDataStagePackets 0253                                    _T1CONbits 0018  
                      _OSCILLATOR_Initialize 1EF9                                 ??_USBSuspend 00E6  
                                  _T2CONbits 001C                                      _isdigit 1F10  
                           ___aldiv@dividend 01B0                     ??_PIN_MANAGER_Initialize 01A0  
                               _LastRS232Out 024A                           __end_of_USB_CD_Ptr 197F  
                 __size_of_SYSTEM_Initialize 001B              __size_of_USBCtrlTrfSetupHandler 0055  
                                    clrloop0 1EC8               main_overcurrentProtection@tOut 0246  
                       end_of_initialization 0146                                 _getsUSBUSART 144B  
                         __end_of_USB_SD_Ptr 1976                          _pBDTEntryEP0OutNext 016E  
                                    memset@c 01A2                                      memset@n 01A4  
                                    memset@p 01A6                              _USB1msTickCount 02C6  
            _dummy_encapsulated_cmd_response 02DC                     ?_USBStdFeatureReqHandler 0070  
                              _CDCTxService2 0D47                            _EUSART_Initialize 1F04  
                      ??_USBStdSetCfgHandler 00E6                              ___lldiv@divisor 01AC  
               __end_of_ADC_IsConversionDone 1ED4                                   ?_CDCInitEP 0070  
                            ___lldiv@counter 01B9                main_CommunicationHandler@step 0247  
                               _dividerArray 1800                           ?_EUSART_Initialize 0070  
                         __end_of_USBSuspend 10D2                      _USBCtrlEPAllowDataStage 15A3  
                                  _RCSTAbits 019D                                   ??_my_uitoa 01A8  
                           ___aldiv@quotient 01B7                               ??_putUSBUSART2 0071  
                     ??i1_PWM2_LoadDutyValue 0072                                i1_TMR1_Reload 1ED4  
                   _USBCtrlEPServiceComplete 0CB3            __end_of_main_CommunicationHandler 02EC  
                 _USBStatusStageEnabledFlag1 0256                   _USBStatusStageEnabledFlag2 0255  
                        ??_EUSART_Initialize 01A0                                 _MAIN_Iout_mA 0229  
                           ??_WDT_Initialize 01A0                           USBEnableEndpoint@p 007A  
                        my_uitoa@strIncremet 01B2                      ?_main_switchStepUp_Down 01BB  
                                my_uitoa@num 01A6                                  my_uitoa@str 01B3  
                           __CFG_FOSC$INTOSC 0000                                 _MAIN_Uout_mV 022B  
           _dummy_encapsulated_cmd_response2 02D4  main_CommunicationHandler@cmdRxBufferPointer 01DE  
                         _BothEP0OutUOWNsSet 0258                    USBStdSetCfgHandler@i_1857 00E9  
                        _ADC_StartConversion 1EA1                                    i1___lldiv 1354  
                  USBConfigureEndpoint@EPNum 0075                   ?_USBCtrlEPAllowStatusStage 0070  
        USER_USB_CALLBACK_EVENT_HANDLER@size 00E4                                    _USTATcopy 01EE  
                  __end_of_EUSART_Initialize 1F10                                 _MAIN_ovcFlag 024C  
                   i1USBTransferOnePacket@ep 0078                 __end_of_USBTransferOnePacket 0B92  
                             ?_CDCTxService2 0070              __size_ofi1_USBTransferOnePacket 0083  
                                  _TXSTAbits 019E                     ?_main_CDC_to_RS485_Tasks 0070  
                          putUSBUSART@length 01A2                           __CFG_PLLEN$ENABLED 0000  
                      i1USBDeviceInit@i_1118 0073                         ?_ADC_StartConversion 0070  
                     _USBCtrlTrfSetupHandler 14F4                        _main_SetDcDcRegulator 02EC  
                             ?i1_TMR1_Reload 0070                        __end_of_USBDeviceInit 07C7  
      __end_of_USBIncrement1msInternalTimers 1FCE       __size_of_USBIncrement1msInternalTimers 0019  
              _USBIncrement1msInternalTimers 1FB5                               __end_of___lmul 11D1  
                             __end_of___wmul 081E                                    i1memset@c 0072  
                                  i1memset@n 0074                                    i1memset@p 0076  
             __end_of_main_switchStepUp_Down 1000                           _PWM2_LoadDutyValue 1FCE  
                             _ADC_Initialize 1EEF                       ?_OSCILLATOR_Initialize 0070  
                             __end_of_memset 2000                            _USBBusIsSuspended 025A  
                        start_initialization 00EB                      ?_USBStdGetStatusHandler 0070  
              USBCtrlTrfRxService@byteToRead 00EB                     __size_of_PWM2_Initialize 0006  
                        ?_PWM2_LoadDutyValue 01A0              __size_of_PIN_MANAGER_Initialize 0017  
                                 ?i1___lldiv 0070                            __size_ofi1_memset 0018  
                                _cdc_data_rx 0120                                  _cdc_data_tx 00A0  
               __end_of_USBConfigureEndpoint 12C3              __end_of_USBStdFeatureReqHandler 0547  
          __end_of_USBCtrlEPAllowStatusStage 178F                     __end_of_USBCtrlEPService 165D  
       __end_of_USART_mySetLineCodingHandler 130A        __size_of_USART_mySetLineCodingHandler 0047  
               _USART_mySetLineCodingHandler 12C3                                  _cdc_notice2 02CA  
                  ??_USBCtrlEPAllowDataStage 0073                                  _cdc_rx_len2 01E3  
                                ??_CDCInitEP 007D                               USBDeviceInit@i 01A4  
                             USBDeviceInit@p 01A1                                  _cdc_tx_len2 01E1  
                      ??_ADC_StartConversion 01A0                     __size_of_USART_getcUSART 0010  
                       ??_PWM2_LoadDutyValue 01A2                    CDCTxService2@byte_to_send 007D  
                     _pBDTEntryEP0OutCurrent 01EA                     __size_of_TMR1_Initialize 0014  
                    USBTransferOnePacket@dir 01A0                      USBTransferOnePacket@len 01A3  
                PWM2_LoadDutyValue@dutyValue 01A0                                     ??___lmul 01A8  
                                   ??___wmul 01A4                          _USBStdGetDscHandler 090A  
                     __end_of_ADC_Initialize 1EF9                                  __pdataBANK4 026A  
                                   ??_memset 01A6                       i1_USBTransferOnePacket 0A8B  
                        _MAIN_Uout_target_mV 0264               __size_ofi1_ADC_StartConversion 0003  
                                __pbssBANK10 0520                                  __pbssBANK11 05A0  
                     _USBActiveConfiguration 01EF               __end_of_USBStdGetStatusHandler 14F4  
                ?_main_overcurrentProtection 0070                __end_ofi1_ADC_StartConversion 1EA1  
                  i1USBTransferOnePacket@dir 0070                    i1USBTransferOnePacket@len 0073  
                                  ___latbits 0002                                  _cmdRxBuffer 0320  
                              __pcstackBANK1 00E0                                __pcstackBANK2 0160  
                              __pcstackBANK3 01A0                 __size_of_USBCtrlTrfInHandler 0080  
                       _ADC_IsConversionDone 1ECD                     __size_of_TMR2_Initialize 0009  
                               _isdigit$3442 01A0                         ?_USBStdGetDscHandler 0070  
                       __end_of_putUSBUSART2 1F59                                 _line_coding2 02E4  
                            ??_CDCTxService2 007B                   __end_of_USBWakeFromSuspend 1131  
                 __size_of_EUSART_Initialize 000C                              _USBStallHandler 1155  
                               _pBDTEntryOut 02AA         __end_of_main_CDC_to_RS485_Initialize 11A1  
      __size_of_main_CDC_to_RS485_Initialize 0027                 _main_CDC_to_RS485_Initialize 117A  
                 __end_of_USBCheckCDCRequest 16BD                   main_CommunicationHandler@i 01C9  
               __size_of_USBCheckCDCRequest2 0064                       _PIN_MANAGER_Initialize 1F6F  
                            ??i1_TMR1_Reload 0070                       ?_main_SetDcDcRegulator 01C0  
                   __size_of_USART_putcUSART 0005                            _ADC_SelectChannel 108E  
                                   ?___aldiv 01AC                                     ?___lldiv 01AC  
                            ?_ADC_Initialize 0070                           ?_ADC_SelectChannel 0070  
                          __size_of_my_uitoa 0092                 ??_INTERRUPT_InterruptManager 0165  
                                  __pswtext1 191D                         _USBTransferOnePacket 0B0E  
                   __size_of_TMR1_StartTimer 0003                                     ?_isdigit 0070  
                        ??_ADC_SelectChannel 0070                        ?_ADC_IsConversionDone 0070  
               __end_of_USBCtrlTrfOutHandler 1281                        ??_USBStdGetDscHandler 0070  
                                ??i1___lldiv 0078                                  _ep_data_out 02B4  
               __size_of_USBCtrlTrfRxService 00CB                USBConfigureEndpoint@direction 0070  
                            ___aldiv@divisor 01AC                 __size_of_USBCtrlTrfTxService 0073  
                          ??_PWM2_Initialize 01A0                              ___aldiv@counter 01B5  
                             ___wmul@product 01A4                                     _LATAbits 010C  
                                   _LATCbits 010E                   ??_USBCtrlEPServiceComplete 0075  
                                  clear_ram0 1EC7                                     _PIE1bits 0091  
                                   _PIE2bits 0092                     __size_of_TMR2_StartTimer 0003  
              ?_main_CDC_to_RS485_Initialize 0070                    __end_of_ADC_SelectChannel 109B  
        __size_of_INTERRUPT_InterruptManager 00E5                           my_uitoa@powerOfTen 01B4  
                                   _PIR1bits 0011                                     _PIR2bits 0012  
                              ??_TMR1_Reload 01A0                                ??_putUSBUSART 01A3  
                                   _UEP0bits 0E98                   _USBDeferINDataStagePackets 0254  
                __size_of_USBCheckStdRequest 005A                                     _UCONbits 0E8E  
      main_CommunicationHandler@numBytesRead 01C8                         _USBConfigureEndpoint 1281  
                          ??_USART_getcUSART 0070                   main_SetDcDcRegulator@pI_mA 01C0  
           __size_of_USBStdFeatureReqHandler 0126                   main_SetDcDcRegulator@pU_mV 01C5  
                          ??_TMR1_Initialize 01A0                                   _ADCON0bits 009D  
                          ___wmul@multiplier 01A0                        ?_USBTransferOnePacket 01A0  
                   ADC_SelectChannel@channel 0071                      __size_of_FVR_Initialize 0004  
             main_Communication_Initialize@i 0071                          getsUSBUSART2@buffer 00E0  
                              ?_CDCTxService 0070                                     i1_memset 1F9D  
                               _RemoteWakeup 025B                               _cdc_trf_state2 01E2  
                   __size_ofi1_USBDeviceInit 00B0                           _RS232_Out_Data_Rdy 0248  
                    __end_of_USBStallHandler 117A                            ___lmul@multiplier 01A0  
                ??_USBCtrlEPAllowStatusStage 0070                  __end_of_USBStdSetCfgHandler 0C21  
                       _MAIN_upConverterFlag 024B                            ??_TMR2_Initialize 01A0  
                                   _pCDCDst2 0235                                     _pCDCSrc2 0237  
                     __size_of_getsUSBUSART2 0052                           __end_of_device_dsc 195F  
                                 _CDCInitEP2 07C7                      ?_USBCtrlTrfSetupHandler 0070  
                    USBStdGetStatusHandler@p 0071                       USBTransferOnePacket@ep 01A8  
                   ?_ADC_GetConversionResult 0070                                     _SetupPkt 00A0  
              INTERRUPT_InterruptManager@pwm 016C      INTERRUPT_InterruptManager@pwmCorrection 0245  
                    ??_OSCILLATOR_Initialize 01A0                        ?_USBConfigureEndpoint 0070  
                           __size_of___aldiv 0082                             __size_of___lldiv 0053  
              __size_ofi1_PWM2_LoadDutyValue 0016                            ??_USART_putcUSART 0070  
                 ?_main_CommunicationHandler 0070                          __end_of_TMR1_Reload 1EEF  
                        __end_of_putUSBUSART 1F9D                                  _line_coding 025D  
                             ??_CDCTxService 01AB                        _TMR1_InterruptHandler 0241  
           __size_of_main_CDC_to_RS485_Tasks 0079                       ??_ADC_IsConversionDone 0070  
                      __size_of_putUSBUSART2 0016                             __size_of_isdigit 000F  
                    __size_of_USBDeviceTasks 00FC                                     __ptext10 1FCE  
                                   __ptext11 13F8                                     __ptext20 109B  
                                   __ptext12 144B                                     __ptext21 1EAE  
                                   __ptext13 178F                                   _T1GCONbits 0019  
                                   __ptext30 1F04                                     __ptext22 1EDD  
                                   __ptext14 1F10                                     __ptext31 1EEF  
                                   __ptext23 1EA7                                     __ptext15 0802  
                                   __ptext40 1F1F                                     __ptext32 1EA1  
                                   __ptext24 1F2F                                     __ptext16 1EE6  
                                   __ptext41 0D47                                     __ptext25 1EA4  
                                   __ptext17 0E95                                     __ptext50 0CB3  
                                   __ptext42 0547                                     __ptext34 1F59  
                                   __ptext26 1EC1                                     __ptext18 0B0E  
                                   __ptext51 15A3                                     __ptext43 0DE5  
                                   __ptext35 1E9E                                     __ptext27 1F6F  
                                   __ptext19 070E                                     __ptext60 1ED4  
                                   __ptext52 1549                                     __ptext44 1111  
                                   __ptext36 0891                                     __ptext28 1EF9  
                                   __ptext61 117A                                     __ptext53 0B92  
                                   __ptext45 10B6                                     __ptext37 1F43  
                                   __ptext29 1EAA                                     __ptext70 0643  
                                   __ptext62 16BD                                     __ptext54 1F9D  
                                   __ptext46 1155                                     __ptext38 13A6  
                                   __ptext71 1721                                     __ptext63 165D  
                                   __ptext55 149F                                     __ptext47 1FB5  
                                   __ptext39 1EB6                                     __ptext72 0989  
                                   __ptext64 07C7                                     __ptext56 090A  
                                   __ptext48 1600                                     __ptext73 081E  
                                   __ptext65 11D1                                     __ptext57 0421  
                                   __ptext49 14F4                                     __ptext74 12C3  
                                   __ptext66 0A8B                                     __ptext58 1208  
                                   __ptext75 1354                                     __ptext67 10F1  
                                   __ptext59 1131                                     __ptext76 108E  
                                   __ptext68 1281                                     __ptext77 1ECD  
                                   __ptext69 1244                                     __ptext78 1EBB  
                          ??_TMR1_StartTimer 01A0                                __size_of_atoi 0071  
                                   _errorMsg 195F               __end_of_USBCtrlTrfSetupHandler 1549  
                              __size_of_main 001F                            ?_USBCtrlEPService 0070  
                         ??_USBCtrlEPService 0160                   __size_of_ADC_SelectChannel 000D  
                        _USBCtrlTrfInHandler 0989                                     _my_uitoa 0C21  
                                   _outPipes 0220                         _USBCtrlTrfOutHandler 1244  
                                   int$flags 007E                                     atoi@sign 01AA  
                    ?i1_USBTransferOnePacket 0070                    _USBCtrlEPAllowStatusStage 1721  
             ??_main_CDC_to_RS485_Initialize 0070                            ??_TMR2_StartTimer 01A0  
                               _putUSBUSART2 1F43           __end_of_INTERRUPT_InterruptManager 00E9  
                 _INTERRUPT_InterruptManager 0004                       ??_USBTransferOnePacket 01A4  
                              _getsUSBUSART2 13A6                    _USBDeferStatusStagePacket 01E7  
                   CDCTxService@byte_to_send 01AD                             i1USBDeviceInit@i 0074  
                           i1USBDeviceInit@p 0071                                   _INTCONbits 000B  
                        _USBCheckCDCRequest2 16BD                         ?_USBCtrlTrfInHandler 0070  
                                 _FVRCONbits 0117                USBCtrlTrfTxService@byteToSend 0072  
                             __pstringtext10 194D                               __pstringtext11 195F  
                             __pstringtext12 18F2                               __pstringtext13 0000  
                                   isdigit@c 01A1                                     memset@p1 01A0  
                           ?_USBStallHandler 0070                     USBStdFeatureReqHandler@p 00EB  
                    __size_of_WDT_Initialize 0004                     _PwmDutyCycleCurrentLimit 01E0  
                                   intlevel1 0000                       __size_of_USBDeviceInit 00B9  
                __end_of_ADC_StartConversion 1EA4      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1244  
   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 003C            ??_USER_USB_CALLBACK_EVENT_HANDLER 007E  
           ?_USER_USB_CALLBACK_EVENT_HANDLER 00E0              _USER_USB_CALLBACK_EVENT_HANDLER 1208  
                          ??i1_USBDeviceInit 0070                             ___lldiv@dividend 01B0  
                    ?_PIN_MANAGER_Initialize 0070              __end_of_ADC_GetConversionResult 1EC1  
                    ??_main_SetDcDcRegulator 01C1                               my_uitoa@ziffer 01B5  
                          __CFG_CLKOUTEN$OFF 0000        __end_of_main_Communication_Initialize 1155  
     __size_of_main_Communication_Initialize 0024                _main_Communication_Initialize 1131  
                                ?_CDCInitEP2 0070                             ??_ADC_Initialize 01A0  
                       ?_USBCheckCDCRequest2 0070                  __size_of_PWM2_LoadDutyValue 0019  
             __end_ofi1_USBTransferOnePacket 0B0E                       ??_USBConfigureEndpoint 0071  
                      ?_USBCtrlTrfOutHandler 0070                                  _TMR1_Reload 1EE6  
                                _putUSBUSART 1F86                         __CFG_CPUDIV$NOCLKDIV 0000  
                        _USBCtrlTrfRxService 0643                           _USBWakeFromSuspend 1111  
                    _USBStdFeatureReqHandler 0421                           _USBCheckCDCRequest 165D  
                             ?_getsUSBUSART2 007B                          _USBCtrlTrfTxService 081E  
                              __pstringtext1 1800                                __pstringtext2 196C  
                              __pstringtext3 1976                                __pstringtext4 197B  
                              __pstringtext5 1000                                __pstringtext6 185A  
                              __pstringtext7 188E                                __pstringtext8 18C0  
                              __pstringtext9 1937                               _FVR_Initialize 1EAA  
                        ?_USBWakeFromSuspend 0070                             ___lldiv@quotient 01B5  
                            _PWM2_Initialize 1EC1                        ??_USBCtrlTrfInHandler 00E8  
                      _USBAlternateInterface 0268                          ?_USBCheckCDCRequest 0070  
                               ___aldiv@sign 01B6                        i1_ADC_StartConversion 1E9E  
                        USBEnableEndpoint@ep 007C                              _endpoint_number 0259  
                       ?_USBCtrlTrfRxService 0070                                ?_getsUSBUSART 01AB  
             __end_of_PIN_MANAGER_Initialize 1F86                     ?_USBCtrlEPAllowDataStage 0070  
                       ?_USBCtrlTrfTxService 0070                        __end_of_CDCTxService2 0DE5  
                         putUSBUSART2@length 0070                           _MAIN_Iout_limit_mA 026A  
               _USBStatusStageTimeoutCounter 0257                        _TMR2_InterruptHandler 0243  
                       ??_USBWakeFromSuspend 00E6                   USBTransferOnePacket@handle 01A9  
              i1PWM2_LoadDutyValue@dutyValue 0070                              _USART_getcUSART 1F1F  
                      ??_USBCheckCDCRequest2 0070                         __end_of_CDCTxService 0F48  
                            _TMR1_Initialize 1F2F                         ??_USBCheckCDCRequest 0070  
                                 _USB_CD_Ptr 197B                     ??_main_switchStepUp_Down 01BF  
