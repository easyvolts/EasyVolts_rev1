

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sun May 28 20:21:55 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    10                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    11                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    12                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    13                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    14                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1
    15                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1
    16                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1
    17                           	psect	bssBANK11,global,class=BANK11,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	swtext1,local,class=CONST,delta=2
    77                           	psect	text53,local,class=CODE,merge=1,delta=2
    78                           	psect	text54,local,class=CODE,merge=1,delta=2
    79                           	psect	text55,local,class=CODE,merge=1,delta=2
    80                           	psect	text56,local,class=CODE,merge=1,delta=2
    81                           	psect	text57,local,class=CODE,merge=1,delta=2
    82                           	psect	text58,local,class=CODE,merge=1,delta=2
    83                           	psect	text59,local,class=CODE,merge=1,delta=2
    84                           	psect	text60,local,class=CODE,merge=1,delta=2
    85                           	psect	text61,local,class=CODE,merge=1,delta=2
    86                           	psect	text62,local,class=CODE,merge=1,delta=2
    87                           	psect	text63,local,class=CODE,merge=1,delta=2
    88                           	psect	text64,local,class=CODE,merge=1,delta=2
    89                           	psect	text65,local,class=CODE,merge=1,delta=2
    90                           	psect	text66,local,class=CODE,merge=1,delta=2
    91                           	psect	text67,local,class=CODE,merge=1,delta=2
    92                           	psect	text68,local,class=CODE,merge=1,delta=2
    93                           	psect	text69,local,class=CODE,merge=1,delta=2
    94                           	psect	text70,local,class=CODE,merge=1,delta=2
    95                           	psect	text71,local,class=CODE,merge=1,delta=2
    96                           	psect	text72,local,class=CODE,merge=1,delta=2
    97                           	psect	text73,local,class=CODE,merge=1,delta=2
    98                           	psect	text74,local,class=CODE,merge=1,delta=2
    99                           	psect	text75,local,class=CODE,merge=1,delta=2
   100                           	psect	text76,local,class=CODE,merge=1,delta=2
   101                           	psect	text77,local,class=CODE,merge=1,delta=2
   102                           	psect	text78,local,class=CODE,merge=1,delta=2
   103                           	dabs	1,0x20,80,_BDT
   104                           	dabs	1,0x120,64,_cdc_data_rx2
   105                           	dabs	1,0xA0,64,_cdc_data_tx
   106                           	dabs	1,0xA0,64,_cdc_data_tx2
   107                           	dabs	1,0xA8,8,_CtrlTrfData
   108                           	dabs	1,0xA0,8,_SetupPkt
   109                           	dabs	1,0x120,64,_cdc_data_rx
   110                           	dabs	1,0x7E,2
   111  0000                     
   112                           ; Version 1.40
   113                           ; Generated 01/12/2016 GMT
   114                           ; 
   115                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
   116                           ; All rights reserved.
   117                           ; 
   118                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   119                           ; 
   120                           ; Redistribution and use in source and binary forms, with or without modification, are
   121                           ; permitted provided that the following conditions are met:
   122                           ; 
   123                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   124                           ;        conditions and the following disclaimer.
   125                           ; 
   126                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   127                           ;        of conditions and the following disclaimer in the documentation and/or other
   128                           ;        materials provided with the distribution.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC16F1455 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000E                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  008C                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0095                     	;# 
   176  0096                     	;# 
   177  0097                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009A                     	;# 
   181  009B                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010E                     	;# 
   189  0111                     	;# 
   190  0112                     	;# 
   191  0113                     	;# 
   192  0114                     	;# 
   193  0115                     	;# 
   194  0116                     	;# 
   195  0117                     	;# 
   196  0118                     	;# 
   197  0119                     	;# 
   198  011D                     	;# 
   199  018C                     	;# 
   200  018E                     	;# 
   201  0191                     	;# 
   202  0191                     	;# 
   203  0192                     	;# 
   204  0193                     	;# 
   205  0193                     	;# 
   206  0194                     	;# 
   207  0195                     	;# 
   208  0196                     	;# 
   209  0197                     	;# 
   210  0199                     	;# 
   211  019A                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019C                     	;# 
   215  019D                     	;# 
   216  019E                     	;# 
   217  019F                     	;# 
   218  020C                     	;# 
   219  0211                     	;# 
   220  0211                     	;# 
   221  0212                     	;# 
   222  0212                     	;# 
   223  0213                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0214                     	;# 
   227  0215                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0216                     	;# 
   231  0216                     	;# 
   232  0217                     	;# 
   233  0217                     	;# 
   234  0391                     	;# 
   235  0392                     	;# 
   236  0393                     	;# 
   237  039A                     	;# 
   238  039B                     	;# 
   239  0611                     	;# 
   240  0612                     	;# 
   241  0613                     	;# 
   242  0613                     	;# 
   243  0614                     	;# 
   244  0615                     	;# 
   245  0616                     	;# 
   246  0616                     	;# 
   247  0691                     	;# 
   248  0692                     	;# 
   249  0693                     	;# 
   250  0694                     	;# 
   251  0695                     	;# 
   252  0E8E                     	;# 
   253  0E8F                     	;# 
   254  0E90                     	;# 
   255  0E91                     	;# 
   256  0E92                     	;# 
   257  0E93                     	;# 
   258  0E94                     	;# 
   259  0E94                     	;# 
   260  0E95                     	;# 
   261  0E96                     	;# 
   262  0E97                     	;# 
   263  0E98                     	;# 
   264  0E99                     	;# 
   265  0E9A                     	;# 
   266  0E9B                     	;# 
   267  0E9C                     	;# 
   268  0E9D                     	;# 
   269  0E9E                     	;# 
   270  0E9F                     	;# 
   271  0FE4                     	;# 
   272  0FE5                     	;# 
   273  0FE6                     	;# 
   274  0FE7                     	;# 
   275  0FE8                     	;# 
   276  0FE9                     	;# 
   277  0FEA                     	;# 
   278  0FEB                     	;# 
   279  0FED                     	;# 
   280  0FEE                     	;# 
   281  0FEF                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000E                     	;# 
   296  0011                     	;# 
   297  0012                     	;# 
   298  0015                     	;# 
   299  0016                     	;# 
   300  0016                     	;# 
   301  0017                     	;# 
   302  0018                     	;# 
   303  0019                     	;# 
   304  001A                     	;# 
   305  001B                     	;# 
   306  001C                     	;# 
   307  008C                     	;# 
   308  008E                     	;# 
   309  0091                     	;# 
   310  0092                     	;# 
   311  0095                     	;# 
   312  0096                     	;# 
   313  0097                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009A                     	;# 
   317  009B                     	;# 
   318  009B                     	;# 
   319  009C                     	;# 
   320  009D                     	;# 
   321  009E                     	;# 
   322  009F                     	;# 
   323  010C                     	;# 
   324  010E                     	;# 
   325  0111                     	;# 
   326  0112                     	;# 
   327  0113                     	;# 
   328  0114                     	;# 
   329  0115                     	;# 
   330  0116                     	;# 
   331  0117                     	;# 
   332  0118                     	;# 
   333  0119                     	;# 
   334  011D                     	;# 
   335  018C                     	;# 
   336  018E                     	;# 
   337  0191                     	;# 
   338  0191                     	;# 
   339  0192                     	;# 
   340  0193                     	;# 
   341  0193                     	;# 
   342  0194                     	;# 
   343  0195                     	;# 
   344  0196                     	;# 
   345  0197                     	;# 
   346  0199                     	;# 
   347  019A                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019C                     	;# 
   351  019D                     	;# 
   352  019E                     	;# 
   353  019F                     	;# 
   354  020C                     	;# 
   355  0211                     	;# 
   356  0211                     	;# 
   357  0212                     	;# 
   358  0212                     	;# 
   359  0213                     	;# 
   360  0213                     	;# 
   361  0214                     	;# 
   362  0214                     	;# 
   363  0215                     	;# 
   364  0215                     	;# 
   365  0215                     	;# 
   366  0216                     	;# 
   367  0216                     	;# 
   368  0217                     	;# 
   369  0217                     	;# 
   370  0391                     	;# 
   371  0392                     	;# 
   372  0393                     	;# 
   373  039A                     	;# 
   374  039B                     	;# 
   375  0611                     	;# 
   376  0612                     	;# 
   377  0613                     	;# 
   378  0613                     	;# 
   379  0614                     	;# 
   380  0615                     	;# 
   381  0616                     	;# 
   382  0616                     	;# 
   383  0691                     	;# 
   384  0692                     	;# 
   385  0693                     	;# 
   386  0694                     	;# 
   387  0695                     	;# 
   388  0E8E                     	;# 
   389  0E8F                     	;# 
   390  0E90                     	;# 
   391  0E91                     	;# 
   392  0E92                     	;# 
   393  0E93                     	;# 
   394  0E94                     	;# 
   395  0E94                     	;# 
   396  0E95                     	;# 
   397  0E96                     	;# 
   398  0E97                     	;# 
   399  0E98                     	;# 
   400  0E99                     	;# 
   401  0E9A                     	;# 
   402  0E9B                     	;# 
   403  0E9C                     	;# 
   404  0E9D                     	;# 
   405  0E9E                     	;# 
   406  0E9F                     	;# 
   407  0FE4                     	;# 
   408  0FE5                     	;# 
   409  0FE6                     	;# 
   410  0FE7                     	;# 
   411  0FE8                     	;# 
   412  0FE9                     	;# 
   413  0FEA                     	;# 
   414  0FEB                     	;# 
   415  0FED                     	;# 
   416  0FEE                     	;# 
   417  0FEF                     	;# 
   418  0000                     	;# 
   419  0001                     	;# 
   420  0002                     	;# 
   421  0003                     	;# 
   422  0004                     	;# 
   423  0005                     	;# 
   424  0006                     	;# 
   425  0007                     	;# 
   426  0008                     	;# 
   427  0009                     	;# 
   428  000A                     	;# 
   429  000B                     	;# 
   430  000C                     	;# 
   431  000E                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0015                     	;# 
   435  0016                     	;# 
   436  0016                     	;# 
   437  0017                     	;# 
   438  0018                     	;# 
   439  0019                     	;# 
   440  001A                     	;# 
   441  001B                     	;# 
   442  001C                     	;# 
   443  008C                     	;# 
   444  008E                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0095                     	;# 
   448  0096                     	;# 
   449  0097                     	;# 
   450  0098                     	;# 
   451  0099                     	;# 
   452  009A                     	;# 
   453  009B                     	;# 
   454  009B                     	;# 
   455  009C                     	;# 
   456  009D                     	;# 
   457  009E                     	;# 
   458  009F                     	;# 
   459  010C                     	;# 
   460  010E                     	;# 
   461  0111                     	;# 
   462  0112                     	;# 
   463  0113                     	;# 
   464  0114                     	;# 
   465  0115                     	;# 
   466  0116                     	;# 
   467  0117                     	;# 
   468  0118                     	;# 
   469  0119                     	;# 
   470  011D                     	;# 
   471  018C                     	;# 
   472  018E                     	;# 
   473  0191                     	;# 
   474  0191                     	;# 
   475  0192                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0194                     	;# 
   479  0195                     	;# 
   480  0196                     	;# 
   481  0197                     	;# 
   482  0199                     	;# 
   483  019A                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019C                     	;# 
   487  019D                     	;# 
   488  019E                     	;# 
   489  019F                     	;# 
   490  020C                     	;# 
   491  0211                     	;# 
   492  0211                     	;# 
   493  0212                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0213                     	;# 
   497  0214                     	;# 
   498  0214                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0216                     	;# 
   503  0216                     	;# 
   504  0217                     	;# 
   505  0217                     	;# 
   506  0391                     	;# 
   507  0392                     	;# 
   508  0393                     	;# 
   509  039A                     	;# 
   510  039B                     	;# 
   511  0611                     	;# 
   512  0612                     	;# 
   513  0613                     	;# 
   514  0613                     	;# 
   515  0614                     	;# 
   516  0615                     	;# 
   517  0616                     	;# 
   518  0616                     	;# 
   519  0691                     	;# 
   520  0692                     	;# 
   521  0693                     	;# 
   522  0694                     	;# 
   523  0695                     	;# 
   524  0E8E                     	;# 
   525  0E8F                     	;# 
   526  0E90                     	;# 
   527  0E91                     	;# 
   528  0E92                     	;# 
   529  0E93                     	;# 
   530  0E94                     	;# 
   531  0E94                     	;# 
   532  0E95                     	;# 
   533  0E96                     	;# 
   534  0E97                     	;# 
   535  0E98                     	;# 
   536  0E99                     	;# 
   537  0E9A                     	;# 
   538  0E9B                     	;# 
   539  0E9C                     	;# 
   540  0E9D                     	;# 
   541  0E9E                     	;# 
   542  0E9F                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;# 
   554  0000                     	;# 
   555  0001                     	;# 
   556  0002                     	;# 
   557  0003                     	;# 
   558  0004                     	;# 
   559  0005                     	;# 
   560  0006                     	;# 
   561  0007                     	;# 
   562  0008                     	;# 
   563  0009                     	;# 
   564  000A                     	;# 
   565  000B                     	;# 
   566  000C                     	;# 
   567  000E                     	;# 
   568  0011                     	;# 
   569  0012                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0016                     	;# 
   573  0017                     	;# 
   574  0018                     	;# 
   575  0019                     	;# 
   576  001A                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  008C                     	;# 
   580  008E                     	;# 
   581  0091                     	;# 
   582  0092                     	;# 
   583  0095                     	;# 
   584  0096                     	;# 
   585  0097                     	;# 
   586  0098                     	;# 
   587  0099                     	;# 
   588  009A                     	;# 
   589  009B                     	;# 
   590  009B                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010E                     	;# 
   597  0111                     	;# 
   598  0112                     	;# 
   599  0113                     	;# 
   600  0114                     	;# 
   601  0115                     	;# 
   602  0116                     	;# 
   603  0117                     	;# 
   604  0118                     	;# 
   605  0119                     	;# 
   606  011D                     	;# 
   607  018C                     	;# 
   608  018E                     	;# 
   609  0191                     	;# 
   610  0191                     	;# 
   611  0192                     	;# 
   612  0193                     	;# 
   613  0193                     	;# 
   614  0194                     	;# 
   615  0195                     	;# 
   616  0196                     	;# 
   617  0197                     	;# 
   618  0199                     	;# 
   619  019A                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019C                     	;# 
   623  019D                     	;# 
   624  019E                     	;# 
   625  019F                     	;# 
   626  020C                     	;# 
   627  0211                     	;# 
   628  0211                     	;# 
   629  0212                     	;# 
   630  0212                     	;# 
   631  0213                     	;# 
   632  0213                     	;# 
   633  0214                     	;# 
   634  0214                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0216                     	;# 
   639  0216                     	;# 
   640  0217                     	;# 
   641  0217                     	;# 
   642  0391                     	;# 
   643  0392                     	;# 
   644  0393                     	;# 
   645  039A                     	;# 
   646  039B                     	;# 
   647  0611                     	;# 
   648  0612                     	;# 
   649  0613                     	;# 
   650  0613                     	;# 
   651  0614                     	;# 
   652  0615                     	;# 
   653  0616                     	;# 
   654  0616                     	;# 
   655  0691                     	;# 
   656  0692                     	;# 
   657  0693                     	;# 
   658  0694                     	;# 
   659  0695                     	;# 
   660  0E8E                     	;# 
   661  0E8F                     	;# 
   662  0E90                     	;# 
   663  0E91                     	;# 
   664  0E92                     	;# 
   665  0E93                     	;# 
   666  0E94                     	;# 
   667  0E94                     	;# 
   668  0E95                     	;# 
   669  0E96                     	;# 
   670  0E97                     	;# 
   671  0E98                     	;# 
   672  0E99                     	;# 
   673  0E9A                     	;# 
   674  0E9B                     	;# 
   675  0E9C                     	;# 
   676  0E9D                     	;# 
   677  0E9E                     	;# 
   678  0E9F                     	;# 
   679  0FE4                     	;# 
   680  0FE5                     	;# 
   681  0FE6                     	;# 
   682  0FE7                     	;# 
   683  0FE8                     	;# 
   684  0FE9                     	;# 
   685  0FEA                     	;# 
   686  0FEB                     	;# 
   687  0FED                     	;# 
   688  0FEE                     	;# 
   689  0FEF                     	;# 
   690  0000                     	;# 
   691  0001                     	;# 
   692  0002                     	;# 
   693  0003                     	;# 
   694  0004                     	;# 
   695  0005                     	;# 
   696  0006                     	;# 
   697  0007                     	;# 
   698  0008                     	;# 
   699  0009                     	;# 
   700  000A                     	;# 
   701  000B                     	;# 
   702  000C                     	;# 
   703  000E                     	;# 
   704  0011                     	;# 
   705  0012                     	;# 
   706  0015                     	;# 
   707  0016                     	;# 
   708  0016                     	;# 
   709  0017                     	;# 
   710  0018                     	;# 
   711  0019                     	;# 
   712  001A                     	;# 
   713  001B                     	;# 
   714  001C                     	;# 
   715  008C                     	;# 
   716  008E                     	;# 
   717  0091                     	;# 
   718  0092                     	;# 
   719  0095                     	;# 
   720  0096                     	;# 
   721  0097                     	;# 
   722  0098                     	;# 
   723  0099                     	;# 
   724  009A                     	;# 
   725  009B                     	;# 
   726  009B                     	;# 
   727  009C                     	;# 
   728  009D                     	;# 
   729  009E                     	;# 
   730  009F                     	;# 
   731  010C                     	;# 
   732  010E                     	;# 
   733  0111                     	;# 
   734  0112                     	;# 
   735  0113                     	;# 
   736  0114                     	;# 
   737  0115                     	;# 
   738  0116                     	;# 
   739  0117                     	;# 
   740  0118                     	;# 
   741  0119                     	;# 
   742  011D                     	;# 
   743  018C                     	;# 
   744  018E                     	;# 
   745  0191                     	;# 
   746  0191                     	;# 
   747  0192                     	;# 
   748  0193                     	;# 
   749  0193                     	;# 
   750  0194                     	;# 
   751  0195                     	;# 
   752  0196                     	;# 
   753  0197                     	;# 
   754  0199                     	;# 
   755  019A                     	;# 
   756  019B                     	;# 
   757  019B                     	;# 
   758  019C                     	;# 
   759  019D                     	;# 
   760  019E                     	;# 
   761  019F                     	;# 
   762  020C                     	;# 
   763  0211                     	;# 
   764  0211                     	;# 
   765  0212                     	;# 
   766  0212                     	;# 
   767  0213                     	;# 
   768  0213                     	;# 
   769  0214                     	;# 
   770  0214                     	;# 
   771  0215                     	;# 
   772  0215                     	;# 
   773  0215                     	;# 
   774  0216                     	;# 
   775  0216                     	;# 
   776  0217                     	;# 
   777  0217                     	;# 
   778  0391                     	;# 
   779  0392                     	;# 
   780  0393                     	;# 
   781  039A                     	;# 
   782  039B                     	;# 
   783  0611                     	;# 
   784  0612                     	;# 
   785  0613                     	;# 
   786  0613                     	;# 
   787  0614                     	;# 
   788  0615                     	;# 
   789  0616                     	;# 
   790  0616                     	;# 
   791  0691                     	;# 
   792  0692                     	;# 
   793  0693                     	;# 
   794  0694                     	;# 
   795  0695                     	;# 
   796  0E8E                     	;# 
   797  0E8F                     	;# 
   798  0E90                     	;# 
   799  0E91                     	;# 
   800  0E92                     	;# 
   801  0E93                     	;# 
   802  0E94                     	;# 
   803  0E94                     	;# 
   804  0E95                     	;# 
   805  0E96                     	;# 
   806  0E97                     	;# 
   807  0E98                     	;# 
   808  0E99                     	;# 
   809  0E9A                     	;# 
   810  0E9B                     	;# 
   811  0E9C                     	;# 
   812  0E9D                     	;# 
   813  0E9E                     	;# 
   814  0E9F                     	;# 
   815  0FE4                     	;# 
   816  0FE5                     	;# 
   817  0FE6                     	;# 
   818  0FE7                     	;# 
   819  0FE8                     	;# 
   820  0FE9                     	;# 
   821  0FEA                     	;# 
   822  0FEB                     	;# 
   823  0FED                     	;# 
   824  0FEE                     	;# 
   825  0FEF                     	;# 
   826  0000                     	;# 
   827  0001                     	;# 
   828  0002                     	;# 
   829  0003                     	;# 
   830  0004                     	;# 
   831  0005                     	;# 
   832  0006                     	;# 
   833  0007                     	;# 
   834  0008                     	;# 
   835  0009                     	;# 
   836  000A                     	;# 
   837  000B                     	;# 
   838  000C                     	;# 
   839  000E                     	;# 
   840  0011                     	;# 
   841  0012                     	;# 
   842  0015                     	;# 
   843  0016                     	;# 
   844  0016                     	;# 
   845  0017                     	;# 
   846  0018                     	;# 
   847  0019                     	;# 
   848  001A                     	;# 
   849  001B                     	;# 
   850  001C                     	;# 
   851  008C                     	;# 
   852  008E                     	;# 
   853  0091                     	;# 
   854  0092                     	;# 
   855  0095                     	;# 
   856  0096                     	;# 
   857  0097                     	;# 
   858  0098                     	;# 
   859  0099                     	;# 
   860  009A                     	;# 
   861  009B                     	;# 
   862  009B                     	;# 
   863  009C                     	;# 
   864  009D                     	;# 
   865  009E                     	;# 
   866  009F                     	;# 
   867  010C                     	;# 
   868  010E                     	;# 
   869  0111                     	;# 
   870  0112                     	;# 
   871  0113                     	;# 
   872  0114                     	;# 
   873  0115                     	;# 
   874  0116                     	;# 
   875  0117                     	;# 
   876  0118                     	;# 
   877  0119                     	;# 
   878  011D                     	;# 
   879  018C                     	;# 
   880  018E                     	;# 
   881  0191                     	;# 
   882  0191                     	;# 
   883  0192                     	;# 
   884  0193                     	;# 
   885  0193                     	;# 
   886  0194                     	;# 
   887  0195                     	;# 
   888  0196                     	;# 
   889  0197                     	;# 
   890  0199                     	;# 
   891  019A                     	;# 
   892  019B                     	;# 
   893  019B                     	;# 
   894  019C                     	;# 
   895  019D                     	;# 
   896  019E                     	;# 
   897  019F                     	;# 
   898  020C                     	;# 
   899  0211                     	;# 
   900  0211                     	;# 
   901  0212                     	;# 
   902  0212                     	;# 
   903  0213                     	;# 
   904  0213                     	;# 
   905  0214                     	;# 
   906  0214                     	;# 
   907  0215                     	;# 
   908  0215                     	;# 
   909  0215                     	;# 
   910  0216                     	;# 
   911  0216                     	;# 
   912  0217                     	;# 
   913  0217                     	;# 
   914  0391                     	;# 
   915  0392                     	;# 
   916  0393                     	;# 
   917  039A                     	;# 
   918  039B                     	;# 
   919  0611                     	;# 
   920  0612                     	;# 
   921  0613                     	;# 
   922  0613                     	;# 
   923  0614                     	;# 
   924  0615                     	;# 
   925  0616                     	;# 
   926  0616                     	;# 
   927  0691                     	;# 
   928  0692                     	;# 
   929  0693                     	;# 
   930  0694                     	;# 
   931  0695                     	;# 
   932  0E8E                     	;# 
   933  0E8F                     	;# 
   934  0E90                     	;# 
   935  0E91                     	;# 
   936  0E92                     	;# 
   937  0E93                     	;# 
   938  0E94                     	;# 
   939  0E94                     	;# 
   940  0E95                     	;# 
   941  0E96                     	;# 
   942  0E97                     	;# 
   943  0E98                     	;# 
   944  0E99                     	;# 
   945  0E9A                     	;# 
   946  0E9B                     	;# 
   947  0E9C                     	;# 
   948  0E9D                     	;# 
   949  0E9E                     	;# 
   950  0E9F                     	;# 
   951  0FE4                     	;# 
   952  0FE5                     	;# 
   953  0FE6                     	;# 
   954  0FE7                     	;# 
   955  0FE8                     	;# 
   956  0FE9                     	;# 
   957  0FEA                     	;# 
   958  0FEB                     	;# 
   959  0FED                     	;# 
   960  0FEE                     	;# 
   961  0FEF                     	;# 
   962  0000                     	;# 
   963  0001                     	;# 
   964  0002                     	;# 
   965  0003                     	;# 
   966  0004                     	;# 
   967  0005                     	;# 
   968  0006                     	;# 
   969  0007                     	;# 
   970  0008                     	;# 
   971  0009                     	;# 
   972  000A                     	;# 
   973  000B                     	;# 
   974  000C                     	;# 
   975  000E                     	;# 
   976  0011                     	;# 
   977  0012                     	;# 
   978  0015                     	;# 
   979  0016                     	;# 
   980  0016                     	;# 
   981  0017                     	;# 
   982  0018                     	;# 
   983  0019                     	;# 
   984  001A                     	;# 
   985  001B                     	;# 
   986  001C                     	;# 
   987  008C                     	;# 
   988  008E                     	;# 
   989  0091                     	;# 
   990  0092                     	;# 
   991  0095                     	;# 
   992  0096                     	;# 
   993  0097                     	;# 
   994  0098                     	;# 
   995  0099                     	;# 
   996  009A                     	;# 
   997  009B                     	;# 
   998  009B                     	;# 
   999  009C                     	;# 
  1000  009D                     	;# 
  1001  009E                     	;# 
  1002  009F                     	;# 
  1003  010C                     	;# 
  1004  010E                     	;# 
  1005  0111                     	;# 
  1006  0112                     	;# 
  1007  0113                     	;# 
  1008  0114                     	;# 
  1009  0115                     	;# 
  1010  0116                     	;# 
  1011  0117                     	;# 
  1012  0118                     	;# 
  1013  0119                     	;# 
  1014  011D                     	;# 
  1015  018C                     	;# 
  1016  018E                     	;# 
  1017  0191                     	;# 
  1018  0191                     	;# 
  1019  0192                     	;# 
  1020  0193                     	;# 
  1021  0193                     	;# 
  1022  0194                     	;# 
  1023  0195                     	;# 
  1024  0196                     	;# 
  1025  0197                     	;# 
  1026  0199                     	;# 
  1027  019A                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019C                     	;# 
  1031  019D                     	;# 
  1032  019E                     	;# 
  1033  019F                     	;# 
  1034  020C                     	;# 
  1035  0211                     	;# 
  1036  0211                     	;# 
  1037  0212                     	;# 
  1038  0212                     	;# 
  1039  0213                     	;# 
  1040  0213                     	;# 
  1041  0214                     	;# 
  1042  0214                     	;# 
  1043  0215                     	;# 
  1044  0215                     	;# 
  1045  0215                     	;# 
  1046  0216                     	;# 
  1047  0216                     	;# 
  1048  0217                     	;# 
  1049  0217                     	;# 
  1050  0391                     	;# 
  1051  0392                     	;# 
  1052  0393                     	;# 
  1053  039A                     	;# 
  1054  039B                     	;# 
  1055  0611                     	;# 
  1056  0612                     	;# 
  1057  0613                     	;# 
  1058  0613                     	;# 
  1059  0614                     	;# 
  1060  0615                     	;# 
  1061  0616                     	;# 
  1062  0616                     	;# 
  1063  0691                     	;# 
  1064  0692                     	;# 
  1065  0693                     	;# 
  1066  0694                     	;# 
  1067  0695                     	;# 
  1068  0E8E                     	;# 
  1069  0E8F                     	;# 
  1070  0E90                     	;# 
  1071  0E91                     	;# 
  1072  0E92                     	;# 
  1073  0E93                     	;# 
  1074  0E94                     	;# 
  1075  0E94                     	;# 
  1076  0E95                     	;# 
  1077  0E96                     	;# 
  1078  0E97                     	;# 
  1079  0E98                     	;# 
  1080  0E99                     	;# 
  1081  0E9A                     	;# 
  1082  0E9B                     	;# 
  1083  0E9C                     	;# 
  1084  0E9D                     	;# 
  1085  0E9E                     	;# 
  1086  0E9F                     	;# 
  1087  0FE4                     	;# 
  1088  0FE5                     	;# 
  1089  0FE6                     	;# 
  1090  0FE7                     	;# 
  1091  0FE8                     	;# 
  1092  0FE9                     	;# 
  1093  0FEA                     	;# 
  1094  0FEB                     	;# 
  1095  0FED                     	;# 
  1096  0FEE                     	;# 
  1097  0FEF                     	;# 
  1098  0000                     	;# 
  1099  0001                     	;# 
  1100  0002                     	;# 
  1101  0003                     	;# 
  1102  0004                     	;# 
  1103  0005                     	;# 
  1104  0006                     	;# 
  1105  0007                     	;# 
  1106  0008                     	;# 
  1107  0009                     	;# 
  1108  000A                     	;# 
  1109  000B                     	;# 
  1110  000C                     	;# 
  1111  000E                     	;# 
  1112  0011                     	;# 
  1113  0012                     	;# 
  1114  0015                     	;# 
  1115  0016                     	;# 
  1116  0016                     	;# 
  1117  0017                     	;# 
  1118  0018                     	;# 
  1119  0019                     	;# 
  1120  001A                     	;# 
  1121  001B                     	;# 
  1122  001C                     	;# 
  1123  008C                     	;# 
  1124  008E                     	;# 
  1125  0091                     	;# 
  1126  0092                     	;# 
  1127  0095                     	;# 
  1128  0096                     	;# 
  1129  0097                     	;# 
  1130  0098                     	;# 
  1131  0099                     	;# 
  1132  009A                     	;# 
  1133  009B                     	;# 
  1134  009B                     	;# 
  1135  009C                     	;# 
  1136  009D                     	;# 
  1137  009E                     	;# 
  1138  009F                     	;# 
  1139  010C                     	;# 
  1140  010E                     	;# 
  1141  0111                     	;# 
  1142  0112                     	;# 
  1143  0113                     	;# 
  1144  0114                     	;# 
  1145  0115                     	;# 
  1146  0116                     	;# 
  1147  0117                     	;# 
  1148  0118                     	;# 
  1149  0119                     	;# 
  1150  011D                     	;# 
  1151  018C                     	;# 
  1152  018E                     	;# 
  1153  0191                     	;# 
  1154  0191                     	;# 
  1155  0192                     	;# 
  1156  0193                     	;# 
  1157  0193                     	;# 
  1158  0194                     	;# 
  1159  0195                     	;# 
  1160  0196                     	;# 
  1161  0197                     	;# 
  1162  0199                     	;# 
  1163  019A                     	;# 
  1164  019B                     	;# 
  1165  019B                     	;# 
  1166  019C                     	;# 
  1167  019D                     	;# 
  1168  019E                     	;# 
  1169  019F                     	;# 
  1170  020C                     	;# 
  1171  0211                     	;# 
  1172  0211                     	;# 
  1173  0212                     	;# 
  1174  0212                     	;# 
  1175  0213                     	;# 
  1176  0213                     	;# 
  1177  0214                     	;# 
  1178  0214                     	;# 
  1179  0215                     	;# 
  1180  0215                     	;# 
  1181  0215                     	;# 
  1182  0216                     	;# 
  1183  0216                     	;# 
  1184  0217                     	;# 
  1185  0217                     	;# 
  1186  0391                     	;# 
  1187  0392                     	;# 
  1188  0393                     	;# 
  1189  039A                     	;# 
  1190  039B                     	;# 
  1191  0611                     	;# 
  1192  0612                     	;# 
  1193  0613                     	;# 
  1194  0613                     	;# 
  1195  0614                     	;# 
  1196  0615                     	;# 
  1197  0616                     	;# 
  1198  0616                     	;# 
  1199  0691                     	;# 
  1200  0692                     	;# 
  1201  0693                     	;# 
  1202  0694                     	;# 
  1203  0695                     	;# 
  1204  0E8E                     	;# 
  1205  0E8F                     	;# 
  1206  0E90                     	;# 
  1207  0E91                     	;# 
  1208  0E92                     	;# 
  1209  0E93                     	;# 
  1210  0E94                     	;# 
  1211  0E94                     	;# 
  1212  0E95                     	;# 
  1213  0E96                     	;# 
  1214  0E97                     	;# 
  1215  0E98                     	;# 
  1216  0E99                     	;# 
  1217  0E9A                     	;# 
  1218  0E9B                     	;# 
  1219  0E9C                     	;# 
  1220  0E9D                     	;# 
  1221  0E9E                     	;# 
  1222  0E9F                     	;# 
  1223  0FE4                     	;# 
  1224  0FE5                     	;# 
  1225  0FE6                     	;# 
  1226  0FE7                     	;# 
  1227  0FE8                     	;# 
  1228  0FE9                     	;# 
  1229  0FEA                     	;# 
  1230  0FEB                     	;# 
  1231  0FED                     	;# 
  1232  0FEE                     	;# 
  1233  0FEF                     	;# 
  1234  0000                     	;# 
  1235  0001                     	;# 
  1236  0002                     	;# 
  1237  0003                     	;# 
  1238  0004                     	;# 
  1239  0005                     	;# 
  1240  0006                     	;# 
  1241  0007                     	;# 
  1242  0008                     	;# 
  1243  0009                     	;# 
  1244  000A                     	;# 
  1245  000B                     	;# 
  1246  000C                     	;# 
  1247  000E                     	;# 
  1248  0011                     	;# 
  1249  0012                     	;# 
  1250  0015                     	;# 
  1251  0016                     	;# 
  1252  0016                     	;# 
  1253  0017                     	;# 
  1254  0018                     	;# 
  1255  0019                     	;# 
  1256  001A                     	;# 
  1257  001B                     	;# 
  1258  001C                     	;# 
  1259  008C                     	;# 
  1260  008E                     	;# 
  1261  0091                     	;# 
  1262  0092                     	;# 
  1263  0095                     	;# 
  1264  0096                     	;# 
  1265  0097                     	;# 
  1266  0098                     	;# 
  1267  0099                     	;# 
  1268  009A                     	;# 
  1269  009B                     	;# 
  1270  009B                     	;# 
  1271  009C                     	;# 
  1272  009D                     	;# 
  1273  009E                     	;# 
  1274  009F                     	;# 
  1275  010C                     	;# 
  1276  010E                     	;# 
  1277  0111                     	;# 
  1278  0112                     	;# 
  1279  0113                     	;# 
  1280  0114                     	;# 
  1281  0115                     	;# 
  1282  0116                     	;# 
  1283  0117                     	;# 
  1284  0118                     	;# 
  1285  0119                     	;# 
  1286  011D                     	;# 
  1287  018C                     	;# 
  1288  018E                     	;# 
  1289  0191                     	;# 
  1290  0191                     	;# 
  1291  0192                     	;# 
  1292  0193                     	;# 
  1293  0193                     	;# 
  1294  0194                     	;# 
  1295  0195                     	;# 
  1296  0196                     	;# 
  1297  0197                     	;# 
  1298  0199                     	;# 
  1299  019A                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019C                     	;# 
  1303  019D                     	;# 
  1304  019E                     	;# 
  1305  019F                     	;# 
  1306  020C                     	;# 
  1307  0211                     	;# 
  1308  0211                     	;# 
  1309  0212                     	;# 
  1310  0212                     	;# 
  1311  0213                     	;# 
  1312  0213                     	;# 
  1313  0214                     	;# 
  1314  0214                     	;# 
  1315  0215                     	;# 
  1316  0215                     	;# 
  1317  0215                     	;# 
  1318  0216                     	;# 
  1319  0216                     	;# 
  1320  0217                     	;# 
  1321  0217                     	;# 
  1322  0391                     	;# 
  1323  0392                     	;# 
  1324  0393                     	;# 
  1325  039A                     	;# 
  1326  039B                     	;# 
  1327  0611                     	;# 
  1328  0612                     	;# 
  1329  0613                     	;# 
  1330  0613                     	;# 
  1331  0614                     	;# 
  1332  0615                     	;# 
  1333  0616                     	;# 
  1334  0616                     	;# 
  1335  0691                     	;# 
  1336  0692                     	;# 
  1337  0693                     	;# 
  1338  0694                     	;# 
  1339  0695                     	;# 
  1340  0E8E                     	;# 
  1341  0E8F                     	;# 
  1342  0E90                     	;# 
  1343  0E91                     	;# 
  1344  0E92                     	;# 
  1345  0E93                     	;# 
  1346  0E94                     	;# 
  1347  0E94                     	;# 
  1348  0E95                     	;# 
  1349  0E96                     	;# 
  1350  0E97                     	;# 
  1351  0E98                     	;# 
  1352  0E99                     	;# 
  1353  0E9A                     	;# 
  1354  0E9B                     	;# 
  1355  0E9C                     	;# 
  1356  0E9D                     	;# 
  1357  0E9E                     	;# 
  1358  0E9F                     	;# 
  1359  0FE4                     	;# 
  1360  0FE5                     	;# 
  1361  0FE6                     	;# 
  1362  0FE7                     	;# 
  1363  0FE8                     	;# 
  1364  0FE9                     	;# 
  1365  0FEA                     	;# 
  1366  0FEB                     	;# 
  1367  0FED                     	;# 
  1368  0FEE                     	;# 
  1369  0FEF                     	;# 
  1370  0000                     	;# 
  1371  0001                     	;# 
  1372  0002                     	;# 
  1373  0003                     	;# 
  1374  0004                     	;# 
  1375  0005                     	;# 
  1376  0006                     	;# 
  1377  0007                     	;# 
  1378  0008                     	;# 
  1379  0009                     	;# 
  1380  000A                     	;# 
  1381  000B                     	;# 
  1382  000C                     	;# 
  1383  000E                     	;# 
  1384  0011                     	;# 
  1385  0012                     	;# 
  1386  0015                     	;# 
  1387  0016                     	;# 
  1388  0016                     	;# 
  1389  0017                     	;# 
  1390  0018                     	;# 
  1391  0019                     	;# 
  1392  001A                     	;# 
  1393  001B                     	;# 
  1394  001C                     	;# 
  1395  008C                     	;# 
  1396  008E                     	;# 
  1397  0091                     	;# 
  1398  0092                     	;# 
  1399  0095                     	;# 
  1400  0096                     	;# 
  1401  0097                     	;# 
  1402  0098                     	;# 
  1403  0099                     	;# 
  1404  009A                     	;# 
  1405  009B                     	;# 
  1406  009B                     	;# 
  1407  009C                     	;# 
  1408  009D                     	;# 
  1409  009E                     	;# 
  1410  009F                     	;# 
  1411  010C                     	;# 
  1412  010E                     	;# 
  1413  0111                     	;# 
  1414  0112                     	;# 
  1415  0113                     	;# 
  1416  0114                     	;# 
  1417  0115                     	;# 
  1418  0116                     	;# 
  1419  0117                     	;# 
  1420  0118                     	;# 
  1421  0119                     	;# 
  1422  011D                     	;# 
  1423  018C                     	;# 
  1424  018E                     	;# 
  1425  0191                     	;# 
  1426  0191                     	;# 
  1427  0192                     	;# 
  1428  0193                     	;# 
  1429  0193                     	;# 
  1430  0194                     	;# 
  1431  0195                     	;# 
  1432  0196                     	;# 
  1433  0197                     	;# 
  1434  0199                     	;# 
  1435  019A                     	;# 
  1436  019B                     	;# 
  1437  019B                     	;# 
  1438  019C                     	;# 
  1439  019D                     	;# 
  1440  019E                     	;# 
  1441  019F                     	;# 
  1442  020C                     	;# 
  1443  0211                     	;# 
  1444  0211                     	;# 
  1445  0212                     	;# 
  1446  0212                     	;# 
  1447  0213                     	;# 
  1448  0213                     	;# 
  1449  0214                     	;# 
  1450  0214                     	;# 
  1451  0215                     	;# 
  1452  0215                     	;# 
  1453  0215                     	;# 
  1454  0216                     	;# 
  1455  0216                     	;# 
  1456  0217                     	;# 
  1457  0217                     	;# 
  1458  0391                     	;# 
  1459  0392                     	;# 
  1460  0393                     	;# 
  1461  039A                     	;# 
  1462  039B                     	;# 
  1463  0611                     	;# 
  1464  0612                     	;# 
  1465  0613                     	;# 
  1466  0613                     	;# 
  1467  0614                     	;# 
  1468  0615                     	;# 
  1469  0616                     	;# 
  1470  0616                     	;# 
  1471  0691                     	;# 
  1472  0692                     	;# 
  1473  0693                     	;# 
  1474  0694                     	;# 
  1475  0695                     	;# 
  1476  0E8E                     	;# 
  1477  0E8F                     	;# 
  1478  0E90                     	;# 
  1479  0E91                     	;# 
  1480  0E92                     	;# 
  1481  0E93                     	;# 
  1482  0E94                     	;# 
  1483  0E94                     	;# 
  1484  0E95                     	;# 
  1485  0E96                     	;# 
  1486  0E97                     	;# 
  1487  0E98                     	;# 
  1488  0E99                     	;# 
  1489  0E9A                     	;# 
  1490  0E9B                     	;# 
  1491  0E9C                     	;# 
  1492  0E9D                     	;# 
  1493  0E9E                     	;# 
  1494  0E9F                     	;# 
  1495  0FE4                     	;# 
  1496  0FE5                     	;# 
  1497  0FE6                     	;# 
  1498  0FE7                     	;# 
  1499  0FE8                     	;# 
  1500  0FE9                     	;# 
  1501  0FEA                     	;# 
  1502  0FEB                     	;# 
  1503  0FED                     	;# 
  1504  0FEE                     	;# 
  1505  0FEF                     	;# 
  1506  0000                     	;# 
  1507  0001                     	;# 
  1508  0002                     	;# 
  1509  0003                     	;# 
  1510  0004                     	;# 
  1511  0005                     	;# 
  1512  0006                     	;# 
  1513  0007                     	;# 
  1514  0008                     	;# 
  1515  0009                     	;# 
  1516  000A                     	;# 
  1517  000B                     	;# 
  1518  000C                     	;# 
  1519  000E                     	;# 
  1520  0011                     	;# 
  1521  0012                     	;# 
  1522  0015                     	;# 
  1523  0016                     	;# 
  1524  0016                     	;# 
  1525  0017                     	;# 
  1526  0018                     	;# 
  1527  0019                     	;# 
  1528  001A                     	;# 
  1529  001B                     	;# 
  1530  001C                     	;# 
  1531  008C                     	;# 
  1532  008E                     	;# 
  1533  0091                     	;# 
  1534  0092                     	;# 
  1535  0095                     	;# 
  1536  0096                     	;# 
  1537  0097                     	;# 
  1538  0098                     	;# 
  1539  0099                     	;# 
  1540  009A                     	;# 
  1541  009B                     	;# 
  1542  009B                     	;# 
  1543  009C                     	;# 
  1544  009D                     	;# 
  1545  009E                     	;# 
  1546  009F                     	;# 
  1547  010C                     	;# 
  1548  010E                     	;# 
  1549  0111                     	;# 
  1550  0112                     	;# 
  1551  0113                     	;# 
  1552  0114                     	;# 
  1553  0115                     	;# 
  1554  0116                     	;# 
  1555  0117                     	;# 
  1556  0118                     	;# 
  1557  0119                     	;# 
  1558  011D                     	;# 
  1559  018C                     	;# 
  1560  018E                     	;# 
  1561  0191                     	;# 
  1562  0191                     	;# 
  1563  0192                     	;# 
  1564  0193                     	;# 
  1565  0193                     	;# 
  1566  0194                     	;# 
  1567  0195                     	;# 
  1568  0196                     	;# 
  1569  0197                     	;# 
  1570  0199                     	;# 
  1571  019A                     	;# 
  1572  019B                     	;# 
  1573  019B                     	;# 
  1574  019C                     	;# 
  1575  019D                     	;# 
  1576  019E                     	;# 
  1577  019F                     	;# 
  1578  020C                     	;# 
  1579  0211                     	;# 
  1580  0211                     	;# 
  1581  0212                     	;# 
  1582  0212                     	;# 
  1583  0213                     	;# 
  1584  0213                     	;# 
  1585  0214                     	;# 
  1586  0214                     	;# 
  1587  0215                     	;# 
  1588  0215                     	;# 
  1589  0215                     	;# 
  1590  0216                     	;# 
  1591  0216                     	;# 
  1592  0217                     	;# 
  1593  0217                     	;# 
  1594  0391                     	;# 
  1595  0392                     	;# 
  1596  0393                     	;# 
  1597  039A                     	;# 
  1598  039B                     	;# 
  1599  0611                     	;# 
  1600  0612                     	;# 
  1601  0613                     	;# 
  1602  0613                     	;# 
  1603  0614                     	;# 
  1604  0615                     	;# 
  1605  0616                     	;# 
  1606  0616                     	;# 
  1607  0691                     	;# 
  1608  0692                     	;# 
  1609  0693                     	;# 
  1610  0694                     	;# 
  1611  0695                     	;# 
  1612  0E8E                     	;# 
  1613  0E8F                     	;# 
  1614  0E90                     	;# 
  1615  0E91                     	;# 
  1616  0E92                     	;# 
  1617  0E93                     	;# 
  1618  0E94                     	;# 
  1619  0E94                     	;# 
  1620  0E95                     	;# 
  1621  0E96                     	;# 
  1622  0E97                     	;# 
  1623  0E98                     	;# 
  1624  0E99                     	;# 
  1625  0E9A                     	;# 
  1626  0E9B                     	;# 
  1627  0E9C                     	;# 
  1628  0E9D                     	;# 
  1629  0E9E                     	;# 
  1630  0E9F                     	;# 
  1631  0FE4                     	;# 
  1632  0FE5                     	;# 
  1633  0FE6                     	;# 
  1634  0FE7                     	;# 
  1635  0FE8                     	;# 
  1636  0FE9                     	;# 
  1637  0FEA                     	;# 
  1638  0FEB                     	;# 
  1639  0FED                     	;# 
  1640  0FEE                     	;# 
  1641  0FEF                     	;# 
  1642  0000                     	;# 
  1643  0001                     	;# 
  1644  0002                     	;# 
  1645  0003                     	;# 
  1646  0004                     	;# 
  1647  0005                     	;# 
  1648  0006                     	;# 
  1649  0007                     	;# 
  1650  0008                     	;# 
  1651  0009                     	;# 
  1652  000A                     	;# 
  1653  000B                     	;# 
  1654  000C                     	;# 
  1655  000E                     	;# 
  1656  0011                     	;# 
  1657  0012                     	;# 
  1658  0015                     	;# 
  1659  0016                     	;# 
  1660  0016                     	;# 
  1661  0017                     	;# 
  1662  0018                     	;# 
  1663  0019                     	;# 
  1664  001A                     	;# 
  1665  001B                     	;# 
  1666  001C                     	;# 
  1667  008C                     	;# 
  1668  008E                     	;# 
  1669  0091                     	;# 
  1670  0092                     	;# 
  1671  0095                     	;# 
  1672  0096                     	;# 
  1673  0097                     	;# 
  1674  0098                     	;# 
  1675  0099                     	;# 
  1676  009A                     	;# 
  1677  009B                     	;# 
  1678  009B                     	;# 
  1679  009C                     	;# 
  1680  009D                     	;# 
  1681  009E                     	;# 
  1682  009F                     	;# 
  1683  010C                     	;# 
  1684  010E                     	;# 
  1685  0111                     	;# 
  1686  0112                     	;# 
  1687  0113                     	;# 
  1688  0114                     	;# 
  1689  0115                     	;# 
  1690  0116                     	;# 
  1691  0117                     	;# 
  1692  0118                     	;# 
  1693  0119                     	;# 
  1694  011D                     	;# 
  1695  018C                     	;# 
  1696  018E                     	;# 
  1697  0191                     	;# 
  1698  0191                     	;# 
  1699  0192                     	;# 
  1700  0193                     	;# 
  1701  0193                     	;# 
  1702  0194                     	;# 
  1703  0195                     	;# 
  1704  0196                     	;# 
  1705  0197                     	;# 
  1706  0199                     	;# 
  1707  019A                     	;# 
  1708  019B                     	;# 
  1709  019B                     	;# 
  1710  019C                     	;# 
  1711  019D                     	;# 
  1712  019E                     	;# 
  1713  019F                     	;# 
  1714  020C                     	;# 
  1715  0211                     	;# 
  1716  0211                     	;# 
  1717  0212                     	;# 
  1718  0212                     	;# 
  1719  0213                     	;# 
  1720  0213                     	;# 
  1721  0214                     	;# 
  1722  0214                     	;# 
  1723  0215                     	;# 
  1724  0215                     	;# 
  1725  0215                     	;# 
  1726  0216                     	;# 
  1727  0216                     	;# 
  1728  0217                     	;# 
  1729  0217                     	;# 
  1730  0391                     	;# 
  1731  0392                     	;# 
  1732  0393                     	;# 
  1733  039A                     	;# 
  1734  039B                     	;# 
  1735  0611                     	;# 
  1736  0612                     	;# 
  1737  0613                     	;# 
  1738  0613                     	;# 
  1739  0614                     	;# 
  1740  0615                     	;# 
  1741  0616                     	;# 
  1742  0616                     	;# 
  1743  0691                     	;# 
  1744  0692                     	;# 
  1745  0693                     	;# 
  1746  0694                     	;# 
  1747  0695                     	;# 
  1748  0E8E                     	;# 
  1749  0E8F                     	;# 
  1750  0E90                     	;# 
  1751  0E91                     	;# 
  1752  0E92                     	;# 
  1753  0E93                     	;# 
  1754  0E94                     	;# 
  1755  0E94                     	;# 
  1756  0E95                     	;# 
  1757  0E96                     	;# 
  1758  0E97                     	;# 
  1759  0E98                     	;# 
  1760  0E99                     	;# 
  1761  0E9A                     	;# 
  1762  0E9B                     	;# 
  1763  0E9C                     	;# 
  1764  0E9D                     	;# 
  1765  0E9E                     	;# 
  1766  0E9F                     	;# 
  1767  0FE4                     	;# 
  1768  0FE5                     	;# 
  1769  0FE6                     	;# 
  1770  0FE7                     	;# 
  1771  0FE8                     	;# 
  1772  0FE9                     	;# 
  1773  0FEA                     	;# 
  1774  0FEB                     	;# 
  1775  0FED                     	;# 
  1776  0FEE                     	;# 
  1777  0FEF                     	;# 
  1778  0000                     	;# 
  1779  0001                     	;# 
  1780  0002                     	;# 
  1781  0003                     	;# 
  1782  0004                     	;# 
  1783  0005                     	;# 
  1784  0006                     	;# 
  1785  0007                     	;# 
  1786  0008                     	;# 
  1787  0009                     	;# 
  1788  000A                     	;# 
  1789  000B                     	;# 
  1790  000C                     	;# 
  1791  000E                     	;# 
  1792  0011                     	;# 
  1793  0012                     	;# 
  1794  0015                     	;# 
  1795  0016                     	;# 
  1796  0016                     	;# 
  1797  0017                     	;# 
  1798  0018                     	;# 
  1799  0019                     	;# 
  1800  001A                     	;# 
  1801  001B                     	;# 
  1802  001C                     	;# 
  1803  008C                     	;# 
  1804  008E                     	;# 
  1805  0091                     	;# 
  1806  0092                     	;# 
  1807  0095                     	;# 
  1808  0096                     	;# 
  1809  0097                     	;# 
  1810  0098                     	;# 
  1811  0099                     	;# 
  1812  009A                     	;# 
  1813  009B                     	;# 
  1814  009B                     	;# 
  1815  009C                     	;# 
  1816  009D                     	;# 
  1817  009E                     	;# 
  1818  009F                     	;# 
  1819  010C                     	;# 
  1820  010E                     	;# 
  1821  0111                     	;# 
  1822  0112                     	;# 
  1823  0113                     	;# 
  1824  0114                     	;# 
  1825  0115                     	;# 
  1826  0116                     	;# 
  1827  0117                     	;# 
  1828  0118                     	;# 
  1829  0119                     	;# 
  1830  011D                     	;# 
  1831  018C                     	;# 
  1832  018E                     	;# 
  1833  0191                     	;# 
  1834  0191                     	;# 
  1835  0192                     	;# 
  1836  0193                     	;# 
  1837  0193                     	;# 
  1838  0194                     	;# 
  1839  0195                     	;# 
  1840  0196                     	;# 
  1841  0197                     	;# 
  1842  0199                     	;# 
  1843  019A                     	;# 
  1844  019B                     	;# 
  1845  019B                     	;# 
  1846  019C                     	;# 
  1847  019D                     	;# 
  1848  019E                     	;# 
  1849  019F                     	;# 
  1850  020C                     	;# 
  1851  0211                     	;# 
  1852  0211                     	;# 
  1853  0212                     	;# 
  1854  0212                     	;# 
  1855  0213                     	;# 
  1856  0213                     	;# 
  1857  0214                     	;# 
  1858  0214                     	;# 
  1859  0215                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0216                     	;# 
  1863  0216                     	;# 
  1864  0217                     	;# 
  1865  0217                     	;# 
  1866  0391                     	;# 
  1867  0392                     	;# 
  1868  0393                     	;# 
  1869  039A                     	;# 
  1870  039B                     	;# 
  1871  0611                     	;# 
  1872  0612                     	;# 
  1873  0613                     	;# 
  1874  0613                     	;# 
  1875  0614                     	;# 
  1876  0615                     	;# 
  1877  0616                     	;# 
  1878  0616                     	;# 
  1879  0691                     	;# 
  1880  0692                     	;# 
  1881  0693                     	;# 
  1882  0694                     	;# 
  1883  0695                     	;# 
  1884  0E8E                     	;# 
  1885  0E8F                     	;# 
  1886  0E90                     	;# 
  1887  0E91                     	;# 
  1888  0E92                     	;# 
  1889  0E93                     	;# 
  1890  0E94                     	;# 
  1891  0E94                     	;# 
  1892  0E95                     	;# 
  1893  0E96                     	;# 
  1894  0E97                     	;# 
  1895  0E98                     	;# 
  1896  0E99                     	;# 
  1897  0E9A                     	;# 
  1898  0E9B                     	;# 
  1899  0E9C                     	;# 
  1900  0E9D                     	;# 
  1901  0E9E                     	;# 
  1902  0E9F                     	;# 
  1903  0FE4                     	;# 
  1904  0FE5                     	;# 
  1905  0FE6                     	;# 
  1906  0FE7                     	;# 
  1907  0FE8                     	;# 
  1908  0FE9                     	;# 
  1909  0FEA                     	;# 
  1910  0FEB                     	;# 
  1911  0FED                     	;# 
  1912  0FEE                     	;# 
  1913  0FEF                     	;# 
  1914  0000                     	;# 
  1915  0001                     	;# 
  1916  0002                     	;# 
  1917  0003                     	;# 
  1918  0004                     	;# 
  1919  0005                     	;# 
  1920  0006                     	;# 
  1921  0007                     	;# 
  1922  0008                     	;# 
  1923  0009                     	;# 
  1924  000A                     	;# 
  1925  000B                     	;# 
  1926  000C                     	;# 
  1927  000E                     	;# 
  1928  0011                     	;# 
  1929  0012                     	;# 
  1930  0015                     	;# 
  1931  0016                     	;# 
  1932  0016                     	;# 
  1933  0017                     	;# 
  1934  0018                     	;# 
  1935  0019                     	;# 
  1936  001A                     	;# 
  1937  001B                     	;# 
  1938  001C                     	;# 
  1939  008C                     	;# 
  1940  008E                     	;# 
  1941  0091                     	;# 
  1942  0092                     	;# 
  1943  0095                     	;# 
  1944  0096                     	;# 
  1945  0097                     	;# 
  1946  0098                     	;# 
  1947  0099                     	;# 
  1948  009A                     	;# 
  1949  009B                     	;# 
  1950  009B                     	;# 
  1951  009C                     	;# 
  1952  009D                     	;# 
  1953  009E                     	;# 
  1954  009F                     	;# 
  1955  010C                     	;# 
  1956  010E                     	;# 
  1957  0111                     	;# 
  1958  0112                     	;# 
  1959  0113                     	;# 
  1960  0114                     	;# 
  1961  0115                     	;# 
  1962  0116                     	;# 
  1963  0117                     	;# 
  1964  0118                     	;# 
  1965  0119                     	;# 
  1966  011D                     	;# 
  1967  018C                     	;# 
  1968  018E                     	;# 
  1969  0191                     	;# 
  1970  0191                     	;# 
  1971  0192                     	;# 
  1972  0193                     	;# 
  1973  0193                     	;# 
  1974  0194                     	;# 
  1975  0195                     	;# 
  1976  0196                     	;# 
  1977  0197                     	;# 
  1978  0199                     	;# 
  1979  019A                     	;# 
  1980  019B                     	;# 
  1981  019B                     	;# 
  1982  019C                     	;# 
  1983  019D                     	;# 
  1984  019E                     	;# 
  1985  019F                     	;# 
  1986  020C                     	;# 
  1987  0211                     	;# 
  1988  0211                     	;# 
  1989  0212                     	;# 
  1990  0212                     	;# 
  1991  0213                     	;# 
  1992  0213                     	;# 
  1993  0214                     	;# 
  1994  0214                     	;# 
  1995  0215                     	;# 
  1996  0215                     	;# 
  1997  0215                     	;# 
  1998  0216                     	;# 
  1999  0216                     	;# 
  2000  0217                     	;# 
  2001  0217                     	;# 
  2002  0391                     	;# 
  2003  0392                     	;# 
  2004  0393                     	;# 
  2005  039A                     	;# 
  2006  039B                     	;# 
  2007  0611                     	;# 
  2008  0612                     	;# 
  2009  0613                     	;# 
  2010  0613                     	;# 
  2011  0614                     	;# 
  2012  0615                     	;# 
  2013  0616                     	;# 
  2014  0616                     	;# 
  2015  0691                     	;# 
  2016  0692                     	;# 
  2017  0693                     	;# 
  2018  0694                     	;# 
  2019  0695                     	;# 
  2020  0E8E                     	;# 
  2021  0E8F                     	;# 
  2022  0E90                     	;# 
  2023  0E91                     	;# 
  2024  0E92                     	;# 
  2025  0E93                     	;# 
  2026  0E94                     	;# 
  2027  0E94                     	;# 
  2028  0E95                     	;# 
  2029  0E96                     	;# 
  2030  0E97                     	;# 
  2031  0E98                     	;# 
  2032  0E99                     	;# 
  2033  0E9A                     	;# 
  2034  0E9B                     	;# 
  2035  0E9C                     	;# 
  2036  0E9D                     	;# 
  2037  0E9E                     	;# 
  2038  0E9F                     	;# 
  2039  0FE4                     	;# 
  2040  0FE5                     	;# 
  2041  0FE6                     	;# 
  2042  0FE7                     	;# 
  2043  0FE8                     	;# 
  2044  0FE9                     	;# 
  2045  0FEA                     	;# 
  2046  0FEB                     	;# 
  2047  0FED                     	;# 
  2048  0FEE                     	;# 
  2049  0FEF                     	;# 
  2050  0000                     	;# 
  2051  0001                     	;# 
  2052  0002                     	;# 
  2053  0003                     	;# 
  2054  0004                     	;# 
  2055  0005                     	;# 
  2056  0006                     	;# 
  2057  0007                     	;# 
  2058  0008                     	;# 
  2059  0009                     	;# 
  2060  000A                     	;# 
  2061  000B                     	;# 
  2062  000C                     	;# 
  2063  000E                     	;# 
  2064  0011                     	;# 
  2065  0012                     	;# 
  2066  0015                     	;# 
  2067  0016                     	;# 
  2068  0016                     	;# 
  2069  0017                     	;# 
  2070  0018                     	;# 
  2071  0019                     	;# 
  2072  001A                     	;# 
  2073  001B                     	;# 
  2074  001C                     	;# 
  2075  008C                     	;# 
  2076  008E                     	;# 
  2077  0091                     	;# 
  2078  0092                     	;# 
  2079  0095                     	;# 
  2080  0096                     	;# 
  2081  0097                     	;# 
  2082  0098                     	;# 
  2083  0099                     	;# 
  2084  009A                     	;# 
  2085  009B                     	;# 
  2086  009B                     	;# 
  2087  009C                     	;# 
  2088  009D                     	;# 
  2089  009E                     	;# 
  2090  009F                     	;# 
  2091  010C                     	;# 
  2092  010E                     	;# 
  2093  0111                     	;# 
  2094  0112                     	;# 
  2095  0113                     	;# 
  2096  0114                     	;# 
  2097  0115                     	;# 
  2098  0116                     	;# 
  2099  0117                     	;# 
  2100  0118                     	;# 
  2101  0119                     	;# 
  2102  011D                     	;# 
  2103  018C                     	;# 
  2104  018E                     	;# 
  2105  0191                     	;# 
  2106  0191                     	;# 
  2107  0192                     	;# 
  2108  0193                     	;# 
  2109  0193                     	;# 
  2110  0194                     	;# 
  2111  0195                     	;# 
  2112  0196                     	;# 
  2113  0197                     	;# 
  2114  0199                     	;# 
  2115  019A                     	;# 
  2116  019B                     	;# 
  2117  019B                     	;# 
  2118  019C                     	;# 
  2119  019D                     	;# 
  2120  019E                     	;# 
  2121  019F                     	;# 
  2122  020C                     	;# 
  2123  0211                     	;# 
  2124  0211                     	;# 
  2125  0212                     	;# 
  2126  0212                     	;# 
  2127  0213                     	;# 
  2128  0213                     	;# 
  2129  0214                     	;# 
  2130  0214                     	;# 
  2131  0215                     	;# 
  2132  0215                     	;# 
  2133  0215                     	;# 
  2134  0216                     	;# 
  2135  0216                     	;# 
  2136  0217                     	;# 
  2137  0217                     	;# 
  2138  0391                     	;# 
  2139  0392                     	;# 
  2140  0393                     	;# 
  2141  039A                     	;# 
  2142  039B                     	;# 
  2143  0611                     	;# 
  2144  0612                     	;# 
  2145  0613                     	;# 
  2146  0613                     	;# 
  2147  0614                     	;# 
  2148  0615                     	;# 
  2149  0616                     	;# 
  2150  0616                     	;# 
  2151  0691                     	;# 
  2152  0692                     	;# 
  2153  0693                     	;# 
  2154  0694                     	;# 
  2155  0695                     	;# 
  2156  0E8E                     	;# 
  2157  0E8F                     	;# 
  2158  0E90                     	;# 
  2159  0E91                     	;# 
  2160  0E92                     	;# 
  2161  0E93                     	;# 
  2162  0E94                     	;# 
  2163  0E94                     	;# 
  2164  0E95                     	;# 
  2165  0E96                     	;# 
  2166  0E97                     	;# 
  2167  0E98                     	;# 
  2168  0E99                     	;# 
  2169  0E9A                     	;# 
  2170  0E9B                     	;# 
  2171  0E9C                     	;# 
  2172  0E9D                     	;# 
  2173  0E9E                     	;# 
  2174  0E9F                     	;# 
  2175  0FE4                     	;# 
  2176  0FE5                     	;# 
  2177  0FE6                     	;# 
  2178  0FE7                     	;# 
  2179  0FE8                     	;# 
  2180  0FE9                     	;# 
  2181  0FEA                     	;# 
  2182  0FEB                     	;# 
  2183  0FED                     	;# 
  2184  0FEE                     	;# 
  2185  0FEF                     	;# 
  2186  0000                     	;# 
  2187  0001                     	;# 
  2188  0002                     	;# 
  2189  0003                     	;# 
  2190  0004                     	;# 
  2191  0005                     	;# 
  2192  0006                     	;# 
  2193  0007                     	;# 
  2194  0008                     	;# 
  2195  0009                     	;# 
  2196  000A                     	;# 
  2197  000B                     	;# 
  2198  000C                     	;# 
  2199  000E                     	;# 
  2200  0011                     	;# 
  2201  0012                     	;# 
  2202  0015                     	;# 
  2203  0016                     	;# 
  2204  0016                     	;# 
  2205  0017                     	;# 
  2206  0018                     	;# 
  2207  0019                     	;# 
  2208  001A                     	;# 
  2209  001B                     	;# 
  2210  001C                     	;# 
  2211  008C                     	;# 
  2212  008E                     	;# 
  2213  0091                     	;# 
  2214  0092                     	;# 
  2215  0095                     	;# 
  2216  0096                     	;# 
  2217  0097                     	;# 
  2218  0098                     	;# 
  2219  0099                     	;# 
  2220  009A                     	;# 
  2221  009B                     	;# 
  2222  009B                     	;# 
  2223  009C                     	;# 
  2224  009D                     	;# 
  2225  009E                     	;# 
  2226  009F                     	;# 
  2227  010C                     	;# 
  2228  010E                     	;# 
  2229  0111                     	;# 
  2230  0112                     	;# 
  2231  0113                     	;# 
  2232  0114                     	;# 
  2233  0115                     	;# 
  2234  0116                     	;# 
  2235  0117                     	;# 
  2236  0118                     	;# 
  2237  0119                     	;# 
  2238  011D                     	;# 
  2239  018C                     	;# 
  2240  018E                     	;# 
  2241  0191                     	;# 
  2242  0191                     	;# 
  2243  0192                     	;# 
  2244  0193                     	;# 
  2245  0193                     	;# 
  2246  0194                     	;# 
  2247  0195                     	;# 
  2248  0196                     	;# 
  2249  0197                     	;# 
  2250  0199                     	;# 
  2251  019A                     	;# 
  2252  019B                     	;# 
  2253  019B                     	;# 
  2254  019C                     	;# 
  2255  019D                     	;# 
  2256  019E                     	;# 
  2257  019F                     	;# 
  2258  020C                     	;# 
  2259  0211                     	;# 
  2260  0211                     	;# 
  2261  0212                     	;# 
  2262  0212                     	;# 
  2263  0213                     	;# 
  2264  0213                     	;# 
  2265  0214                     	;# 
  2266  0214                     	;# 
  2267  0215                     	;# 
  2268  0215                     	;# 
  2269  0215                     	;# 
  2270  0216                     	;# 
  2271  0216                     	;# 
  2272  0217                     	;# 
  2273  0217                     	;# 
  2274  0391                     	;# 
  2275  0392                     	;# 
  2276  0393                     	;# 
  2277  039A                     	;# 
  2278  039B                     	;# 
  2279  0611                     	;# 
  2280  0612                     	;# 
  2281  0613                     	;# 
  2282  0613                     	;# 
  2283  0614                     	;# 
  2284  0615                     	;# 
  2285  0616                     	;# 
  2286  0616                     	;# 
  2287  0691                     	;# 
  2288  0692                     	;# 
  2289  0693                     	;# 
  2290  0694                     	;# 
  2291  0695                     	;# 
  2292  0E8E                     	;# 
  2293  0E8F                     	;# 
  2294  0E90                     	;# 
  2295  0E91                     	;# 
  2296  0E92                     	;# 
  2297  0E93                     	;# 
  2298  0E94                     	;# 
  2299  0E94                     	;# 
  2300  0E95                     	;# 
  2301  0E96                     	;# 
  2302  0E97                     	;# 
  2303  0E98                     	;# 
  2304  0E99                     	;# 
  2305  0E9A                     	;# 
  2306  0E9B                     	;# 
  2307  0E9C                     	;# 
  2308  0E9D                     	;# 
  2309  0E9E                     	;# 
  2310  0E9F                     	;# 
  2311  0FE4                     	;# 
  2312  0FE5                     	;# 
  2313  0FE6                     	;# 
  2314  0FE7                     	;# 
  2315  0FE8                     	;# 
  2316  0FE9                     	;# 
  2317  0FEA                     	;# 
  2318  0FEB                     	;# 
  2319  0FED                     	;# 
  2320  0FEE                     	;# 
  2321  0FEF                     	;# 
  2322                           
  2323                           	psect	idataBANK4
  2324  0800                     __pidataBANK4:	
  2325                           
  2326                           ;initializer for _MAIN_Iout_limit_mA
  2327  0800  34F4               	retlw	244
  2328  0801  3401               	retlw	1
  2329  0802  3400               	retlw	0
  2330  0803  3400               	retlw	0
  2331                           
  2332                           	psect	stringtext
  2333  014A                     __pstringtext:	
  2334  014A                     _dividerArray:	
  2335  014A  3401               	retlw	1
  2336  014B  3400               	retlw	0
  2337  014C  3402               	retlw	2
  2338  014D  3400               	retlw	0
  2339  014E  3403               	retlw	3
  2340  014F  3400               	retlw	0
  2341  0150  3404               	retlw	4
  2342  0151  3400               	retlw	0
  2343  0152  3405               	retlw	5
  2344  0153  3400               	retlw	0
  2345  0154  3406               	retlw	6
  2346  0155  3400               	retlw	0
  2347  0156  3407               	retlw	7
  2348  0157  3400               	retlw	0
  2349  0158  3408               	retlw	8
  2350  0159  3400               	retlw	0
  2351  015A  3409               	retlw	9
  2352  015B  3400               	retlw	0
  2353  015C  340A               	retlw	10
  2354  015D  3400               	retlw	0
  2355  015E  3414               	retlw	20
  2356  015F  3400               	retlw	0
  2357  0160  341E               	retlw	30
  2358  0161  3400               	retlw	0
  2359  0162  3428               	retlw	40
  2360  0163  3400               	retlw	0
  2361  0164  3432               	retlw	50
  2362  0165  3400               	retlw	0
  2363  0166  343C               	retlw	60
  2364  0167  3400               	retlw	0
  2365  0168  3446               	retlw	70
  2366  0169  3400               	retlw	0
  2367  016A  3450               	retlw	80
  2368  016B  3400               	retlw	0
  2369  016C  345A               	retlw	90
  2370  016D  3400               	retlw	0
  2371  016E  3464               	retlw	100
  2372  016F  3400               	retlw	0
  2373  0170  34C8               	retlw	200
  2374  0171  3400               	retlw	0
  2375  0172  342C               	retlw	44
  2376  0173  3401               	retlw	1
  2377  0174  3490               	retlw	144
  2378  0175  3401               	retlw	1
  2379  0176  34F4               	retlw	244
  2380  0177  3401               	retlw	1
  2381  0178  3458               	retlw	88
  2382  0179  3402               	retlw	2
  2383  017A  34BC               	retlw	188
  2384  017B  3402               	retlw	2
  2385  017C  3420               	retlw	32
  2386  017D  3403               	retlw	3
  2387  017E  3484               	retlw	132
  2388  017F  3403               	retlw	3
  2389  0180  34E8               	retlw	232
  2390  0181  3403               	retlw	3
  2391  0182  34D0               	retlw	208
  2392  0183  3407               	retlw	7
  2393  0184  34B8               	retlw	184
  2394  0185  340B               	retlw	11
  2395  0186  34A0               	retlw	160
  2396  0187  340F               	retlw	15
  2397  0188  3488               	retlw	136
  2398  0189  3413               	retlw	19
  2399  018A  3470               	retlw	112
  2400  018B  3417               	retlw	23
  2401  018C  3458               	retlw	88
  2402  018D  341B               	retlw	27
  2403  018E  3440               	retlw	64
  2404  018F  341F               	retlw	31
  2405  0190  3428               	retlw	40
  2406  0191  3423               	retlw	35
  2407  0192  3410               	retlw	16
  2408  0193  3427               	retlw	39
  2409  0194  3420               	retlw	32
  2410  0195  344E               	retlw	78
  2411  0196  3430               	retlw	48
  2412  0197  3475               	retlw	117
  2413  0198  3440               	retlw	64
  2414  0199  349C               	retlw	156
  2415  019A  3450               	retlw	80
  2416  019B  34C3               	retlw	195
  2417  019C  3460               	retlw	96
  2418  019D  34EA               	retlw	234
  2419  019E  3400               	retlw	0
  2420  019F  3400               	retlw	0
  2421  01A0  3400               	retlw	0
  2422  01A1  3400               	retlw	0
  2423  01A2  3400               	retlw	0
  2424  01A3  3400               	retlw	0
  2425  01A4                     __end_of_dividerArray:	
  2426  01A4                     _USB_SD_Ptr:	
  2427  01A4  3411               	retlw	low (_sd000| (0+32768))
  2428  01A5  3483               	retlw	high (_sd000| (0+32768))
  2429  01A6  34DC               	retlw	low (_sd001| (0+32768))
  2430  01A7  3482               	retlw	high (_sd001| (0+32768))
  2431  01A8  3478               	retlw	low (_sd002| (0+32768))
  2432  01A9  3482               	retlw	high (_sd002| (0+32768))
  2433  01AA  3444               	retlw	low (_sd003| (0+32768))
  2434  01AB  3482               	retlw	high (_sd003| (0+32768))
  2435  01AC  34AA               	retlw	low (_sd004| (0+32768))
  2436  01AD  3482               	retlw	high (_sd004| (0+32768))
  2437  01AE                     __end_of_USB_SD_Ptr:	
  2438  01AE                     _okMsg:	
  2439  01AE  344F               	retlw	79
  2440  01AF  344B               	retlw	75
  2441  01B0  340D               	retlw	13
  2442  01B1  340A               	retlw	10
  2443  01B2  3400               	retlw	0
  2444  01B3                     __end_of_okMsg:	
  2445  01B3                     _USB_CD_Ptr:	
  2446  01B3  34B7               	retlw	low (_configDescriptor1| (0+32768))
  2447  01B4  3481               	retlw	high (_configDescriptor1| (0+32768))
  2448  01B5  34B7               	retlw	low (_configDescriptor1| (0+32768))
  2449  01B6  3481               	retlw	high (_configDescriptor1| (0+32768))
  2450  01B7                     __end_of_USB_CD_Ptr:	
  2451  01B7                     _configDescriptor1:	
  2452  01B7  3409               	retlw	9
  2453  01B8  3402               	retlw	2
  2454  01B9  348D               	retlw	141
  2455  01BA  3400               	retlw	0
  2456  01BB  3404               	retlw	4
  2457  01BC  3401               	retlw	1
  2458  01BD  3400               	retlw	0
  2459  01BE  3480               	retlw	128
  2460  01BF  34FA               	retlw	250
  2461  01C0  3408               	retlw	8
  2462  01C1  340B               	retlw	11
  2463  01C2  3400               	retlw	0
  2464  01C3  3402               	retlw	2
  2465  01C4  3402               	retlw	2
  2466  01C5  3402               	retlw	2
  2467  01C6  3401               	retlw	1
  2468  01C7  3403               	retlw	3
  2469  01C8  3409               	retlw	9
  2470  01C9  3404               	retlw	4
  2471  01CA  3400               	retlw	0
  2472  01CB  3400               	retlw	0
  2473  01CC  3401               	retlw	1
  2474  01CD  3402               	retlw	2
  2475  01CE  3402               	retlw	2
  2476  01CF  3401               	retlw	1
  2477  01D0  3403               	retlw	3
  2478  01D1  3405               	retlw	5
  2479  01D2  3424               	retlw	36
  2480  01D3  3400               	retlw	0
  2481  01D4  3410               	retlw	16
  2482  01D5  3401               	retlw	1
  2483  01D6  3404               	retlw	4
  2484  01D7  3424               	retlw	36
  2485  01D8  3402               	retlw	2
  2486  01D9  3402               	retlw	2
  2487  01DA  3405               	retlw	5
  2488  01DB  3424               	retlw	36
  2489  01DC  3406               	retlw	6
  2490  01DD  3400               	retlw	0
  2491  01DE  3401               	retlw	1
  2492  01DF  3405               	retlw	5
  2493  01E0  3424               	retlw	36
  2494  01E1  3401               	retlw	1
  2495  01E2  3400               	retlw	0
  2496  01E3  3401               	retlw	1
  2497  01E4  3407               	retlw	7
  2498  01E5  3405               	retlw	5
  2499  01E6  3481               	retlw	129
  2500  01E7  3403               	retlw	3
  2501  01E8  3408               	retlw	8
  2502  01E9  3400               	retlw	0
  2503  01EA  3402               	retlw	2
  2504  01EB  3409               	retlw	9
  2505  01EC  3404               	retlw	4
  2506  01ED  3401               	retlw	1
  2507  01EE  3400               	retlw	0
  2508  01EF  3402               	retlw	2
  2509  01F0  340A               	retlw	10
  2510  01F1  3400               	retlw	0
  2511  01F2  3400               	retlw	0
  2512  01F3  3403               	retlw	3
  2513  01F4  3407               	retlw	7
  2514  01F5  3405               	retlw	5
  2515  01F6  3402               	retlw	2
  2516  01F7  3402               	retlw	2
  2517  01F8  3440               	retlw	64
  2518  01F9  3400               	retlw	0
  2519  01FA  3400               	retlw	0
  2520  01FB  3407               	retlw	7
  2521  01FC  3405               	retlw	5
  2522  01FD  3482               	retlw	130
  2523  01FE  3402               	retlw	2
  2524  01FF  3440               	retlw	64
  2525  0200  3400               	retlw	0
  2526  0201  3400               	retlw	0
  2527  0202  3408               	retlw	8
  2528  0203  340B               	retlw	11
  2529  0204  3402               	retlw	2
  2530  0205  3402               	retlw	2
  2531  0206  3402               	retlw	2
  2532  0207  3402               	retlw	2
  2533  0208  3401               	retlw	1
  2534  0209  3404               	retlw	4
  2535  020A  3409               	retlw	9
  2536  020B  3404               	retlw	4
  2537  020C  3402               	retlw	2
  2538  020D  3400               	retlw	0
  2539  020E  3401               	retlw	1
  2540  020F  3402               	retlw	2
  2541  0210  3402               	retlw	2
  2542  0211  3401               	retlw	1
  2543  0212  3404               	retlw	4
  2544  0213  3405               	retlw	5
  2545  0214  3424               	retlw	36
  2546  0215  3400               	retlw	0
  2547  0216  3410               	retlw	16
  2548  0217  3401               	retlw	1
  2549  0218  3404               	retlw	4
  2550  0219  3424               	retlw	36
  2551  021A  3402               	retlw	2
  2552  021B  3402               	retlw	2
  2553  021C  3405               	retlw	5
  2554  021D  3424               	retlw	36
  2555  021E  3406               	retlw	6
  2556  021F  3402               	retlw	2
  2557  0220  3403               	retlw	3
  2558  0221  3405               	retlw	5
  2559  0222  3424               	retlw	36
  2560  0223  3401               	retlw	1
  2561  0224  3400               	retlw	0
  2562  0225  3403               	retlw	3
  2563  0226  3407               	retlw	7
  2564  0227  3405               	retlw	5
  2565  0228  3483               	retlw	131
  2566  0229  3403               	retlw	3
  2567  022A  3408               	retlw	8
  2568  022B  3400               	retlw	0
  2569  022C  3402               	retlw	2
  2570  022D  3409               	retlw	9
  2571  022E  3404               	retlw	4
  2572  022F  3403               	retlw	3
  2573  0230  3400               	retlw	0
  2574  0231  3402               	retlw	2
  2575  0232  340A               	retlw	10
  2576  0233  3400               	retlw	0
  2577  0234  3400               	retlw	0
  2578  0235  3404               	retlw	4
  2579  0236  3407               	retlw	7
  2580  0237  3405               	retlw	5
  2581  0238  3404               	retlw	4
  2582  0239  3402               	retlw	2
  2583  023A  3440               	retlw	64
  2584  023B  3400               	retlw	0
  2585  023C  3400               	retlw	0
  2586  023D  3407               	retlw	7
  2587  023E  3405               	retlw	5
  2588  023F  3484               	retlw	132
  2589  0240  3402               	retlw	2
  2590  0241  3440               	retlw	64
  2591  0242  3400               	retlw	0
  2592  0243  3400               	retlw	0
  2593  0244                     __end_of_configDescriptor1:	
  2594  0244                     _sd003:	
  2595  0244  3434               	retlw	52
  2596  0245  3403               	retlw	3
  2597  0246  3443               	retlw	67
  2598  0247  3400               	retlw	0
  2599  0248  3464               	retlw	100
  2600  0249  3400               	retlw	0
  2601  024A  3463               	retlw	99
  2602  024B  3400               	retlw	0
  2603  024C  3450               	retlw	80
  2604  024D  3400               	retlw	0
  2605  024E  346F               	retlw	111
  2606  024F  3400               	retlw	0
  2607  0250  3472               	retlw	114
  2608  0251  3400               	retlw	0
  2609  0252  3474               	retlw	116
  2610  0253  3400               	retlw	0
  2611  0254  3420               	retlw	32
  2612  0255  3400               	retlw	0
  2613  0256  3466               	retlw	102
  2614  0257  3400               	retlw	0
  2615  0258  346F               	retlw	111
  2616  0259  3400               	retlw	0
  2617  025A  3472               	retlw	114
  2618  025B  3400               	retlw	0
  2619  025C  3420               	retlw	32
  2620  025D  3400               	retlw	0
  2621  025E  3470               	retlw	112
  2622  025F  3400               	retlw	0
  2623  0260  346F               	retlw	111
  2624  0261  3400               	retlw	0
  2625  0262  3477               	retlw	119
  2626  0263  3400               	retlw	0
  2627  0264  3465               	retlw	101
  2628  0265  3400               	retlw	0
  2629  0266  3472               	retlw	114
  2630  0267  3400               	retlw	0
  2631  0268  3420               	retlw	32
  2632  0269  3400               	retlw	0
  2633  026A  3463               	retlw	99
  2634  026B  3400               	retlw	0
  2635  026C  346F               	retlw	111
  2636  026D  3400               	retlw	0
  2637  026E  346E               	retlw	110
  2638  026F  3400               	retlw	0
  2639  0270  3474               	retlw	116
  2640  0271  3400               	retlw	0
  2641  0272  3472               	retlw	114
  2642  0273  3400               	retlw	0
  2643  0274  346F               	retlw	111
  2644  0275  3400               	retlw	0
  2645  0276  346C               	retlw	108
  2646  0277  3400               	retlw	0
  2647  0278                     __end_of_sd003:	
  2648  0278                     _sd002:	
  2649  0278  3432               	retlw	50
  2650  0279  3403               	retlw	3
  2651  027A  3443               	retlw	67
  2652  027B  3400               	retlw	0
  2653  027C  3444               	retlw	68
  2654  027D  3400               	retlw	0
  2655  027E  3443               	retlw	67
  2656  027F  3400               	retlw	0
  2657  0280  345F               	retlw	95
  2658  0281  3400               	retlw	0
  2659  0282  3450               	retlw	80
  2660  0283  3400               	retlw	0
  2661  0284  346F               	retlw	111
  2662  0285  3400               	retlw	0
  2663  0286  3477               	retlw	119
  2664  0287  3400               	retlw	0
  2665  0288  3465               	retlw	101
  2666  0289  3400               	retlw	0
  2667  028A  3472               	retlw	114
  2668  028B  3400               	retlw	0
  2669  028C  342B               	retlw	43
  2670  028D  3400               	retlw	0
  2671  028E  3443               	retlw	67
  2672  028F  3400               	retlw	0
  2673  0290  3444               	retlw	68
  2674  0291  3400               	retlw	0
  2675  0292  3443               	retlw	67
  2676  0293  3400               	retlw	0
  2677  0294  345F               	retlw	95
  2678  0295  3400               	retlw	0
  2679  0296  3455               	retlw	85
  2680  0297  3400               	retlw	0
  2681  0298  3441               	retlw	65
  2682  0299  3400               	retlw	0
  2683  029A  3452               	retlw	82
  2684  029B  3400               	retlw	0
  2685  029C  3454               	retlw	84
  2686  029D  3400               	retlw	0
  2687  029E  342F               	retlw	47
  2688  029F  3400               	retlw	0
  2689  02A0  3452               	retlw	82
  2690  02A1  3400               	retlw	0
  2691  02A2  3453               	retlw	83
  2692  02A3  3400               	retlw	0
  2693  02A4  3434               	retlw	52
  2694  02A5  3400               	retlw	0
  2695  02A6  3438               	retlw	56
  2696  02A7  3400               	retlw	0
  2697  02A8  3435               	retlw	53
  2698  02A9  3400               	retlw	0
  2699  02AA                     __end_of_sd002:	
  2700  02AA                     _sd004:	
  2701  02AA  3432               	retlw	50
  2702  02AB  3403               	retlw	3
  2703  02AC  3443               	retlw	67
  2704  02AD  3400               	retlw	0
  2705  02AE  3444               	retlw	68
  2706  02AF  3400               	retlw	0
  2707  02B0  3443               	retlw	67
  2708  02B1  3400               	retlw	0
  2709  02B2  343C               	retlw	60
  2710  02B3  3400               	retlw	0
  2711  02B4  342D               	retlw	45
  2712  02B5  3400               	retlw	0
  2713  02B6  343E               	retlw	62
  2714  02B7  3400               	retlw	0
  2715  02B8  3455               	retlw	85
  2716  02B9  3400               	retlw	0
  2717  02BA  3441               	retlw	65
  2718  02BB  3400               	retlw	0
  2719  02BC  3452               	retlw	82
  2720  02BD  3400               	retlw	0
  2721  02BE  3454               	retlw	84
  2722  02BF  3400               	retlw	0
  2723  02C0  342F               	retlw	47
  2724  02C1  3400               	retlw	0
  2725  02C2  3452               	retlw	82
  2726  02C3  3400               	retlw	0
  2727  02C4  3453               	retlw	83
  2728  02C5  3400               	retlw	0
  2729  02C6  3434               	retlw	52
  2730  02C7  3400               	retlw	0
  2731  02C8  3438               	retlw	56
  2732  02C9  3400               	retlw	0
  2733  02CA  3435               	retlw	53
  2734  02CB  3400               	retlw	0
  2735  02CC  3420               	retlw	32
  2736  02CD  3400               	retlw	0
  2737  02CE  3461               	retlw	97
  2738  02CF  3400               	retlw	0
  2739  02D0  3464               	retlw	100
  2740  02D1  3400               	retlw	0
  2741  02D2  3461               	retlw	97
  2742  02D3  3400               	retlw	0
  2743  02D4  3470               	retlw	112
  2744  02D5  3400               	retlw	0
  2745  02D6  3474               	retlw	116
  2746  02D7  3400               	retlw	0
  2747  02D8  3465               	retlw	101
  2748  02D9  3400               	retlw	0
  2749  02DA  3472               	retlw	114
  2750  02DB  3400               	retlw	0
  2751  02DC                     __end_of_sd004:	
  2752  02DC                     _sd001:	
  2753  02DC  3416               	retlw	22
  2754  02DD  3403               	retlw	3
  2755  02DE  3445               	retlw	69
  2756  02DF  3400               	retlw	0
  2757  02E0  3461               	retlw	97
  2758  02E1  3400               	retlw	0
  2759  02E2  3473               	retlw	115
  2760  02E3  3400               	retlw	0
  2761  02E4  3479               	retlw	121
  2762  02E5  3400               	retlw	0
  2763  02E6  3420               	retlw	32
  2764  02E7  3400               	retlw	0
  2765  02E8  3456               	retlw	86
  2766  02E9  3400               	retlw	0
  2767  02EA  346F               	retlw	111
  2768  02EB  3400               	retlw	0
  2769  02EC  346C               	retlw	108
  2770  02ED  3400               	retlw	0
  2771  02EE  3474               	retlw	116
  2772  02EF  3400               	retlw	0
  2773  02F0  3473               	retlw	115
  2774  02F1  3400               	retlw	0
  2775  02F2                     __end_of_sd001:	
  2776  02F2                     _device_dsc:	
  2777  02F2  3412               	retlw	18
  2778  02F3  3401               	retlw	1
  2779  02F4  3400               	retlw	0
  2780  02F5  3402               	retlw	2
  2781  02F6  34EF               	retlw	239
  2782  02F7  3402               	retlw	2
  2783  02F8  3401               	retlw	1
  2784  02F9  3408               	retlw	8
  2785  02FA  34D8               	retlw	216
  2786  02FB  3404               	retlw	4
  2787  02FC  340B               	retlw	11
  2788  02FD  3400               	retlw	0
  2789  02FE  3401               	retlw	1
  2790  02FF  3400               	retlw	0
  2791  0300  3401               	retlw	1
  2792  0301  3402               	retlw	2
  2793  0302  3400               	retlw	0
  2794  0303  3401               	retlw	1
  2795  0304                     __end_of_device_dsc:	
  2796  0304                     _errorMsg:	
  2797  0304  3457               	retlw	87
  2798  0305  3472               	retlw	114
  2799  0306  346F               	retlw	111
  2800  0307  346E               	retlw	110
  2801  0308  3467               	retlw	103
  2802  0309  3420               	retlw	32
  2803  030A  3463               	retlw	99
  2804  030B  346D               	retlw	109
  2805  030C  3464               	retlw	100
  2806  030D  3421               	retlw	33
  2807  030E  340D               	retlw	13
  2808  030F  340A               	retlw	10
  2809  0310  3400               	retlw	0
  2810  0311                     __end_of_errorMsg:	
  2811  0311                     _sd000:	
  2812  0311  3404               	retlw	4
  2813  0312  3403               	retlw	3
  2814  0313  3409               	retlw	9
  2815  0314  3404               	retlw	4
  2816  0315                     __end_of_sd000:	
  2817  000B                     _INTCONbits	set	11
  2818  0011                     _PIR1bits	set	17
  2819  0012                     _PIR2bits	set	18
  2820  001B                     _PR2	set	27
  2821  0018                     _T1CON	set	24
  2822  0018                     _T1CONbits	set	24
  2823  0019                     _T1GCON	set	25
  2824  0019                     _T1GCONbits	set	25
  2825  001C                     _T2CON	set	28
  2826  001C                     _T2CONbits	set	28
  2827  0017                     _TMR1H	set	23
  2828  0016                     _TMR1L	set	22
  2829  001A                     _TMR2	set	26
  2830  0088                     _TMR1IF	set	136
  2831  009D                     _ADCON0	set	157
  2832  009D                     _ADCON0bits	set	157
  2833  009E                     _ADCON1	set	158
  2834  009F                     _ADCON2	set	159
  2835  009C                     _ADRESH	set	156
  2836  009B                     _ADRESL	set	155
  2837  0095                     _OPTION_REGbits	set	149
  2838  0099                     _OSCCON	set	153
  2839  0098                     _OSCTUNE	set	152
  2840  0091                     _PIE1bits	set	145
  2841  0092                     _PIE2bits	set	146
  2842  008C                     _TRISA	set	140
  2843  008E                     _TRISC	set	142
  2844  0097                     _WDTCON	set	151
  2845  04D6                     _PLLRDY	set	1238
  2846  011D                     _APFCON	set	285
  2847  0117                     _FVRCON	set	279
  2848  0117                     _FVRCONbits	set	279
  2849  010C                     _LATA	set	268
  2850  010C                     _LATAbits	set	268
  2851  010E                     _LATC	set	270
  2852  010E                     _LATCbits	set	270
  2853  019B                     _SPBRG	set	411
  2854  018C                     _ANSELA	set	396
  2855  018E                     _ANSELC	set	398
  2856  019F                     _BAUDCON	set	415
  2857  0199                     _RCREG	set	409
  2858  019D                     _RCSTA	set	413
  2859  019D                     _RCSTAbits	set	413
  2860  019C                     _SPBRGH	set	412
  2861  019B                     _SPBRGL	set	411
  2862  019A                     _TXREG	set	410
  2863  019E                     _TXSTA	set	414
  2864  019E                     _TXSTAbits	set	414
  2865  020C                     _WPUA	set	524
  2866  039B                     _ACTCON	set	923
  2867  0616                     _PWM2CON	set	1558
  2868  0615                     _PWM2DCH	set	1557
  2869  0614                     _PWM2DCL	set	1556
  2870  0E96                     _UADDR	set	3734
  2871  0E91                     _UCFG	set	3729
  2872  0E8E                     _UCON	set	3726
  2873  0E8E                     _UCONbits	set	3726
  2874  0E97                     _UEIE	set	3735
  2875  0E93                     _UEIR	set	3731
  2876  0E98                     _UEP0bits	set	3736
  2877  0E92                     _UIE	set	3730
  2878  0E92                     _UIEbits	set	3730
  2879  0E90                     _UIR	set	3728
  2880  0E90                     _UIRbits	set	3728
  2881  0E8F                     _USTAT	set	3727
  2882  0E98                     _UEP0	set	3736
  2883  0E99                     _UEP1	set	3737
  2884  0315                     STR_1:	
  2885  0315  3445               	retlw	69	;'E'
  2886  0316  3461               	retlw	97	;'a'
  2887  0317  3473               	retlw	115	;'s'
  2888  0318  3479               	retlw	121	;'y'
  2889  0319  3456               	retlw	86	;'V'
  2890  031A  346F               	retlw	111	;'o'
  2891  031B  346C               	retlw	108	;'l'
  2892  031C  3474               	retlw	116	;'t'
  2893  031D  3473               	retlw	115	;'s'
  2894  031E  3420               	retlw	32	;' '
  2895  031F  3409               	retlw	9
  2896  0320  3455               	retlw	85	;'U'
  2897  0321  3428               	retlw	40	;'('
  2898  0322  346D               	retlw	109	;'m'
  2899  0323  3456               	retlw	86	;'V'
  2900  0324  3429               	retlw	41	;')'
  2901  0325  343D               	retlw	61	;'='
  2902  0326  3420               	retlw	32	;' '
  2903  0327  3420               	retlw	32	;' '
  2904  0328  3420               	retlw	32	;' '
  2905  0329  3420               	retlw	32	;' '
  2906  032A  3420               	retlw	32	;' '
  2907  032B  3420               	retlw	32	;' '
  2908  032C  3409               	retlw	9
  2909  032D  3420               	retlw	32	;' '
  2910  032E  3449               	retlw	73	;'I'
  2911  032F  3428               	retlw	40	;'('
  2912  0330  346D               	retlw	109	;'m'
  2913  0331  3441               	retlw	65	;'A'
  2914  0332  3429               	retlw	41	;')'
  2915  0333  343D               	retlw	61	;'='
  2916  0334  3420               	retlw	32	;' '
  2917  0335  3420               	retlw	32	;' '
  2918  0336  3420               	retlw	32	;' '
  2919  0337  3420               	retlw	32	;' '
  2920  0338  3420               	retlw	32	;' '
  2921  0339  340D               	retlw	13
  2922  033A  340A               	retlw	10
  2923  033B  3400               	retlw	0
  2924                           
  2925                           ; #config settings
  2926  0000                     
  2927                           	psect	cinit
  2928  00EB                     start_initialization:	
  2929  00EB                     __initialization:	
  2930                           
  2931                           ; Initialize objects allocated to BANK4
  2932  00EB  0024               	movlb	4	; select bank4
  2933  00EC  3188  2000  3180   	fcall	__pidataBANK4	;fetch initializer
  2934  00EF  00EA               	movwf	__pdataBANK4& (0+127)
  2935  00F0  3188  2001  3180   	fcall	__pidataBANK4+1	;fetch initializer
  2936  00F3  00EB               	movwf	(__pdataBANK4+1)& (0+127)
  2937  00F4  3188  2002  3180   	fcall	__pidataBANK4+2	;fetch initializer
  2938  00F7  00EC               	movwf	(__pdataBANK4+2)& (0+127)
  2939  00F8  3188  2003  3180   	fcall	__pidataBANK4+3	;fetch initializer
  2940  00FB  00ED               	movwf	(__pdataBANK4+3)& (0+127)
  2941                           
  2942                           ; Clear objects allocated to BANK2
  2943  00FC  0022               	movlb	2	; select bank2
  2944  00FD  01EE               	clrf	__pbssBANK2& (0+127)
  2945  00FE  01EF               	clrf	(__pbssBANK2+1)& (0+127)
  2946                           
  2947                           ; Clear objects allocated to BANK3
  2948  00FF  30CB               	movlw	low __pbssBANK3
  2949  0100  0084               	movwf	4
  2950  0101  3001               	movlw	high __pbssBANK3
  2951  0102  0085               	movwf	5
  2952  0103  3025               	movlw	37
  2953  0104  319D  258D  3180   	fcall	clear_ram0
  2954                           
  2955                           ; Clear objects allocated to BANK4
  2956  0107  3020               	movlw	low __pbssBANK4
  2957  0108  0084               	movwf	4
  2958  0109  3002               	movlw	high __pbssBANK4
  2959  010A  0085               	movwf	5
  2960  010B  304A               	movlw	74
  2961  010C  319D  258D  3180   	fcall	clear_ram0
  2962                           
  2963                           ; Clear objects allocated to BANK5
  2964  010F  30A0               	movlw	low __pbssBANK5
  2965  0110  0084               	movwf	4
  2966  0111  3002               	movlw	high __pbssBANK5
  2967  0112  0085               	movwf	5
  2968  0113  304B               	movlw	75
  2969  0114  319D  258D  3180   	fcall	clear_ram0
  2970                           
  2971                           ; Clear objects allocated to BANK6
  2972  0117  3020               	movlw	low __pbssBANK6
  2973  0118  0084               	movwf	4
  2974  0119  3003               	movlw	high __pbssBANK6
  2975  011A  0085               	movwf	5
  2976  011B  3040               	movlw	64
  2977  011C  319D  258D  3180   	fcall	clear_ram0
  2978                           
  2979                           ; Clear objects allocated to BANK7
  2980  011F  30A0               	movlw	low __pbssBANK7
  2981  0120  0084               	movwf	4
  2982  0121  3003               	movlw	high __pbssBANK7
  2983  0122  0085               	movwf	5
  2984  0123  3040               	movlw	64
  2985  0124  319D  258D  3180   	fcall	clear_ram0
  2986                           
  2987                           ; Clear objects allocated to BANK8
  2988  0127  3020               	movlw	low __pbssBANK8
  2989  0128  0084               	movwf	4
  2990  0129  3004               	movlw	high __pbssBANK8
  2991  012A  0085               	movwf	5
  2992  012B  3040               	movlw	64
  2993  012C  319D  258D  3180   	fcall	clear_ram0
  2994                           
  2995                           ; Clear objects allocated to BANK9
  2996  012F  30A0               	movlw	low __pbssBANK9
  2997  0130  0084               	movwf	4
  2998  0131  3004               	movlw	high __pbssBANK9
  2999  0132  0085               	movwf	5
  3000  0133  3040               	movlw	64
  3001  0134  319D  258D  3180   	fcall	clear_ram0
  3002                           
  3003                           ; Clear objects allocated to BANK10
  3004  0137  3020               	movlw	low __pbssBANK10
  3005  0138  0084               	movwf	4
  3006  0139  3005               	movlw	high __pbssBANK10
  3007  013A  0085               	movwf	5
  3008  013B  3040               	movlw	64
  3009  013C  319D  258D  3180   	fcall	clear_ram0
  3010                           
  3011                           ; Clear objects allocated to BANK11
  3012  013F  30A0               	movlw	low __pbssBANK11
  3013  0140  0084               	movwf	4
  3014  0141  3005               	movlw	high __pbssBANK11
  3015  0142  0085               	movwf	5
  3016  0143  3040               	movlw	64
  3017  0144  319D  258D         	fcall	clear_ram0
  3018  0146                     end_of_initialization:	
  3019                           ;End of C runtime variable initialization code
  3020                           
  3021  0146                     __end_of__initialization:	
  3022  0146  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3023  0147  0020               	movlb	0
  3024  0148  319F  2F26         	ljmp	_main	;jump to C main() function
  3025                           
  3026                           	psect	bssBANK2
  3027  016E                     __pbssBANK2:	
  3028  016E                     _pBDTEntryEP0OutNext:	
  3029  016E                     	ds	2
  3030                           
  3031                           	psect	bssBANK3
  3032  01CB                     __pbssBANK3:	
  3033  01CB                     _pBDTEntryIn:	
  3034  01CB                     	ds	10
  3035  01D5                     _inPipes:	
  3036  01D5                     	ds	5
  3037  01DA                     _Iadc:	
  3038  01DA                     	ds	2
  3039  01DC                     _timer1ReloadVal:	
  3040  01DC                     	ds	2
  3041  01DE                     _NextUSBOut:	
  3042  01DE                     	ds	1
  3043  01DF                     _PwmDutyCycleCurrentLimit:	
  3044  01DF                     	ds	1
  3045  01E0                     _USBDeferStatusStagePacket:	
  3046  01E0                     	ds	1
  3047  01E1                     _USBDeviceState:	
  3048  01E1                     	ds	1
  3049  01E2                     _cdc_rx_len:	
  3050  01E2                     	ds	1
  3051  01E3                     _cdc_rx_len2:	
  3052  01E3                     	ds	1
  3053  01E4                     _cdc_trf_state:	
  3054  01E4                     	ds	1
  3055  01E5                     _cdc_trf_state2:	
  3056  01E5                     	ds	1
  3057  01E6                     _cdc_tx_len:	
  3058  01E6                     	ds	1
  3059  01E7                     _cdc_tx_len2:	
  3060  01E7                     	ds	1
  3061  01E8                     _controlTransferState:	
  3062  01E8                     	ds	1
  3063  01E9                     _pBDTEntryEP0OutCurrent:	
  3064  01E9                     	ds	1
  3065  01EA                     _shortPacketStatus:	
  3066  01EA                     	ds	1
  3067  01EB                     main_CommunicationHandler@cmdRxBufferPointer:	
  3068  01EB                     	ds	1
  3069  01EC                     _Uadc:	
  3070  01EC                     	ds	2
  3071  01EE                     _USBActiveConfiguration:	
  3072  01EE                     	ds	1
  3073  01EF                     _USTATcopy:	
  3074  01EF                     	ds	1
  3075                           
  3076                           	psect	bssBANK4
  3077  0220                     __pbssBANK4:	
  3078  0220                     _outPipes:	
  3079  0220                     	ds	7
  3080  0227                     _CDCDataInHandle:	
  3081  0227                     	ds	2
  3082  0229                     _CDCDataInHandle2:	
  3083  0229                     	ds	2
  3084  022B                     _CDCDataOutHandle:	
  3085  022B                     	ds	2
  3086  022D                     _CDCDataOutHandle2:	
  3087  022D                     	ds	2
  3088  022F                     _Iadc_limit:	
  3089  022F                     	ds	2
  3090  0231                     _MAIN_Iout_mA:	
  3091  0231                     	ds	2
  3092  0233                     _MAIN_Uout_mV:	
  3093  0233                     	ds	2
  3094  0235                     _TMR1_InterruptHandler:	
  3095  0235                     	ds	2
  3096  0237                     _TMR2_InterruptHandler:	
  3097  0237                     	ds	2
  3098  0239                     _Uadc_target:	
  3099  0239                     	ds	2
  3100  023B                     _pCDCDst:	
  3101  023B                     	ds	2
  3102  023D                     _pCDCDst2:	
  3103  023D                     	ds	2
  3104  023F                     _pCDCSrc:	
  3105  023F                     	ds	2
  3106  0241                     _pCDCSrc2:	
  3107  0241                     	ds	2
  3108  0243                     main_overcurrentProtection@Iadc_avg:	
  3109  0243                     	ds	2
  3110  0245                     INTERRUPT_InterruptManager@pwmCorrection:	
  3111  0245                     	ds	1
  3112  0246                     _BothEP0OutUOWNsSet:	
  3113  0246                     	ds	1
  3114  0247                     _LastRS232Out:	
  3115  0247                     	ds	1
  3116  0248                     _MAIN_ovcFlag:	
  3117  0248                     	ds	1
  3118  0249                     _MAIN_upConverterFlag:	
  3119  0249                     	ds	1
  3120  024A                     _PwmDutyCycleVoltageLimit:	
  3121  024A                     	ds	1
  3122  024B                     _RS232_Out_Data_Rdy:	
  3123  024B                     	ds	1
  3124  024C                     _RS232cp:	
  3125  024C                     	ds	1
  3126  024D                     _RemoteWakeup:	
  3127  024D                     	ds	1
  3128  024E                     _USBBusIsSuspended:	
  3129  024E                     	ds	1
  3130  024F                     _USBDeferINDataStagePackets:	
  3131  024F                     	ds	1
  3132  0250                     _USBDeferOUTDataStagePackets:	
  3133  0250                     	ds	1
  3134  0251                     _USBStatusStageEnabledFlag1:	
  3135  0251                     	ds	1
  3136  0252                     _USBStatusStageEnabledFlag2:	
  3137  0252                     	ds	1
  3138  0253                     _USBStatusStageTimeoutCounter:	
  3139  0253                     	ds	1
  3140  0254                     _USBTicksSinceSuspendEnd:	
  3141  0254                     	ds	1
  3142  0255                     _cdc_mem_type:	
  3143  0255                     	ds	1
  3144  0256                     _cdc_mem_type2:	
  3145  0256                     	ds	1
  3146  0257                     _control_signal_bitmap:	
  3147  0257                     	ds	1
  3148  0258                     _control_signal_bitmap2:	
  3149  0258                     	ds	1
  3150  0259                     _endpoint_number:	
  3151  0259                     	ds	1
  3152  025A                     _pDst:	
  3153  025A                     	ds	1
  3154  025B                     main_CommunicationHandler@step:	
  3155  025B                     	ds	1
  3156  025C                     main_overcurrentProtection@tOut:	
  3157  025C                     	ds	1
  3158  025D                     _line_coding:	
  3159  025D                     	ds	7
  3160  0264                     _MAIN_Uout_target_mV:	
  3161  0264                     	ds	4
  3162  0268                     _USBAlternateInterface:	
  3163  0268                     	ds	2
  3164                           
  3165                           	psect	dataBANK4
  3166  026A                     __pdataBANK4:	
  3167  026A                     _MAIN_Iout_limit_mA:	
  3168  026A                     	ds	4
  3169                           
  3170                           	psect	bssBANK5
  3171  02A0                     __pbssBANK5:	
  3172  02A0                     _cdc_notice:	
  3173  02A0                     	ds	10
  3174  02AA                     _pBDTEntryOut:	
  3175  02AA                     	ds	10
  3176  02B4                     _ep_data_in:	
  3177  02B4                     	ds	5
  3178  02B9                     _ep_data_out:	
  3179  02B9                     	ds	5
  3180  02BE                     _BaudRateGen:	
  3181  02BE                     	ds	4
  3182  02C2                     _BaudRateGen2:	
  3183  02C2                     	ds	4
  3184  02C6                     _USB1msTickCount:	
  3185  02C6                     	ds	4
  3186  02CA                     _cdc_notice2:	
  3187  02CA                     	ds	10
  3188  02D4                     _dummy_encapsulated_cmd_response:	
  3189  02D4                     	ds	8
  3190  02DC                     _dummy_encapsulated_cmd_response2:	
  3191  02DC                     	ds	8
  3192  02E4                     _line_coding2:	
  3193  02E4                     	ds	7
  3194                           
  3195                           	psect	bssBANK6
  3196  0320                     __pbssBANK6:	
  3197  0320                     _cmdRxBuffer:	
  3198  0320                     	ds	64
  3199                           
  3200                           	psect	bssBANK7
  3201  03A0                     __pbssBANK7:	
  3202  03A0                     _writeStatusBuffer:	
  3203  03A0                     	ds	64
  3204                           
  3205                           	psect	bssBANK8
  3206  0420                     __pbssBANK8:	
  3207  0420                     _USB_Out_Buffer:	
  3208  0420                     	ds	64
  3209                           
  3210                           	psect	bssBANK9
  3211  04A0                     __pbssBANK9:	
  3212  04A0                     _writeBuffer:	
  3213  04A0                     	ds	64
  3214                           
  3215                           	psect	bssBANK10
  3216  0520                     __pbssBANK10:	
  3217  0520                     _readBuffer:	
  3218  0520                     	ds	64
  3219                           
  3220                           	psect	bssBANK11
  3221  05A0                     __pbssBANK11:	
  3222  05A0                     _RS232_Out_Data:	
  3223  05A0                     	ds	64
  3224                           
  3225                           	psect	clrtext
  3226  1D8D                     clear_ram0:	
  3227                           ;	Called with FSR0 containing the base address, and
  3228                           ;	WREG with the size to clear
  3229                           
  3230  1D8D  0064               	clrwdt	;clear the watchdog before getting into this loop
  3231  1D8E                     clrloop0:	
  3232  1D8E  0180               	clrf	0	;clear RAM location pointed to by FSR
  3233  1D8F  3101               	addfsr 0,1
  3234  1D90  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3235  1D91  2D8E               	goto	clrloop0	;have we reached the end yet?
  3236  1D92  3400               	retlw	0	;all done for this memory range, return
  3237                           
  3238                           	psect	cstackBANK3
  3239  01A0                     __pcstackBANK3:	
  3240  01A0                     ??_TMR2_StartTimer:	
  3241  01A0                     ??_PIN_MANAGER_Initialize:	
  3242                           ; 1 bytes @ 0x0
  3243                           
  3244  01A0                     ??_OSCILLATOR_Initialize:	
  3245                           ; 1 bytes @ 0x0
  3246                           
  3247  01A0                     ??_WDT_Initialize:	
  3248                           ; 1 bytes @ 0x0
  3249                           
  3250  01A0                     ??_FVR_Initialize:	
  3251                           ; 1 bytes @ 0x0
  3252                           
  3253  01A0                     ??_PWM2_Initialize:	
  3254                           ; 1 bytes @ 0x0
  3255                           
  3256  01A0                     ??_TMR1_Initialize:	
  3257                           ; 1 bytes @ 0x0
  3258                           
  3259  01A0                     ??_EUSART_Initialize:	
  3260                           ; 1 bytes @ 0x0
  3261                           
  3262  01A0                     ??_TMR1_StartTimer:	
  3263                           ; 1 bytes @ 0x0
  3264                           
  3265  01A0                     ??_isdigit:	
  3266                           ; 1 bytes @ 0x0
  3267                           
  3268  01A0                     ??_ADC_Initialize:	
  3269                           ; 1 bytes @ 0x0
  3270                           
  3271  01A0                     ??_ADC_StartConversion:	
  3272                           ; 1 bytes @ 0x0
  3273                           
  3274  01A0                     ??_TMR2_Initialize:	
  3275                           ; 1 bytes @ 0x0
  3276                           
  3277  01A0                     ??_SYSTEM_Initialize:	
  3278                           ; 1 bytes @ 0x0
  3279                           
  3280  01A0                     ?_PWM2_LoadDutyValue:	
  3281                           ; 1 bytes @ 0x0
  3282                           
  3283  01A0                     ??_TMR1_Reload:	
  3284                           ; 1 bytes @ 0x0
  3285                           
  3286  01A0                     ??_USBDeviceInit:	
  3287                           ; 1 bytes @ 0x0
  3288                           
  3289  01A0                     ?_putUSBUSART:	
  3290                           ; 1 bytes @ 0x0
  3291                           
  3292  01A0                     ??_main_overcurrentProtection:	
  3293                           ; 1 bytes @ 0x0
  3294                           
  3295  01A0                     ?_memset:	
  3296                           ; 1 bytes @ 0x0
  3297                           
  3298  01A0                     ?_USBTransferOnePacket:	
  3299                           ; 2 bytes @ 0x0
  3300                           
  3301  01A0                     ?___wmul:	
  3302                           ; 2 bytes @ 0x0
  3303                           
  3304  01A0                     ?___lmul:	
  3305                           ; 2 bytes @ 0x0
  3306                           
  3307  01A0                     USBTransferOnePacket@dir:	
  3308                           ; 4 bytes @ 0x0
  3309                           
  3310  01A0                     _isdigit$3010:	
  3311                           ; 1 bytes @ 0x0
  3312                           
  3313  01A0                     PWM2_LoadDutyValue@dutyValue:	
  3314                           ; 1 bytes @ 0x0
  3315                           
  3316  01A0                     putUSBUSART@data:	
  3317                           ; 2 bytes @ 0x0
  3318                           
  3319  01A0                     ___wmul@multiplier:	
  3320                           ; 2 bytes @ 0x0
  3321                           
  3322  01A0                     memset@p1:	
  3323                           ; 2 bytes @ 0x0
  3324                           
  3325  01A0                     ___lmul@multiplier:	
  3326                           ; 2 bytes @ 0x0
  3327                           
  3328                           
  3329                           ; 4 bytes @ 0x0
  3330  01A0                     	ds	1
  3331  01A1                     isdigit@c:	
  3332  01A1                     USBDeviceInit@p:	
  3333                           ; 1 bytes @ 0x1
  3334                           
  3335  01A1                     USBTransferOnePacket@data:	
  3336                           ; 2 bytes @ 0x1
  3337                           
  3338                           
  3339                           ; 2 bytes @ 0x1
  3340  01A1                     	ds	1
  3341  01A2                     ??_PWM2_LoadDutyValue:	
  3342  01A2                     putUSBUSART@length:	
  3343                           ; 1 bytes @ 0x2
  3344                           
  3345  01A2                     ___wmul@multiplicand:	
  3346                           ; 1 bytes @ 0x2
  3347                           
  3348  01A2                     memset@c:	
  3349                           ; 2 bytes @ 0x2
  3350                           
  3351                           
  3352                           ; 2 bytes @ 0x2
  3353  01A2                     	ds	1
  3354  01A3                     ??_putUSBUSART:	
  3355  01A3                     USBDeviceInit@i_1118:	
  3356                           ; 1 bytes @ 0x3
  3357                           
  3358  01A3                     USBTransferOnePacket@len:	
  3359                           ; 1 bytes @ 0x3
  3360                           
  3361                           
  3362                           ; 1 bytes @ 0x3
  3363  01A3                     	ds	1
  3364  01A4                     ??_USBTransferOnePacket:	
  3365  01A4                     ??___wmul:	
  3366                           ; 1 bytes @ 0x4
  3367                           
  3368  01A4                     USBDeviceInit@i:	
  3369                           ; 1 bytes @ 0x4
  3370                           
  3371  01A4                     ___wmul@product:	
  3372                           ; 1 bytes @ 0x4
  3373                           
  3374  01A4                     memset@n:	
  3375                           ; 2 bytes @ 0x4
  3376                           
  3377  01A4                     ___lmul@multiplicand:	
  3378                           ; 2 bytes @ 0x4
  3379                           
  3380                           
  3381                           ; 4 bytes @ 0x4
  3382  01A4                     	ds	2
  3383  01A6                     ??_memset:	
  3384  01A6                     ?_my_uitoa:	
  3385                           ; 1 bytes @ 0x6
  3386                           
  3387  01A6                     ?_atoi:	
  3388                           ; 1 bytes @ 0x6
  3389                           
  3390  01A6                     my_uitoa@num:	
  3391                           ; 2 bytes @ 0x6
  3392                           
  3393  01A6                     memset@p:	
  3394                           ; 2 bytes @ 0x6
  3395                           
  3396                           
  3397                           ; 2 bytes @ 0x6
  3398  01A6                     	ds	2
  3399  01A8                     ??_atoi:	
  3400  01A8                     ??_my_uitoa:	
  3401                           ; 1 bytes @ 0x8
  3402                           
  3403  01A8                     ??___lmul:	
  3404                           ; 1 bytes @ 0x8
  3405                           
  3406  01A8                     USBTransferOnePacket@ep:	
  3407                           ; 1 bytes @ 0x8
  3408                           
  3409  01A8                     ___lmul@product:	
  3410                           ; 1 bytes @ 0x8
  3411                           
  3412                           
  3413                           ; 4 bytes @ 0x8
  3414  01A8                     	ds	1
  3415  01A9                     USBTransferOnePacket@handle:	
  3416                           
  3417                           ; 2 bytes @ 0x9
  3418  01A9                     	ds	1
  3419  01AA                     atoi@sign:	
  3420                           
  3421                           ; 1 bytes @ 0xA
  3422  01AA                     	ds	1
  3423  01AB                     ?_getsUSBUSART:	
  3424  01AB                     ??_CDCTxService:	
  3425                           ; 1 bytes @ 0xB
  3426                           
  3427  01AB                     getsUSBUSART@len:	
  3428                           ; 1 bytes @ 0xB
  3429                           
  3430  01AB                     atoi@a:	
  3431                           ; 1 bytes @ 0xB
  3432                           
  3433                           
  3434                           ; 2 bytes @ 0xB
  3435  01AB                     	ds	1
  3436  01AC                     ??_getsUSBUSART:	
  3437  01AC                     ?___aldiv:	
  3438                           ; 1 bytes @ 0xC
  3439                           
  3440  01AC                     ?___lldiv:	
  3441                           ; 4 bytes @ 0xC
  3442                           
  3443  01AC                     CDCTxService@i:	
  3444                           ; 4 bytes @ 0xC
  3445                           
  3446  01AC                     ___aldiv@divisor:	
  3447                           ; 1 bytes @ 0xC
  3448                           
  3449  01AC                     ___lldiv@divisor:	
  3450                           ; 4 bytes @ 0xC
  3451                           
  3452                           
  3453                           ; 4 bytes @ 0xC
  3454  01AC                     	ds	1
  3455  01AD                     CDCTxService@byte_to_send:	
  3456  01AD                     atoi@s:	
  3457                           ; 1 bytes @ 0xD
  3458                           
  3459                           
  3460                           ; 1 bytes @ 0xD
  3461  01AD                     	ds	1
  3462  01AE                     getsUSBUSART@buffer:	
  3463                           
  3464                           ; 1 bytes @ 0xE
  3465  01AE                     	ds	2
  3466  01B0                     ___aldiv@dividend:	
  3467  01B0                     ___lldiv@dividend:	
  3468                           ; 4 bytes @ 0x10
  3469                           
  3470                           
  3471                           ; 4 bytes @ 0x10
  3472  01B0                     	ds	2
  3473  01B2                     my_uitoa@strIncremet:	
  3474                           
  3475                           ; 1 bytes @ 0x12
  3476  01B2                     	ds	1
  3477  01B3                     my_uitoa@str:	
  3478                           
  3479                           ; 1 bytes @ 0x13
  3480  01B3                     	ds	1
  3481  01B4                     ??___aldiv:	
  3482  01B4                     ??___lldiv:	
  3483                           ; 1 bytes @ 0x14
  3484                           
  3485  01B4                     my_uitoa@powerOfTen:	
  3486                           ; 1 bytes @ 0x14
  3487                           
  3488                           
  3489                           ; 1 bytes @ 0x14
  3490  01B4                     	ds	1
  3491  01B5                     my_uitoa@ziffer:	
  3492  01B5                     ___aldiv@counter:	
  3493                           ; 1 bytes @ 0x15
  3494                           
  3495  01B5                     ___lldiv@quotient:	
  3496                           ; 1 bytes @ 0x15
  3497                           
  3498                           
  3499                           ; 4 bytes @ 0x15
  3500  01B5                     	ds	1
  3501  01B6                     ___aldiv@sign:	
  3502                           
  3503                           ; 1 bytes @ 0x16
  3504  01B6                     	ds	1
  3505  01B7                     ___aldiv@quotient:	
  3506                           
  3507                           ; 4 bytes @ 0x17
  3508  01B7                     	ds	2
  3509  01B9                     ___lldiv@counter:	
  3510                           
  3511                           ; 1 bytes @ 0x19
  3512  01B9                     	ds	2
  3513  01BB                     ?_main_switchStepUp_Down:	
  3514  01BB                     main_switchStepUp_Down@Uout_mV:	
  3515                           ; 1 bytes @ 0x1B
  3516                           
  3517                           
  3518                           ; 4 bytes @ 0x1B
  3519  01BB                     	ds	4
  3520  01BF                     ??_main_switchStepUp_Down:	
  3521                           
  3522                           ; 1 bytes @ 0x1F
  3523  01BF                     	ds	1
  3524  01C0                     ?_main_SetDcDcRegulator:	
  3525  01C0                     main_SetDcDcRegulator@pI_mA:	
  3526                           ; 1 bytes @ 0x20
  3527                           
  3528                           
  3529                           ; 1 bytes @ 0x20
  3530  01C0                     	ds	1
  3531  01C1                     ??_main_SetDcDcRegulator:	
  3532                           
  3533                           ; 1 bytes @ 0x21
  3534  01C1                     	ds	4
  3535  01C5                     main_SetDcDcRegulator@pU_mV:	
  3536                           
  3537                           ; 1 bytes @ 0x25
  3538  01C5                     	ds	1
  3539  01C6                     ??_main_CommunicationHandler:	
  3540                           
  3541                           ; 1 bytes @ 0x26
  3542  01C6                     	ds	2
  3543  01C8                     main_CommunicationHandler@numBytesRead:	
  3544                           
  3545                           ; 1 bytes @ 0x28
  3546  01C8                     	ds	1
  3547  01C9                     main_CommunicationHandler@i:	
  3548                           
  3549                           ; 1 bytes @ 0x29
  3550  01C9                     	ds	1
  3551  01CA                     ??_main:	
  3552                           
  3553                           ; 1 bytes @ 0x2A
  3554  01CA                     	ds	1
  3555                           
  3556                           	psect	cstackBANK2
  3557  0160                     __pcstackBANK2:	
  3558  0160                     ??_USBCtrlEPService:	
  3559                           
  3560                           ; 1 bytes @ 0x0
  3561  0160                     	ds	3
  3562  0163                     ??_USBDeviceTasks:	
  3563                           
  3564                           ; 1 bytes @ 0x3
  3565  0163                     	ds	2
  3566  0165                     ??_INTERRUPT_InterruptManager:	
  3567                           
  3568                           ; 1 bytes @ 0x5
  3569  0165                     	ds	7
  3570  016C                     INTERRUPT_InterruptManager@pwm:	
  3571                           
  3572                           ; 2 bytes @ 0xC
  3573  016C                     	ds	2
  3574                           
  3575                           	psect	cstackBANK1
  3576  00E0                     __pcstackBANK1:	
  3577  00E0                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  3578  00E0                     ??_USART_mySetLineCodingHandler:	
  3579                           ; 1 bytes @ 0x0
  3580                           
  3581  00E0                     getsUSBUSART2@buffer:	
  3582                           ; 1 bytes @ 0x0
  3583                           
  3584  00E0                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  3585                           ; 1 bytes @ 0x0
  3586                           
  3587                           
  3588                           ; 2 bytes @ 0x0
  3589  00E0                     	ds	1
  3590  00E1                     ??_main_CDC_to_RS485_Tasks:	
  3591                           
  3592                           ; 1 bytes @ 0x1
  3593  00E1                     	ds	1
  3594  00E2                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  3595                           
  3596                           ; 2 bytes @ 0x2
  3597  00E2                     	ds	2
  3598  00E4                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  3599  00E4                     USART_mySetLineCodingHandler@dwBaud:	
  3600                           ; 2 bytes @ 0x4
  3601                           
  3602                           
  3603                           ; 4 bytes @ 0x4
  3604  00E4                     	ds	2
  3605  00E6                     ??_USBWakeFromSuspend:	
  3606  00E6                     ??_USBSuspend:	
  3607                           ; 1 bytes @ 0x6
  3608                           
  3609  00E6                     ??_USBStdFeatureReqHandler:	
  3610                           ; 1 bytes @ 0x6
  3611                           
  3612  00E6                     ??_USBStdSetCfgHandler:	
  3613                           ; 1 bytes @ 0x6
  3614                           
  3615                           
  3616                           ; 1 bytes @ 0x6
  3617  00E6                     	ds	1
  3618  00E7                     USBStdSetCfgHandler@p:	
  3619                           
  3620                           ; 2 bytes @ 0x7
  3621  00E7                     	ds	1
  3622  00E8                     ??_USBCtrlTrfInHandler:	
  3623  00E8                     ??_USBCtrlTrfRxService:	
  3624                           ; 1 bytes @ 0x8
  3625                           
  3626  00E8                     USBStdFeatureReqHandler@pUEP:	
  3627                           ; 1 bytes @ 0x8
  3628                           
  3629                           
  3630                           ; 2 bytes @ 0x8
  3631  00E8                     	ds	1
  3632  00E9                     USBStdSetCfgHandler@i_1459:	
  3633                           
  3634                           ; 1 bytes @ 0x9
  3635  00E9                     	ds	1
  3636  00EA                     USBCtrlTrfRxService@i:	
  3637  00EA                     USBStdSetCfgHandler@i:	
  3638                           ; 1 bytes @ 0xA
  3639                           
  3640  00EA                     USBCtrlTrfInHandler@lastDTS:	
  3641                           ; 1 bytes @ 0xA
  3642                           
  3643  00EA                     USBStdFeatureReqHandler@current_ep_data:	
  3644                           ; 1 bytes @ 0xA
  3645                           
  3646                           
  3647                           ; 1 bytes @ 0xA
  3648  00EA                     	ds	1
  3649  00EB                     USBCtrlTrfRxService@byteToRead:	
  3650  00EB                     USBStdFeatureReqHandler@p:	
  3651                           ; 1 bytes @ 0xB
  3652                           
  3653                           
  3654                           ; 2 bytes @ 0xB
  3655  00EB                     	ds	1
  3656  00EC                     ??_USBCtrlTrfOutHandler:	
  3657                           
  3658                           ; 1 bytes @ 0xC
  3659  00EC                     	ds	1
  3660  00ED                     ??_USBCheckStdRequest:	
  3661                           
  3662                           ; 1 bytes @ 0xD
  3663  00ED                     	ds	1
  3664  00EE                     ??_USBCtrlTrfSetupHandler:	
  3665                           
  3666                           ; 1 bytes @ 0xE
  3667  00EE                     	ds	1
  3668  00EF                     USBDeviceTasks@i:	
  3669                           
  3670                           ; 1 bytes @ 0xF
  3671  00EF                     	ds	1
  3672                           
  3673                           	psect	cstackCOMMON
  3674  0070                     __pcstackCOMMON:	
  3675  0070                     ?_isdigit:	
  3676  0070                     ?_TMR2_StartTimer:	
  3677                           ; 1 bit 
  3678                           
  3679  0070                     ?_PIN_MANAGER_Initialize:	
  3680                           ; 1 bytes @ 0x0
  3681                           
  3682  0070                     ?_OSCILLATOR_Initialize:	
  3683                           ; 1 bytes @ 0x0
  3684                           
  3685  0070                     ?_WDT_Initialize:	
  3686                           ; 1 bytes @ 0x0
  3687                           
  3688  0070                     ?_FVR_Initialize:	
  3689                           ; 1 bytes @ 0x0
  3690                           
  3691  0070                     ?_PWM2_Initialize:	
  3692                           ; 1 bytes @ 0x0
  3693                           
  3694  0070                     ?_TMR1_Initialize:	
  3695                           ; 1 bytes @ 0x0
  3696                           
  3697  0070                     ?_EUSART_Initialize:	
  3698                           ; 1 bytes @ 0x0
  3699                           
  3700  0070                     ?_TMR1_StartTimer:	
  3701                           ; 1 bytes @ 0x0
  3702                           
  3703  0070                     ?_USBWakeFromSuspend:	
  3704                           ; 1 bytes @ 0x0
  3705                           
  3706  0070                     ?_USBSuspend:	
  3707                           ; 1 bytes @ 0x0
  3708                           
  3709  0070                     ?_USBIncrement1msInternalTimers:	
  3710                           ; 1 bytes @ 0x0
  3711                           
  3712  0070                     ??_USBIncrement1msInternalTimers:	
  3713                           ; 1 bytes @ 0x0
  3714                           
  3715  0070                     ?_USBCtrlEPAllowStatusStage:	
  3716                           ; 1 bytes @ 0x0
  3717                           
  3718  0070                     ??_USBCtrlEPAllowStatusStage:	
  3719                           ; 1 bytes @ 0x0
  3720                           
  3721  0070                     ?_USBStallHandler:	
  3722                           ; 1 bytes @ 0x0
  3723                           
  3724  0070                     ??_USBStallHandler:	
  3725                           ; 1 bytes @ 0x0
  3726                           
  3727  0070                     ?_USBCtrlEPService:	
  3728                           ; 1 bytes @ 0x0
  3729                           
  3730  0070                     ?_USBConfigureEndpoint:	
  3731                           ; 1 bytes @ 0x0
  3732                           
  3733  0070                     ?_USBCtrlTrfTxService:	
  3734                           ; 1 bytes @ 0x0
  3735                           
  3736  0070                     ??_USBCtrlTrfTxService:	
  3737                           ; 1 bytes @ 0x0
  3738                           
  3739  0070                     ?_USBCtrlTrfSetupHandler:	
  3740                           ; 1 bytes @ 0x0
  3741                           
  3742  0070                     ?_USBCtrlTrfOutHandler:	
  3743                           ; 1 bytes @ 0x0
  3744                           
  3745  0070                     ?_USBCtrlTrfInHandler:	
  3746                           ; 1 bytes @ 0x0
  3747                           
  3748  0070                     ?_USBCheckStdRequest:	
  3749                           ; 1 bytes @ 0x0
  3750                           
  3751  0070                     ?_USBStdFeatureReqHandler:	
  3752                           ; 1 bytes @ 0x0
  3753                           
  3754  0070                     ?_USART_mySetLineCodingHandler:	
  3755                           ; 1 bytes @ 0x0
  3756                           
  3757  0070                     ?_main_CDC_to_RS485_Initialize:	
  3758                           ; 1 bytes @ 0x0
  3759                           
  3760  0070                     ??_main_CDC_to_RS485_Initialize:	
  3761                           ; 1 bytes @ 0x0
  3762                           
  3763  0070                     ?_main_Communication_Initialize:	
  3764                           ; 1 bytes @ 0x0
  3765                           
  3766  0070                     ??_main_Communication_Initialize:	
  3767                           ; 1 bytes @ 0x0
  3768                           
  3769  0070                     ?_USART_putcUSART:	
  3770                           ; 1 bytes @ 0x0
  3771                           
  3772  0070                     ??_USART_putcUSART:	
  3773                           ; 1 bytes @ 0x0
  3774                           
  3775  0070                     ?_USART_getcUSART:	
  3776                           ; 1 bytes @ 0x0
  3777                           
  3778  0070                     ??_USART_getcUSART:	
  3779                           ; 1 bytes @ 0x0
  3780                           
  3781  0070                     ?_ADC_Initialize:	
  3782                           ; 1 bytes @ 0x0
  3783                           
  3784  0070                     ?_ADC_SelectChannel:	
  3785                           ; 1 bytes @ 0x0
  3786                           
  3787  0070                     ??_ADC_SelectChannel:	
  3788                           ; 1 bytes @ 0x0
  3789                           
  3790  0070                     ?_ADC_StartConversion:	
  3791                           ; 1 bytes @ 0x0
  3792                           
  3793  0070                     ?_ADC_IsConversionDone:	
  3794                           ; 1 bytes @ 0x0
  3795                           
  3796  0070                     ??_ADC_IsConversionDone:	
  3797                           ; 1 bytes @ 0x0
  3798                           
  3799  0070                     ?_TMR2_Initialize:	
  3800                           ; 1 bytes @ 0x0
  3801                           
  3802  0070                     ?_SYSTEM_Initialize:	
  3803                           ; 1 bytes @ 0x0
  3804                           
  3805  0070                     ?_TMR1_Reload:	
  3806                           ; 1 bytes @ 0x0
  3807                           
  3808  0070                     ?_USBDeviceInit:	
  3809                           ; 1 bytes @ 0x0
  3810                           
  3811  0070                     ?_USBDeviceTasks:	
  3812                           ; 1 bytes @ 0x0
  3813                           
  3814  0070                     ?_USBCtrlEPAllowDataStage:	
  3815                           ; 1 bytes @ 0x0
  3816                           
  3817  0070                     ?_USBCtrlEPServiceComplete:	
  3818                           ; 1 bytes @ 0x0
  3819                           
  3820  0070                     ?_USBCtrlTrfRxService:	
  3821                           ; 1 bytes @ 0x0
  3822                           
  3823  0070                     ?_USBStdSetCfgHandler:	
  3824                           ; 1 bytes @ 0x0
  3825                           
  3826  0070                     ?_USBStdGetDscHandler:	
  3827                           ; 1 bytes @ 0x0
  3828                           
  3829  0070                     ??_USBStdGetDscHandler:	
  3830                           ; 1 bytes @ 0x0
  3831                           
  3832  0070                     ?_USBStdGetStatusHandler:	
  3833                           ; 1 bytes @ 0x0
  3834                           
  3835  0070                     ??_USBStdGetStatusHandler:	
  3836                           ; 1 bytes @ 0x0
  3837                           
  3838  0070                     ?_USBCheckCDCRequest:	
  3839                           ; 1 bytes @ 0x0
  3840                           
  3841  0070                     ??_USBCheckCDCRequest:	
  3842                           ; 1 bytes @ 0x0
  3843                           
  3844  0070                     ?_CDCInitEP:	
  3845                           ; 1 bytes @ 0x0
  3846                           
  3847  0070                     ?_CDCTxService:	
  3848                           ; 1 bytes @ 0x0
  3849                           
  3850  0070                     ?_USBCheckCDCRequest2:	
  3851                           ; 1 bytes @ 0x0
  3852                           
  3853  0070                     ??_USBCheckCDCRequest2:	
  3854                           ; 1 bytes @ 0x0
  3855                           
  3856  0070                     ?_CDCInitEP2:	
  3857                           ; 1 bytes @ 0x0
  3858                           
  3859  0070                     ?_putUSBUSART2:	
  3860                           ; 1 bytes @ 0x0
  3861                           
  3862  0070                     ?_CDCTxService2:	
  3863                           ; 1 bytes @ 0x0
  3864                           
  3865  0070                     ?_main_CDC_to_RS485_Tasks:	
  3866                           ; 1 bytes @ 0x0
  3867                           
  3868  0070                     ?_main_CommunicationHandler:	
  3869                           ; 1 bytes @ 0x0
  3870                           
  3871  0070                     ?_main_overcurrentProtection:	
  3872                           ; 1 bytes @ 0x0
  3873                           
  3874  0070                     ?_main:	
  3875                           ; 1 bytes @ 0x0
  3876                           
  3877  0070                     ?_INTERRUPT_InterruptManager:	
  3878                           ; 1 bytes @ 0x0
  3879                           
  3880  0070                     ?i1_ADC_StartConversion:	
  3881                           ; 1 bytes @ 0x0
  3882                           
  3883  0070                     ??i1_ADC_StartConversion:	
  3884                           ; 1 bytes @ 0x0
  3885                           
  3886  0070                     ?i1_PWM2_LoadDutyValue:	
  3887                           ; 1 bytes @ 0x0
  3888                           
  3889  0070                     ?i1_TMR1_Reload:	
  3890                           ; 1 bytes @ 0x0
  3891                           
  3892  0070                     ??i1_TMR1_Reload:	
  3893                           ; 1 bytes @ 0x0
  3894                           
  3895  0070                     ?i1_USBDeviceInit:	
  3896                           ; 1 bytes @ 0x0
  3897                           
  3898  0070                     ??i1_USBDeviceInit:	
  3899                           ; 1 bytes @ 0x0
  3900                           
  3901  0070                     ?i1_memset:	
  3902                           ; 1 bytes @ 0x0
  3903                           
  3904  0070                     ?_ADC_GetConversionResult:	
  3905                           ; 1 bytes @ 0x0
  3906                           
  3907  0070                     ?i1_USBTransferOnePacket:	
  3908                           ; 2 bytes @ 0x0
  3909                           
  3910  0070                     ?i1___lldiv:	
  3911                           ; 2 bytes @ 0x0
  3912                           
  3913  0070                     USBConfigureEndpoint@direction:	
  3914                           ; 4 bytes @ 0x0
  3915                           
  3916  0070                     putUSBUSART2@length:	
  3917                           ; 1 bytes @ 0x0
  3918                           
  3919  0070                     USART_putcUSART@c:	
  3920                           ; 1 bytes @ 0x0
  3921                           
  3922  0070                     i1USBTransferOnePacket@dir:	
  3923                           ; 1 bytes @ 0x0
  3924                           
  3925  0070                     i1PWM2_LoadDutyValue@dutyValue:	
  3926                           ; 1 bytes @ 0x0
  3927                           
  3928  0070                     i1memset@p1:	
  3929                           ; 2 bytes @ 0x0
  3930                           
  3931  0070                     i1___lldiv@divisor:	
  3932                           ; 2 bytes @ 0x0
  3933                           
  3934                           
  3935                           ; 4 bytes @ 0x0
  3936  0070                     	ds	1
  3937  0071                     ??_USBConfigureEndpoint:	
  3938  0071                     ??_putUSBUSART2:	
  3939                           ; 1 bytes @ 0x1
  3940                           
  3941  0071                     ADC_SelectChannel@channel:	
  3942                           ; 1 bytes @ 0x1
  3943                           
  3944  0071                     main_CDC_to_RS485_Initialize@i:	
  3945                           ; 1 bytes @ 0x1
  3946                           
  3947  0071                     main_Communication_Initialize@i:	
  3948                           ; 1 bytes @ 0x1
  3949                           
  3950  0071                     USART_getcUSART@c:	
  3951                           ; 1 bytes @ 0x1
  3952                           
  3953  0071                     USBStdGetStatusHandler@p:	
  3954                           ; 1 bytes @ 0x1
  3955                           
  3956  0071                     i1USBDeviceInit@p:	
  3957                           ; 2 bytes @ 0x1
  3958                           
  3959  0071                     i1USBTransferOnePacket@data:	
  3960                           ; 2 bytes @ 0x1
  3961                           
  3962                           
  3963                           ; 2 bytes @ 0x1
  3964  0071                     	ds	1
  3965  0072                     ??_ADC_GetConversionResult:	
  3966  0072                     ??i1_PWM2_LoadDutyValue:	
  3967                           ; 1 bytes @ 0x2
  3968                           
  3969  0072                     USBCtrlTrfTxService@byteToSend:	
  3970                           ; 1 bytes @ 0x2
  3971                           
  3972  0072                     putUSBUSART2@data:	
  3973                           ; 1 bytes @ 0x2
  3974                           
  3975  0072                     i1memset@c:	
  3976                           ; 1 bytes @ 0x2
  3977                           
  3978                           
  3979                           ; 2 bytes @ 0x2
  3980  0072                     	ds	1
  3981  0073                     ??_USBCtrlEPAllowDataStage:	
  3982  0073                     i1USBDeviceInit@i_1118:	
  3983                           ; 1 bytes @ 0x3
  3984                           
  3985  0073                     i1USBTransferOnePacket@len:	
  3986                           ; 1 bytes @ 0x3
  3987                           
  3988                           
  3989                           ; 1 bytes @ 0x3
  3990  0073                     	ds	1
  3991  0074                     ??i1_USBTransferOnePacket:	
  3992  0074                     i1USBDeviceInit@i:	
  3993                           ; 1 bytes @ 0x4
  3994                           
  3995  0074                     i1memset@n:	
  3996                           ; 1 bytes @ 0x4
  3997                           
  3998  0074                     i1___lldiv@dividend:	
  3999                           ; 2 bytes @ 0x4
  4000                           
  4001                           
  4002                           ; 4 bytes @ 0x4
  4003  0074                     	ds	1
  4004  0075                     ??_USBCtrlEPServiceComplete:	
  4005  0075                     USBConfigureEndpoint@EPNum:	
  4006                           ; 1 bytes @ 0x5
  4007                           
  4008                           
  4009                           ; 1 bytes @ 0x5
  4010  0075                     	ds	1
  4011  0076                     ??i1_memset:	
  4012  0076                     USBConfigureEndpoint@handle:	
  4013                           ; 1 bytes @ 0x6
  4014                           
  4015  0076                     i1memset@p:	
  4016                           ; 1 bytes @ 0x6
  4017                           
  4018                           
  4019                           ; 2 bytes @ 0x6
  4020  0076                     	ds	1
  4021  0077                     ?_USBEnableEndpoint:	
  4022  0077                     USBEnableEndpoint@options:	
  4023                           ; 1 bytes @ 0x7
  4024                           
  4025                           
  4026                           ; 1 bytes @ 0x7
  4027  0077                     	ds	1
  4028  0078                     ??_USBEnableEndpoint:	
  4029  0078                     ??i1___lldiv:	
  4030                           ; 1 bytes @ 0x8
  4031                           
  4032  0078                     i1USBTransferOnePacket@ep:	
  4033                           ; 1 bytes @ 0x8
  4034                           
  4035                           
  4036                           ; 1 bytes @ 0x8
  4037  0078                     	ds	1
  4038  0079                     i1USBTransferOnePacket@handle:	
  4039  0079                     i1___lldiv@quotient:	
  4040                           ; 2 bytes @ 0x9
  4041                           
  4042                           
  4043                           ; 4 bytes @ 0x9
  4044  0079                     	ds	1
  4045  007A                     USBEnableEndpoint@p:	
  4046                           
  4047                           ; 2 bytes @ 0xA
  4048  007A                     	ds	1
  4049  007B                     ?_getsUSBUSART2:	
  4050  007B                     ??_CDCTxService2:	
  4051                           ; 1 bytes @ 0xB
  4052                           
  4053  007B                     getsUSBUSART2@len:	
  4054                           ; 1 bytes @ 0xB
  4055                           
  4056                           
  4057                           ; 1 bytes @ 0xB
  4058  007B                     	ds	1
  4059  007C                     ??_getsUSBUSART2:	
  4060  007C                     USBEnableEndpoint@ep:	
  4061                           ; 1 bytes @ 0xC
  4062                           
  4063  007C                     CDCTxService2@i:	
  4064                           ; 1 bytes @ 0xC
  4065                           
  4066                           
  4067                           ; 1 bytes @ 0xC
  4068  007C                     	ds	1
  4069  007D                     ??_CDCInitEP:	
  4070  007D                     ??_CDCInitEP2:	
  4071                           ; 1 bytes @ 0xD
  4072                           
  4073  007D                     CDCTxService2@byte_to_send:	
  4074                           ; 1 bytes @ 0xD
  4075                           
  4076  007D                     i1___lldiv@counter:	
  4077                           ; 1 bytes @ 0xD
  4078                           
  4079                           
  4080                           ; 1 bytes @ 0xD
  4081  007D                     	ds	1
  4082  007E                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  4083                           
  4084                           	psect	maintext
  4085  1F26                     __pmaintext:	
  4086                           ; 1 bytes @ 0xE
  4087 ;;
  4088 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4089 ;;
  4090 ;; *************** function _main *****************
  4091 ;; Defined at:
  4092 ;;		line 438 in file "main.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : B1F/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  4106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  4107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  4108 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  4109 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  4110 ;;Total ram usage:        1 bytes
  4111 ;; Hardware stack levels required when called:   14
  4112 ;; This function calls:
  4113 ;;		_ADC_StartConversion
  4114 ;;		_SYSTEM_Initialize
  4115 ;;		_TMR1_StartTimer
  4116 ;;		_USBDeviceInit
  4117 ;;		_main_CommunicationHandler
  4118 ;;		_main_SetDcDcRegulator
  4119 ;;		_main_overcurrentProtection
  4120 ;; This function is called by:
  4121 ;;		Startup code after reset
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           
  4126                           ;psect for function _main
  4127  1F26                     _main:	
  4128                           
  4129                           ;main.c: 440: SYSTEM_Initialize();
  4130                           
  4131                           ;incstack = 0
  4132                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4133  1F26  319E  26D3  319F   	fcall	_SYSTEM_Initialize
  4134                           
  4135                           ;main.c: 441: TMR1_StartTimer();
  4136  1F29  319D  256E  319F   	fcall	_TMR1_StartTimer
  4137                           
  4138                           ;main.c: 443: (INTCONbits.GIE = 1);
  4139  1F2C  178B               	bsf	11,7	;volatile
  4140                           
  4141                           ;main.c: 444: (INTCONbits.PEIE = 1);
  4142  1F2D  170B               	bsf	11,6	;volatile
  4143                           
  4144                           ;main.c: 445: ADC_StartConversion();
  4145  1F2E  319D  256B  319F   	fcall	_ADC_StartConversion
  4146                           
  4147                           ;main.c: 447: USBDeviceInit();
  4148  1F31  318E  264B  319F   	fcall	_USBDeviceInit
  4149                           
  4150                           ;main.c: 448: ;
  4151                           ;main.c: 450: main_SetDcDcRegulator(&MAIN_Uout_target_mV, &MAIN_Iout_limit_mA);
  4152  1F34  306A               	movlw	(low (_MAIN_Iout_limit_mA| (0+512)))& (0+255)
  4153  1F35  0023               	movlb	3	; select bank3
  4154  1F36  00CA               	movwf	??_main^(0+384)
  4155  1F37  084A               	movf	??_main^(0+384),w
  4156  1F38  00C0               	movwf	main_SetDcDcRegulator@pI_mA^(0+384)
  4157  1F39  3064               	movlw	(low (_MAIN_Uout_target_mV| (0+512)))& (0+255)
  4158  1F3A  3184  24D8  319F   	fcall	_main_SetDcDcRegulator
  4159  1F3D                     l1165:	
  4160                           ;main.c: 452: while(1)
  4161                           
  4162                           
  4163                           ;main.c: 453: {
  4164                           ;main.c: 454: ;
  4165                           ;main.c: 471: main_overcurrentProtection();
  4166  1F3D  3191  2195  319F   	fcall	_main_overcurrentProtection
  4167                           
  4168                           ;main.c: 472: main_CommunicationHandler();
  4169  1F40  3183  233C  319F   	fcall	_main_CommunicationHandler
  4170  1F43  0064               	clrwdt	;# 
  4171  1F44  2F3D               	goto	l1165
  4172  1F45                     __end_of_main:	
  4173                           
  4174                           	psect	text1
  4175  1195                     __ptext1:	
  4176 ;; *************** function _main_overcurrentProtection *****************
  4177 ;; Defined at:
  4178 ;;		line 398 in file "main.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  4192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  4194 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  4195 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  4196 ;;Total ram usage:        2 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:   10
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_main
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           
  4207                           ;psect for function _main_overcurrentProtection
  4208  1195                     _main_overcurrentProtection:	
  4209                           
  4210                           ;main.c: 400: static uint8_t tOut = 0;
  4211                           ;main.c: 401: static Iadc_avg = 0;
  4212                           ;main.c: 403: Iadc_avg = ((Iadc_avg + Iadc)>>1);
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in _main_overcurrentProtection: [wreg+status,2+status,0]
  4216  1195  0023               	movlb	3	; select bank3
  4217  1196  085A               	movf	_Iadc^(0+384),w	;volatile
  4218  1197  0024               	movlb	4	; select bank4
  4219  1198  0743               	addwf	main_overcurrentProtection@Iadc_avg^(0+512),w
  4220  1199  0023               	movlb	3	; select bank3
  4221  119A  00A0               	movwf	??_main_overcurrentProtection^(0+384)
  4222  119B  085B               	movf	(_Iadc+1)^(0+384),w	;volatile
  4223  119C  0024               	movlb	4	; select bank4
  4224  119D  3D44               	addwfc	(main_overcurrentProtection@Iadc_avg+1)^(0+512),w
  4225  119E  0023               	movlb	3	; select bank3
  4226  119F  00A1               	movwf	(??_main_overcurrentProtection+1)^(0+384)
  4227  11A0  36A1               	lsrf	(??_main_overcurrentProtection^(0+384)+1),f
  4228  11A1  0CA0               	rrf	??_main_overcurrentProtection^(0+384),f
  4229  11A2  0820               	movf	??_main_overcurrentProtection^(0+384),w
  4230  11A3  0024               	movlb	4	; select bank4
  4231  11A4  00C3               	movwf	main_overcurrentProtection@Iadc_avg^(0+512)
  4232  11A5  0023               	movlb	3	; select bank3
  4233  11A6  0821               	movf	(??_main_overcurrentProtection+1)^(0+384),w
  4234  11A7  0024               	movlb	4	; select bank4
  4235  11A8  00C4               	movwf	(main_overcurrentProtection@Iadc_avg+1)^(0+512)
  4236                           
  4237                           ;main.c: 405: if((Iadc_avg <= Iadc_limit)&&(2 != MAIN_ovcFlag)) {
  4238  11A9  0844               	movf	(main_overcurrentProtection@Iadc_avg+1)^(0+512),w
  4239  11AA  0230               	subwf	(_Iadc_limit+1)^(0+512),w
  4240  11AB  1D03               	skipz
  4241  11AC  29AF               	goto	u5805
  4242  11AD  0843               	movf	main_overcurrentProtection@Iadc_avg^(0+512),w
  4243  11AE  022F               	subwf	_Iadc_limit^(0+512),w
  4244  11AF                     u5805:	
  4245  11AF  1C03               	skipc
  4246  11B0  29C2               	goto	l5803
  4247  11B1  3002               	movlw	2
  4248  11B2  0648               	xorwf	_MAIN_ovcFlag^(0+512),w
  4249  11B3  1903               	btfsc	3,2
  4250  11B4  29C2               	goto	l5803
  4251                           
  4252                           ;main.c: 406: if(PwmDutyCycleCurrentLimit < (188)) PwmDutyCycleCurrentLimit++;
  4253  11B5  30BC               	movlw	188
  4254  11B6  0023               	movlb	3	; select bank3
  4255  11B7  025F               	subwf	_PwmDutyCycleCurrentLimit^(0+384),w
  4256  11B8  1803               	skipnc
  4257  11B9  29BF               	goto	l5801
  4258  11BA  3001               	movlw	1
  4259  11BB  00A0               	movwf	??_main_overcurrentProtection^(0+384)
  4260  11BC  0820               	movf	??_main_overcurrentProtection^(0+384),w
  4261  11BD  07DF               	addwf	_PwmDutyCycleCurrentLimit^(0+384),f
  4262  11BE  0008               	return
  4263  11BF                     l5801:	
  4264                           
  4265                           ;main.c: 407: else MAIN_ovcFlag = 0;
  4266  11BF  0024               	movlb	4	; select bank4
  4267  11C0  01C8               	clrf	_MAIN_ovcFlag^(0+512)
  4268                           
  4269                           ;main.c: 408: } else {
  4270  11C1  0008               	return
  4271  11C2                     l5803:	
  4272                           
  4273                           ;main.c: 409: if(PwmDutyCycleCurrentLimit > 0) {
  4274  11C2  0023               	movlb	3	; select bank3
  4275  11C3  085F               	movf	_PwmDutyCycleCurrentLimit^(0+384),w
  4276  11C4  1903               	btfsc	3,2
  4277  11C5  29C9               	goto	l5807
  4278                           
  4279                           ;main.c: 410: PwmDutyCycleCurrentLimit--;
  4280  11C6  3001               	movlw	1
  4281  11C7  02DF               	subwf	_PwmDutyCycleCurrentLimit^(0+384),f
  4282                           
  4283                           ;main.c: 411: } else {
  4284  11C8  0008               	return
  4285  11C9                     l5807:	
  4286                           
  4287                           ;main.c: 412: if(tOut > 100) {
  4288  11C9  3065               	movlw	101
  4289  11CA  0024               	movlb	4	; select bank4
  4290  11CB  025C               	subwf	main_overcurrentProtection@tOut^(0+512),w
  4291  11CC  1C03               	skipc
  4292  11CD  29D8               	goto	l5815
  4293                           
  4294                           ;main.c: 413: tOut = 0;
  4295  11CE  01DC               	clrf	main_overcurrentProtection@tOut^(0+512)
  4296                           
  4297                           ;main.c: 415: do { LATAbits.LATA5 = 1; } while(0);
  4298  11CF  0022               	movlb	2	; select bank2
  4299  11D0  168C               	bsf	12,5	;volatile
  4300                           
  4301                           ;main.c: 416: MAIN_ovcFlag = 2;
  4302  11D1  3002               	movlw	2
  4303  11D2  0023               	movlb	3	; select bank3
  4304  11D3  00A0               	movwf	??_main_overcurrentProtection^(0+384)
  4305  11D4  0820               	movf	??_main_overcurrentProtection^(0+384),w
  4306  11D5  0024               	movlb	4	; select bank4
  4307  11D6  00C8               	movwf	_MAIN_ovcFlag^(0+512)
  4308                           
  4309                           ;main.c: 417: } else {
  4310  11D7  0008               	return
  4311  11D8                     l5815:	
  4312                           
  4313                           ;main.c: 418: tOut++;
  4314  11D8  3001               	movlw	1
  4315  11D9  0023               	movlb	3	; select bank3
  4316  11DA  00A0               	movwf	??_main_overcurrentProtection^(0+384)
  4317  11DB  0820               	movf	??_main_overcurrentProtection^(0+384),w
  4318  11DC  0024               	movlb	4	; select bank4
  4319  11DD  07DC               	addwf	main_overcurrentProtection@tOut^(0+512),f
  4320  11DE  0008               	return
  4321  11DF                     __end_of_main_overcurrentProtection:	
  4322                           
  4323                           	psect	text2
  4324  033C                     __ptext2:	
  4325 ;; *************** function _main_CommunicationHandler *****************
  4326 ;; Defined at:
  4327 ;;		line 275 in file "main.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  i               1   41[BANK3 ] unsigned char 
  4332 ;;  numBytesRead    1   40[BANK3 ] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  4342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  4343 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  4344 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  4345 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  4346 ;;Total ram usage:        4 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:   13
  4349 ;; This function calls:
  4350 ;;		_CDCTxService
  4351 ;;		_TMR1_Reload
  4352 ;;		___lldiv
  4353 ;;		___lmul
  4354 ;;		___wmul
  4355 ;;		_atoi
  4356 ;;		_getsUSBUSART
  4357 ;;		_main_SetDcDcRegulator
  4358 ;;		_memset
  4359 ;;		_my_uitoa
  4360 ;;		_putUSBUSART
  4361 ;; This function is called by:
  4362 ;;		_main
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           
  4367                           ;psect for function _main_CommunicationHandler
  4368  033C                     _main_CommunicationHandler:	
  4369                           
  4370                           ;main.c: 277: static uint8_t step = 0;
  4371                           ;main.c: 278: static uint8_t cmdRxBufferPointer = 0;
  4372                           ;main.c: 282: if( USBDeviceState < CONFIGURED_STATE )
  4373                           
  4374                           ;incstack = 0
  4375                           ; Regs used in _main_CommunicationHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4376  033C  3020               	movlw	32
  4377  033D  0023               	movlb	3	; select bank3
  4378  033E  0261               	subwf	_USBDeviceState^(0+384),w
  4379  033F  1C03               	btfss	3,0
  4380  0340  0008               	return
  4381                           
  4382                           ;main.c: 285: }
  4383                           ;main.c: 291: if( UCONbits.SUSPND== 1 )
  4384                           
  4385                           ;main.c: 283: {
  4386                           ;main.c: 284: return;
  4387  0341  003D               	movlb	29	; select bank29
  4388  0342  188E               	btfsc	14,1	;volatile
  4389  0343  0008               	return
  4390                           
  4391                           ;main.c: 294: }
  4392                           ;main.c: 299: if( (cdc_trf_state == 0) == 1)
  4393                           
  4394                           ;main.c: 292: {
  4395                           ;main.c: 293: return;
  4396  0344  0023               	movlb	3	; select bank3
  4397  0345  0864               	movf	_cdc_trf_state^(0+384),w
  4398  0346  1D03               	btfss	3,2
  4399  0347  2CD5               	goto	l5789
  4400                           
  4401                           ;main.c: 300: {
  4402                           ;main.c: 301: uint8_t i;
  4403                           ;main.c: 302: uint8_t numBytesRead;
  4404                           ;main.c: 304: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer));
  4405  0348  3040               	movlw	64
  4406  0349  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4407  034A  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4408  034B  00AB               	movwf	getsUSBUSART@len^(0+384)
  4409  034C  3020               	movlw	(low (_readBuffer| (0+1280)))& (0+255)
  4410  034D  3192  22D6  3183   	fcall	_getsUSBUSART
  4411  0350  0023               	movlb	3	; select bank3
  4412  0351  00C7               	movwf	(??_main_CommunicationHandler+1)^(0+384)
  4413  0352  0847               	movf	(??_main_CommunicationHandler+1)^(0+384),w
  4414  0353  00C8               	movwf	main_CommunicationHandler@numBytesRead^(0+384)
  4415                           
  4416                           ;main.c: 306: if(numBytesRead) {
  4417  0354  0848               	movf	main_CommunicationHandler@numBytesRead^(0+384),w
  4418  0355  1903               	btfsc	3,2
  4419  0356  2C12               	goto	l1094
  4420                           
  4421                           ;main.c: 308: for(i=0; i<numBytesRead; i++)
  4422  0357  01C9               	clrf	main_CommunicationHandler@i^(0+384)
  4423  0358                     l5743:	
  4424  0358  0848               	movf	main_CommunicationHandler@numBytesRead^(0+384),w
  4425  0359  0249               	subwf	main_CommunicationHandler@i^(0+384),w
  4426  035A  1803               	btfsc	3,0
  4427  035B  2CD5               	goto	l5789
  4428                           
  4429                           ;main.c: 309: {
  4430                           ;main.c: 310: cmdRxBuffer[cmdRxBufferPointer] = readBuffer[i];
  4431  035C  0849               	movf	main_CommunicationHandler@i^(0+384),w
  4432  035D  3E20               	addlw	(low (_readBuffer| (0+1280)))& (0+255)
  4433  035E  0086               	movwf	6
  4434  035F  3005               	movlw	5	; select bank10/11
  4435  0360  0087               	movwf	7
  4436  0361  0801               	movf	1,w
  4437  0362  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4438  0363  086B               	movf	main_CommunicationHandler@cmdRxBufferPointer^(0+384),w
  4439  0364  3E20               	addlw	(low (_cmdRxBuffer| (0+768)))& (0+255)
  4440  0365  0086               	movwf	6
  4441  0366  3003               	movlw	3	; select bank6/7
  4442  0367  0087               	movwf	7
  4443  0368  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4444  0369  0081               	movwf	1
  4445                           
  4446                           ;main.c: 311: if((0x0A == cmdRxBuffer[cmdRxBufferPointer]) || (0x0D == cmdRxBuffer[cmdRx
      +                          BufferPointer]))
  4447  036A  086B               	movf	main_CommunicationHandler@cmdRxBufferPointer^(0+384),w
  4448  036B  3E20               	addlw	(low (_cmdRxBuffer| (0+768)))& (0+255)
  4449  036C  0086               	movwf	6
  4450  036D  3003               	movlw	3	; select bank6/7
  4451  036E  0087               	movwf	7
  4452  036F  300A               	movlw	10
  4453  0370  0601               	xorwf	1,w
  4454  0371  1903               	btfsc	3,2
  4455  0372  2B7C               	goto	l5709
  4456  0373  086B               	movf	main_CommunicationHandler@cmdRxBufferPointer^(0+384),w
  4457  0374  3E20               	addlw	(low (_cmdRxBuffer| (0+768)))& (0+255)
  4458  0375  0086               	movwf	6
  4459  0376  3003               	movlw	3	; select bank6/7
  4460  0377  0087               	movwf	7
  4461  0378  300D               	movlw	13
  4462  0379  0601               	xorwf	1,w
  4463  037A  1D03               	btfss	3,2
  4464  037B  2BF3               	goto	l5733
  4465  037C                     l5709:	
  4466                           
  4467                           ;main.c: 312: {
  4468                           ;main.c: 314: if(('U' == cmdRxBuffer[0]) || ('u' == cmdRxBuffer[0])) {
  4469  037C  3055               	movlw	85
  4470  037D  0026               	movlb	6	; select bank6
  4471  037E  0620               	xorwf	_cmdRxBuffer^(0+768),w
  4472  037F  1903               	btfsc	3,2
  4473  0380  2B85               	goto	l5713
  4474  0381  3075               	movlw	117
  4475  0382  0620               	xorwf	_cmdRxBuffer^(0+768),w
  4476  0383  1D03               	btfss	3,2
  4477  0384  2B97               	goto	l5717
  4478  0385                     l5713:	
  4479                           
  4480                           ;main.c: 315: MAIN_Uout_target_mV = atoi(&cmdRxBuffer[1]);
  4481  0385  3021               	movlw	(low ((_cmdRxBuffer| (0+768)+1)))& (0+255)
  4482  0386  3196  2617  3183   	fcall	_atoi
  4483  0389  0023               	movlb	3	; select bank3
  4484  038A  0826               	movf	?_atoi^(0+384),w
  4485  038B  0024               	movlb	4	; select bank4
  4486  038C  00E4               	movwf	_MAIN_Uout_target_mV^(0+512)
  4487  038D  0023               	movlb	3	; select bank3
  4488  038E  0827               	movf	(?_atoi+1)^(0+384),w
  4489  038F  0024               	movlb	4	; select bank4
  4490  0390  00E5               	movwf	(_MAIN_Uout_target_mV+1)^(0+512)
  4491  0391  0D89               	rlf	9,f
  4492  0392  3B89               	subwfb	9,f
  4493  0393  0989               	comf	9,f
  4494  0394  00E6               	movwf	(_MAIN_Uout_target_mV+2)^(0+512)
  4495  0395  00E7               	movwf	(_MAIN_Uout_target_mV+3)^(0+512)
  4496  0396  2BB1               	goto	L5
  4497  0397                     l5717:	
  4498                           ;main.c: 321: } else if(('I' == cmdRxBuffer[0]) || ('i' == cmdRxBuffer[0])) {
  4499                           
  4500                           ;main.c: 320: else do { LATCbits.LATC0 = 0; } while(0);
  4501                           
  4502                           ;main.c: 319: if(MAIN_Uout_target_mV) do { LATCbits.LATC0 = 1; } while(0);
  4503                           
  4504                           ;main.c: 318: main_SetDcDcRegulator(&MAIN_Uout_target_mV, &MAIN_Iout_limit_mA);
  4505                           
  4506  0397  3049               	movlw	73
  4507  0398  0026               	movlb	6	; select bank6
  4508  0399  0620               	xorwf	_cmdRxBuffer^(0+768),w
  4509  039A  1903               	btfsc	3,2
  4510  039B  2BA0               	goto	l5721
  4511  039C  3069               	movlw	105
  4512  039D  0620               	xorwf	_cmdRxBuffer^(0+768),w
  4513  039E  1D03               	btfss	3,2
  4514  039F  2BC7               	goto	l5725
  4515  03A0                     l5721:	
  4516                           
  4517                           ;main.c: 322: MAIN_Iout_limit_mA = atoi(&cmdRxBuffer[1]);
  4518  03A0  3021               	movlw	(low ((_cmdRxBuffer| (0+768)+1)))& (0+255)
  4519  03A1  3196  2617  3183   	fcall	_atoi
  4520  03A4  0023               	movlb	3	; select bank3
  4521  03A5  0826               	movf	?_atoi^(0+384),w
  4522  03A6  0024               	movlb	4	; select bank4
  4523  03A7  00EA               	movwf	_MAIN_Iout_limit_mA^(0+512)
  4524  03A8  0023               	movlb	3	; select bank3
  4525  03A9  0827               	movf	(?_atoi+1)^(0+384),w
  4526  03AA  0024               	movlb	4	; select bank4
  4527  03AB  00EB               	movwf	(_MAIN_Iout_limit_mA+1)^(0+512)
  4528  03AC  0D89               	rlf	9,f
  4529  03AD  3B89               	subwfb	9,f
  4530  03AE  0989               	comf	9,f
  4531  03AF  00EC               	movwf	(_MAIN_Iout_limit_mA+2)^(0+512)
  4532  03B0  00ED               	movwf	(_MAIN_Iout_limit_mA+3)^(0+512)
  4533  03B1                     L5:	
  4534                           
  4535                           ;main.c: 325: main_SetDcDcRegulator(&MAIN_Uout_target_mV, &MAIN_Iout_limit_mA);
  4536  03B1  306A               	movlw	(low (_MAIN_Iout_limit_mA| (0+512)))& (0+255)
  4537  03B2  0023               	movlb	3	; select bank3
  4538  03B3  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4539  03B4  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4540  03B5  00C0               	movwf	main_SetDcDcRegulator@pI_mA^(0+384)
  4541  03B6  3064               	movlw	(low (_MAIN_Uout_target_mV| (0+512)))& (0+255)
  4542  03B7  3184  24D8  3183   	fcall	_main_SetDcDcRegulator
  4543                           
  4544                           ;main.c: 326: if(MAIN_Uout_target_mV) do { LATCbits.LATC0 = 1; } while(0);
  4545  03BA  0024               	movlb	4	; select bank4
  4546  03BB  0867               	movf	(_MAIN_Uout_target_mV+3)^(0+512),w
  4547  03BC  0466               	iorwf	(_MAIN_Uout_target_mV+2)^(0+512),w
  4548  03BD  0465               	iorwf	(_MAIN_Uout_target_mV+1)^(0+512),w
  4549  03BE  0464               	iorwf	_MAIN_Uout_target_mV^(0+512),w
  4550  03BF  1903               	skipnz
  4551  03C0  2BC4               	goto	l1117
  4552  03C1  0022               	movlb	2	; select bank2
  4553  03C2  140E               	bsf	14,0	;volatile
  4554  03C3  2BE2               	goto	l5729
  4555  03C4                     l1117:	
  4556                           ;main.c: 327: else do { LATCbits.LATC0 = 0; } while(0);
  4557                           
  4558  03C4  0022               	movlb	2	; select bank2
  4559  03C5  100E               	bcf	14,0	;volatile
  4560                           
  4561                           ;main.c: 328: } else {
  4562  03C6  2BE2               	goto	l5729
  4563  03C7                     l5725:	
  4564                           
  4565                           ;main.c: 329: __builtin_memcpy(writeBuffer,errorMsg,sizeof(errorMsg));
  4566  03C7  30A0               	movlw	low (_writeBuffer| (0+1024))
  4567  03C8  0086               	movwf	6
  4568  03C9  3004               	movlw	4	; select bank9/10
  4569  03CA  0087               	movwf	7
  4570  03CB  3004               	movlw	low (_errorMsg| (0+32768))
  4571  03CC  0084               	movwf	4
  4572  03CD  3083               	movlw	high (_errorMsg| (0+32768))
  4573  03CE  0085               	movwf	5
  4574  03CF  300D               	movlw	13
  4575  03D0  0023               	movlb	3	; select bank3
  4576  03D1  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4577  03D2                     u572m0:	
  4578  03D2  0012               	moviw fsr0++
  4579  03D3  001E               	movwi fsr1++
  4580  03D4  0BC6               	decfsz	??_main_CommunicationHandler^(0+384),f
  4581  03D5  2BD2               	goto	u572m0
  4582                           
  4583                           ;main.c: 330: putUSBUSART(writeBuffer,sizeof(errorMsg)-1);
  4584  03D6  30A0               	movlw	low _writeBuffer
  4585  03D7  0023               	movlb	3	; select bank3
  4586  03D8  00A0               	movwf	putUSBUSART@data^(0+384)
  4587  03D9  3004               	movlw	high _writeBuffer
  4588  03DA  00A1               	movwf	(putUSBUSART@data+1)^(0+384)
  4589  03DB  300C               	movlw	12
  4590  03DC  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4591  03DD  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4592  03DE  00A2               	movwf	putUSBUSART@length^(0+384)
  4593  03DF  319E  2659  3183   	fcall	_putUSBUSART
  4594  03E2                     l5729:	
  4595                           
  4596                           ;main.c: 331: }
  4597                           ;main.c: 333: cmdRxBufferPointer = 0;
  4598  03E2  0023               	movlb	3	; select bank3
  4599  03E3  01EB               	clrf	main_CommunicationHandler@cmdRxBufferPointer^(0+384)
  4600                           
  4601                           ;main.c: 334: memset(cmdRxBuffer,0,sizeof(cmdRxBuffer));
  4602  03E4  3020               	movlw	low _cmdRxBuffer
  4603  03E5  00A0               	movwf	memset@p1^(0+384)
  4604  03E6  3003               	movlw	high _cmdRxBuffer
  4605  03E7  00A1               	movwf	(memset@p1+1)^(0+384)
  4606  03E8  3000               	movlw	0
  4607  03E9  00A2               	movwf	memset@c^(0+384)
  4608  03EA  00A3               	movwf	(memset@c+1)^(0+384)
  4609  03EB  3040               	movlw	64
  4610  03EC  00A4               	movwf	memset@n^(0+384)
  4611  03ED  3000               	movlw	0
  4612  03EE  00A5               	movwf	(memset@n^(0+384)+1)
  4613  03EF  319E  26BA  3183   	fcall	_memset
  4614                           
  4615                           ;main.c: 335: break;
  4616  03F2  2CD5               	goto	l5789
  4617  03F3                     l5733:	
  4618                           
  4619                           ;main.c: 336: }
  4620                           ;main.c: 337: cmdRxBufferPointer++;
  4621  03F3  3001               	movlw	1
  4622  03F4  0023               	movlb	3	; select bank3
  4623  03F5  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4624  03F6  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4625  03F7  07EB               	addwf	main_CommunicationHandler@cmdRxBufferPointer^(0+384),f
  4626                           
  4627                           ;main.c: 339: if(sizeof(cmdRxBuffer) < cmdRxBufferPointer) {
  4628  03F8  3041               	movlw	65
  4629  03F9  026B               	subwf	main_CommunicationHandler@cmdRxBufferPointer^(0+384),w
  4630  03FA  1C03               	skipc
  4631  03FB  2C0C               	goto	l5741
  4632                           
  4633                           ;main.c: 340: cmdRxBufferPointer = 0;
  4634  03FC  01EB               	clrf	main_CommunicationHandler@cmdRxBufferPointer^(0+384)
  4635                           
  4636                           ;main.c: 341: memset(cmdRxBuffer,0,sizeof(cmdRxBuffer));
  4637  03FD  3020               	movlw	low _cmdRxBuffer
  4638  03FE  00A0               	movwf	memset@p1^(0+384)
  4639  03FF  3003               	movlw	high _cmdRxBuffer
  4640  0400  00A1               	movwf	(memset@p1+1)^(0+384)
  4641  0401  3000               	movlw	0
  4642  0402  00A2               	movwf	memset@c^(0+384)
  4643  0403  00A3               	movwf	(memset@c+1)^(0+384)
  4644  0404  3040               	movlw	64
  4645  0405  00A4               	movwf	memset@n^(0+384)
  4646  0406  3000               	movlw	0
  4647  0407  00A5               	movwf	(memset@n^(0+384)+1)
  4648  0408  319E  26BA  3183   	fcall	_memset
  4649                           
  4650                           ;main.c: 342: break;
  4651  040B  2CD5               	goto	l5789
  4652  040C                     l5741:	
  4653  040C  3001               	movlw	1
  4654  040D  0023               	movlb	3	; select bank3
  4655  040E  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4656  040F  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4657  0410  07C9               	addwf	main_CommunicationHandler@i^(0+384),f
  4658  0411  2B58               	goto	l5743
  4659  0412                     l1094:	
  4660                           ;main.c: 343: }
  4661                           ;main.c: 344: }
  4662                           ;main.c: 345: } else if(TMR1IF) {
  4663                           
  4664  0412  0020               	movlb	0	; select bank0
  4665  0413  1811               	btfsc	17,0	;volatile
  4666  0414  2CC6               	goto	l5787
  4667  0415  2CD5               	goto	l5789
  4668  0416                     l5747:	
  4669                           ;main.c: 347: case 0:
  4670                           
  4671                           ;main.c: 346: switch (step){
  4672                           
  4673                           
  4674                           ;main.c: 348: MAIN_Uout_mV = (1761*(uint32_t)Uadc)/100;
  4675  0416  3000               	movlw	0
  4676  0417  0023               	movlb	3	; select bank3
  4677  0418  00AF               	movwf	(___lldiv@divisor+3)^(0+384)
  4678  0419  3000               	movlw	0
  4679  041A  00AE               	movwf	(___lldiv@divisor+2)^(0+384)
  4680  041B  3000               	movlw	0
  4681  041C  00AD               	movwf	(___lldiv@divisor+1)^(0+384)
  4682  041D  3064               	movlw	100
  4683  041E  00AC               	movwf	___lldiv@divisor^(0+384)
  4684  041F  086C               	movf	_Uadc^(0+384),w	;volatile
  4685  0420  00A0               	movwf	___lmul@multiplier^(0+384)
  4686  0421  086D               	movf	(_Uadc+1)^(0+384),w	;volatile
  4687  0422  00A1               	movwf	(___lmul@multiplier^(0+384)+1)
  4688  0423  01A2               	clrf	(___lmul@multiplier^(0+384)+2)
  4689  0424  01A3               	clrf	(___lmul@multiplier^(0+384)+3)
  4690  0425  3000               	movlw	0
  4691  0426  00A7               	movwf	(___lmul@multiplicand+3)^(0+384)
  4692  0427  3000               	movlw	0
  4693  0428  00A6               	movwf	(___lmul@multiplicand+2)^(0+384)
  4694  0429  3006               	movlw	6
  4695  042A  00A5               	movwf	(___lmul@multiplicand+1)^(0+384)
  4696  042B  30E1               	movlw	225
  4697  042C  00A4               	movwf	___lmul@multiplicand^(0+384)
  4698  042D  319F  27D0  3183   	fcall	___lmul
  4699  0430  0023               	movlb	3	; select bank3
  4700  0431  0823               	movf	(?___lmul+3)^(0+384),w
  4701  0432  00B3               	movwf	(___lldiv@dividend+3)^(0+384)
  4702  0433  0822               	movf	(?___lmul+2)^(0+384),w
  4703  0434  00B2               	movwf	(___lldiv@dividend+2)^(0+384)
  4704  0435  0821               	movf	(?___lmul+1)^(0+384),w
  4705  0436  00B1               	movwf	(___lldiv@dividend+1)^(0+384)
  4706  0437  0820               	movf	?___lmul^(0+384),w
  4707  0438  00B0               	movwf	___lldiv@dividend^(0+384)
  4708  0439  3192  2283  3183   	fcall	___lldiv
  4709  043C  0023               	movlb	3	; select bank3
  4710  043D  082D               	movf	(?___lldiv^(0+384)+1),w
  4711  043E  0024               	movlb	4	; select bank4
  4712  043F  00B4               	movwf	(_MAIN_Uout_mV+1)^(0+512)
  4713  0440  0023               	movlb	3	; select bank3
  4714  0441  082C               	movf	?___lldiv^(0+384),w
  4715  0442  0024               	movlb	4	; select bank4
  4716  0443  00B3               	movwf	_MAIN_Uout_mV^(0+512)
  4717                           
  4718                           ;main.c: 349: MAIN_Iout_mA = Iadc*10;
  4719  0444  0023               	movlb	3	; select bank3
  4720  0445  085B               	movf	(_Iadc+1)^(0+384),w	;volatile
  4721  0446  00A1               	movwf	(___wmul@multiplier+1)^(0+384)
  4722  0447  085A               	movf	_Iadc^(0+384),w	;volatile
  4723  0448  00A0               	movwf	___wmul@multiplier^(0+384)
  4724  0449  300A               	movlw	10
  4725  044A  00A2               	movwf	___wmul@multiplicand^(0+384)
  4726  044B  3000               	movlw	0
  4727  044C  00A3               	movwf	(___wmul@multiplicand^(0+384)+1)
  4728  044D  319F  270A  3183   	fcall	___wmul
  4729  0450  0023               	movlb	3	; select bank3
  4730  0451  0821               	movf	(?___wmul+1)^(0+384),w
  4731  0452  0024               	movlb	4	; select bank4
  4732  0453  00B2               	movwf	(_MAIN_Iout_mA+1)^(0+512)
  4733  0454  0023               	movlb	3	; select bank3
  4734  0455  0820               	movf	?___wmul^(0+384),w
  4735  0456  0024               	movlb	4	; select bank4
  4736  0457  00B1               	movwf	_MAIN_Iout_mA^(0+512)
  4737  0458  2C7F               	goto	l5763
  4738  0459                     l5751:	
  4739                           ;main.c: 352: case 1:
  4740                           
  4741                           ;main.c: 351: break;
  4742                           
  4743                           ;main.c: 350: step++;
  4744                           
  4745                           
  4746                           ;main.c: 353: writeStatusBuffer[0] = 0;
  4747  0459  0027               	movlb	7	; select bank7
  4748  045A  01A0               	clrf	_writeStatusBuffer^(0+896)
  4749                           
  4750                           ;main.c: 354: __builtin_memcpy(writeStatusBuffer,"EasyVolts \tU(mV)=      \t I(mA)=     
      +                          \r\n",38);
  4751  045B  30A0               	movlw	low (_writeStatusBuffer| (0+768))
  4752  045C  0086               	movwf	6
  4753  045D  3003               	movlw	3	; select bank7/8
  4754  045E  0087               	movwf	7
  4755  045F  3015               	movlw	low (STR_1| (0+32768))
  4756  0460  0084               	movwf	4
  4757  0461  3083               	movlw	high (STR_1| (0+32768))
  4758  0462  0085               	movwf	5
  4759  0463  3026               	movlw	38
  4760  0464  0023               	movlb	3	; select bank3
  4761  0465  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4762  0466                     u576m0:	
  4763  0466  0012               	moviw fsr0++
  4764  0467  001E               	movwi fsr1++
  4765  0468  0BC6               	decfsz	??_main_CommunicationHandler^(0+384),f
  4766  0469  2C66               	goto	u576m0
  4767  046A  2C7F               	goto	l5763
  4768  046B                     l5757:	
  4769                           ;main.c: 357: case 2:
  4770                           
  4771                           ;main.c: 356: break;
  4772                           
  4773                           ;main.c: 355: step++;
  4774                           
  4775                           
  4776                           ;main.c: 358: my_uitoa(&writeStatusBuffer[17],MAIN_Uout_mV);
  4777  046B  0834               	movf	(_MAIN_Uout_mV+1)^(0+512),w
  4778  046C  0023               	movlb	3	; select bank3
  4779  046D  00A7               	movwf	(my_uitoa@num+1)^(0+384)
  4780  046E  0024               	movlb	4	; select bank4
  4781  046F  0833               	movf	_MAIN_Uout_mV^(0+512),w
  4782  0470  0023               	movlb	3	; select bank3
  4783  0471  00A6               	movwf	my_uitoa@num^(0+384)
  4784  0472  30B1               	movlw	(low ((_writeStatusBuffer| (0+768)+17)))& (0+255)
  4785  0473  2C7C               	goto	L4
  4786  0474                     l5761:	
  4787                           ;main.c: 361: case 3:
  4788                           
  4789                           ;main.c: 360: break;
  4790                           
  4791                           ;main.c: 359: step++;
  4792                           
  4793                           
  4794                           ;main.c: 362: my_uitoa(&writeStatusBuffer[31],MAIN_Iout_mA);
  4795  0474  0832               	movf	(_MAIN_Iout_mA+1)^(0+512),w
  4796  0475  0023               	movlb	3	; select bank3
  4797  0476  00A7               	movwf	(my_uitoa@num+1)^(0+384)
  4798  0477  0024               	movlb	4	; select bank4
  4799  0478  0831               	movf	_MAIN_Iout_mA^(0+512),w
  4800  0479  0023               	movlb	3	; select bank3
  4801  047A  00A6               	movwf	my_uitoa@num^(0+384)
  4802  047B  30BF               	movlw	(low ((_writeStatusBuffer| (0+768)+31)))& (0+255)
  4803  047C                     L4:	
  4804  047C  318A  228F  3183   	fcall	_my_uitoa
  4805  047F                     l5763:	
  4806                           
  4807                           ;main.c: 364: step++;
  4808  047F  3001               	movlw	1
  4809  0480  0023               	movlb	3	; select bank3
  4810  0481  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4811  0482  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4812  0483  0024               	movlb	4	; select bank4
  4813  0484  07DB               	addwf	main_CommunicationHandler@step^(0+512),f
  4814                           
  4815                           ;main.c: 365: break;
  4816  0485  2CD5               	goto	l5789
  4817  0486                     l5765:	
  4818                           ;main.c: 369: case 0:
  4819                           
  4820                           ;main.c: 368: switch(MAIN_ovcFlag){
  4821                           
  4822                           ;main.c: 366: default:
  4823                           
  4824                           
  4825                           ;main.c: 370: if(0 == MAIN_Uout_target_mV) {
  4826  0486  0867               	movf	(_MAIN_Uout_target_mV+3)^(0+512),w
  4827  0487  0466               	iorwf	(_MAIN_Uout_target_mV+2)^(0+512),w
  4828  0488  0465               	iorwf	(_MAIN_Uout_target_mV+1)^(0+512),w
  4829  0489  0464               	iorwf	_MAIN_Uout_target_mV^(0+512),w
  4830  048A  1D03               	skipz
  4831  048B  2C90               	goto	l1137
  4832                           
  4833                           ;main.c: 371: do { LATCbits.LATC0 = 0; } while(0);
  4834  048C  0022               	movlb	2	; select bank2
  4835  048D  100E               	bcf	14,0	;volatile
  4836                           
  4837                           ;main.c: 372: writeStatusBuffer[24] = '_';
  4838  048E  305F               	movlw	95
  4839  048F  2CA3               	goto	L2
  4840  0490                     l1137:	
  4841                           ;main.c: 373: } else do { LATCbits.LATC0 = 1; } while(0);
  4842                           
  4843  0490  0022               	movlb	2	; select bank2
  4844  0491  140E               	bsf	14,0	;volatile
  4845                           
  4846                           ;main.c: 374: break;
  4847  0492  2CB2               	goto	l5779
  4848  0493                     l5769:	
  4849                           ;main.c: 376: do { LATCbits.LATC0 = ~LATCbits.LATC0; } while(0);
  4850                           
  4851                           ;main.c: 375: case 1:
  4852                           
  4853  0493  1003               	clrc
  4854  0494  0022               	movlb	2	; select bank2
  4855  0495  1C0E               	btfss	14,0	;volatile
  4856  0496  1403               	setc
  4857  0497  1C03               	btfss	3,0
  4858  0498  2C9C               	goto	u5780
  4859  0499  0022               	movlb	2	; select bank2
  4860  049A  140E               	bsf	14,0	;volatile
  4861  049B  2C9E               	goto	l5771
  4862  049C                     u5780:	
  4863  049C  0022               	movlb	2	; select bank2
  4864  049D  100E               	bcf	14,0	;volatile
  4865  049E                     l5771:	
  4866                           
  4867                           ;main.c: 377: writeStatusBuffer[24] = '^';
  4868  049E  305E               	movlw	94
  4869  049F  2CA3               	goto	L2
  4870  04A0                     l1144:	
  4871                           ;main.c: 380: do { LATCbits.LATC0 = 0; } while(0);
  4872                           
  4873                           ;main.c: 379: default:
  4874                           
  4875                           ;main.c: 378: break;
  4876                           
  4877  04A0  0022               	movlb	2	; select bank2
  4878  04A1  100E               	bcf	14,0	;volatile
  4879                           
  4880                           ;main.c: 381: writeStatusBuffer[24] = '!';
  4881  04A2  3021               	movlw	33
  4882  04A3                     L2:	
  4883  04A3  0023               	movlb	3	; select bank3
  4884  04A4  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4885  04A5  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4886  04A6  0027               	movlb	7	; select bank7
  4887  04A7  00B8               	movwf	(_writeStatusBuffer^(0+896)+24)
  4888                           
  4889                           ;main.c: 383: }
  4890                           
  4891                           ;main.c: 382: break;
  4892  04A8  2CB2               	goto	l5779
  4893  04A9                     l5777:	
  4894  04A9  0024               	movlb	4	; select bank4
  4895  04AA  0848               	movf	_MAIN_ovcFlag^(0+512),w
  4896                           
  4897                           ; Switch size 1, requested type "space"
  4898                           ; Number of cases is 2, Range of values is 0 to 1
  4899                           ; switch strategies available:
  4900                           ; Name         Instructions Cycles
  4901                           ; simple_byte            7     4 (average)
  4902                           ; direct_byte           10     6 (fixed)
  4903                           ; jumptable            260     6 (fixed)
  4904                           ;	Chosen strategy is simple_byte
  4905  04AB  3A00               	xorlw	0	; case 0
  4906  04AC  1903               	skipnz
  4907  04AD  2C86               	goto	l5765
  4908  04AE  3A01               	xorlw	1	; case 1
  4909  04AF  1903               	skipnz
  4910  04B0  2C93               	goto	l5769
  4911  04B1  2CA0               	goto	l1144
  4912  04B2                     l5779:	
  4913                           
  4914                           ;main.c: 384: putUSBUSART(writeStatusBuffer,38 );
  4915  04B2  30A0               	movlw	low _writeStatusBuffer
  4916  04B3  0023               	movlb	3	; select bank3
  4917  04B4  00A0               	movwf	putUSBUSART@data^(0+384)
  4918  04B5  3003               	movlw	high _writeStatusBuffer
  4919  04B6  00A1               	movwf	(putUSBUSART@data+1)^(0+384)
  4920  04B7  3026               	movlw	38
  4921  04B8  00C6               	movwf	??_main_CommunicationHandler^(0+384)
  4922  04B9  0846               	movf	??_main_CommunicationHandler^(0+384),w
  4923  04BA  00A2               	movwf	putUSBUSART@length^(0+384)
  4924  04BB  319E  2659  3183   	fcall	_putUSBUSART
  4925                           
  4926                           ;main.c: 386: TMR1IF = 0;
  4927  04BE  0020               	movlb	0	; select bank0
  4928  04BF  1011               	bcf	17,0	;volatile
  4929                           
  4930                           ;main.c: 388: TMR1_Reload();
  4931  04C0  319D  25AC  3183   	fcall	_TMR1_Reload
  4932                           
  4933                           ;main.c: 389: step = 0;
  4934  04C3  0024               	movlb	4	; select bank4
  4935  04C4  01DB               	clrf	main_CommunicationHandler@step^(0+512)
  4936                           
  4937                           ;main.c: 391: }
  4938                           
  4939                           ;main.c: 390: break;
  4940  04C5  2CD5               	goto	l5789
  4941  04C6                     l5787:	
  4942  04C6  0024               	movlb	4	; select bank4
  4943  04C7  085B               	movf	main_CommunicationHandler@step^(0+512),w
  4944                           
  4945                           ; Switch size 1, requested type "space"
  4946                           ; Number of cases is 4, Range of values is 0 to 3
  4947                           ; switch strategies available:
  4948                           ; Name         Instructions Cycles
  4949                           ; simple_byte           13     7 (average)
  4950                           ; direct_byte           14     6 (fixed)
  4951                           ; jumptable            260     6 (fixed)
  4952                           ;	Chosen strategy is simple_byte
  4953  04C8  3A00               	xorlw	0	; case 0
  4954  04C9  1903               	skipnz
  4955  04CA  2C16               	goto	l5747
  4956  04CB  3A01               	xorlw	1	; case 1
  4957  04CC  1903               	skipnz
  4958  04CD  2C59               	goto	l5751
  4959  04CE  3A03               	xorlw	3	; case 2
  4960  04CF  1903               	skipnz
  4961  04D0  2C6B               	goto	l5757
  4962  04D1  3A01               	xorlw	1	; case 3
  4963  04D2  1903               	skipnz
  4964  04D3  2C74               	goto	l5761
  4965  04D4  2CA9               	goto	l5777
  4966  04D5                     l5789:	
  4967                           
  4968                           ;main.c: 392: }
  4969                           ;main.c: 393: }
  4970                           ;main.c: 395: CDCTxService();
  4971  04D5  318D  2598         	fcall	_CDCTxService
  4972  04D7  0008               	return
  4973  04D8                     __end_of_main_CommunicationHandler:	
  4974                           
  4975                           	psect	text3
  4976  1E59                     __ptext3:	
  4977 ;; *************** function _putUSBUSART *****************
  4978 ;; Defined at:
  4979 ;;		line 556 in file "usb/core/usb_device_cdc.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  data            2    0[BANK3 ] PTR unsigned char 
  4982 ;;		 -> writeStatusBuffer(64), writeBuffer(64), 
  4983 ;;  length          1    2[BANK3 ] unsigned char 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;		None
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      void 
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  4995 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0
  4996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  4997 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  4998 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  4999 ;;Total ram usage:        4 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; Hardware stack levels required when called:   10
  5002 ;; This function calls:
  5003 ;;		Nothing
  5004 ;; This function is called by:
  5005 ;;		_main_CommunicationHandler
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           
  5010                           ;psect for function _putUSBUSART
  5011  1E59                     _putUSBUSART:	
  5012                           
  5013                           ;usb_device_cdc.c: 581: ;
  5014                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  5015                           
  5016                           ;incstack = 0
  5017                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  5018  1E59  0023               	movlb	3	; select bank3
  5019  1E5A  0864               	movf	_cdc_trf_state^(0+384),w
  5020  1E5B  1D03               	btfss	3,2
  5021  1E5C  0008               	return
  5022                           
  5023                           ;usb_device_cdc.c: 583: {
  5024                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  5025  1E5D  0821               	movf	(putUSBUSART@data+1)^(0+384),w
  5026  1E5E  0024               	movlb	4	; select bank4
  5027  1E5F  00C0               	movwf	(_pCDCSrc+1)^(0+512)
  5028  1E60  0023               	movlb	3	; select bank3
  5029  1E61  0820               	movf	putUSBUSART@data^(0+384),w
  5030  1E62  0024               	movlb	4	; select bank4
  5031  1E63  00BF               	movwf	_pCDCSrc^(0+512)
  5032  1E64  0023               	movlb	3	; select bank3
  5033  1E65  0822               	movf	putUSBUSART@length^(0+384),w
  5034  1E66  00A3               	movwf	??_putUSBUSART^(0+384)
  5035  1E67  0823               	movf	??_putUSBUSART^(0+384),w
  5036  1E68  00E6               	movwf	_cdc_tx_len^(0+384)
  5037  1E69  0024               	movlb	4	; select bank4
  5038  1E6A  01D5               	clrf	_cdc_mem_type^(0+512)
  5039  1E6B  0AD5               	incf	_cdc_mem_type^(0+512),f
  5040  1E6C  0023               	movlb	3	; select bank3
  5041  1E6D  01E4               	clrf	_cdc_trf_state^(0+384)
  5042  1E6E  0AE4               	incf	_cdc_trf_state^(0+384),f
  5043  1E6F  0008               	return
  5044  1E70                     __end_of_putUSBUSART:	
  5045                           
  5046                           	psect	text4
  5047  0A8F                     __ptext4:	
  5048 ;; *************** function _my_uitoa *****************
  5049 ;; Defined at:
  5050 ;;		line 233 in file "main.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  str             1    wreg     PTR unsigned char 
  5053 ;;		 -> writeStatusBuffer(64), 
  5054 ;;  num             2    6[BANK3 ] unsigned int 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  str             1   19[BANK3 ] PTR unsigned char 
  5057 ;;		 -> writeStatusBuffer(64), 
  5058 ;;  ziffer          1   21[BANK3 ] char 
  5059 ;;  powerOfTen      1   20[BANK3 ] char 
  5060 ;;  strIncremet     1   18[BANK3 ] unsigned char 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  5070 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  5071 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  5072 ;;      Temps:          0       0       0      10       0       0       0       0       0       0       0       0       
      +0
  5073 ;;      Totals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0
  5074 ;;Total ram usage:       16 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:   11
  5077 ;; This function calls:
  5078 ;;		___wmul
  5079 ;; This function is called by:
  5080 ;;		_main_CommunicationHandler
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           
  5085                           ;psect for function _my_uitoa
  5086  0A8F                     _my_uitoa:	
  5087                           
  5088                           ;incstack = 0
  5089                           ; Regs used in _my_uitoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5090                           ;my_uitoa@str stored from wreg
  5091  0A8F  0023               	movlb	3	; select bank3
  5092  0A90  00B3               	movwf	my_uitoa@str^(0+384)
  5093                           
  5094                           ;main.c: 235: int8_t powerOfTen, ziffer = 5;
  5095  0A91  3005               	movlw	5
  5096  0A92  00A8               	movwf	??_my_uitoa^(0+384)
  5097  0A93  0828               	movf	??_my_uitoa^(0+384),w
  5098  0A94  00B5               	movwf	my_uitoa@ziffer^(0+384)
  5099                           
  5100                           ;main.c: 236: uint8_t strIncremet = 0;
  5101  0A95  01B2               	clrf	my_uitoa@strIncremet^(0+384)
  5102                           
  5103                           ;main.c: 238: for(powerOfTen=4; powerOfTen>=0; powerOfTen--) {
  5104  0A96  3004               	movlw	4
  5105  0A97  00A8               	movwf	??_my_uitoa^(0+384)
  5106  0A98  0828               	movf	??_my_uitoa^(0+384),w
  5107  0A99  00B4               	movwf	my_uitoa@powerOfTen^(0+384)
  5108  0A9A                     L6:	
  5109  0A9A  1BB4               	btfsc	my_uitoa@powerOfTen^(0+384),7
  5110  0A9B  0008               	return
  5111                           
  5112                           ;main.c: 239: *str = '0';
  5113  0A9C  3030               	movlw	48
  5114  0A9D  00A8               	movwf	??_my_uitoa^(0+384)
  5115  0A9E  0833               	movf	my_uitoa@str^(0+384),w
  5116  0A9F  0086               	movwf	6
  5117  0AA0  3003               	movlw	3	; select bank6/7
  5118  0AA1  0087               	movwf	7
  5119  0AA2  0828               	movf	??_my_uitoa^(0+384),w
  5120  0AA3  0081               	movwf	1
  5121                           
  5122                           ;main.c: 240: for(; ziffer>=0; ziffer--) {
  5123  0AA4  1BB5               	btfsc	my_uitoa@ziffer^(0+384),7
  5124  0AA5  2B14               	goto	l5293
  5125  0AA6                     l5281:	
  5126                           
  5127                           ;main.c: 241: if(num > dividerArray[powerOfTen][ziffer]) {
  5128  0AA6  0835               	movf	my_uitoa@ziffer^(0+384),w
  5129  0AA7  00A8               	movwf	??_my_uitoa^(0+384)
  5130  0AA8  01A9               	clrf	(??_my_uitoa^(0+384)+1)
  5131  0AA9  35A8               	lslf	??_my_uitoa^(0+384),f
  5132  0AAA  0DA9               	rlf	(??_my_uitoa^(0+384)+1),f
  5133  0AAB  0834               	movf	my_uitoa@powerOfTen^(0+384),w
  5134  0AAC  00AA               	movwf	(??_my_uitoa+2)^(0+384)
  5135  0AAD  01AB               	clrf	((??_my_uitoa+2)^(0+384)+1)
  5136  0AAE  082A               	movf	(??_my_uitoa+2)^(0+384),w
  5137  0AAF  00A0               	movwf	___wmul@multiplier^(0+384)
  5138  0AB0  082B               	movf	(??_my_uitoa+3)^(0+384),w
  5139  0AB1  00A1               	movwf	(___wmul@multiplier+1)^(0+384)
  5140  0AB2  3012               	movlw	18
  5141  0AB3  00A2               	movwf	___wmul@multiplicand^(0+384)
  5142  0AB4  3000               	movlw	0
  5143  0AB5  00A3               	movwf	(___wmul@multiplicand^(0+384)+1)
  5144  0AB6  319F  270A  318A   	fcall	___wmul
  5145  0AB9  304A               	movlw	low (_dividerArray| (0+32768))
  5146  0ABA  0023               	movlb	3	; select bank3
  5147  0ABB  00AC               	movwf	(??_my_uitoa+4)^(0+384)
  5148  0ABC  3081               	movlw	high (_dividerArray| (0+32768))
  5149  0ABD  00AD               	movwf	((??_my_uitoa+4)^(0+384)+1)
  5150  0ABE  0820               	movf	?___wmul^(0+384),w
  5151  0ABF  072C               	addwf	(??_my_uitoa+4)^(0+384),w
  5152  0AC0  00AE               	movwf	(??_my_uitoa+6)^(0+384)
  5153  0AC1  0821               	movf	(?___wmul+1)^(0+384),w
  5154  0AC2  3D2D               	addwfc	(??_my_uitoa+5)^(0+384),w
  5155  0AC3  00AF               	movwf	(??_my_uitoa+7)^(0+384)
  5156  0AC4  082E               	movf	(??_my_uitoa+6)^(0+384),w
  5157  0AC5  0728               	addwf	??_my_uitoa^(0+384),w
  5158  0AC6  0084               	movwf	4
  5159  0AC7  082F               	movf	(??_my_uitoa+7)^(0+384),w
  5160  0AC8  3D29               	addwfc	(??_my_uitoa+1)^(0+384),w
  5161  0AC9  0085               	movwf	5
  5162  0ACA  3F00               	moviw [0]fsr0
  5163  0ACB  00B0               	movwf	(??_my_uitoa+8)^(0+384)
  5164  0ACC  3F01               	moviw [1]fsr0
  5165  0ACD  00B1               	movwf	((??_my_uitoa+8)^(0+384)+1)
  5166  0ACE  0827               	movf	(my_uitoa@num+1)^(0+384),w
  5167  0ACF  0231               	subwf	(??_my_uitoa+9)^(0+384),w
  5168  0AD0  1D03               	skipz
  5169  0AD1  2AD4               	goto	u4975
  5170  0AD2  0826               	movf	my_uitoa@num^(0+384),w
  5171  0AD3  0230               	subwf	(??_my_uitoa+8)^(0+384),w
  5172  0AD4                     u4975:	
  5173  0AD4  1803               	skipnc
  5174  0AD5  2B0E               	goto	l5289
  5175                           
  5176                           ;main.c: 242: strIncremet = 1;
  5177  0AD6  01B2               	clrf	my_uitoa@strIncremet^(0+384)
  5178  0AD7  0AB2               	incf	my_uitoa@strIncremet^(0+384),f
  5179                           
  5180                           ;main.c: 243: *str += ziffer+1;
  5181  0AD8  0835               	movf	my_uitoa@ziffer^(0+384),w
  5182  0AD9  3E01               	addlw	1
  5183  0ADA  00A8               	movwf	??_my_uitoa^(0+384)
  5184  0ADB  0833               	movf	my_uitoa@str^(0+384),w
  5185  0ADC  0086               	movwf	6
  5186  0ADD  3003               	movlw	3	; select bank6/7
  5187  0ADE  0087               	movwf	7
  5188  0ADF  0828               	movf	??_my_uitoa^(0+384),w
  5189  0AE0  0781               	addwf	1,f
  5190                           
  5191                           ;main.c: 244: num -= dividerArray[powerOfTen][ziffer];
  5192  0AE1  0835               	movf	my_uitoa@ziffer^(0+384),w
  5193  0AE2  00A8               	movwf	??_my_uitoa^(0+384)
  5194  0AE3  01A9               	clrf	(??_my_uitoa^(0+384)+1)
  5195  0AE4  35A8               	lslf	??_my_uitoa^(0+384),f
  5196  0AE5  0DA9               	rlf	(??_my_uitoa^(0+384)+1),f
  5197  0AE6  0834               	movf	my_uitoa@powerOfTen^(0+384),w
  5198  0AE7  00AA               	movwf	(??_my_uitoa+2)^(0+384)
  5199  0AE8  01AB               	clrf	((??_my_uitoa+2)^(0+384)+1)
  5200  0AE9  082A               	movf	(??_my_uitoa+2)^(0+384),w
  5201  0AEA  00A0               	movwf	___wmul@multiplier^(0+384)
  5202  0AEB  082B               	movf	(??_my_uitoa+3)^(0+384),w
  5203  0AEC  00A1               	movwf	(___wmul@multiplier+1)^(0+384)
  5204  0AED  3012               	movlw	18
  5205  0AEE  00A2               	movwf	___wmul@multiplicand^(0+384)
  5206  0AEF  3000               	movlw	0
  5207  0AF0  00A3               	movwf	(___wmul@multiplicand^(0+384)+1)
  5208  0AF1  319F  270A  318A   	fcall	___wmul
  5209  0AF4  304A               	movlw	low (_dividerArray| (0+32768))
  5210  0AF5  0023               	movlb	3	; select bank3
  5211  0AF6  00AC               	movwf	(??_my_uitoa+4)^(0+384)
  5212  0AF7  3081               	movlw	high (_dividerArray| (0+32768))
  5213  0AF8  00AD               	movwf	((??_my_uitoa+4)^(0+384)+1)
  5214  0AF9  0820               	movf	?___wmul^(0+384),w
  5215  0AFA  072C               	addwf	(??_my_uitoa+4)^(0+384),w
  5216  0AFB  00AE               	movwf	(??_my_uitoa+6)^(0+384)
  5217  0AFC  0821               	movf	(?___wmul+1)^(0+384),w
  5218  0AFD  3D2D               	addwfc	(??_my_uitoa+5)^(0+384),w
  5219  0AFE  00AF               	movwf	(??_my_uitoa+7)^(0+384)
  5220  0AFF  082E               	movf	(??_my_uitoa+6)^(0+384),w
  5221  0B00  0728               	addwf	??_my_uitoa^(0+384),w
  5222  0B01  0084               	movwf	4
  5223  0B02  082F               	movf	(??_my_uitoa+7)^(0+384),w
  5224  0B03  3D29               	addwfc	(??_my_uitoa+1)^(0+384),w
  5225  0B04  0085               	movwf	5
  5226  0B05  3F00               	moviw [0]fsr0
  5227  0B06  00B0               	movwf	(??_my_uitoa+8)^(0+384)
  5228  0B07  3F01               	moviw [1]fsr0
  5229  0B08  00B1               	movwf	((??_my_uitoa+8)^(0+384)+1)
  5230  0B09  0830               	movf	(??_my_uitoa+8)^(0+384),w
  5231  0B0A  02A6               	subwf	my_uitoa@num^(0+384),f
  5232  0B0B  0831               	movf	(??_my_uitoa+9)^(0+384),w
  5233  0B0C  3BA7               	subwfb	(my_uitoa@num+1)^(0+384),f
  5234                           
  5235                           ;main.c: 245: break;
  5236  0B0D  2B14               	goto	l5293
  5237  0B0E                     l5289:	
  5238  0B0E  30FF               	movlw	255
  5239  0B0F  00A8               	movwf	??_my_uitoa^(0+384)
  5240  0B10  0828               	movf	??_my_uitoa^(0+384),w
  5241  0B11  07B5               	addwf	my_uitoa@ziffer^(0+384),f
  5242  0B12  1FB5               	btfss	my_uitoa@ziffer^(0+384),7
  5243  0B13  2AA6               	goto	l5281
  5244  0B14                     l5293:	
  5245                           
  5246                           ;main.c: 246: }
  5247                           ;main.c: 247: }
  5248                           ;main.c: 248: ziffer=8;
  5249  0B14  3008               	movlw	8
  5250  0B15  00A8               	movwf	??_my_uitoa^(0+384)
  5251  0B16  0828               	movf	??_my_uitoa^(0+384),w
  5252  0B17  00B5               	movwf	my_uitoa@ziffer^(0+384)
  5253                           
  5254                           ;main.c: 249: str+=strIncremet;
  5255  0B18  0832               	movf	my_uitoa@strIncremet^(0+384),w
  5256  0B19  00A8               	movwf	??_my_uitoa^(0+384)
  5257  0B1A  0828               	movf	??_my_uitoa^(0+384),w
  5258  0B1B  07B3               	addwf	my_uitoa@str^(0+384),f
  5259  0B1C  30FF               	movlw	255
  5260  0B1D  00A8               	movwf	??_my_uitoa^(0+384)
  5261  0B1E  0828               	movf	??_my_uitoa^(0+384),w
  5262  0B1F  07B4               	addwf	my_uitoa@powerOfTen^(0+384),f
  5263  0B20  2A9A               	goto	L6
  5264  0B21                     __end_of_my_uitoa:	
  5265                           
  5266                           	psect	text5
  5267  1EBA                     __ptext5:	
  5268 ;; *************** function _memset *****************
  5269 ;; Defined at:
  5270 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\memset.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  p1              2    0[BANK3 ] PTR void 
  5273 ;;		 -> cmdRxBuffer(64), USBAlternateInterface(2), BDT(80), 
  5274 ;;  c               2    2[BANK3 ] int 
  5275 ;;  n               2    4[BANK3 ] unsigned int 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  p               2    6[BANK3 ] PTR unsigned char 
  5278 ;;		 -> cmdRxBuffer(64), USBAlternateInterface(2), BDT(80), 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  2    0[BANK3 ] PTR void 
  5281 ;; Registers used:
  5282 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  5288 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0
  5289 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  5290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  5291 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0
  5292 ;;Total ram usage:        8 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:   10
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_main_CommunicationHandler
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           
  5303                           ;psect for function _memset
  5304  1EBA                     _memset:	
  5305                           
  5306                           ;incstack = 0
  5307                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5308  1EBA  0023               	movlb	3	; select bank3
  5309  1EBB  0821               	movf	(memset@p1+1)^(0+384),w
  5310  1EBC  00A7               	movwf	(memset@p+1)^(0+384)
  5311  1EBD  0820               	movf	memset@p1^(0+384),w
  5312  1EBE  00A6               	movwf	memset@p^(0+384)
  5313  1EBF                     l5023:	
  5314  1EBF  3001               	movlw	1
  5315  1EC0  02A4               	subwf	memset@n^(0+384),f
  5316  1EC1  3000               	movlw	0
  5317  1EC2  3BA5               	subwfb	(memset@n+1)^(0+384),f
  5318  1EC3  0A24               	incf	memset@n^(0+384),w
  5319  1EC4  1903               	btfsc	3,2
  5320  1EC5  0A25               	incf	(memset@n+1)^(0+384),w
  5321  1EC6  1903               	btfsc	3,2
  5322  1EC7  0008               	return
  5323  1EC8  0826               	movf	memset@p^(0+384),w
  5324  1EC9  0086               	movwf	6
  5325  1ECA  0827               	movf	(memset@p+1)^(0+384),w
  5326  1ECB  0087               	movwf	7
  5327  1ECC  0822               	movf	memset@c^(0+384),w
  5328  1ECD  0081               	movwf	1
  5329  1ECE  3001               	movlw	1
  5330  1ECF  07A6               	addwf	memset@p^(0+384),f
  5331  1ED0  3000               	movlw	0
  5332  1ED1  3DA7               	addwfc	(memset@p+1)^(0+384),f
  5333  1ED2  2EBF               	goto	l5023
  5334  1ED3                     __end_of_memset:	
  5335                           ;	Return value of _memset is never used
  5336                           
  5337                           
  5338                           	psect	text6
  5339  04D8                     __ptext6:	
  5340 ;; *************** function _main_SetDcDcRegulator *****************
  5341 ;; Defined at:
  5342 ;;		line 201 in file "main.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;  pU_mV           1    wreg     PTR long 
  5345 ;;		 -> MAIN_Uout_target_mV(4), 
  5346 ;;  pI_mA           1   32[BANK3 ] PTR long 
  5347 ;;		 -> MAIN_Iout_limit_mA(4), 
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;  pU_mV           1   37[BANK3 ] PTR long 
  5350 ;;		 -> MAIN_Uout_target_mV(4), 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  5360 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  5361 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  5362 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  5363 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0
  5364 ;;Total ram usage:        6 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:   12
  5367 ;; This function calls:
  5368 ;;		___aldiv
  5369 ;;		___lldiv
  5370 ;;		___lmul
  5371 ;;		_main_switchStepUp_Down
  5372 ;; This function is called by:
  5373 ;;		_main_CommunicationHandler
  5374 ;;		_main
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           
  5379                           ;psect for function _main_SetDcDcRegulator
  5380  04D8                     _main_SetDcDcRegulator:	
  5381                           
  5382                           ;incstack = 0
  5383                           ; Regs used in _main_SetDcDcRegulator: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5384                           ;main_SetDcDcRegulator@pU_mV stored from wreg
  5385  04D8  0023               	movlb	3	; select bank3
  5386  04D9  00C5               	movwf	main_SetDcDcRegulator@pU_mV^(0+384)
  5387                           
  5388                           ;main.c: 204: if((*pU_mV) > (15000U)) (*pU_mV) = (15000U);
  5389  04DA  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5390  04DB  0086               	movwf	6
  5391  04DC  3002               	movlw	2	; select bank4/5
  5392  04DD  0087               	movwf	7
  5393  04DE  3F43               	moviw [3]fsr1
  5394  04DF  1B89               	btfsc	9,7
  5395  04E0  2CFD               	goto	l5243
  5396  04E1  3F43               	moviw [3]fsr1
  5397  04E2  1D03               	btfss	3,2
  5398  04E3  2CF1               	goto	l5241
  5399  04E4  3F42               	moviw [2]fsr1
  5400  04E5  1D03               	btfss	3,2
  5401  04E6  2CF1               	goto	l5241
  5402  04E7  3F40               	moviw [0]fsr1
  5403  04E8  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5404  04E9  3099               	movlw	153
  5405  04EA  0241               	subwf	??_main_SetDcDcRegulator^(0+384),w
  5406  04EB  3F41               	moviw [1]fsr1
  5407  04EC  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5408  04ED  303A               	movlw	58
  5409  04EE  3B41               	subwfb	??_main_SetDcDcRegulator^(0+384),w
  5410  04EF  1C03               	btfss	3,0
  5411  04F0  2CFD               	goto	l5243
  5412  04F1                     l5241:	
  5413  04F1  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5414  04F2  0086               	movwf	6
  5415  04F3  3002               	movlw	2	; select bank4/5
  5416  04F4  0087               	movwf	7
  5417  04F5  3098               	movlw	152
  5418  04F6  3FC0               	movwi [0]fsr1
  5419  04F7  303A               	movlw	58
  5420  04F8  3FC1               	movwi [1]fsr1
  5421  04F9  3000               	movlw	0
  5422  04FA  3FC2               	movwi [2]fsr1
  5423  04FB  3000               	movlw	0
  5424  04FC  3FC3               	movwi [3]fsr1
  5425  04FD                     l5243:	
  5426                           
  5427                           ;main.c: 205: if((*pU_mV) < (0U)) (*pU_mV) = (0U);
  5428  04FD  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5429  04FE  0086               	movwf	6
  5430  04FF  3002               	movlw	2	; select bank4/5
  5431  0500  0087               	movwf	7
  5432  0501  3F40               	moviw [0]fsr1
  5433  0502  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5434  0503  3F41               	moviw [1]fsr1
  5435  0504  00C2               	movwf	(??_main_SetDcDcRegulator^(0+384)+1)
  5436  0505  3F42               	moviw [2]fsr1
  5437  0506  00C3               	movwf	(??_main_SetDcDcRegulator^(0+384)+2)
  5438  0507  3F43               	moviw [3]fsr1
  5439  0508  00C4               	movwf	(??_main_SetDcDcRegulator^(0+384)+3)
  5440  0509  1FC4               	btfss	(??_main_SetDcDcRegulator+3)^(0+384),7
  5441  050A  2D14               	goto	l5247
  5442  050B  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5443  050C  0086               	movwf	6
  5444  050D  3002               	movlw	2	; select bank4/5
  5445  050E  0087               	movwf	7
  5446  050F  3000               	movlw	0
  5447  0510  3FC0               	movwi [0]fsr1
  5448  0511  3FC1               	movwi [1]fsr1
  5449  0512  3FC2               	movwi [2]fsr1
  5450  0513  3FC3               	movwi [3]fsr1
  5451  0514                     l5247:	
  5452                           
  5453                           ;main.c: 207: if((*pI_mA) > (1000U)) (*pI_mA) = (1000U);
  5454  0514  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5455  0515  0086               	movwf	6
  5456  0516  3002               	movlw	2	; select bank4/5
  5457  0517  0087               	movwf	7
  5458  0518  3F43               	moviw [3]fsr1
  5459  0519  1B89               	btfsc	9,7
  5460  051A  2D37               	goto	l5251
  5461  051B  3F43               	moviw [3]fsr1
  5462  051C  1D03               	btfss	3,2
  5463  051D  2D2B               	goto	l5249
  5464  051E  3F42               	moviw [2]fsr1
  5465  051F  1D03               	btfss	3,2
  5466  0520  2D2B               	goto	l5249
  5467  0521  3F40               	moviw [0]fsr1
  5468  0522  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5469  0523  30E9               	movlw	233
  5470  0524  0241               	subwf	??_main_SetDcDcRegulator^(0+384),w
  5471  0525  3F41               	moviw [1]fsr1
  5472  0526  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5473  0527  3003               	movlw	3
  5474  0528  3B41               	subwfb	??_main_SetDcDcRegulator^(0+384),w
  5475  0529  1C03               	btfss	3,0
  5476  052A  2D37               	goto	l5251
  5477  052B                     l5249:	
  5478  052B  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5479  052C  0086               	movwf	6
  5480  052D  3002               	movlw	2	; select bank4/5
  5481  052E  0087               	movwf	7
  5482  052F  30E8               	movlw	232
  5483  0530  3FC0               	movwi [0]fsr1
  5484  0531  3003               	movlw	3
  5485  0532  3FC1               	movwi [1]fsr1
  5486  0533  3000               	movlw	0
  5487  0534  3FC2               	movwi [2]fsr1
  5488  0535  3000               	movlw	0
  5489  0536  3FC3               	movwi [3]fsr1
  5490  0537                     l5251:	
  5491                           
  5492                           ;main.c: 208: if((*pI_mA) < (0U)) (*pI_mA) = (0U);
  5493  0537  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5494  0538  0086               	movwf	6
  5495  0539  3002               	movlw	2	; select bank4/5
  5496  053A  0087               	movwf	7
  5497  053B  3F40               	moviw [0]fsr1
  5498  053C  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5499  053D  3F41               	moviw [1]fsr1
  5500  053E  00C2               	movwf	(??_main_SetDcDcRegulator^(0+384)+1)
  5501  053F  3F42               	moviw [2]fsr1
  5502  0540  00C3               	movwf	(??_main_SetDcDcRegulator^(0+384)+2)
  5503  0541  3F43               	moviw [3]fsr1
  5504  0542  00C4               	movwf	(??_main_SetDcDcRegulator^(0+384)+3)
  5505  0543  1FC4               	btfss	(??_main_SetDcDcRegulator+3)^(0+384),7
  5506  0544  2D4E               	goto	l5255
  5507  0545  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5508  0546  0086               	movwf	6
  5509  0547  3002               	movlw	2	; select bank4/5
  5510  0548  0087               	movwf	7
  5511  0549  3000               	movlw	0
  5512  054A  3FC0               	movwi [0]fsr1
  5513  054B  3FC1               	movwi [1]fsr1
  5514  054C  3FC2               	movwi [2]fsr1
  5515  054D  3FC3               	movwi [3]fsr1
  5516  054E                     l5255:	
  5517                           
  5518                           ;main.c: 211: if(((*pU_mV)*(*pI_mA)) > (2400000U)) {
  5519  054E  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5520  054F  0086               	movwf	6
  5521  0550  3002               	movlw	2	; select bank4/5
  5522  0551  0087               	movwf	7
  5523  0552  3F40               	moviw [0]fsr1
  5524  0553  00A0               	movwf	___lmul@multiplier^(0+384)
  5525  0554  3F41               	moviw [1]fsr1
  5526  0555  00A1               	movwf	(___lmul@multiplier+1)^(0+384)
  5527  0556  3F42               	moviw [2]fsr1
  5528  0557  00A2               	movwf	(___lmul@multiplier+2)^(0+384)
  5529  0558  3F43               	moviw [3]fsr1
  5530  0559  00A3               	movwf	(___lmul@multiplier+3)^(0+384)
  5531  055A  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5532  055B  0086               	movwf	6
  5533  055C  3002               	movlw	2	; select bank4/5
  5534  055D  0087               	movwf	7
  5535  055E  3F40               	moviw [0]fsr1
  5536  055F  00A4               	movwf	___lmul@multiplicand^(0+384)
  5537  0560  3F41               	moviw [1]fsr1
  5538  0561  00A5               	movwf	(___lmul@multiplicand+1)^(0+384)
  5539  0562  3F42               	moviw [2]fsr1
  5540  0563  00A6               	movwf	(___lmul@multiplicand+2)^(0+384)
  5541  0564  3F43               	moviw [3]fsr1
  5542  0565  00A7               	movwf	(___lmul@multiplicand+3)^(0+384)
  5543  0566  319F  27D0  3184   	fcall	___lmul
  5544  0569  0023               	movlb	3	; select bank3
  5545  056A  0823               	movf	(?___lmul+3)^(0+384),w
  5546  056B  1D03               	btfss	3,2
  5547  056C  2D75               	goto	l5257
  5548  056D  3001               	movlw	1
  5549  056E  0220               	subwf	?___lmul^(0+384),w
  5550  056F  309F               	movlw	159
  5551  0570  3B21               	subwfb	(?___lmul+1)^(0+384),w
  5552  0571  3024               	movlw	36
  5553  0572  3B22               	subwfb	(?___lmul+2)^(0+384),w
  5554  0573  1C03               	btfss	3,0
  5555  0574  2D99               	goto	l5259
  5556  0575                     l5257:	
  5557                           
  5558                           ;main.c: 212: *pI_mA = (2400000U)/(*pU_mV);
  5559  0575  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5560  0576  0086               	movwf	6
  5561  0577  3002               	movlw	2	; select bank4/5
  5562  0578  0087               	movwf	7
  5563  0579  3F40               	moviw [0]fsr1
  5564  057A  00AC               	movwf	___lldiv@divisor^(0+384)
  5565  057B  3F41               	moviw [1]fsr1
  5566  057C  00AD               	movwf	(___lldiv@divisor+1)^(0+384)
  5567  057D  3F42               	moviw [2]fsr1
  5568  057E  00AE               	movwf	(___lldiv@divisor+2)^(0+384)
  5569  057F  3F43               	moviw [3]fsr1
  5570  0580  00AF               	movwf	(___lldiv@divisor+3)^(0+384)
  5571  0581  3000               	movlw	0
  5572  0582  00B3               	movwf	(___lldiv@dividend+3)^(0+384)
  5573  0583  3024               	movlw	36
  5574  0584  00B2               	movwf	(___lldiv@dividend+2)^(0+384)
  5575  0585  309F               	movlw	159
  5576  0586  00B1               	movwf	(___lldiv@dividend+1)^(0+384)
  5577  0587  3000               	movlw	0
  5578  0588  00B0               	movwf	___lldiv@dividend^(0+384)
  5579  0589  3192  2283  3184   	fcall	___lldiv
  5580  058C  0023               	movlb	3	; select bank3
  5581  058D  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5582  058E  0086               	movwf	6
  5583  058F  3002               	movlw	2	; select bank4/5
  5584  0590  0087               	movwf	7
  5585  0591  082C               	movf	?___lldiv^(0+384),w
  5586  0592  3FC0               	movwi [0]fsr1
  5587  0593  082D               	movf	(?___lldiv+1)^(0+384),w
  5588  0594  3FC1               	movwi [1]fsr1
  5589  0595  082E               	movf	(?___lldiv+2)^(0+384),w
  5590  0596  3FC2               	movwi [2]fsr1
  5591  0597  082F               	movf	(?___lldiv+3)^(0+384),w
  5592  0598  3FC3               	movwi [3]fsr1
  5593  0599                     l5259:	
  5594                           
  5595                           ;main.c: 213: }
  5596                           ;main.c: 217: (INTCONbits.PEIE = 0);
  5597  0599  130B               	bcf	11,6	;volatile
  5598                           
  5599                           ;main.c: 218: main_switchStepUp_Down(*pU_mV);
  5600  059A  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5601  059B  0086               	movwf	6
  5602  059C  3002               	movlw	2	; select bank4/5
  5603  059D  0087               	movwf	7
  5604  059E  3F40               	moviw [0]fsr1
  5605  059F  00BB               	movwf	main_switchStepUp_Down@Uout_mV^(0+384)
  5606  05A0  3F41               	moviw [1]fsr1
  5607  05A1  00BC               	movwf	(main_switchStepUp_Down@Uout_mV+1)^(0+384)
  5608  05A2  3F42               	moviw [2]fsr1
  5609  05A3  00BD               	movwf	(main_switchStepUp_Down@Uout_mV+2)^(0+384)
  5610  05A4  3F43               	moviw [3]fsr1
  5611  05A5  00BE               	movwf	(main_switchStepUp_Down@Uout_mV+3)^(0+384)
  5612  05A6  318B  23B5  3184   	fcall	_main_switchStepUp_Down
  5613                           
  5614                           ;main.c: 219: Iadc_limit = 3+(*pI_mA)/10;
  5615  05A9  3000               	movlw	0
  5616  05AA  0023               	movlb	3	; select bank3
  5617  05AB  00AF               	movwf	(___aldiv@divisor+3)^(0+384)
  5618  05AC  3000               	movlw	0
  5619  05AD  00AE               	movwf	(___aldiv@divisor+2)^(0+384)
  5620  05AE  3000               	movlw	0
  5621  05AF  00AD               	movwf	(___aldiv@divisor+1)^(0+384)
  5622  05B0  300A               	movlw	10
  5623  05B1  00AC               	movwf	___aldiv@divisor^(0+384)
  5624  05B2  0840               	movf	main_SetDcDcRegulator@pI_mA^(0+384),w
  5625  05B3  0086               	movwf	6
  5626  05B4  3002               	movlw	2	; select bank4/5
  5627  05B5  0087               	movwf	7
  5628  05B6  3F40               	moviw [0]fsr1
  5629  05B7  00B0               	movwf	___aldiv@dividend^(0+384)
  5630  05B8  3F41               	moviw [1]fsr1
  5631  05B9  00B1               	movwf	(___aldiv@dividend+1)^(0+384)
  5632  05BA  3F42               	moviw [2]fsr1
  5633  05BB  00B2               	movwf	(___aldiv@dividend+2)^(0+384)
  5634  05BC  3F43               	moviw [3]fsr1
  5635  05BD  00B3               	movwf	(___aldiv@dividend+3)^(0+384)
  5636  05BE  3188  2077  3184   	fcall	___aldiv
  5637  05C1  0023               	movlb	3	; select bank3
  5638  05C2  082C               	movf	?___aldiv^(0+384),w
  5639  05C3  3E03               	addlw	3
  5640  05C4  0024               	movlb	4	; select bank4
  5641  05C5  00AF               	movwf	_Iadc_limit^(0+512)
  5642  05C6  3000               	movlw	0
  5643  05C7  0023               	movlb	3	; select bank3
  5644  05C8  3D2D               	addwfc	(?___aldiv^(0+384)+1),w
  5645  05C9  0024               	movlb	4	; select bank4
  5646  05CA  00B0               	movwf	(_Iadc_limit+1)^(0+512)
  5647                           
  5648                           ;main.c: 220: Uadc_target = (100*(50+*pU_mV))/1761;
  5649  05CB  3000               	movlw	0
  5650  05CC  0023               	movlb	3	; select bank3
  5651  05CD  00AF               	movwf	(___aldiv@divisor+3)^(0+384)
  5652  05CE  3000               	movlw	0
  5653  05CF  00AE               	movwf	(___aldiv@divisor+2)^(0+384)
  5654  05D0  3006               	movlw	6
  5655  05D1  00AD               	movwf	(___aldiv@divisor+1)^(0+384)
  5656  05D2  30E1               	movlw	225
  5657  05D3  00AC               	movwf	___aldiv@divisor^(0+384)
  5658  05D4  0845               	movf	main_SetDcDcRegulator@pU_mV^(0+384),w
  5659  05D5  0086               	movwf	6
  5660  05D6  3002               	movlw	2	; select bank4/5
  5661  05D7  0087               	movwf	7
  5662  05D8  3F40               	moviw [0]fsr1
  5663  05D9  00C1               	movwf	??_main_SetDcDcRegulator^(0+384)
  5664  05DA  3F41               	moviw [1]fsr1
  5665  05DB  00C2               	movwf	(??_main_SetDcDcRegulator^(0+384)+1)
  5666  05DC  3F42               	moviw [2]fsr1
  5667  05DD  00C3               	movwf	(??_main_SetDcDcRegulator^(0+384)+2)
  5668  05DE  3F43               	moviw [3]fsr1
  5669  05DF  00C4               	movwf	(??_main_SetDcDcRegulator^(0+384)+3)
  5670  05E0  3032               	movlw	50
  5671  05E1  0741               	addwf	??_main_SetDcDcRegulator^(0+384),w
  5672  05E2  00A0               	movwf	___lmul@multiplier^(0+384)
  5673  05E3  3000               	movlw	0
  5674  05E4  3D42               	addwfc	(??_main_SetDcDcRegulator+1)^(0+384),w
  5675  05E5  00A1               	movwf	(___lmul@multiplier+1)^(0+384)
  5676  05E6  3000               	movlw	0
  5677  05E7  3D43               	addwfc	(??_main_SetDcDcRegulator+2)^(0+384),w
  5678  05E8  00A2               	movwf	(___lmul@multiplier+2)^(0+384)
  5679  05E9  3000               	movlw	0
  5680  05EA  3D44               	addwfc	(??_main_SetDcDcRegulator+3)^(0+384),w
  5681  05EB  00A3               	movwf	(___lmul@multiplier+3)^(0+384)
  5682  05EC  3000               	movlw	0
  5683  05ED  00A7               	movwf	(___lmul@multiplicand+3)^(0+384)
  5684  05EE  3000               	movlw	0
  5685  05EF  00A6               	movwf	(___lmul@multiplicand+2)^(0+384)
  5686  05F0  3000               	movlw	0
  5687  05F1  00A5               	movwf	(___lmul@multiplicand+1)^(0+384)
  5688  05F2  3064               	movlw	100
  5689  05F3  00A4               	movwf	___lmul@multiplicand^(0+384)
  5690  05F4  319F  27D0  3184   	fcall	___lmul
  5691  05F7  0023               	movlb	3	; select bank3
  5692  05F8  0823               	movf	(?___lmul+3)^(0+384),w
  5693  05F9  00B3               	movwf	(___aldiv@dividend+3)^(0+384)
  5694  05FA  0822               	movf	(?___lmul+2)^(0+384),w
  5695  05FB  00B2               	movwf	(___aldiv@dividend+2)^(0+384)
  5696  05FC  0821               	movf	(?___lmul+1)^(0+384),w
  5697  05FD  00B1               	movwf	(___aldiv@dividend+1)^(0+384)
  5698  05FE  0820               	movf	?___lmul^(0+384),w
  5699  05FF  00B0               	movwf	___aldiv@dividend^(0+384)
  5700  0600  3188  2077         	fcall	___aldiv
  5701  0602  0023               	movlb	3	; select bank3
  5702  0603  082D               	movf	(?___aldiv^(0+384)+1),w
  5703  0604  0024               	movlb	4	; select bank4
  5704  0605  00BA               	movwf	(_Uadc_target+1)^(0+512)
  5705  0606  0023               	movlb	3	; select bank3
  5706  0607  082C               	movf	?___aldiv^(0+384),w
  5707  0608  0024               	movlb	4	; select bank4
  5708  0609  00B9               	movwf	_Uadc_target^(0+512)
  5709                           
  5710                           ;main.c: 221: (INTCONbits.PEIE = 1);
  5711  060A  170B               	bsf	11,6	;volatile
  5712                           
  5713                           ;main.c: 222: MAIN_ovcFlag = 0;
  5714  060B  01C8               	clrf	_MAIN_ovcFlag^(0+512)
  5715  060C  0008               	return
  5716  060D                     __end_of_main_SetDcDcRegulator:	
  5717                           
  5718                           	psect	text7
  5719  0BB5                     __ptext7:	
  5720 ;; *************** function _main_switchStepUp_Down *****************
  5721 ;; Defined at:
  5722 ;;		line 71 in file "main.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  Uout_mV         4   27[BANK3 ] long 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;		None
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      void 
  5729 ;; Registers used:
  5730 ;;		wreg, status,2, status,0, pclath, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  5736 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  5737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  5738 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  5739 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0
  5740 ;;Total ram usage:        5 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; Hardware stack levels required when called:   11
  5743 ;; This function calls:
  5744 ;;		_PWM2_LoadDutyValue
  5745 ;;		___aldiv
  5746 ;;		___lmul
  5747 ;; This function is called by:
  5748 ;;		_main_SetDcDcRegulator
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           
  5753                           ;psect for function _main_switchStepUp_Down
  5754  0BB5                     _main_switchStepUp_Down:	
  5755                           
  5756                           ;incstack = 0
  5757                           ; Regs used in _main_switchStepUp_Down: [wreg+status,2+status,0+pclath+cstack]
  5758                           ;main.c: 74: do { LATAbits.LATA5 = 1; } while(0);
  5759  0BB5  0022               	movlb	2	; select bank2
  5760  0BB6  168C               	bsf	12,5	;volatile
  5761                           
  5762                           ;main.c: 76: if(Uout_mV <= 4650) {
  5763  0BB7  0023               	movlb	3	; select bank3
  5764  0BB8  1BBE               	btfsc	(main_switchStepUp_Down@Uout_mV+3)^(0+384),7
  5765  0BB9  2BC6               	goto	l4807
  5766  0BBA  083E               	movf	(main_switchStepUp_Down@Uout_mV+3)^(0+384),w
  5767  0BBB  1D03               	btfss	3,2
  5768  0BBC  2C06               	goto	l4815
  5769  0BBD  083D               	movf	(main_switchStepUp_Down@Uout_mV+2)^(0+384),w
  5770  0BBE  1D03               	btfss	3,2
  5771  0BBF  2C06               	goto	l4815
  5772  0BC0  302B               	movlw	43
  5773  0BC1  023B               	subwf	main_switchStepUp_Down@Uout_mV^(0+384),w
  5774  0BC2  3012               	movlw	18
  5775  0BC3  3B3C               	subwfb	(main_switchStepUp_Down@Uout_mV+1)^(0+384),w
  5776  0BC4  1803               	btfsc	3,0
  5777  0BC5  2C06               	goto	l4815
  5778  0BC6                     l4807:	
  5779                           
  5780                           ;main.c: 77: PwmDutyCycleVoltageLimit = ((188)*(350+Uout_mV))/(5000);
  5781  0BC6  3000               	movlw	0
  5782  0BC7  00AF               	movwf	(___aldiv@divisor+3)^(0+384)
  5783  0BC8  3000               	movlw	0
  5784  0BC9  00AE               	movwf	(___aldiv@divisor+2)^(0+384)
  5785  0BCA  3013               	movlw	19
  5786  0BCB  00AD               	movwf	(___aldiv@divisor+1)^(0+384)
  5787  0BCC  3088               	movlw	136
  5788  0BCD  00AC               	movwf	___aldiv@divisor^(0+384)
  5789  0BCE  305E               	movlw	94
  5790  0BCF  073B               	addwf	main_switchStepUp_Down@Uout_mV^(0+384),w
  5791  0BD0  00A0               	movwf	___lmul@multiplier^(0+384)
  5792  0BD1  3001               	movlw	1
  5793  0BD2  3D3C               	addwfc	(main_switchStepUp_Down@Uout_mV+1)^(0+384),w
  5794  0BD3  00A1               	movwf	(___lmul@multiplier+1)^(0+384)
  5795  0BD4  3000               	movlw	0
  5796  0BD5  3D3D               	addwfc	(main_switchStepUp_Down@Uout_mV+2)^(0+384),w
  5797  0BD6  00A2               	movwf	(___lmul@multiplier+2)^(0+384)
  5798  0BD7  3000               	movlw	0
  5799  0BD8  3D3E               	addwfc	(main_switchStepUp_Down@Uout_mV+3)^(0+384),w
  5800  0BD9  00A3               	movwf	(___lmul@multiplier+3)^(0+384)
  5801  0BDA  3000               	movlw	0
  5802  0BDB  00A7               	movwf	(___lmul@multiplicand+3)^(0+384)
  5803  0BDC  3000               	movlw	0
  5804  0BDD  00A6               	movwf	(___lmul@multiplicand+2)^(0+384)
  5805  0BDE  3000               	movlw	0
  5806  0BDF  00A5               	movwf	(___lmul@multiplicand+1)^(0+384)
  5807  0BE0  30BC               	movlw	188
  5808  0BE1  00A4               	movwf	___lmul@multiplicand^(0+384)
  5809  0BE2  319F  27D0  318B   	fcall	___lmul
  5810  0BE5  0023               	movlb	3	; select bank3
  5811  0BE6  0823               	movf	(?___lmul+3)^(0+384),w
  5812  0BE7  00B3               	movwf	(___aldiv@dividend+3)^(0+384)
  5813  0BE8  0822               	movf	(?___lmul+2)^(0+384),w
  5814  0BE9  00B2               	movwf	(___aldiv@dividend+2)^(0+384)
  5815  0BEA  0821               	movf	(?___lmul+1)^(0+384),w
  5816  0BEB  00B1               	movwf	(___aldiv@dividend+1)^(0+384)
  5817  0BEC  0820               	movf	?___lmul^(0+384),w
  5818  0BED  00B0               	movwf	___aldiv@dividend^(0+384)
  5819  0BEE  3188  2077  318B   	fcall	___aldiv
  5820  0BF1  0023               	movlb	3	; select bank3
  5821  0BF2  082C               	movf	?___aldiv^(0+384),w
  5822  0BF3  00BF               	movwf	??_main_switchStepUp_Down^(0+384)
  5823  0BF4  083F               	movf	??_main_switchStepUp_Down^(0+384),w
  5824  0BF5  0024               	movlb	4	; select bank4
  5825  0BF6  00CA               	movwf	_PwmDutyCycleVoltageLimit^(0+512)
  5826                           
  5827                           ;main.c: 78: PWM2_LoadDutyValue(0);
  5828  0BF7  3000               	movlw	0
  5829  0BF8  0023               	movlb	3	; select bank3
  5830  0BF9  00A0               	movwf	PWM2_LoadDutyValue@dutyValue^(0+384)
  5831  0BFA  00A1               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+384)
  5832  0BFB  319E  26A1         	fcall	_PWM2_LoadDutyValue
  5833                           
  5834                           ;main.c: 79: PWM2CON = 0xD0;
  5835  0BFD  30D0               	movlw	208
  5836  0BFE  002C               	movlb	12	; select bank12
  5837  0BFF  0096               	movwf	22	;volatile
  5838                           
  5839                           ;main.c: 80: APFCON = 0x04;
  5840  0C00  3004               	movlw	4
  5841  0C01  0022               	movlb	2	; select bank2
  5842  0C02  009D               	movwf	29	;volatile
  5843                           
  5844                           ;main.c: 81: MAIN_upConverterFlag = 0;
  5845  0C03  0024               	movlb	4	; select bank4
  5846  0C04  01C9               	clrf	_MAIN_upConverterFlag^(0+512)
  5847                           
  5848                           ;main.c: 82: } else {
  5849  0C05  0008               	return
  5850  0C06                     l4815:	
  5851                           
  5852                           ;main.c: 83: PwmDutyCycleVoltageLimit = 2+(((188)*(Uout_mV - 4600))/(Uout_mV));
  5853  0C06  0023               	movlb	3	; select bank3
  5854  0C07  083E               	movf	(main_switchStepUp_Down@Uout_mV+3)^(0+384),w
  5855  0C08  00AF               	movwf	(___aldiv@divisor+3)^(0+384)
  5856  0C09  083D               	movf	(main_switchStepUp_Down@Uout_mV+2)^(0+384),w
  5857  0C0A  00AE               	movwf	(___aldiv@divisor+2)^(0+384)
  5858  0C0B  083C               	movf	(main_switchStepUp_Down@Uout_mV+1)^(0+384),w
  5859  0C0C  00AD               	movwf	(___aldiv@divisor+1)^(0+384)
  5860  0C0D  083B               	movf	main_switchStepUp_Down@Uout_mV^(0+384),w
  5861  0C0E  00AC               	movwf	___aldiv@divisor^(0+384)
  5862  0C0F  3008               	movlw	8
  5863  0C10  073B               	addwf	main_switchStepUp_Down@Uout_mV^(0+384),w
  5864  0C11  00A0               	movwf	___lmul@multiplier^(0+384)
  5865  0C12  30EE               	movlw	238
  5866  0C13  3D3C               	addwfc	(main_switchStepUp_Down@Uout_mV+1)^(0+384),w
  5867  0C14  00A1               	movwf	(___lmul@multiplier+1)^(0+384)
  5868  0C15  30FF               	movlw	255
  5869  0C16  3D3D               	addwfc	(main_switchStepUp_Down@Uout_mV+2)^(0+384),w
  5870  0C17  00A2               	movwf	(___lmul@multiplier+2)^(0+384)
  5871  0C18  30FF               	movlw	255
  5872  0C19  3D3E               	addwfc	(main_switchStepUp_Down@Uout_mV+3)^(0+384),w
  5873  0C1A  00A3               	movwf	(___lmul@multiplier+3)^(0+384)
  5874  0C1B  3000               	movlw	0
  5875  0C1C  00A7               	movwf	(___lmul@multiplicand+3)^(0+384)
  5876  0C1D  3000               	movlw	0
  5877  0C1E  00A6               	movwf	(___lmul@multiplicand+2)^(0+384)
  5878  0C1F  3000               	movlw	0
  5879  0C20  00A5               	movwf	(___lmul@multiplicand+1)^(0+384)
  5880  0C21  30BC               	movlw	188
  5881  0C22  00A4               	movwf	___lmul@multiplicand^(0+384)
  5882  0C23  319F  27D0  318B   	fcall	___lmul
  5883  0C26  0023               	movlb	3	; select bank3
  5884  0C27  0823               	movf	(?___lmul+3)^(0+384),w
  5885  0C28  00B3               	movwf	(___aldiv@dividend+3)^(0+384)
  5886  0C29  0822               	movf	(?___lmul+2)^(0+384),w
  5887  0C2A  00B2               	movwf	(___aldiv@dividend+2)^(0+384)
  5888  0C2B  0821               	movf	(?___lmul+1)^(0+384),w
  5889  0C2C  00B1               	movwf	(___aldiv@dividend+1)^(0+384)
  5890  0C2D  0820               	movf	?___lmul^(0+384),w
  5891  0C2E  00B0               	movwf	___aldiv@dividend^(0+384)
  5892  0C2F  3188  2077  318B   	fcall	___aldiv
  5893  0C32  0023               	movlb	3	; select bank3
  5894  0C33  082C               	movf	?___aldiv^(0+384),w
  5895  0C34  3E02               	addlw	2
  5896  0C35  00BF               	movwf	??_main_switchStepUp_Down^(0+384)
  5897  0C36  083F               	movf	??_main_switchStepUp_Down^(0+384),w
  5898  0C37  0024               	movlb	4	; select bank4
  5899  0C38  00CA               	movwf	_PwmDutyCycleVoltageLimit^(0+512)
  5900                           
  5901                           ;main.c: 84: PWM2_LoadDutyValue(0);
  5902  0C39  3000               	movlw	0
  5903  0C3A  0023               	movlb	3	; select bank3
  5904  0C3B  00A0               	movwf	PWM2_LoadDutyValue@dutyValue^(0+384)
  5905  0C3C  00A1               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+384)
  5906  0C3D  319E  26A1         	fcall	_PWM2_LoadDutyValue
  5907                           
  5908                           ;main.c: 85: PWM2CON = 0xC0;
  5909  0C3F  30C0               	movlw	192
  5910  0C40  002C               	movlb	12	; select bank12
  5911  0C41  0096               	movwf	22	;volatile
  5912                           
  5913                           ;main.c: 86: APFCON = 0x00;
  5914  0C42  0022               	movlb	2	; select bank2
  5915  0C43  019D               	clrf	29	;volatile
  5916                           
  5917                           ;main.c: 87: MAIN_upConverterFlag = 1;
  5918  0C44  0024               	movlb	4	; select bank4
  5919  0C45  01C9               	clrf	_MAIN_upConverterFlag^(0+512)
  5920  0C46  0AC9               	incf	_MAIN_upConverterFlag^(0+512),f
  5921                           
  5922                           ;main.c: 88: do { LATAbits.LATA5 = 0; } while(0);
  5923  0C47  0022               	movlb	2	; select bank2
  5924  0C48  128C               	bcf	12,5	;volatile
  5925  0C49  0008               	return
  5926  0C4A                     __end_of_main_switchStepUp_Down:	
  5927                           
  5928                           	psect	text8
  5929  1FD0                     __ptext8:	
  5930 ;; *************** function ___lmul *****************
  5931 ;; Defined at:
  5932 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul32.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  multiplier      4    0[BANK3 ] unsigned long 
  5935 ;;  multiplicand    4    4[BANK3 ] unsigned long 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  product         4    8[BANK3 ] unsigned long 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  4    0[BANK3 ] unsigned long 
  5940 ;; Registers used:
  5941 ;;		wreg, status,2, status,0
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  5947 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0
  5948 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  5949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  5950 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0
  5951 ;;Total ram usage:       12 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:   10
  5954 ;; This function calls:
  5955 ;;		Nothing
  5956 ;; This function is called by:
  5957 ;;		_main_switchStepUp_Down
  5958 ;;		_main_SetDcDcRegulator
  5959 ;;		_main_CommunicationHandler
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           
  5964                           ;psect for function ___lmul
  5965  1FD0                     ___lmul:	
  5966                           
  5967                           ;incstack = 0
  5968                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5969  1FD0  3000               	movlw	0
  5970  1FD1  0023               	movlb	3	; select bank3
  5971  1FD2  00AB               	movwf	(___lmul@product+3)^(0+384)
  5972  1FD3  3000               	movlw	0
  5973  1FD4  00AA               	movwf	(___lmul@product+2)^(0+384)
  5974  1FD5  3000               	movlw	0
  5975  1FD6  00A9               	movwf	(___lmul@product+1)^(0+384)
  5976  1FD7  3000               	movlw	0
  5977  1FD8  00A8               	movwf	___lmul@product^(0+384)
  5978  1FD9                     l4639:	
  5979  1FD9  1C20               	btfss	___lmul@multiplier^(0+384),0
  5980  1FDA  2FE3               	goto	l4643
  5981  1FDB  0824               	movf	___lmul@multiplicand^(0+384),w
  5982  1FDC  07A8               	addwf	___lmul@product^(0+384),f
  5983  1FDD  0825               	movf	(___lmul@multiplicand+1)^(0+384),w
  5984  1FDE  3DA9               	addwfc	(___lmul@product+1)^(0+384),f
  5985  1FDF  0826               	movf	(___lmul@multiplicand+2)^(0+384),w
  5986  1FE0  3DAA               	addwfc	(___lmul@product+2)^(0+384),f
  5987  1FE1  0827               	movf	(___lmul@multiplicand+3)^(0+384),w
  5988  1FE2  3DAB               	addwfc	(___lmul@product+3)^(0+384),f
  5989  1FE3                     l4643:	
  5990  1FE3  3001               	movlw	1
  5991  1FE4                     u4035:	
  5992  1FE4  35A4               	lslf	___lmul@multiplicand^(0+384),f
  5993  1FE5  0DA5               	rlf	(___lmul@multiplicand+1)^(0+384),f
  5994  1FE6  0DA6               	rlf	(___lmul@multiplicand+2)^(0+384),f
  5995  1FE7  0DA7               	rlf	(___lmul@multiplicand+3)^(0+384),f
  5996  1FE8  0B89               	decfsz	9,f
  5997  1FE9  2FE4               	goto	u4035
  5998  1FEA  3001               	movlw	1
  5999  1FEB                     u4045:	
  6000  1FEB  36A3               	lsrf	(___lmul@multiplier+3)^(0+384),f
  6001  1FEC  0CA2               	rrf	(___lmul@multiplier+2)^(0+384),f
  6002  1FED  0CA1               	rrf	(___lmul@multiplier+1)^(0+384),f
  6003  1FEE  0CA0               	rrf	___lmul@multiplier^(0+384),f
  6004  1FEF  0B89               	decfsz	9,f
  6005  1FF0  2FEB               	goto	u4045
  6006  1FF1  0823               	movf	(___lmul@multiplier+3)^(0+384),w
  6007  1FF2  0422               	iorwf	(___lmul@multiplier+2)^(0+384),w
  6008  1FF3  0421               	iorwf	(___lmul@multiplier+1)^(0+384),w
  6009  1FF4  0420               	iorwf	___lmul@multiplier^(0+384),w
  6010  1FF5  1D03               	skipz
  6011  1FF6  2FD9               	goto	l4639
  6012  1FF7  082B               	movf	(___lmul@product+3)^(0+384),w
  6013  1FF8  00A3               	movwf	(?___lmul+3)^(0+384)
  6014  1FF9  082A               	movf	(___lmul@product+2)^(0+384),w
  6015  1FFA  00A2               	movwf	(?___lmul+2)^(0+384)
  6016  1FFB  0829               	movf	(___lmul@product+1)^(0+384),w
  6017  1FFC  00A1               	movwf	(?___lmul+1)^(0+384)
  6018  1FFD  0828               	movf	___lmul@product^(0+384),w
  6019  1FFE  00A0               	movwf	?___lmul^(0+384)
  6020  1FFF  0008               	return
  6021  2000                     __end_of___lmul:	
  6022                           
  6023                           	psect	text9
  6024  0877                     __ptext9:	
  6025 ;; *************** function ___aldiv *****************
  6026 ;; Defined at:
  6027 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\aldiv.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  divisor         4   12[BANK3 ] long 
  6030 ;;  dividend        4   16[BANK3 ] long 
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;  quotient        4   23[BANK3 ] long 
  6033 ;;  sign            1   22[BANK3 ] unsigned char 
  6034 ;;  counter         1   21[BANK3 ] unsigned char 
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  4   12[BANK3 ] long 
  6037 ;; Registers used:
  6038 ;;		wreg, status,2, status,0
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6044 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0
  6045 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0
  6046 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  6047 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0
  6048 ;;Total ram usage:       15 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:   10
  6051 ;; This function calls:
  6052 ;;		Nothing
  6053 ;; This function is called by:
  6054 ;;		_main_switchStepUp_Down
  6055 ;;		_main_SetDcDcRegulator
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           
  6060                           ;psect for function ___aldiv
  6061  0877                     ___aldiv:	
  6062                           
  6063                           ;incstack = 0
  6064                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6065  0877  0023               	movlb	3	; select bank3
  6066  0878  01B6               	clrf	___aldiv@sign^(0+384)
  6067  0879  1FAF               	btfss	(___aldiv@divisor+3)^(0+384),7
  6068  087A  2888               	goto	l1268
  6069  087B  09AC               	comf	___aldiv@divisor^(0+384),f
  6070  087C  09AD               	comf	(___aldiv@divisor+1)^(0+384),f
  6071  087D  09AE               	comf	(___aldiv@divisor+2)^(0+384),f
  6072  087E  09AF               	comf	(___aldiv@divisor+3)^(0+384),f
  6073  087F  0AAC               	incf	___aldiv@divisor^(0+384),f
  6074  0880  1903               	skipnz
  6075  0881  0AAD               	incf	(___aldiv@divisor+1)^(0+384),f
  6076  0882  1903               	skipnz
  6077  0883  0AAE               	incf	(___aldiv@divisor+2)^(0+384),f
  6078  0884  1903               	skipnz
  6079  0885  0AAF               	incf	(___aldiv@divisor+3)^(0+384),f
  6080  0886  01B6               	clrf	___aldiv@sign^(0+384)
  6081  0887  0AB6               	incf	___aldiv@sign^(0+384),f
  6082  0888                     l1268:	
  6083  0888  1FB3               	btfss	(___aldiv@dividend+3)^(0+384),7
  6084  0889  2899               	goto	l4661
  6085  088A  09B0               	comf	___aldiv@dividend^(0+384),f
  6086  088B  09B1               	comf	(___aldiv@dividend+1)^(0+384),f
  6087  088C  09B2               	comf	(___aldiv@dividend+2)^(0+384),f
  6088  088D  09B3               	comf	(___aldiv@dividend+3)^(0+384),f
  6089  088E  0AB0               	incf	___aldiv@dividend^(0+384),f
  6090  088F  1903               	skipnz
  6091  0890  0AB1               	incf	(___aldiv@dividend+1)^(0+384),f
  6092  0891  1903               	skipnz
  6093  0892  0AB2               	incf	(___aldiv@dividend+2)^(0+384),f
  6094  0893  1903               	skipnz
  6095  0894  0AB3               	incf	(___aldiv@dividend+3)^(0+384),f
  6096  0895  3001               	movlw	1
  6097  0896  00B4               	movwf	??___aldiv^(0+384)
  6098  0897  0834               	movf	??___aldiv^(0+384),w
  6099  0898  06B6               	xorwf	___aldiv@sign^(0+384),f
  6100  0899                     l4661:	
  6101  0899  3000               	movlw	0
  6102  089A  00BA               	movwf	(___aldiv@quotient+3)^(0+384)
  6103  089B  3000               	movlw	0
  6104  089C  00B9               	movwf	(___aldiv@quotient+2)^(0+384)
  6105  089D  3000               	movlw	0
  6106  089E  00B8               	movwf	(___aldiv@quotient+1)^(0+384)
  6107  089F  3000               	movlw	0
  6108  08A0  00B7               	movwf	___aldiv@quotient^(0+384)
  6109  08A1  082F               	movf	(___aldiv@divisor+3)^(0+384),w
  6110  08A2  042E               	iorwf	(___aldiv@divisor+2)^(0+384),w
  6111  08A3  042D               	iorwf	(___aldiv@divisor+1)^(0+384),w
  6112  08A4  042C               	iorwf	___aldiv@divisor^(0+384),w
  6113  08A5  1903               	skipnz
  6114  08A6  28E2               	goto	l4683
  6115  08A7  01B5               	clrf	___aldiv@counter^(0+384)
  6116  08A8  0AB5               	incf	___aldiv@counter^(0+384),f
  6117  08A9                     l4669:	
  6118  08A9  1BAF               	btfsc	(___aldiv@divisor+3)^(0+384),7
  6119  08AA  28B7               	goto	l4671
  6120  08AB  3001               	movlw	1
  6121  08AC                     u4095:	
  6122  08AC  35AC               	lslf	___aldiv@divisor^(0+384),f
  6123  08AD  0DAD               	rlf	(___aldiv@divisor+1)^(0+384),f
  6124  08AE  0DAE               	rlf	(___aldiv@divisor+2)^(0+384),f
  6125  08AF  0DAF               	rlf	(___aldiv@divisor+3)^(0+384),f
  6126  08B0  0B89               	decfsz	9,f
  6127  08B1  28AC               	goto	u4095
  6128  08B2  3001               	movlw	1
  6129  08B3  00B4               	movwf	??___aldiv^(0+384)
  6130  08B4  0834               	movf	??___aldiv^(0+384),w
  6131  08B5  07B5               	addwf	___aldiv@counter^(0+384),f
  6132  08B6  28A9               	goto	l4669
  6133  08B7                     l4671:	
  6134  08B7  3001               	movlw	1
  6135  08B8                     u4115:	
  6136  08B8  35B7               	lslf	___aldiv@quotient^(0+384),f
  6137  08B9  0DB8               	rlf	(___aldiv@quotient+1)^(0+384),f
  6138  08BA  0DB9               	rlf	(___aldiv@quotient+2)^(0+384),f
  6139  08BB  0DBA               	rlf	(___aldiv@quotient+3)^(0+384),f
  6140  08BC  0B89               	decfsz	9,f
  6141  08BD  28B8               	goto	u4115
  6142  08BE  082F               	movf	(___aldiv@divisor+3)^(0+384),w
  6143  08BF  0233               	subwf	(___aldiv@dividend+3)^(0+384),w
  6144  08C0  1D03               	skipz
  6145  08C1  28CC               	goto	u4125
  6146  08C2  082E               	movf	(___aldiv@divisor+2)^(0+384),w
  6147  08C3  0232               	subwf	(___aldiv@dividend+2)^(0+384),w
  6148  08C4  1D03               	skipz
  6149  08C5  28CC               	goto	u4125
  6150  08C6  082D               	movf	(___aldiv@divisor+1)^(0+384),w
  6151  08C7  0231               	subwf	(___aldiv@dividend+1)^(0+384),w
  6152  08C8  1D03               	skipz
  6153  08C9  28CC               	goto	u4125
  6154  08CA  082C               	movf	___aldiv@divisor^(0+384),w
  6155  08CB  0230               	subwf	___aldiv@dividend^(0+384),w
  6156  08CC                     u4125:	
  6157  08CC  1C03               	skipc
  6158  08CD  28D7               	goto	l4679
  6159  08CE  082C               	movf	___aldiv@divisor^(0+384),w
  6160  08CF  02B0               	subwf	___aldiv@dividend^(0+384),f
  6161  08D0  082D               	movf	(___aldiv@divisor+1)^(0+384),w
  6162  08D1  3BB1               	subwfb	(___aldiv@dividend+1)^(0+384),f
  6163  08D2  082E               	movf	(___aldiv@divisor+2)^(0+384),w
  6164  08D3  3BB2               	subwfb	(___aldiv@dividend+2)^(0+384),f
  6165  08D4  082F               	movf	(___aldiv@divisor+3)^(0+384),w
  6166  08D5  3BB3               	subwfb	(___aldiv@dividend+3)^(0+384),f
  6167  08D6  1437               	bsf	___aldiv@quotient^(0+384),0
  6168  08D7                     l4679:	
  6169  08D7  3001               	movlw	1
  6170  08D8                     u4135:	
  6171  08D8  36AF               	lsrf	(___aldiv@divisor+3)^(0+384),f
  6172  08D9  0CAE               	rrf	(___aldiv@divisor+2)^(0+384),f
  6173  08DA  0CAD               	rrf	(___aldiv@divisor+1)^(0+384),f
  6174  08DB  0CAC               	rrf	___aldiv@divisor^(0+384),f
  6175  08DC  0B89               	decfsz	9,f
  6176  08DD  28D8               	goto	u4135
  6177  08DE  3001               	movlw	1
  6178  08DF  02B5               	subwf	___aldiv@counter^(0+384),f
  6179  08E0  1D03               	btfss	3,2
  6180  08E1  28B7               	goto	l4671
  6181  08E2                     l4683:	
  6182  08E2  0836               	movf	___aldiv@sign^(0+384),w
  6183  08E3  1903               	btfsc	3,2
  6184  08E4  28F0               	goto	l4687
  6185  08E5  09B7               	comf	___aldiv@quotient^(0+384),f
  6186  08E6  09B8               	comf	(___aldiv@quotient+1)^(0+384),f
  6187  08E7  09B9               	comf	(___aldiv@quotient+2)^(0+384),f
  6188  08E8  09BA               	comf	(___aldiv@quotient+3)^(0+384),f
  6189  08E9  0AB7               	incf	___aldiv@quotient^(0+384),f
  6190  08EA  1903               	skipnz
  6191  08EB  0AB8               	incf	(___aldiv@quotient+1)^(0+384),f
  6192  08EC  1903               	skipnz
  6193  08ED  0AB9               	incf	(___aldiv@quotient+2)^(0+384),f
  6194  08EE  1903               	skipnz
  6195  08EF  0ABA               	incf	(___aldiv@quotient+3)^(0+384),f
  6196  08F0                     l4687:	
  6197  08F0  083A               	movf	(___aldiv@quotient+3)^(0+384),w
  6198  08F1  00AF               	movwf	(?___aldiv+3)^(0+384)
  6199  08F2  0839               	movf	(___aldiv@quotient+2)^(0+384),w
  6200  08F3  00AE               	movwf	(?___aldiv+2)^(0+384)
  6201  08F4  0838               	movf	(___aldiv@quotient+1)^(0+384),w
  6202  08F5  00AD               	movwf	(?___aldiv+1)^(0+384)
  6203  08F6  0837               	movf	___aldiv@quotient^(0+384),w
  6204  08F7  00AC               	movwf	?___aldiv^(0+384)
  6205  08F8  0008               	return
  6206  08F9                     __end_of___aldiv:	
  6207                           
  6208                           	psect	text10
  6209  1EA1                     __ptext10:	
  6210 ;; *************** function _PWM2_LoadDutyValue *****************
  6211 ;; Defined at:
  6212 ;;		line 71 in file "mcc_generated_files/pwm2.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  dutyValue       2    0[BANK3 ] unsigned int 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		wreg, status,2, status,0
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6226 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6228 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6229 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  6230 ;;Total ram usage:        4 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:   10
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_main_switchStepUp_Down
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           
  6241                           ;psect for function _PWM2_LoadDutyValue
  6242  1EA1                     _PWM2_LoadDutyValue:	
  6243                           
  6244                           ;pwm2.c: 74: PWM2DCH = (dutyValue & 0x03FC)>>2;
  6245                           
  6246                           ;incstack = 0
  6247                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2+status,0]
  6248  1EA1  0023               	movlb	3	; select bank3
  6249  1EA2  0821               	movf	(PWM2_LoadDutyValue@dutyValue+1)^(0+384),w
  6250  1EA3  00A3               	movwf	(??_PWM2_LoadDutyValue^(0+384)+1)
  6251  1EA4  0820               	movf	PWM2_LoadDutyValue@dutyValue^(0+384),w
  6252  1EA5  00A2               	movwf	??_PWM2_LoadDutyValue^(0+384)
  6253  1EA6  36A3               	lsrf	(??_PWM2_LoadDutyValue^(0+384)+1),f
  6254  1EA7  0CA2               	rrf	??_PWM2_LoadDutyValue^(0+384),f
  6255  1EA8  36A3               	lsrf	(??_PWM2_LoadDutyValue^(0+384)+1),f
  6256  1EA9  0CA2               	rrf	??_PWM2_LoadDutyValue^(0+384),f
  6257  1EAA  0822               	movf	??_PWM2_LoadDutyValue^(0+384),w
  6258  1EAB  002C               	movlb	12	; select bank12
  6259  1EAC  0095               	movwf	21	;volatile
  6260                           
  6261                           ;pwm2.c: 77: PWM2DCL = (dutyValue & 0x0003)<<6;
  6262  1EAD  0023               	movlb	3	; select bank3
  6263  1EAE  0820               	movf	PWM2_LoadDutyValue@dutyValue^(0+384),w
  6264  1EAF  3903               	andlw	3
  6265  1EB0  00A2               	movwf	??_PWM2_LoadDutyValue^(0+384)
  6266  1EB1  3005               	movlw	5
  6267  1EB2                     u3875:	
  6268  1EB2  35A2               	lslf	??_PWM2_LoadDutyValue^(0+384),f
  6269  1EB3  3EFF               	addlw	-1
  6270  1EB4  1D03               	skipz
  6271  1EB5  2EB2               	goto	u3875
  6272  1EB6  3522               	lslf	??_PWM2_LoadDutyValue^(0+384),w
  6273  1EB7  002C               	movlb	12	; select bank12
  6274  1EB8  0094               	movwf	20	;volatile
  6275  1EB9  0008               	return
  6276  1EBA                     __end_of_PWM2_LoadDutyValue:	
  6277                           
  6278                           	psect	text11
  6279  1283                     __ptext11:	
  6280 ;; *************** function ___lldiv *****************
  6281 ;; Defined at:
  6282 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;  divisor         4   12[BANK3 ] unsigned long 
  6285 ;;  dividend        4   16[BANK3 ] unsigned long 
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;  quotient        4   21[BANK3 ] unsigned long 
  6288 ;;  counter         1   25[BANK3 ] unsigned char 
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  4   12[BANK3 ] unsigned long 
  6291 ;; Registers used:
  6292 ;;		wreg, status,2, status,0
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6298 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0
  6299 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0
  6300 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  6301 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0
  6302 ;;Total ram usage:       14 bytes
  6303 ;; Hardware stack levels used:    1
  6304 ;; Hardware stack levels required when called:   10
  6305 ;; This function calls:
  6306 ;;		Nothing
  6307 ;; This function is called by:
  6308 ;;		_main_SetDcDcRegulator
  6309 ;;		_main_CommunicationHandler
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           
  6314                           ;psect for function ___lldiv
  6315  1283                     ___lldiv:	
  6316                           
  6317                           ;incstack = 0
  6318                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6319  1283  3000               	movlw	0
  6320  1284  0023               	movlb	3	; select bank3
  6321  1285  00B8               	movwf	(___lldiv@quotient+3)^(0+384)
  6322  1286  3000               	movlw	0
  6323  1287  00B7               	movwf	(___lldiv@quotient+2)^(0+384)
  6324  1288  3000               	movlw	0
  6325  1289  00B6               	movwf	(___lldiv@quotient+1)^(0+384)
  6326  128A  3000               	movlw	0
  6327  128B  00B5               	movwf	___lldiv@quotient^(0+384)
  6328  128C  082F               	movf	(___lldiv@divisor+3)^(0+384),w
  6329  128D  042E               	iorwf	(___lldiv@divisor+2)^(0+384),w
  6330  128E  042D               	iorwf	(___lldiv@divisor+1)^(0+384),w
  6331  128F  042C               	iorwf	___lldiv@divisor^(0+384),w
  6332  1290  1903               	skipnz
  6333  1291  2ACD               	goto	l4871
  6334  1292  01B9               	clrf	___lldiv@counter^(0+384)
  6335  1293  0AB9               	incf	___lldiv@counter^(0+384),f
  6336  1294                     l4857:	
  6337  1294  1BAF               	btfsc	(___lldiv@divisor+3)^(0+384),7
  6338  1295  2AA2               	goto	l4859
  6339  1296  3001               	movlw	1
  6340  1297                     u4365:	
  6341  1297  35AC               	lslf	___lldiv@divisor^(0+384),f
  6342  1298  0DAD               	rlf	(___lldiv@divisor+1)^(0+384),f
  6343  1299  0DAE               	rlf	(___lldiv@divisor+2)^(0+384),f
  6344  129A  0DAF               	rlf	(___lldiv@divisor+3)^(0+384),f
  6345  129B  0B89               	decfsz	9,f
  6346  129C  2A97               	goto	u4365
  6347  129D  3001               	movlw	1
  6348  129E  00B4               	movwf	??___lldiv^(0+384)
  6349  129F  0834               	movf	??___lldiv^(0+384),w
  6350  12A0  07B9               	addwf	___lldiv@counter^(0+384),f
  6351  12A1  2A94               	goto	l4857
  6352  12A2                     l4859:	
  6353  12A2  3001               	movlw	1
  6354  12A3                     u4385:	
  6355  12A3  35B5               	lslf	___lldiv@quotient^(0+384),f
  6356  12A4  0DB6               	rlf	(___lldiv@quotient+1)^(0+384),f
  6357  12A5  0DB7               	rlf	(___lldiv@quotient+2)^(0+384),f
  6358  12A6  0DB8               	rlf	(___lldiv@quotient+3)^(0+384),f
  6359  12A7  0B89               	decfsz	9,f
  6360  12A8  2AA3               	goto	u4385
  6361  12A9  082F               	movf	(___lldiv@divisor+3)^(0+384),w
  6362  12AA  0233               	subwf	(___lldiv@dividend+3)^(0+384),w
  6363  12AB  1D03               	skipz
  6364  12AC  2AB7               	goto	u4395
  6365  12AD  082E               	movf	(___lldiv@divisor+2)^(0+384),w
  6366  12AE  0232               	subwf	(___lldiv@dividend+2)^(0+384),w
  6367  12AF  1D03               	skipz
  6368  12B0  2AB7               	goto	u4395
  6369  12B1  082D               	movf	(___lldiv@divisor+1)^(0+384),w
  6370  12B2  0231               	subwf	(___lldiv@dividend+1)^(0+384),w
  6371  12B3  1D03               	skipz
  6372  12B4  2AB7               	goto	u4395
  6373  12B5  082C               	movf	___lldiv@divisor^(0+384),w
  6374  12B6  0230               	subwf	___lldiv@dividend^(0+384),w
  6375  12B7                     u4395:	
  6376  12B7  1C03               	skipc
  6377  12B8  2AC2               	goto	l4867
  6378  12B9  082C               	movf	___lldiv@divisor^(0+384),w
  6379  12BA  02B0               	subwf	___lldiv@dividend^(0+384),f
  6380  12BB  082D               	movf	(___lldiv@divisor+1)^(0+384),w
  6381  12BC  3BB1               	subwfb	(___lldiv@dividend+1)^(0+384),f
  6382  12BD  082E               	movf	(___lldiv@divisor+2)^(0+384),w
  6383  12BE  3BB2               	subwfb	(___lldiv@dividend+2)^(0+384),f
  6384  12BF  082F               	movf	(___lldiv@divisor+3)^(0+384),w
  6385  12C0  3BB3               	subwfb	(___lldiv@dividend+3)^(0+384),f
  6386  12C1  1435               	bsf	___lldiv@quotient^(0+384),0
  6387  12C2                     l4867:	
  6388  12C2  3001               	movlw	1
  6389  12C3                     u4405:	
  6390  12C3  36AF               	lsrf	(___lldiv@divisor+3)^(0+384),f
  6391  12C4  0CAE               	rrf	(___lldiv@divisor+2)^(0+384),f
  6392  12C5  0CAD               	rrf	(___lldiv@divisor+1)^(0+384),f
  6393  12C6  0CAC               	rrf	___lldiv@divisor^(0+384),f
  6394  12C7  0B89               	decfsz	9,f
  6395  12C8  2AC3               	goto	u4405
  6396  12C9  3001               	movlw	1
  6397  12CA  02B9               	subwf	___lldiv@counter^(0+384),f
  6398  12CB  1D03               	btfss	3,2
  6399  12CC  2AA2               	goto	l4859
  6400  12CD                     l4871:	
  6401  12CD  0838               	movf	(___lldiv@quotient+3)^(0+384),w
  6402  12CE  00AF               	movwf	(?___lldiv+3)^(0+384)
  6403  12CF  0837               	movf	(___lldiv@quotient+2)^(0+384),w
  6404  12D0  00AE               	movwf	(?___lldiv+2)^(0+384)
  6405  12D1  0836               	movf	(___lldiv@quotient+1)^(0+384),w
  6406  12D2  00AD               	movwf	(?___lldiv+1)^(0+384)
  6407  12D3  0835               	movf	___lldiv@quotient^(0+384),w
  6408  12D4  00AC               	movwf	?___lldiv^(0+384)
  6409  12D5  0008               	return
  6410  12D6                     __end_of___lldiv:	
  6411                           
  6412                           	psect	text12
  6413  12D6                     __ptext12:	
  6414 ;; *************** function _getsUSBUSART *****************
  6415 ;; Defined at:
  6416 ;;		line 485 in file "usb/core/usb_device_cdc.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;  buffer          1    wreg     PTR unsigned char 
  6419 ;;		 -> readBuffer(64), 
  6420 ;;  len             1   11[BANK3 ] unsigned char 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;  buffer          1   14[BANK3 ] PTR unsigned char 
  6423 ;;		 -> readBuffer(64), 
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  1    wreg      unsigned char 
  6426 ;; Registers used:
  6427 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6433 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  6434 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  6435 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6436 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  6437 ;;Total ram usage:        4 bytes
  6438 ;; Hardware stack levels used:    1
  6439 ;; Hardware stack levels required when called:   11
  6440 ;; This function calls:
  6441 ;;		_USBTransferOnePacket
  6442 ;; This function is called by:
  6443 ;;		_main_CommunicationHandler
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           
  6448                           ;psect for function _getsUSBUSART
  6449  12D6                     _getsUSBUSART:	
  6450                           
  6451                           ;incstack = 0
  6452                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6453                           ;getsUSBUSART@buffer stored from wreg
  6454  12D6  0023               	movlb	3	; select bank3
  6455  12D7  00AE               	movwf	getsUSBUSART@buffer^(0+384)
  6456                           
  6457                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  6458  12D8  01E2               	clrf	_cdc_rx_len^(0+384)
  6459                           
  6460                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  6461  12D9  0024               	movlb	4	; select bank4
  6462  12DA  082B               	movf	_CDCDataOutHandle^(0+512),w
  6463  12DB  042C               	iorwf	(_CDCDataOutHandle+1)^(0+512),w
  6464  12DC  1903               	btfsc	3,2
  6465  12DD  2AE4               	goto	l5031
  6466  12DE  082B               	movf	_CDCDataOutHandle^(0+512),w
  6467  12DF  0086               	movwf	6
  6468  12E0  082C               	movf	(_CDCDataOutHandle+1)^(0+512),w
  6469  12E1  0087               	movwf	7
  6470  12E2  1B81               	btfsc	1,7
  6471  12E3  2B27               	goto	l5045
  6472  12E4                     l5031:	
  6473                           
  6474                           ;usb_device_cdc.c: 490: {
  6475                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  6476  12E4  082B               	movf	_CDCDataOutHandle^(0+512),w
  6477  12E5  0086               	movwf	6
  6478  12E6  082C               	movf	(_CDCDataOutHandle+1)^(0+512),w
  6479  12E7  0087               	movwf	7
  6480  12E8  3141               	addfsr 1,1
  6481  12E9  0023               	movlb	3	; select bank3
  6482  12EA  082B               	movf	getsUSBUSART@len^(0+384),w
  6483  12EB  0201               	subwf	1,w
  6484  12EC  1803               	skipnc
  6485  12ED  2AF9               	goto	l5035
  6486                           
  6487                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  6488  12EE  0024               	movlb	4	; select bank4
  6489  12EF  082B               	movf	_CDCDataOutHandle^(0+512),w
  6490  12F0  0086               	movwf	6
  6491  12F1  082C               	movf	(_CDCDataOutHandle+1)^(0+512),w
  6492  12F2  0087               	movwf	7
  6493  12F3  3141               	addfsr 1,1
  6494  12F4  0801               	movf	1,w
  6495  12F5  0023               	movlb	3	; select bank3
  6496  12F6  00AC               	movwf	??_getsUSBUSART^(0+384)
  6497  12F7  082C               	movf	??_getsUSBUSART^(0+384),w
  6498  12F8  00AB               	movwf	getsUSBUSART@len^(0+384)
  6499  12F9                     l5035:	
  6500                           
  6501                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  6502  12F9  01E2               	clrf	_cdc_rx_len^(0+384)
  6503  12FA                     l5041:	
  6504  12FA  082B               	movf	getsUSBUSART@len^(0+384),w
  6505  12FB  0262               	subwf	_cdc_rx_len^(0+384),w
  6506  12FC  1803               	btfsc	3,0
  6507  12FD  2B13               	goto	l5043
  6508                           
  6509                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  6510  12FE  0862               	movf	_cdc_rx_len^(0+384),w
  6511  12FF  3E20               	addlw	32
  6512  1300  0086               	movwf	6
  6513  1301  3001               	movlw	1	; select bank2/3
  6514  1302  0087               	movwf	7
  6515  1303  0801               	movf	1,w
  6516  1304  00AC               	movwf	??_getsUSBUSART^(0+384)
  6517  1305  0862               	movf	_cdc_rx_len^(0+384),w
  6518  1306  072E               	addwf	getsUSBUSART@buffer^(0+384),w
  6519  1307  00AD               	movwf	(??_getsUSBUSART+1)^(0+384)
  6520  1308  082D               	movf	(??_getsUSBUSART+1)^(0+384),w
  6521  1309  0086               	movwf	6
  6522  130A  3005               	movlw	5	; select bank10/11
  6523  130B  0087               	movwf	7
  6524  130C  082C               	movf	??_getsUSBUSART^(0+384),w
  6525  130D  0081               	movwf	1
  6526  130E  3001               	movlw	1
  6527  130F  00AC               	movwf	??_getsUSBUSART^(0+384)
  6528  1310  082C               	movf	??_getsUSBUSART^(0+384),w
  6529  1311  07E2               	addwf	_cdc_rx_len^(0+384),f
  6530  1312  2AFA               	goto	l5041
  6531  1313                     l5043:	
  6532                           
  6533                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  6534  1313  01A0               	clrf	USBTransferOnePacket@dir^(0+384)
  6535  1314  3020               	movlw	32
  6536  1315  00A1               	movwf	USBTransferOnePacket@data^(0+384)
  6537  1316  3001               	movlw	1
  6538  1317  00A2               	movwf	(USBTransferOnePacket@data+1)^(0+384)
  6539  1318  3040               	movlw	64
  6540  1319  00AC               	movwf	??_getsUSBUSART^(0+384)
  6541  131A  082C               	movf	??_getsUSBUSART^(0+384),w
  6542  131B  00A3               	movwf	USBTransferOnePacket@len^(0+384)
  6543  131C  3002               	movlw	2
  6544  131D  3189  217C         	fcall	_USBTransferOnePacket
  6545  131F  0023               	movlb	3	; select bank3
  6546  1320  0821               	movf	(?_USBTransferOnePacket+1)^(0+384),w
  6547  1321  0024               	movlb	4	; select bank4
  6548  1322  00AC               	movwf	(_CDCDataOutHandle+1)^(0+512)
  6549  1323  0023               	movlb	3	; select bank3
  6550  1324  0820               	movf	?_USBTransferOnePacket^(0+384),w
  6551  1325  0024               	movlb	4	; select bank4
  6552  1326  00AB               	movwf	_CDCDataOutHandle^(0+512)
  6553  1327                     l5045:	
  6554                           
  6555                           ;usb_device_cdc.c: 510: }
  6556                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  6557  1327  0023               	movlb	3	; select bank3
  6558  1328  0862               	movf	_cdc_rx_len^(0+384),w
  6559  1329  0008               	return
  6560  132A                     __end_of_getsUSBUSART:	
  6561                           
  6562                           	psect	text13
  6563  1617                     __ptext13:	
  6564 ;; *************** function _atoi *****************
  6565 ;; Defined at:
  6566 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\atoi.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  s               1    wreg     PTR const unsigned char 
  6569 ;;		 -> cmdRxBuffer(64), 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  s               1   13[BANK3 ] PTR const unsigned char 
  6572 ;;		 -> cmdRxBuffer(64), 
  6573 ;;  a               2   11[BANK3 ] int 
  6574 ;;  sign            1   10[BANK3 ] unsigned char 
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  2    6[BANK3 ] int 
  6577 ;; Registers used:
  6578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6584 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6585 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  6586 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6587 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0
  6588 ;;Total ram usage:        8 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; Hardware stack levels required when called:   11
  6591 ;; This function calls:
  6592 ;;		___wmul
  6593 ;;		_isdigit
  6594 ;; This function is called by:
  6595 ;;		_main_CommunicationHandler
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           
  6600                           ;psect for function _atoi
  6601  1617                     _atoi:	
  6602                           
  6603                           ;incstack = 0
  6604                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6605                           ;atoi@s stored from wreg
  6606  1617  0023               	movlb	3	; select bank3
  6607  1618  00AD               	movwf	atoi@s^(0+384)
  6608  1619                     l5305:	
  6609  1619  082D               	movf	atoi@s^(0+384),w
  6610  161A  0086               	movwf	6
  6611  161B  3003               	movlw	3	; select bank6/7
  6612  161C  0087               	movwf	7
  6613  161D  3020               	movlw	32
  6614  161E  0601               	xorwf	1,w
  6615  161F  1D03               	btfss	3,2
  6616  1620  2E26               	goto	l5307
  6617  1621                     l5303:	
  6618  1621  3001               	movlw	1
  6619  1622  00A8               	movwf	??_atoi^(0+384)
  6620  1623  0828               	movf	??_atoi^(0+384),w
  6621  1624  07AD               	addwf	atoi@s^(0+384),f
  6622  1625  2E19               	goto	l5305
  6623  1626                     l5307:	
  6624  1626  082D               	movf	atoi@s^(0+384),w
  6625  1627  0086               	movwf	6
  6626  1628  3003               	movlw	3	; select bank6/7
  6627  1629  0087               	movwf	7
  6628  162A  3009               	movlw	9
  6629  162B  0601               	xorwf	1,w
  6630  162C  1903               	btfsc	3,2
  6631  162D  2E21               	goto	l5303
  6632  162E  01AB               	clrf	atoi@a^(0+384)
  6633  162F  01AC               	clrf	(atoi@a+1)^(0+384)
  6634  1630  01AA               	clrf	atoi@sign^(0+384)
  6635  1631  082D               	movf	atoi@s^(0+384),w
  6636  1632  0086               	movwf	6
  6637  1633  3003               	movlw	3	; select bank6/7
  6638  1634  0087               	movwf	7
  6639  1635  302D               	movlw	45
  6640  1636  0601               	xorwf	1,w
  6641  1637  1D03               	btfss	3,2
  6642  1638  2E3E               	goto	l5315
  6643  1639  3001               	movlw	1
  6644  163A  00A8               	movwf	??_atoi^(0+384)
  6645  163B  0828               	movf	??_atoi^(0+384),w
  6646  163C  07AA               	addwf	atoi@sign^(0+384),f
  6647  163D  2E46               	goto	l5321
  6648  163E                     l5315:	
  6649  163E  082D               	movf	atoi@s^(0+384),w
  6650  163F  0086               	movwf	6
  6651  1640  3003               	movlw	3	; select bank6/7
  6652  1641  0087               	movwf	7
  6653  1642  302B               	movlw	43
  6654  1643  0601               	xorwf	1,w
  6655  1644  1D03               	btfss	3,2
  6656  1645  2E4A               	goto	l5323
  6657  1646                     l5321:	
  6658  1646  3001               	movlw	1
  6659  1647  00A8               	movwf	??_atoi^(0+384)
  6660  1648  0828               	movf	??_atoi^(0+384),w
  6661  1649  07AD               	addwf	atoi@s^(0+384),f
  6662  164A                     l5323:	
  6663  164A  082D               	movf	atoi@s^(0+384),w
  6664  164B  0086               	movwf	6
  6665  164C  3003               	movlw	3	; select bank6/7
  6666  164D  0087               	movwf	7
  6667  164E  0801               	movf	1,w
  6668  164F  319D  25E3  3196   	fcall	_isdigit
  6669  1652  1C03               	btfss	3,0
  6670  1653  2E73               	goto	l5325
  6671  1654  0023               	movlb	3	; select bank3
  6672  1655  082C               	movf	(atoi@a+1)^(0+384),w
  6673  1656  00A1               	movwf	(___wmul@multiplier+1)^(0+384)
  6674  1657  082B               	movf	atoi@a^(0+384),w
  6675  1658  00A0               	movwf	___wmul@multiplier^(0+384)
  6676  1659  300A               	movlw	10
  6677  165A  00A2               	movwf	___wmul@multiplicand^(0+384)
  6678  165B  3000               	movlw	0
  6679  165C  00A3               	movwf	(___wmul@multiplicand^(0+384)+1)
  6680  165D  319F  270A  3196   	fcall	___wmul
  6681  1660  0023               	movlb	3	; select bank3
  6682  1661  082D               	movf	atoi@s^(0+384),w
  6683  1662  0086               	movwf	6
  6684  1663  3003               	movlw	3	; select bank6/7
  6685  1664  0087               	movwf	7
  6686  1665  0801               	movf	1,w
  6687  1666  0720               	addwf	?___wmul^(0+384),w
  6688  1667  00A8               	movwf	??_atoi^(0+384)
  6689  1668  0821               	movf	(?___wmul+1)^(0+384),w
  6690  1669  1803               	skipnc
  6691  166A  0A21               	incf	(?___wmul+1)^(0+384),w
  6692  166B  00A9               	movwf	(??_atoi^(0+384)+1)
  6693  166C  0828               	movf	??_atoi^(0+384),w
  6694  166D  3ED0               	addlw	208
  6695  166E  00AB               	movwf	atoi@a^(0+384)
  6696  166F  30FF               	movlw	255
  6697  1670  3D29               	addwfc	(??_atoi+1)^(0+384),w
  6698  1671  00AC               	movwf	(atoi@a+1)^(0+384)
  6699  1672  2E46               	goto	l5321
  6700  1673                     l5325:	
  6701  1673  0023               	movlb	3	; select bank3
  6702  1674  082A               	movf	atoi@sign^(0+384),w
  6703  1675  1903               	btfsc	3,2
  6704  1676  2E83               	goto	l5331
  6705  1677  092B               	comf	atoi@a^(0+384),w
  6706  1678  00A8               	movwf	??_atoi^(0+384)
  6707  1679  092C               	comf	(atoi@a+1)^(0+384),w
  6708  167A  00A9               	movwf	(??_atoi^(0+384)+1)
  6709  167B  0AA8               	incf	??_atoi^(0+384),f
  6710  167C  1903               	skipnz
  6711  167D  0AA9               	incf	(??_atoi^(0+384)+1),f
  6712  167E  0828               	movf	??_atoi^(0+384),w
  6713  167F  00A6               	movwf	?_atoi^(0+384)
  6714  1680  0829               	movf	(??_atoi+1)^(0+384),w
  6715  1681  00A7               	movwf	(?_atoi+1)^(0+384)
  6716  1682  0008               	return
  6717  1683                     l5331:	
  6718  1683  082C               	movf	(atoi@a+1)^(0+384),w
  6719  1684  00A7               	movwf	(?_atoi+1)^(0+384)
  6720  1685  082B               	movf	atoi@a^(0+384),w
  6721  1686  00A6               	movwf	?_atoi^(0+384)
  6722  1687  0008               	return
  6723  1688                     __end_of_atoi:	
  6724                           
  6725                           	psect	text14
  6726  1DE3                     __ptext14:	
  6727 ;; *************** function _isdigit *****************
  6728 ;; Defined at:
  6729 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;  c               1    wreg     unsigned char 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  c               1    1[BANK3 ] unsigned char 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;		None               void
  6736 ;; Registers used:
  6737 ;;		wreg, status,2, status,0
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6744 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6746 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6747 ;;Total ram usage:        2 bytes
  6748 ;; Hardware stack levels used:    1
  6749 ;; Hardware stack levels required when called:   10
  6750 ;; This function calls:
  6751 ;;		Nothing
  6752 ;; This function is called by:
  6753 ;;		_atoi
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           
  6758                           ;psect for function _isdigit
  6759  1DE3                     _isdigit:	
  6760                           
  6761                           ;incstack = 0
  6762                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6763                           ;isdigit@c stored from wreg
  6764  1DE3  0023               	movlb	3	; select bank3
  6765  1DE4  00A1               	movwf	isdigit@c^(0+384)
  6766  1DE5  01A0               	clrf	_isdigit$3010^(0+384)
  6767  1DE6  303A               	movlw	58
  6768  1DE7  0221               	subwf	isdigit@c^(0+384),w
  6769  1DE8  1803               	skipnc
  6770  1DE9  2DF0               	goto	l4847
  6771  1DEA  3030               	movlw	48
  6772  1DEB  0221               	subwf	isdigit@c^(0+384),w
  6773  1DEC  1C03               	skipc
  6774  1DED  2DF0               	goto	l4847
  6775  1DEE  01A0               	clrf	_isdigit$3010^(0+384)
  6776  1DEF  0AA0               	incf	_isdigit$3010^(0+384),f
  6777  1DF0                     l4847:	
  6778  1DF0  0C20               	rrf	_isdigit$3010^(0+384),w
  6779  1DF1  0008               	return
  6780  1DF2                     __end_of_isdigit:	
  6781                           
  6782                           	psect	text15
  6783  1F0A                     __ptext15:	
  6784 ;; *************** function ___wmul *****************
  6785 ;; Defined at:
  6786 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  multiplier      2    0[BANK3 ] unsigned int 
  6789 ;;  multiplicand    2    2[BANK3 ] unsigned int 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  product         2    4[BANK3 ] unsigned int 
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  2    0[BANK3 ] unsigned int 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6801 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  6802 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6804 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0
  6805 ;;Total ram usage:        6 bytes
  6806 ;; Hardware stack levels used:    1
  6807 ;; Hardware stack levels required when called:   10
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		_my_uitoa
  6812 ;;		_main_CommunicationHandler
  6813 ;;		_atoi
  6814 ;; This function uses a non-reentrant model
  6815 ;;
  6816                           
  6817                           
  6818                           ;psect for function ___wmul
  6819  1F0A                     ___wmul:	
  6820                           
  6821                           ;incstack = 0
  6822                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6823  1F0A  0023               	movlb	3	; select bank3
  6824  1F0B  01A4               	clrf	___wmul@product^(0+384)
  6825  1F0C  01A5               	clrf	(___wmul@product+1)^(0+384)
  6826  1F0D                     l4827:	
  6827  1F0D  1C20               	btfss	___wmul@multiplier^(0+384),0
  6828  1F0E  2F13               	goto	l1213
  6829  1F0F  0822               	movf	___wmul@multiplicand^(0+384),w
  6830  1F10  07A4               	addwf	___wmul@product^(0+384),f
  6831  1F11  0823               	movf	(___wmul@multiplicand+1)^(0+384),w
  6832  1F12  3DA5               	addwfc	(___wmul@product+1)^(0+384),f
  6833  1F13                     l1213:	
  6834  1F13  3001               	movlw	1
  6835  1F14                     u4305:	
  6836  1F14  35A2               	lslf	___wmul@multiplicand^(0+384),f
  6837  1F15  0DA3               	rlf	(___wmul@multiplicand+1)^(0+384),f
  6838  1F16  0B89               	decfsz	9,f
  6839  1F17  2F14               	goto	u4305
  6840  1F18  3001               	movlw	1
  6841  1F19                     u4315:	
  6842  1F19  36A1               	lsrf	(___wmul@multiplier+1)^(0+384),f
  6843  1F1A  0CA0               	rrf	___wmul@multiplier^(0+384),f
  6844  1F1B  0B89               	decfsz	9,f
  6845  1F1C  2F19               	goto	u4315
  6846  1F1D  0820               	movf	___wmul@multiplier^(0+384),w
  6847  1F1E  0421               	iorwf	(___wmul@multiplier+1)^(0+384),w
  6848  1F1F  1D03               	btfss	3,2
  6849  1F20  2F0D               	goto	l4827
  6850  1F21  0825               	movf	(___wmul@product+1)^(0+384),w
  6851  1F22  00A1               	movwf	(?___wmul+1)^(0+384)
  6852  1F23  0824               	movf	___wmul@product^(0+384),w
  6853  1F24  00A0               	movwf	?___wmul^(0+384)
  6854  1F25  0008               	return
  6855  1F26                     __end_of___wmul:	
  6856                           
  6857                           	psect	text16
  6858  1DAC                     __ptext16:	
  6859 ;; *************** function _TMR1_Reload *****************
  6860 ;; Defined at:
  6861 ;;		line 132 in file "mcc_generated_files/tmr1.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;		None
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;		None
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  1    wreg      void 
  6868 ;; Registers used:
  6869 ;;		wreg, status,2
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6879 ;;Total ram usage:        0 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; Hardware stack levels required when called:   10
  6882 ;; This function calls:
  6883 ;;		Nothing
  6884 ;; This function is called by:
  6885 ;;		_main_CommunicationHandler
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889                           
  6890                           ;psect for function _TMR1_Reload
  6891  1DAC                     _TMR1_Reload:	
  6892                           
  6893                           ;tmr1.c: 135: TMR1H = (timer1ReloadVal >> 8);
  6894                           
  6895                           ;incstack = 0
  6896                           ; Regs used in _TMR1_Reload: [wreg+status,2]
  6897  1DAC  0023               	movlb	3	; select bank3
  6898  1DAD  085D               	movf	(_timer1ReloadVal+1)^(0+384),w	;volatile
  6899  1DAE  0020               	movlb	0	; select bank0
  6900  1DAF  0097               	movwf	23	;volatile
  6901                           
  6902                           ;tmr1.c: 136: TMR1L = timer1ReloadVal;
  6903  1DB0  0023               	movlb	3	; select bank3
  6904  1DB1  085C               	movf	_timer1ReloadVal^(0+384),w	;volatile
  6905  1DB2  0020               	movlb	0	; select bank0
  6906  1DB3  0096               	movwf	22	;volatile
  6907  1DB4  0008               	return
  6908  1DB5                     __end_of_TMR1_Reload:	
  6909                           
  6910                           	psect	text17
  6911  0D98                     __ptext17:	
  6912 ;; *************** function _CDCTxService *****************
  6913 ;; Defined at:
  6914 ;;		line 836 in file "usb/core/usb_device_cdc.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;		None
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;  byte_to_send    1   13[BANK3 ] unsigned char 
  6919 ;;  i               1   12[BANK3 ] unsigned char 
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  1    wreg      void 
  6922 ;; Registers used:
  6923 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  6929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  6930 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0
  6931 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  6932 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0
  6933 ;;Total ram usage:        3 bytes
  6934 ;; Hardware stack levels used:    1
  6935 ;; Hardware stack levels required when called:   11
  6936 ;; This function calls:
  6937 ;;		_USBTransferOnePacket
  6938 ;; This function is called by:
  6939 ;;		_main_CommunicationHandler
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           
  6944                           ;psect for function _CDCTxService
  6945  0D98                     _CDCTxService:	
  6946                           
  6947                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  6948                           ;usb_device_cdc.c: 839: uint8_t i;
  6949                           ;usb_device_cdc.c: 841: ;
  6950                           ;usb_device_cdc.c: 843: {};
  6951                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  6952                           
  6953                           ;incstack = 0
  6954                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6955  0D98  0024               	movlb	4	; select bank4
  6956  0D99  0827               	movf	_CDCDataInHandle^(0+512),w
  6957  0D9A  0428               	iorwf	(_CDCDataInHandle+1)^(0+512),w
  6958  0D9B  1903               	btfsc	3,2
  6959  0D9C  2DA3               	goto	l5063
  6960  0D9D  0827               	movf	_CDCDataInHandle^(0+512),w
  6961  0D9E  0086               	movwf	6
  6962  0D9F  0828               	movf	(_CDCDataInHandle+1)^(0+512),w
  6963  0DA0  0087               	movwf	7
  6964  0DA1  1B81               	btfsc	1,7
  6965  0DA2  0008               	return
  6966  0DA3                     l5063:	
  6967                           ;usb_device_cdc.c: 846: {
  6968                           ;usb_device_cdc.c: 847: ;
  6969                           ;usb_device_cdc.c: 848: return;
  6970                           
  6971                           
  6972                           ;usb_device_cdc.c: 849: }
  6973                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  6974  0DA3  3003               	movlw	3
  6975  0DA4  0023               	movlb	3	; select bank3
  6976  0DA5  0664               	xorwf	_cdc_trf_state^(0+384),w
  6977  0DA6  1903               	btfsc	3,2
  6978                           
  6979                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  6980  0DA7  01E4               	clrf	_cdc_trf_state^(0+384)
  6981                           
  6982                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  6983  0DA8  0864               	movf	_cdc_trf_state^(0+384),w
  6984  0DA9  1903               	btfsc	3,2
  6985  0DAA  0008               	return
  6986                           
  6987                           ;usb_device_cdc.c: 866: }
  6988                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  6989                           
  6990                           ;usb_device_cdc.c: 863: {
  6991                           ;usb_device_cdc.c: 864: ;
  6992                           ;usb_device_cdc.c: 865: return;
  6993  0DAB  3002               	movlw	2
  6994  0DAC  0664               	xorwf	_cdc_trf_state^(0+384),w
  6995  0DAD  1D03               	btfss	3,2
  6996  0DAE  2DC7               	goto	l5077
  6997                           
  6998                           ;usb_device_cdc.c: 872: {
  6999                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  7000  0DAF  01A0               	clrf	USBTransferOnePacket@dir^(0+384)
  7001  0DB0  0AA0               	incf	USBTransferOnePacket@dir^(0+384),f
  7002  0DB1  3000               	movlw	0
  7003  0DB2  00A1               	movwf	USBTransferOnePacket@data^(0+384)
  7004  0DB3  3000               	movlw	0
  7005  0DB4  00A2               	movwf	(USBTransferOnePacket@data+1)^(0+384)
  7006  0DB5  01A3               	clrf	USBTransferOnePacket@len^(0+384)
  7007  0DB6  3002               	movlw	2
  7008  0DB7  3189  217C         	fcall	_USBTransferOnePacket
  7009  0DB9  0023               	movlb	3	; select bank3
  7010  0DBA  0821               	movf	(?_USBTransferOnePacket+1)^(0+384),w
  7011  0DBB  0024               	movlb	4	; select bank4
  7012  0DBC  00A8               	movwf	(_CDCDataInHandle+1)^(0+512)
  7013  0DBD  0023               	movlb	3	; select bank3
  7014  0DBE  0820               	movf	?_USBTransferOnePacket^(0+384),w
  7015  0DBF  0024               	movlb	4	; select bank4
  7016  0DC0  00A7               	movwf	_CDCDataInHandle^(0+512)
  7017                           
  7018                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  7019  0DC1  3003               	movlw	3
  7020  0DC2  0023               	movlb	3	; select bank3
  7021  0DC3  00AB               	movwf	??_CDCTxService^(0+384)
  7022  0DC4  082B               	movf	??_CDCTxService^(0+384),w
  7023  0DC5  00E4               	movwf	_cdc_trf_state^(0+384)
  7024                           
  7025                           ;usb_device_cdc.c: 876: }
  7026  0DC6  0008               	return
  7027  0DC7                     l5077:	
  7028                           
  7029                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  7030  0DC7  0364               	decf	_cdc_trf_state^(0+384),w
  7031  0DC8  1D03               	btfss	3,2
  7032  0DC9  0008               	return
  7033                           
  7034                           ;usb_device_cdc.c: 878: {
  7035                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  7036  0DCA  3041               	movlw	65
  7037  0DCB  0266               	subwf	_cdc_tx_len^(0+384),w
  7038  0DCC  1C03               	skipc
  7039  0DCD  2DD0               	goto	l5083
  7040                           
  7041                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  7042  0DCE  3040               	movlw	64
  7043  0DCF  2DD1               	goto	L7
  7044  0DD0                     l5083:	
  7045                           
  7046                           ;usb_device_cdc.c: 884: else
  7047                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  7048  0DD0  0866               	movf	_cdc_tx_len^(0+384),w
  7049  0DD1                     L7:	
  7050  0DD1  00AB               	movwf	??_CDCTxService^(0+384)
  7051  0DD2  082B               	movf	??_CDCTxService^(0+384),w
  7052  0DD3  00AD               	movwf	CDCTxService@byte_to_send^(0+384)
  7053                           
  7054                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  7055  0DD4  032D               	decf	CDCTxService@byte_to_send^(0+384),w
  7056  0DD5  3AFF               	xorlw	255
  7057  0DD6  0766               	addwf	_cdc_tx_len^(0+384),w
  7058  0DD7  00AB               	movwf	??_CDCTxService^(0+384)
  7059  0DD8  082B               	movf	??_CDCTxService^(0+384),w
  7060  0DD9  00E6               	movwf	_cdc_tx_len^(0+384)
  7061                           
  7062                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  7063  0DDA  30A0               	movlw	160
  7064  0DDB  00AB               	movwf	??_CDCTxService^(0+384)
  7065  0DDC  082B               	movf	??_CDCTxService^(0+384),w
  7066  0DDD  0024               	movlb	4	; select bank4
  7067  0DDE  00BB               	movwf	_pCDCDst^(0+512)
  7068                           
  7069                           ;usb_device_cdc.c: 894: i = byte_to_send;
  7070  0DDF  0023               	movlb	3	; select bank3
  7071  0DE0  082D               	movf	CDCTxService@byte_to_send^(0+384),w
  7072  0DE1  00AB               	movwf	??_CDCTxService^(0+384)
  7073  0DE2  082B               	movf	??_CDCTxService^(0+384),w
  7074  0DE3  00AC               	movwf	CDCTxService@i^(0+384)
  7075                           
  7076                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  7077  0DE4  0024               	movlb	4	; select bank4
  7078  0DE5  0855               	movf	_cdc_mem_type^(0+512),w
  7079  0DE6  1903               	btfsc	3,2
  7080  0DE7  2E04               	goto	l5103
  7081  0DE8  2E24               	goto	l5113
  7082  0DE9                     l5095:	
  7083                           ;usb_device_cdc.c: 896: {
  7084                           ;usb_device_cdc.c: 897: while(i)
  7085                           
  7086                           
  7087                           ;usb_device_cdc.c: 898: {
  7088                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  7089  0DE9  0024               	movlb	4	; select bank4
  7090  0DEA  083F               	movf	_pCDCSrc^(0+512),w
  7091  0DEB  0086               	movwf	6
  7092  0DEC  0840               	movf	(_pCDCSrc+1)^(0+512),w
  7093  0DED  0087               	movwf	7
  7094  0DEE  0801               	movf	1,w
  7095  0DEF  0023               	movlb	3	; select bank3
  7096  0DF0  00AB               	movwf	??_CDCTxService^(0+384)
  7097  0DF1  0024               	movlb	4	; select bank4
  7098  0DF2  083B               	movf	_pCDCDst^(0+512),w
  7099  0DF3  0086               	movwf	6
  7100  0DF4  0187               	clrf	7
  7101  0DF5  0023               	movlb	3	; select bank3
  7102  0DF6  082B               	movf	??_CDCTxService^(0+384),w
  7103  0DF7  0081               	movwf	1
  7104                           
  7105                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  7106  0DF8  3001               	movlw	1
  7107  0DF9  00AB               	movwf	??_CDCTxService^(0+384)
  7108  0DFA  082B               	movf	??_CDCTxService^(0+384),w
  7109  0DFB  0024               	movlb	4	; select bank4
  7110  0DFC  07BB               	addwf	_pCDCDst^(0+512),f
  7111                           
  7112                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  7113  0DFD  3001               	movlw	1
  7114  0DFE  07BF               	addwf	_pCDCSrc^(0+512),f
  7115  0DFF  3000               	movlw	0
  7116  0E00  3DC0               	addwfc	(_pCDCSrc+1)^(0+512),f
  7117                           
  7118                           ;usb_device_cdc.c: 902: i--;
  7119  0E01  3001               	movlw	1
  7120  0E02  0023               	movlb	3	; select bank3
  7121  0E03  02AC               	subwf	CDCTxService@i^(0+384),f
  7122  0E04                     l5103:	
  7123  0E04  0023               	movlb	3	; select bank3
  7124  0E05  082C               	movf	CDCTxService@i^(0+384),w
  7125  0E06  1903               	btfsc	3,2
  7126  0E07  2E28               	goto	l5115
  7127  0E08  2DE9               	goto	l5095
  7128  0E09                     l5105:	
  7129                           ;usb_device_cdc.c: 905: else
  7130                           ;usb_device_cdc.c: 906: {
  7131                           ;usb_device_cdc.c: 907: while(i)
  7132                           
  7133                           ;usb_device_cdc.c: 903: }
  7134                           ;usb_device_cdc.c: 904: }
  7135                           
  7136                           
  7137                           ;usb_device_cdc.c: 908: {
  7138                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  7139  0E09  0024               	movlb	4	; select bank4
  7140  0E0A  083F               	movf	_pCDCSrc^(0+512),w
  7141  0E0B  0086               	movwf	6
  7142  0E0C  0840               	movf	(_pCDCSrc+1)^(0+512),w
  7143  0E0D  0087               	movwf	7
  7144  0E0E  0801               	movf	1,w
  7145  0E0F  0023               	movlb	3	; select bank3
  7146  0E10  00AB               	movwf	??_CDCTxService^(0+384)
  7147  0E11  0024               	movlb	4	; select bank4
  7148  0E12  083B               	movf	_pCDCDst^(0+512),w
  7149  0E13  0086               	movwf	6
  7150  0E14  0187               	clrf	7
  7151  0E15  0023               	movlb	3	; select bank3
  7152  0E16  082B               	movf	??_CDCTxService^(0+384),w
  7153  0E17  0081               	movwf	1
  7154                           
  7155                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  7156  0E18  3001               	movlw	1
  7157  0E19  00AB               	movwf	??_CDCTxService^(0+384)
  7158  0E1A  082B               	movf	??_CDCTxService^(0+384),w
  7159  0E1B  0024               	movlb	4	; select bank4
  7160  0E1C  07BB               	addwf	_pCDCDst^(0+512),f
  7161                           
  7162                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  7163  0E1D  3001               	movlw	1
  7164  0E1E  07BF               	addwf	_pCDCSrc^(0+512),f
  7165  0E1F  3000               	movlw	0
  7166  0E20  3DC0               	addwfc	(_pCDCSrc+1)^(0+512),f
  7167                           
  7168                           ;usb_device_cdc.c: 912: i--;
  7169  0E21  3001               	movlw	1
  7170  0E22  0023               	movlb	3	; select bank3
  7171  0E23  02AC               	subwf	CDCTxService@i^(0+384),f
  7172  0E24                     l5113:	
  7173  0E24  0023               	movlb	3	; select bank3
  7174  0E25  082C               	movf	CDCTxService@i^(0+384),w
  7175  0E26  1D03               	btfss	3,2
  7176  0E27  2E09               	goto	l5105
  7177  0E28                     l5115:	
  7178                           
  7179                           ;usb_device_cdc.c: 913: }
  7180                           ;usb_device_cdc.c: 914: }
  7181                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  7182  0E28  0866               	movf	_cdc_tx_len^(0+384),w
  7183  0E29  1D03               	btfss	3,2
  7184  0E2A  2E35               	goto	l5123
  7185                           
  7186                           ;usb_device_cdc.c: 921: {
  7187                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  7188  0E2B  3040               	movlw	64
  7189  0E2C  062D               	xorwf	CDCTxService@byte_to_send^(0+384),w
  7190  0E2D  1D03               	btfss	3,2
  7191  0E2E  2E31               	goto	l5121
  7192                           
  7193                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  7194  0E2F  3002               	movlw	2
  7195  0E30  2E32               	goto	L8
  7196  0E31                     l5121:	
  7197                           
  7198                           ;usb_device_cdc.c: 924: else
  7199                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  7200  0E31  3003               	movlw	3
  7201  0E32                     L8:	
  7202  0E32  00AB               	movwf	??_CDCTxService^(0+384)
  7203  0E33  082B               	movf	??_CDCTxService^(0+384),w
  7204  0E34  00E4               	movwf	_cdc_trf_state^(0+384)
  7205  0E35                     l5123:	
  7206                           
  7207                           ;usb_device_cdc.c: 926: }
  7208                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  7209  0E35  01A0               	clrf	USBTransferOnePacket@dir^(0+384)
  7210  0E36  0AA0               	incf	USBTransferOnePacket@dir^(0+384),f
  7211  0E37  30A0               	movlw	160
  7212  0E38  00A1               	movwf	USBTransferOnePacket@data^(0+384)
  7213  0E39  3000               	movlw	0
  7214  0E3A  00A2               	movwf	(USBTransferOnePacket@data+1)^(0+384)
  7215  0E3B  082D               	movf	CDCTxService@byte_to_send^(0+384),w
  7216  0E3C  00AB               	movwf	??_CDCTxService^(0+384)
  7217  0E3D  082B               	movf	??_CDCTxService^(0+384),w
  7218  0E3E  00A3               	movwf	USBTransferOnePacket@len^(0+384)
  7219  0E3F  3002               	movlw	2
  7220  0E40  3189  217C         	fcall	_USBTransferOnePacket
  7221  0E42  0023               	movlb	3	; select bank3
  7222  0E43  0821               	movf	(?_USBTransferOnePacket+1)^(0+384),w
  7223  0E44  0024               	movlb	4	; select bank4
  7224  0E45  00A8               	movwf	(_CDCDataInHandle+1)^(0+512)
  7225  0E46  0023               	movlb	3	; select bank3
  7226  0E47  0820               	movf	?_USBTransferOnePacket^(0+384),w
  7227  0E48  0024               	movlb	4	; select bank4
  7228  0E49  00A7               	movwf	_CDCDataInHandle^(0+512)
  7229  0E4A  0008               	return
  7230  0E4B                     __end_of_CDCTxService:	
  7231                           
  7232                           	psect	text18
  7233  097C                     __ptext18:	
  7234 ;; *************** function _USBTransferOnePacket *****************
  7235 ;; Defined at:
  7236 ;;		line 995 in file "usb/core/usb_device.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;  ep              1    wreg     unsigned char 
  7239 ;;  dir             1    0[BANK3 ] unsigned char 
  7240 ;;  data            2    1[BANK3 ] PTR unsigned char 
  7241 ;;		 -> cdc_data_tx2(64), cdc_data_rx2(64), cdc_data_tx(64), cdc_data_rx(64), 
  7242 ;;		 -> NULL(0), 
  7243 ;;  len             1    3[BANK3 ] unsigned char 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;  ep              1    8[BANK3 ] unsigned char 
  7246 ;;  handle          2    9[BANK3 ] PTR volatile struct __BD
  7247 ;;		 -> RAM(4096), NULL(0), BDT(80), 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  2    0[BANK3 ] PTR void 
  7250 ;; Registers used:
  7251 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  7257 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  7258 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0
  7259 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  7260 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0
  7261 ;;Total ram usage:       11 bytes
  7262 ;; Hardware stack levels used:    1
  7263 ;; Hardware stack levels required when called:   10
  7264 ;; This function calls:
  7265 ;;		Nothing
  7266 ;; This function is called by:
  7267 ;;		_getsUSBUSART
  7268 ;;		_CDCTxService
  7269 ;;		_USBCDCEventHandler
  7270 ;;		_USBCDCEventHandler2
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           
  7275                           ;psect for function _USBTransferOnePacket
  7276  097C                     _USBTransferOnePacket:	
  7277                           
  7278                           ;incstack = 0
  7279                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  7280                           ;USBTransferOnePacket@ep stored from wreg
  7281  097C  0023               	movlb	3	; select bank3
  7282  097D  00A8               	movwf	USBTransferOnePacket@ep^(0+384)
  7283                           
  7284                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  7285                           ;usb_device.c: 1000: if(dir != 0)
  7286  097E  0820               	movf	USBTransferOnePacket@dir^(0+384),w
  7287  097F  1903               	btfsc	3,2
  7288  0980  298A               	goto	l4699
  7289                           
  7290                           ;usb_device.c: 1001: {
  7291                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  7292  0981  3528               	lslf	USBTransferOnePacket@ep^(0+384),w
  7293  0982  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7294  0983  0086               	movwf	6
  7295  0984  3001               	movlw	1	; select bank3/4
  7296  0985  0087               	movwf	7
  7297  0986  3F40               	moviw [0]fsr1
  7298  0987  00A9               	movwf	USBTransferOnePacket@handle^(0+384)
  7299  0988  3F41               	moviw [1]fsr1
  7300  0989  2992               	goto	L9
  7301  098A                     l4699:	
  7302                           ;usb_device.c: 1004: }
  7303                           
  7304                           
  7305                           ;usb_device.c: 1005: else
  7306                           ;usb_device.c: 1006: {
  7307                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  7308  098A  3528               	lslf	USBTransferOnePacket@ep^(0+384),w
  7309  098B  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  7310  098C  0086               	movwf	6
  7311  098D  3002               	movlw	2	; select bank5/6
  7312  098E  0087               	movwf	7
  7313  098F  3F40               	moviw [0]fsr1
  7314  0990  00A9               	movwf	USBTransferOnePacket@handle^(0+384)
  7315  0991  3F41               	moviw [1]fsr1
  7316  0992                     L9:	
  7317  0992  00AA               	movwf	(USBTransferOnePacket@handle+1)^(0+384)
  7318                           
  7319                           ;usb_device.c: 1009: }
  7320                           ;usb_device.c: 1013: if(handle == 0)
  7321  0993  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7322  0994  042A               	iorwf	(USBTransferOnePacket@handle+1)^(0+384),w
  7323  0995  1D03               	btfss	3,2
  7324  0996  299A               	goto	l4707
  7325                           
  7326                           ;usb_device.c: 1014: {
  7327                           ;usb_device.c: 1015: return 0;
  7328  0997  01A0               	clrf	?_USBTransferOnePacket^(0+384)
  7329  0998  01A1               	clrf	(?_USBTransferOnePacket+1)^(0+384)
  7330  0999  0008               	return
  7331  099A                     l4707:	
  7332                           
  7333                           ;usb_device.c: 1016: }
  7334                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  7335  099A  30FF               	movlw	255
  7336  099B  0521               	andwf	USBTransferOnePacket@data^(0+384),w
  7337  099C  00A4               	movwf	??_USBTransferOnePacket^(0+384)
  7338  099D  307F               	movlw	127
  7339  099E  0522               	andwf	(USBTransferOnePacket@data+1)^(0+384),w
  7340  099F  00A5               	movwf	(??_USBTransferOnePacket+1)^(0+384)
  7341  09A0  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7342  09A1  0086               	movwf	6
  7343  09A2  082A               	movf	(USBTransferOnePacket@handle+1)^(0+384),w
  7344  09A3  0087               	movwf	7
  7345  09A4  3142               	addfsr 1,2
  7346  09A5  0824               	movf	??_USBTransferOnePacket^(0+384),w
  7347  09A6  3FC0               	movwi [0]fsr1
  7348  09A7  0825               	movf	(??_USBTransferOnePacket^(0+384)+1),w
  7349  09A8  3FC1               	movwi [1]fsr1
  7350                           
  7351                           ;usb_device.c: 1030: handle->CNT = len;
  7352  09A9  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7353  09AA  3E01               	addlw	1
  7354  09AB  00A4               	movwf	??_USBTransferOnePacket^(0+384)
  7355  09AC  3000               	movlw	0
  7356  09AD  3D2A               	addwfc	(USBTransferOnePacket@handle+1)^(0+384),w
  7357  09AE  00A5               	movwf	(??_USBTransferOnePacket+1)^(0+384)
  7358  09AF  0824               	movf	??_USBTransferOnePacket^(0+384),w
  7359  09B0  0086               	movwf	6
  7360  09B1  0825               	movf	(??_USBTransferOnePacket+1)^(0+384),w
  7361  09B2  0087               	movwf	7
  7362  09B3  0823               	movf	USBTransferOnePacket@len^(0+384),w
  7363  09B4  0081               	movwf	1
  7364                           
  7365                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  7366  09B5  3040               	movlw	64
  7367  09B6  00A4               	movwf	??_USBTransferOnePacket^(0+384)
  7368  09B7  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7369  09B8  0086               	movwf	6
  7370  09B9  082A               	movf	(USBTransferOnePacket@handle+1)^(0+384),w
  7371  09BA  0087               	movwf	7
  7372  09BB  0824               	movf	??_USBTransferOnePacket^(0+384),w
  7373  09BC  0581               	andwf	1,f
  7374                           
  7375                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  7376  09BD  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7377  09BE  0086               	movwf	6
  7378  09BF  082A               	movf	(USBTransferOnePacket@handle+1)^(0+384),w
  7379  09C0  0087               	movwf	7
  7380  09C1  1581               	bsf	1,3
  7381                           
  7382                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  7383  09C2  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7384  09C3  0086               	movwf	6
  7385  09C4  082A               	movf	(USBTransferOnePacket@handle+1)^(0+384),w
  7386  09C5  0087               	movwf	7
  7387  09C6  1781               	bsf	1,7
  7388                           
  7389                           ;usb_device.c: 1036: if(dir != 0)
  7390  09C7  0820               	movf	USBTransferOnePacket@dir^(0+384),w
  7391  09C8  1903               	btfsc	3,2
  7392  09C9  29E3               	goto	l4717
  7393                           
  7394                           ;usb_device.c: 1037: {
  7395                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  7396  09CA  3528               	lslf	USBTransferOnePacket@ep^(0+384),w
  7397  09CB  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7398  09CC  0086               	movwf	6
  7399  09CD  3001               	movlw	1	; select bank3/4
  7400  09CE  0087               	movwf	7
  7401  09CF  3F40               	moviw [0]fsr1
  7402  09D0  00A4               	movwf	??_USBTransferOnePacket^(0+384)
  7403  09D1  3F41               	moviw [1]fsr1
  7404  09D2  00A5               	movwf	(??_USBTransferOnePacket^(0+384)+1)
  7405  09D3  3004               	movlw	4
  7406  09D4  0624               	xorwf	??_USBTransferOnePacket^(0+384),w
  7407  09D5  00A6               	movwf	(??_USBTransferOnePacket+2)^(0+384)
  7408  09D6  3000               	movlw	0
  7409  09D7  0625               	xorwf	(??_USBTransferOnePacket+1)^(0+384),w
  7410  09D8  00A7               	movwf	(??_USBTransferOnePacket+3)^(0+384)
  7411  09D9  3528               	lslf	USBTransferOnePacket@ep^(0+384),w
  7412  09DA  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7413  09DB  0086               	movwf	6
  7414  09DC  3001               	movlw	1	; select bank3/4
  7415  09DD  0087               	movwf	7
  7416  09DE  0826               	movf	(??_USBTransferOnePacket+2)^(0+384),w
  7417  09DF  3FC0               	movwi [0]fsr1
  7418  09E0  0827               	movf	(??_USBTransferOnePacket+3)^(0+384),w
  7419  09E1  3FC1               	movwi [1]fsr1
  7420                           
  7421                           ;usb_device.c: 1040: }
  7422  09E2  29FB               	goto	l4719
  7423  09E3                     l4717:	
  7424                           
  7425                           ;usb_device.c: 1041: else
  7426                           ;usb_device.c: 1042: {
  7427                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  7428  09E3  3528               	lslf	USBTransferOnePacket@ep^(0+384),w
  7429  09E4  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  7430  09E5  0086               	movwf	6
  7431  09E6  3002               	movlw	2	; select bank5/6
  7432  09E7  0087               	movwf	7
  7433  09E8  3F40               	moviw [0]fsr1
  7434  09E9  00A4               	movwf	??_USBTransferOnePacket^(0+384)
  7435  09EA  3F41               	moviw [1]fsr1
  7436  09EB  00A5               	movwf	(??_USBTransferOnePacket^(0+384)+1)
  7437  09EC  3004               	movlw	4
  7438  09ED  0624               	xorwf	??_USBTransferOnePacket^(0+384),w
  7439  09EE  00A6               	movwf	(??_USBTransferOnePacket+2)^(0+384)
  7440  09EF  3000               	movlw	0
  7441  09F0  0625               	xorwf	(??_USBTransferOnePacket+1)^(0+384),w
  7442  09F1  00A7               	movwf	(??_USBTransferOnePacket+3)^(0+384)
  7443  09F2  3528               	lslf	USBTransferOnePacket@ep^(0+384),w
  7444  09F3  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  7445  09F4  0086               	movwf	6
  7446  09F5  3002               	movlw	2	; select bank5/6
  7447  09F6  0087               	movwf	7
  7448  09F7  0826               	movf	(??_USBTransferOnePacket+2)^(0+384),w
  7449  09F8  3FC0               	movwi [0]fsr1
  7450  09F9  0827               	movf	(??_USBTransferOnePacket+3)^(0+384),w
  7451  09FA  3FC1               	movwi [1]fsr1
  7452  09FB                     l4719:	
  7453                           
  7454                           ;usb_device.c: 1045: }
  7455                           ;usb_device.c: 1046: return (void*)handle;
  7456  09FB  082A               	movf	(USBTransferOnePacket@handle+1)^(0+384),w
  7457  09FC  00A1               	movwf	(?_USBTransferOnePacket+1)^(0+384)
  7458  09FD  0829               	movf	USBTransferOnePacket@handle^(0+384),w
  7459  09FE  00A0               	movwf	?_USBTransferOnePacket^(0+384)
  7460  09FF  0008               	return
  7461  0A00                     __end_of_USBTransferOnePacket:	
  7462                           
  7463                           	psect	text19
  7464  0E4B                     __ptext19:	
  7465 ;; *************** function _USBDeviceInit *****************
  7466 ;; Defined at:
  7467 ;;		line 277 in file "usb/core/usb_device.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;		None
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  p               2    1[BANK3 ] PTR unsigned char 
  7472 ;;		 -> UEP1(1), 
  7473 ;;  i               1    3[BANK3 ] unsigned char 
  7474 ;;  i               1    4[BANK3 ] unsigned char 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      void 
  7477 ;; Registers used:
  7478 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  7484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7485 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0
  7486 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0
  7487 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0
  7488 ;;Total ram usage:        5 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:   10
  7491 ;; This function calls:
  7492 ;;		Nothing
  7493 ;; This function is called by:
  7494 ;;		_main
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498                           
  7499                           ;psect for function _USBDeviceInit
  7500  0E4B                     _USBDeviceInit:	
  7501                           
  7502                           ;usb_device.c: 279: uint8_t i;
  7503                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  7504                           
  7505                           ;incstack = 0
  7506                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  7507  0E4B  0021               	movlb	1	; select bank1
  7508  0E4C  1112               	bcf	18,2	;volatile
  7509                           
  7510                           ;usb_device.c: 285: ;
  7511                           ;usb_device.c: 288: {UEIR = 0;};
  7512  0E4D  003D               	movlb	29	; select bank29
  7513  0E4E  0193               	clrf	19	;volatile
  7514                           
  7515                           ;usb_device.c: 291: {UIR = 0;};
  7516  0E4F  0190               	clrf	16	;volatile
  7517                           
  7518                           ;usb_device.c: 294: UEP0 = 0;
  7519  0E50  0198               	clrf	24	;volatile
  7520                           
  7521                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<4;i++) *p++ = 0
      +                          ; };
  7522  0E51  300E               	movlw	14
  7523  0E52  0023               	movlb	3	; select bank3
  7524  0E53  00A2               	movwf	(USBDeviceInit@p+1)^(0+384)
  7525  0E54  3099               	movlw	153
  7526  0E55  00A1               	movwf	USBDeviceInit@p^(0+384)
  7527  0E56  01A3               	clrf	USBDeviceInit@i_1118^(0+384)
  7528  0E57  3004               	movlw	4
  7529  0E58  0223               	subwf	USBDeviceInit@i_1118^(0+384),w
  7530  0E59  1803               	btfsc	3,0
  7531  0E5A  2E6C               	goto	l5455
  7532  0E5B                     l5447:	
  7533  0E5B  0821               	movf	USBDeviceInit@p^(0+384),w
  7534  0E5C  0086               	movwf	6
  7535  0E5D  0822               	movf	(USBDeviceInit@p+1)^(0+384),w
  7536  0E5E  0087               	movwf	7
  7537  0E5F  0181               	clrf	1
  7538  0E60  3001               	movlw	1
  7539  0E61  07A1               	addwf	USBDeviceInit@p^(0+384),f
  7540  0E62  3000               	movlw	0
  7541  0E63  3DA2               	addwfc	(USBDeviceInit@p+1)^(0+384),f
  7542  0E64  3001               	movlw	1
  7543  0E65  00A0               	movwf	??_USBDeviceInit^(0+384)
  7544  0E66  0820               	movf	??_USBDeviceInit^(0+384),w
  7545  0E67  07A3               	addwf	USBDeviceInit@i_1118^(0+384),f
  7546  0E68  3004               	movlw	4
  7547  0E69  0223               	subwf	USBDeviceInit@i_1118^(0+384),w
  7548  0E6A  1C03               	skipc
  7549  0E6B  2E5B               	goto	l5447
  7550  0E6C                     l5455:	
  7551                           
  7552                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7553  0E6C  3016               	movlw	22
  7554  0E6D  003D               	movlb	29	; select bank29
  7555  0E6E  0091               	movwf	17	;volatile
  7556  0E6F  309F               	movlw	159
  7557  0E70  0097               	movwf	23	;volatile
  7558  0E71  307B               	movlw	123
  7559  0E72  0092               	movwf	18	;volatile
  7560                           
  7561                           ;usb_device.c: 301: ;
  7562                           ;usb_device.c: 304: ;
  7563                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  7564  0E73  0023               	movlb	3	; select bank3
  7565  0E74  01A4               	clrf	USBDeviceInit@i^(0+384)
  7566  0E75  3014               	movlw	20
  7567  0E76  0224               	subwf	USBDeviceInit@i^(0+384),w
  7568  0E77  1803               	btfsc	3,0
  7569  0E78  2E92               	goto	l378
  7570  0E79                     l5463:	
  7571                           
  7572                           ;usb_device.c: 308: {
  7573                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  7574  0E79  0824               	movf	USBDeviceInit@i^(0+384),w
  7575  0E7A  00A0               	movwf	??_USBDeviceInit^(0+384)
  7576  0E7B  3001               	movlw	1
  7577  0E7C                     u5175:	
  7578  0E7C  35A0               	lslf	??_USBDeviceInit^(0+384),f
  7579  0E7D  3EFF               	addlw	-1
  7580  0E7E  1D03               	skipz
  7581  0E7F  2E7C               	goto	u5175
  7582  0E80  3520               	lslf	??_USBDeviceInit^(0+384),w
  7583  0E81  3E20               	addlw	32
  7584  0E82  0086               	movwf	6
  7585  0E83  0187               	clrf	7
  7586  0E84  3000               	movlw	0
  7587  0E85  3FC0               	movwi [0]fsr1
  7588  0E86  3000               	movlw	0
  7589  0E87  3FC1               	movwi [1]fsr1
  7590  0E88  3FC2               	movwi [2]fsr1
  7591  0E89  3FC3               	movwi [3]fsr1
  7592  0E8A  3001               	movlw	1
  7593  0E8B  00A0               	movwf	??_USBDeviceInit^(0+384)
  7594  0E8C  0820               	movf	??_USBDeviceInit^(0+384),w
  7595  0E8D  07A4               	addwf	USBDeviceInit@i^(0+384),f
  7596  0E8E  3014               	movlw	20
  7597  0E8F  0224               	subwf	USBDeviceInit@i^(0+384),w
  7598  0E90  1C03               	skipc
  7599  0E91  2E79               	goto	l5463
  7600  0E92                     l378:	
  7601                           
  7602                           ;usb_device.c: 310: }
  7603                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  7604  0E92  003D               	movlb	29	; select bank29
  7605  0E93  170E               	bsf	14,6	;volatile
  7606                           
  7607                           ;usb_device.c: 316: UADDR = 0x00;
  7608  0E94  0196               	clrf	22	;volatile
  7609                           
  7610                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  7611  0E95  120E               	bcf	14,4	;volatile
  7612                           
  7613                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  7614  0E96  130E               	bcf	14,6	;volatile
  7615  0E97                     l5475:	
  7616                           ;usb_device.c: 325: do
  7617                           
  7618                           
  7619                           ;usb_device.c: 326: {
  7620                           ;usb_device.c: 327: (UIR &= 0xF7);
  7621  0E97  30F7               	movlw	247
  7622  0E98  0023               	movlb	3	; select bank3
  7623  0E99  00A0               	movwf	??_USBDeviceInit^(0+384)
  7624  0E9A  0820               	movf	??_USBDeviceInit^(0+384),w
  7625  0E9B  003D               	movlb	29	; select bank29
  7626  0E9C  0590               	andwf	16,f	;volatile
  7627                           
  7628                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  7629  0E9D  0023               	movlb	3	; select bank3
  7630  0E9E  01D7               	clrf	(_inPipes^(0+384)+2)
  7631                           
  7632                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  7633  0E9F  0024               	movlb	4	; select bank4
  7634  0EA0  01A2               	clrf	(_outPipes^(0+512)+2)
  7635                           
  7636                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  7637  0EA1  01A3               	clrf	(_outPipes^(0+512)+3)
  7638  0EA2  01A4               	clrf	((_outPipes+1)^(0+512)+3)
  7639                           
  7640                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  7641  0EA3  003D               	movlb	29	; select bank29
  7642  0EA4  1990               	btfsc	16,3	;volatile
  7643  0EA5  2E97               	goto	l5475
  7644                           
  7645                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  7646  0EA6  3001               	movlw	1
  7647  0EA7  0023               	movlb	3	; select bank3
  7648  0EA8  00A0               	movwf	??_USBDeviceInit^(0+384)
  7649  0EA9  0820               	movf	??_USBDeviceInit^(0+384),w
  7650  0EAA  0024               	movlb	4	; select bank4
  7651  0EAB  00D1               	movwf	_USBStatusStageEnabledFlag1^(0+512)	;volatile
  7652                           
  7653                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  7654  0EAC  3001               	movlw	1
  7655  0EAD  0023               	movlb	3	; select bank3
  7656  0EAE  00A0               	movwf	??_USBDeviceInit^(0+384)
  7657  0EAF  0820               	movf	??_USBDeviceInit^(0+384),w
  7658  0EB0  0024               	movlb	4	; select bank4
  7659  0EB1  00D2               	movwf	_USBStatusStageEnabledFlag2^(0+512)	;volatile
  7660                           
  7661                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  7662  0EB2  01CF               	clrf	_USBDeferINDataStagePackets^(0+512)	;volatile
  7663                           
  7664                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  7665  0EB3  01D0               	clrf	_USBDeferOUTDataStagePackets^(0+512)	;volatile
  7666                           
  7667                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  7668  0EB4  01CE               	clrf	_USBBusIsSuspended^(0+512)
  7669                           
  7670                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(4+1u); i++)
  7671  0EB5  0023               	movlb	3	; select bank3
  7672  0EB6  01A4               	clrf	USBDeviceInit@i^(0+384)
  7673  0EB7  3005               	movlw	5
  7674  0EB8  0224               	subwf	USBDeviceInit@i^(0+384),w
  7675  0EB9  1803               	btfsc	3,0
  7676  0EBA  2EDF               	goto	l5503
  7677  0EBB                     l5497:	
  7678                           
  7679                           ;usb_device.c: 346: {
  7680                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  7681  0EBB  3524               	lslf	USBDeviceInit@i^(0+384),w
  7682  0EBC  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7683  0EBD  0086               	movwf	6
  7684  0EBE  3001               	movlw	1	; select bank3/4
  7685  0EBF  0087               	movwf	7
  7686  0EC0  3000               	movlw	0
  7687  0EC1  3FC0               	movwi [0]fsr1
  7688  0EC2  3FC1               	movwi [1]fsr1
  7689                           
  7690                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  7691  0EC3  3524               	lslf	USBDeviceInit@i^(0+384),w
  7692  0EC4  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
  7693  0EC5  0086               	movwf	6
  7694  0EC6  3002               	movlw	2	; select bank5/6
  7695  0EC7  0087               	movwf	7
  7696  0EC8  3000               	movlw	0
  7697  0EC9  3FC0               	movwi [0]fsr1
  7698  0ECA  3FC1               	movwi [1]fsr1
  7699                           
  7700                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  7701  0ECB  0824               	movf	USBDeviceInit@i^(0+384),w
  7702  0ECC  3EB4               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
  7703  0ECD  0086               	movwf	6
  7704  0ECE  3002               	movlw	2	; select bank5/6
  7705  0ECF  0087               	movwf	7
  7706  0ED0  0181               	clrf	1
  7707                           
  7708                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  7709  0ED1  0824               	movf	USBDeviceInit@i^(0+384),w
  7710  0ED2  3EB9               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
  7711  0ED3  0086               	movwf	6
  7712  0ED4  3002               	movlw	2	; select bank5/6
  7713  0ED5  0087               	movwf	7
  7714  0ED6  0181               	clrf	1
  7715  0ED7  3001               	movlw	1
  7716  0ED8  00A0               	movwf	??_USBDeviceInit^(0+384)
  7717  0ED9  0820               	movf	??_USBDeviceInit^(0+384),w
  7718  0EDA  07A4               	addwf	USBDeviceInit@i^(0+384),f
  7719  0EDB  3005               	movlw	5
  7720  0EDC  0224               	subwf	USBDeviceInit@i^(0+384),w
  7721  0EDD  1C03               	skipc
  7722  0EDE  2EBB               	goto	l5497
  7723  0EDF                     l5503:	
  7724                           
  7725                           ;usb_device.c: 351: }
  7726                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7727  0EDF  3028               	movlw	40
  7728  0EE0  00CB               	movwf	_pBDTEntryIn^(0+384)
  7729  0EE1  3000               	movlw	0
  7730  0EE2  00CC               	movwf	(_pBDTEntryIn+1)^(0+384)
  7731                           
  7732                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  7733  0EE3  3016               	movlw	22
  7734  0EE4  003D               	movlb	29	; select bank29
  7735  0EE5  0098               	movwf	24	;volatile
  7736                           
  7737                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7738  0EE6  3000               	movlw	0
  7739  0EE7  0020               	movlb	0	; select bank0
  7740  0EE8  00A3               	movwf	35	;volatile
  7741  0EE9  30A0               	movlw	160
  7742  0EEA  00A2               	movwf	34	;volatile
  7743                           
  7744                           ;usb_device.c: 359: BDT[0].CNT = 8;
  7745  0EEB  3008               	movlw	8
  7746  0EEC  00A1               	movwf	33	;volatile
  7747                           
  7748                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  7749  0EED  3004               	movlw	4
  7750  0EEE  0023               	movlb	3	; select bank3
  7751  0EEF  00A0               	movwf	??_USBDeviceInit^(0+384)
  7752  0EF0  0820               	movf	??_USBDeviceInit^(0+384),w
  7753  0EF1  0020               	movlb	0	; select bank0
  7754  0EF2  00A0               	movwf	32	;volatile
  7755                           
  7756                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  7757  0EF3  17A0               	bsf	32,7	;volatile
  7758                           
  7759                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  7760  0EF4  0023               	movlb	3	; select bank3
  7761  0EF5  01EE               	clrf	_USBActiveConfiguration^(0+384)
  7762                           
  7763                           ;usb_device.c: 366: USB1msTickCount = 0;
  7764  0EF6  3000               	movlw	0
  7765  0EF7  0025               	movlb	5	; select bank5
  7766  0EF8  00C9               	movwf	(_USB1msTickCount+3)^(0+640)
  7767  0EF9  3000               	movlw	0
  7768  0EFA  00C8               	movwf	(_USB1msTickCount+2)^(0+640)
  7769  0EFB  3000               	movlw	0
  7770  0EFC  00C7               	movwf	(_USB1msTickCount+1)^(0+640)
  7771  0EFD  3000               	movlw	0
  7772  0EFE  00C6               	movwf	_USB1msTickCount^(0+640)
  7773                           
  7774                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  7775  0EFF  0024               	movlb	4	; select bank4
  7776  0F00  01D4               	clrf	_USBTicksSinceSuspendEnd^(0+512)
  7777                           
  7778                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  7779  0F01  0023               	movlb	3	; select bank3
  7780  0F02  01E1               	clrf	_USBDeviceState^(0+384)
  7781  0F03  0008               	return
  7782  0F04                     __end_of_USBDeviceInit:	
  7783                           
  7784                           	psect	text20
  7785  1ED3                     __ptext20:	
  7786 ;; *************** function _SYSTEM_Initialize *****************
  7787 ;; Defined at:
  7788 ;;		line 72 in file "mcc_generated_files/mcc.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;		None
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;		None
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  1    wreg      void 
  7795 ;; Registers used:
  7796 ;;		wreg, status,2, status,0, pclath, cstack
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  7802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7806 ;;Total ram usage:        0 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; Hardware stack levels required when called:   12
  7809 ;; This function calls:
  7810 ;;		_ADC_Initialize
  7811 ;;		_EUSART_Initialize
  7812 ;;		_FVR_Initialize
  7813 ;;		_OSCILLATOR_Initialize
  7814 ;;		_PIN_MANAGER_Initialize
  7815 ;;		_PWM2_Initialize
  7816 ;;		_TMR1_Initialize
  7817 ;;		_TMR2_Initialize
  7818 ;;		_WDT_Initialize
  7819 ;; This function is called by:
  7820 ;;		_main
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824                           
  7825                           ;psect for function _SYSTEM_Initialize
  7826  1ED3                     _SYSTEM_Initialize:	
  7827                           
  7828                           ;mcc.c: 75: PIN_MANAGER_Initialize();
  7829                           
  7830                           ;incstack = 0
  7831                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7832  1ED3  319E  2642  319E   	fcall	_PIN_MANAGER_Initialize
  7833                           
  7834                           ;mcc.c: 76: OSCILLATOR_Initialize();
  7835  1ED6  319D  25BF  319E   	fcall	_OSCILLATOR_Initialize
  7836                           
  7837                           ;mcc.c: 77: WDT_Initialize();
  7838  1ED9  319D  2578  319E   	fcall	_WDT_Initialize
  7839                           
  7840                           ;mcc.c: 78: FVR_Initialize();
  7841  1EDC  319D  2574  319E   	fcall	_FVR_Initialize
  7842                           
  7843                           ;mcc.c: 79: PWM2_Initialize();
  7844  1EDF  319D  2587  319E   	fcall	_PWM2_Initialize
  7845                           
  7846                           ;mcc.c: 80: ADC_Initialize();
  7847  1EE2  319D  25B5  319E   	fcall	_ADC_Initialize
  7848                           
  7849                           ;mcc.c: 81: TMR2_Initialize();
  7850  1EE5  319D  25A3  319E   	fcall	_TMR2_Initialize
  7851                           
  7852                           ;mcc.c: 82: TMR1_Initialize();
  7853  1EE8  319E  2602  319E   	fcall	_TMR1_Initialize
  7854                           
  7855                           ;mcc.c: 83: EUSART_Initialize();
  7856  1EEB  319D  25CA         	fcall	_EUSART_Initialize
  7857  1EED  0008               	return
  7858  1EEE                     __end_of_SYSTEM_Initialize:	
  7859                           
  7860                           	psect	text21
  7861  1D78                     __ptext21:	
  7862 ;; *************** function _WDT_Initialize *****************
  7863 ;; Defined at:
  7864 ;;		line 102 in file "mcc_generated_files/mcc.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;		None
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  7878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7882 ;;Total ram usage:        0 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:   10
  7885 ;; This function calls:
  7886 ;;		Nothing
  7887 ;; This function is called by:
  7888 ;;		_SYSTEM_Initialize
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           
  7893                           ;psect for function _WDT_Initialize
  7894  1D78                     _WDT_Initialize:	
  7895                           
  7896                           ;mcc.c: 105: WDTCON = 0x06;
  7897                           
  7898                           ;incstack = 0
  7899                           ; Regs used in _WDT_Initialize: [wreg]
  7900  1D78  3006               	movlw	6
  7901  1D79  0021               	movlb	1	; select bank1
  7902  1D7A  0097               	movwf	23	;volatile
  7903  1D7B  0008               	return
  7904  1D7C                     __end_of_WDT_Initialize:	
  7905                           
  7906                           	psect	text22
  7907  1DA3                     __ptext22:	
  7908 ;; *************** function _TMR2_Initialize *****************
  7909 ;; Defined at:
  7910 ;;		line 63 in file "mcc_generated_files/tmr2.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;		None
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;		None
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  1    wreg      void 
  7917 ;; Registers used:
  7918 ;;		wreg, status,2, status,0, pclath, cstack
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  7924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7928 ;;Total ram usage:        0 bytes
  7929 ;; Hardware stack levels used:    1
  7930 ;; Hardware stack levels required when called:   11
  7931 ;; This function calls:
  7932 ;;		_TMR2_StartTimer
  7933 ;; This function is called by:
  7934 ;;		_SYSTEM_Initialize
  7935 ;; This function uses a non-reentrant model
  7936 ;;
  7937                           
  7938                           
  7939                           ;psect for function _TMR2_Initialize
  7940  1DA3                     _TMR2_Initialize:	
  7941                           
  7942                           ;tmr2.c: 68: T2CON = 0x00;
  7943                           
  7944                           ;incstack = 0
  7945                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7946  1DA3  0020               	movlb	0	; select bank0
  7947  1DA4  019C               	clrf	28	;volatile
  7948                           
  7949                           ;tmr2.c: 71: PR2 = 0x2F;
  7950  1DA5  302F               	movlw	47
  7951  1DA6  009B               	movwf	27	;volatile
  7952                           
  7953                           ;tmr2.c: 74: TMR2 = 0x00;
  7954  1DA7  019A               	clrf	26	;volatile
  7955                           
  7956                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
  7957  1DA8  1091               	bcf	17,1	;volatile
  7958                           
  7959                           ;tmr2.c: 80: TMR2_StartTimer();
  7960  1DA9  319D  2571         	fcall	_TMR2_StartTimer
  7961  1DAB  0008               	return
  7962  1DAC                     __end_of_TMR2_Initialize:	
  7963                           
  7964                           	psect	text23
  7965  1D71                     __ptext23:	
  7966 ;; *************** function _TMR2_StartTimer *****************
  7967 ;; Defined at:
  7968 ;;		line 83 in file "mcc_generated_files/tmr2.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;		None
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      void 
  7975 ;; Registers used:
  7976 ;;		None
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  7982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  7986 ;;Total ram usage:        0 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:   10
  7989 ;; This function calls:
  7990 ;;		Nothing
  7991 ;; This function is called by:
  7992 ;;		_TMR2_Initialize
  7993 ;; This function uses a non-reentrant model
  7994 ;;
  7995                           
  7996                           
  7997                           ;psect for function _TMR2_StartTimer
  7998  1D71                     _TMR2_StartTimer:	
  7999                           
  8000                           ;tmr2.c: 86: T2CONbits.TMR2ON = 1;
  8001                           
  8002                           ;incstack = 0
  8003                           ; Regs used in _TMR2_StartTimer: []
  8004  1D71  0020               	movlb	0	; select bank0
  8005  1D72  151C               	bsf	28,2	;volatile
  8006  1D73  0008               	return
  8007  1D74                     __end_of_TMR2_StartTimer:	
  8008                           
  8009                           	psect	text24
  8010  1E02                     __ptext24:	
  8011 ;; *************** function _TMR1_Initialize *****************
  8012 ;; Defined at:
  8013 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;		None
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;		None
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  1    wreg      void 
  8020 ;; Registers used:
  8021 ;;		wreg, status,2, status,0, pclath, cstack
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8031 ;;Total ram usage:        0 bytes
  8032 ;; Hardware stack levels used:    1
  8033 ;; Hardware stack levels required when called:   11
  8034 ;; This function calls:
  8035 ;;		_TMR1_StartTimer
  8036 ;; This function is called by:
  8037 ;;		_SYSTEM_Initialize
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           
  8042                           ;psect for function _TMR1_Initialize
  8043  1E02                     _TMR1_Initialize:	
  8044                           
  8045                           ;tmr1.c: 68: T1CON = 0xF4;
  8046                           
  8047                           ;incstack = 0
  8048                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8049  1E02  30F4               	movlw	244
  8050  1E03  0020               	movlb	0	; select bank0
  8051  1E04  0098               	movwf	24	;volatile
  8052                           
  8053                           ;tmr1.c: 71: T1GCON = 0x00;
  8054  1E05  0199               	clrf	25	;volatile
  8055                           
  8056                           ;tmr1.c: 74: TMR1H = 0xF4;
  8057  1E06  30F4               	movlw	244
  8058  1E07  0097               	movwf	23	;volatile
  8059                           
  8060                           ;tmr1.c: 77: TMR1L = 0xA6;
  8061  1E08  30A6               	movlw	166
  8062  1E09  0096               	movwf	22	;volatile
  8063                           
  8064                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
  8065  1E0A  0817               	movf	23,w	;volatile
  8066  1E0B  0023               	movlb	3	; select bank3
  8067  1E0C  00DD               	movwf	(_timer1ReloadVal+1)^(0+384)	;volatile
  8068  1E0D  0020               	movlb	0	; select bank0
  8069  1E0E  0816               	movf	22,w	;volatile
  8070  1E0F  0023               	movlb	3	; select bank3
  8071  1E10  00DC               	movwf	_timer1ReloadVal^(0+384)	;volatile
  8072                           
  8073                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  8074  1E11  0020               	movlb	0	; select bank0
  8075  1E12  1011               	bcf	17,0	;volatile
  8076                           
  8077                           ;tmr1.c: 86: TMR1_StartTimer();
  8078  1E13  319D  256E         	fcall	_TMR1_StartTimer
  8079  1E15  0008               	return
  8080  1E16                     __end_of_TMR1_Initialize:	
  8081                           
  8082                           	psect	text25
  8083  1D6E                     __ptext25:	
  8084 ;; *************** function _TMR1_StartTimer *****************
  8085 ;; Defined at:
  8086 ;;		line 89 in file "mcc_generated_files/tmr1.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;		None
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  1    wreg      void 
  8093 ;; Registers used:
  8094 ;;		None
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8104 ;;Total ram usage:        0 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; Hardware stack levels required when called:   10
  8107 ;; This function calls:
  8108 ;;		Nothing
  8109 ;; This function is called by:
  8110 ;;		_TMR1_Initialize
  8111 ;;		_main
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           
  8116                           ;psect for function _TMR1_StartTimer
  8117  1D6E                     _TMR1_StartTimer:	
  8118                           
  8119                           ;tmr1.c: 92: T1CONbits.TMR1ON = 1;
  8120                           
  8121                           ;incstack = 0
  8122                           ; Regs used in _TMR1_StartTimer: []
  8123  1D6E  0020               	movlb	0	; select bank0
  8124  1D6F  1418               	bsf	24,0	;volatile
  8125  1D70  0008               	return
  8126  1D71                     __end_of_TMR1_StartTimer:	
  8127                           
  8128                           	psect	text26
  8129  1D87                     __ptext26:	
  8130 ;; *************** function _PWM2_Initialize *****************
  8131 ;; Defined at:
  8132 ;;		line 57 in file "mcc_generated_files/pwm2.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;		None
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;		None
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		wreg, status,2
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8150 ;;Total ram usage:        0 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:   10
  8153 ;; This function calls:
  8154 ;;		Nothing
  8155 ;; This function is called by:
  8156 ;;		_SYSTEM_Initialize
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           
  8161                           ;psect for function _PWM2_Initialize
  8162  1D87                     _PWM2_Initialize:	
  8163                           
  8164                           ;pwm2.c: 61: PWM2CON = 0xD0;
  8165                           
  8166                           ;incstack = 0
  8167                           ; Regs used in _PWM2_Initialize: [wreg+status,2]
  8168  1D87  30D0               	movlw	208
  8169  1D88  002C               	movlb	12	; select bank12
  8170  1D89  0096               	movwf	22	;volatile
  8171                           
  8172                           ;pwm2.c: 64: PWM2DCH = 0x00;
  8173  1D8A  0195               	clrf	21	;volatile
  8174                           
  8175                           ;pwm2.c: 67: PWM2DCL = 0x00;
  8176  1D8B  0194               	clrf	20	;volatile
  8177  1D8C  0008               	return
  8178  1D8D                     __end_of_PWM2_Initialize:	
  8179                           
  8180                           	psect	text27
  8181  1E42                     __ptext27:	
  8182 ;; *************** function _PIN_MANAGER_Initialize *****************
  8183 ;; Defined at:
  8184 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;		None
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;		None
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  1    wreg      void 
  8191 ;; Registers used:
  8192 ;;		wreg, status,2
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8202 ;;Total ram usage:        0 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:   10
  8205 ;; This function calls:
  8206 ;;		Nothing
  8207 ;; This function is called by:
  8208 ;;		_SYSTEM_Initialize
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           
  8213                           ;psect for function _PIN_MANAGER_Initialize
  8214  1E42                     _PIN_MANAGER_Initialize:	
  8215                           
  8216                           ;pin_manager.c: 56: LATA = 0x20;
  8217                           
  8218                           ;incstack = 0
  8219                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8220  1E42  3020               	movlw	32
  8221  1E43  0022               	movlb	2	; select bank2
  8222  1E44  008C               	movwf	12	;volatile
  8223                           
  8224                           ;pin_manager.c: 57: LATC = 0x00;
  8225  1E45  018E               	clrf	14	;volatile
  8226                           
  8227                           ;pin_manager.c: 62: TRISA = 0x10;
  8228  1E46  3010               	movlw	16
  8229  1E47  0021               	movlb	1	; select bank1
  8230  1E48  008C               	movwf	12	;volatile
  8231                           
  8232                           ;pin_manager.c: 63: TRISC = 0x24;
  8233  1E49  3024               	movlw	36
  8234  1E4A  008E               	movwf	14	;volatile
  8235                           
  8236                           ;pin_manager.c: 68: ANSELC = 0x0F;
  8237  1E4B  300F               	movlw	15
  8238  1E4C  0023               	movlb	3	; select bank3
  8239  1E4D  008E               	movwf	14	;volatile
  8240                           
  8241                           ;pin_manager.c: 69: ANSELA = 0x10;
  8242  1E4E  3010               	movlw	16
  8243  1E4F  008C               	movwf	12	;volatile
  8244                           
  8245                           ;pin_manager.c: 74: WPUA = 0x08;
  8246  1E50  3008               	movlw	8
  8247  1E51  0024               	movlb	4	; select bank4
  8248  1E52  008C               	movwf	12	;volatile
  8249                           
  8250                           ;pin_manager.c: 75: OPTION_REGbits.nWPUEN = 0;
  8251  1E53  0021               	movlb	1	; select bank1
  8252  1E54  1395               	bcf	21,7	;volatile
  8253                           
  8254                           ;pin_manager.c: 81: APFCON = 0x04;
  8255  1E55  3004               	movlw	4
  8256  1E56  0022               	movlb	2	; select bank2
  8257  1E57  009D               	movwf	29	;volatile
  8258  1E58  0008               	return
  8259  1E59                     __end_of_PIN_MANAGER_Initialize:	
  8260                           
  8261                           	psect	text28
  8262  1DBF                     __ptext28:	
  8263 ;; *************** function _OSCILLATOR_Initialize *****************
  8264 ;; Defined at:
  8265 ;;		line 86 in file "mcc_generated_files/mcc.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg, status,2
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8283 ;;Total ram usage:        0 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:   10
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_SYSTEM_Initialize
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           
  8294                           ;psect for function _OSCILLATOR_Initialize
  8295  1DBF                     _OSCILLATOR_Initialize:	
  8296                           
  8297                           ;mcc.c: 89: OSCCON = 0xFC;
  8298                           
  8299                           ;incstack = 0
  8300                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8301  1DBF  30FC               	movlw	252
  8302  1DC0  0021               	movlb	1	; select bank1
  8303  1DC1  0099               	movwf	25	;volatile
  8304                           
  8305                           ;mcc.c: 91: OSCTUNE = 0x00;
  8306  1DC2  0198               	clrf	24	;volatile
  8307                           
  8308                           ;mcc.c: 93: ACTCON = 0x90;
  8309  1DC3  3090               	movlw	144
  8310  1DC4  0027               	movlb	7	; select bank7
  8311  1DC5  009B               	movwf	27	;volatile
  8312  1DC6                     l107:	
  8313                           ;mcc.c: 98: {
  8314                           
  8315                           ;mcc.c: 97: while(PLLRDY == 0)
  8316                           
  8317  1DC6  0021               	movlb	1	; select bank1
  8318  1DC7  1B1A               	btfsc	26,6	;volatile
  8319  1DC8  0008               	return
  8320  1DC9  2DC6               	goto	l107
  8321  1DCA                     __end_of_OSCILLATOR_Initialize:	
  8322                           
  8323                           	psect	text29
  8324  1D74                     __ptext29:	
  8325 ;; *************** function _FVR_Initialize *****************
  8326 ;; Defined at:
  8327 ;;		line 57 in file "mcc_generated_files/fvr.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;		None
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;		None
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  1    wreg      void 
  8334 ;; Registers used:
  8335 ;;		wreg
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8345 ;;Total ram usage:        0 bytes
  8346 ;; Hardware stack levels used:    1
  8347 ;; Hardware stack levels required when called:   10
  8348 ;; This function calls:
  8349 ;;		Nothing
  8350 ;; This function is called by:
  8351 ;;		_SYSTEM_Initialize
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           
  8356                           ;psect for function _FVR_Initialize
  8357  1D74                     _FVR_Initialize:	
  8358                           
  8359                           ;fvr.c: 60: FVRCON = 0x83;
  8360                           
  8361                           ;incstack = 0
  8362                           ; Regs used in _FVR_Initialize: [wreg]
  8363  1D74  3083               	movlw	131
  8364  1D75  0022               	movlb	2	; select bank2
  8365  1D76  0097               	movwf	23	;volatile
  8366  1D77  0008               	return
  8367  1D78                     __end_of_FVR_Initialize:	
  8368                           
  8369                           	psect	text30
  8370  1DCA                     __ptext30:	
  8371 ;; *************** function _EUSART_Initialize *****************
  8372 ;; Defined at:
  8373 ;;		line 55 in file "mcc_generated_files/eusart.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;		None
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;		None
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		wreg
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8391 ;;Total ram usage:        0 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:   10
  8394 ;; This function calls:
  8395 ;;		Nothing
  8396 ;; This function is called by:
  8397 ;;		_SYSTEM_Initialize
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           
  8402                           ;psect for function _EUSART_Initialize
  8403  1DCA                     _EUSART_Initialize:	
  8404                           
  8405                           ;eusart.c: 60: BAUDCON = 0x48;
  8406                           
  8407                           ;incstack = 0
  8408                           ; Regs used in _EUSART_Initialize: [wreg]
  8409  1DCA  3048               	movlw	72
  8410  1DCB  0023               	movlb	3	; select bank3
  8411  1DCC  009F               	movwf	31	;volatile
  8412                           
  8413                           ;eusart.c: 63: RCSTA = 0x90;
  8414  1DCD  3090               	movlw	144
  8415  1DCE  009D               	movwf	29	;volatile
  8416                           
  8417                           ;eusart.c: 66: TXSTA = 0x26;
  8418  1DCF  3026               	movlw	38
  8419  1DD0  009E               	movwf	30	;volatile
  8420                           
  8421                           ;eusart.c: 69: SPBRGL = 0xE1;
  8422  1DD1  30E1               	movlw	225
  8423  1DD2  009B               	movwf	27	;volatile
  8424                           
  8425                           ;eusart.c: 72: SPBRGH = 0x04;
  8426  1DD3  3004               	movlw	4
  8427  1DD4  009C               	movwf	28	;volatile
  8428  1DD5  0008               	return
  8429  1DD6                     __end_of_EUSART_Initialize:	
  8430                           
  8431                           	psect	text31
  8432  1DB5                     __ptext31:	
  8433 ;; *************** function _ADC_Initialize *****************
  8434 ;; Defined at:
  8435 ;;		line 64 in file "mcc_generated_files/adc.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;		None
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;		None
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      void 
  8442 ;; Registers used:
  8443 ;;		wreg, status,2
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8453 ;;Total ram usage:        0 bytes
  8454 ;; Hardware stack levels used:    1
  8455 ;; Hardware stack levels required when called:   10
  8456 ;; This function calls:
  8457 ;;		Nothing
  8458 ;; This function is called by:
  8459 ;;		_SYSTEM_Initialize
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           
  8464                           ;psect for function _ADC_Initialize
  8465  1DB5                     _ADC_Initialize:	
  8466                           
  8467                           ;adc.c: 69: ADCON0 = 0x19;
  8468                           
  8469                           ;incstack = 0
  8470                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  8471  1DB5  3019               	movlw	25
  8472  1DB6  0021               	movlb	1	; select bank1
  8473  1DB7  009D               	movwf	29	;volatile
  8474                           
  8475                           ;adc.c: 72: ADCON1 = 0xE3;
  8476  1DB8  30E3               	movlw	227
  8477  1DB9  009E               	movwf	30	;volatile
  8478                           
  8479                           ;adc.c: 75: ADCON2 = 0x00;
  8480  1DBA  019F               	clrf	31	;volatile
  8481                           
  8482                           ;adc.c: 78: ADRESL = 0x00;
  8483  1DBB  019B               	clrf	27	;volatile
  8484                           
  8485                           ;adc.c: 81: ADRESH = 0x00;
  8486  1DBC  019C               	clrf	28	;volatile
  8487                           
  8488                           ;adc.c: 84: PIE1bits.ADIE = 1;
  8489  1DBD  1711               	bsf	17,6	;volatile
  8490  1DBE  0008               	return
  8491  1DBF                     __end_of_ADC_Initialize:	
  8492                           
  8493                           	psect	text32
  8494  1D6B                     __ptext32:	
  8495 ;; *************** function _ADC_StartConversion *****************
  8496 ;; Defined at:
  8497 ;;		line 95 in file "mcc_generated_files/adc.c"
  8498 ;; Parameters:    Size  Location     Type
  8499 ;;		None
  8500 ;; Auto vars:     Size  Location     Type
  8501 ;;		None
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  1    wreg      void 
  8504 ;; Registers used:
  8505 ;;		None
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8515 ;;Total ram usage:        0 bytes
  8516 ;; Hardware stack levels used:    1
  8517 ;; Hardware stack levels required when called:   10
  8518 ;; This function calls:
  8519 ;;		Nothing
  8520 ;; This function is called by:
  8521 ;;		_main
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525                           
  8526                           ;psect for function _ADC_StartConversion
  8527  1D6B                     _ADC_StartConversion:	
  8528                           
  8529                           ;adc.c: 98: ADCON0bits.GO_nDONE = 1;
  8530                           
  8531                           ;incstack = 0
  8532                           ; Regs used in _ADC_StartConversion: []
  8533  1D6B  0021               	movlb	1	; select bank1
  8534  1D6C  149D               	bsf	29,1	;volatile
  8535  1D6D  0008               	return
  8536  1D6E                     __end_of_ADC_StartConversion:	
  8537                           
  8538                           	psect	intentry
  8539  0004                     __pintentry:	
  8540 ;; *************** function _INTERRUPT_InterruptManager *****************
  8541 ;; Defined at:
  8542 ;;		line 481 in file "main.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;		None
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;  pwm             2   12[BANK2 ] unsigned int 
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  1    wreg      void 
  8549 ;; Registers used:
  8550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8551 ;; Tracked objects:
  8552 ;;		On entry : 0/0
  8553 ;;		On exit  : 0/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8557 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0
  8558 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0
  8559 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0
  8560 ;;Total ram usage:        9 bytes
  8561 ;; Hardware stack levels used:    1
  8562 ;; Hardware stack levels required when called:    9
  8563 ;; This function calls:
  8564 ;;		_ADC_GetConversionResult
  8565 ;;		_ADC_IsConversionDone
  8566 ;;		_ADC_SelectChannel
  8567 ;;		_USBDeviceTasks
  8568 ;;		_main_CDC_to_RS485_Tasks
  8569 ;;		i1_ADC_StartConversion
  8570 ;;		i1_PWM2_LoadDutyValue
  8571 ;; This function is called by:
  8572 ;;		Interrupt level 1
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576  0004                     _INTERRUPT_InterruptManager:	
  8577                           
  8578                           ;incstack = 0
  8579  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8580                           
  8581                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8582  0005  3180               	pagesel	$
  8583  0006  0020               	movlb	0	; select bank0
  8584  0007  087F               	movf	127,w
  8585  0008  0022               	movlb	2	; select bank2
  8586  0009  00EB               	movwf	(??_INTERRUPT_InterruptManager+6)^(0+256)
  8587                           
  8588                           ;main.c: 483: static int8_t pwmCorrection = 0;
  8589                           ;main.c: 484: uint16_t pwm;
  8590                           ;main.c: 486: Uadc = (Uadc + ADC_GetConversionResult() - (Iadc>>1))>>1;
  8591  000A  0023               	movlb	3	; select bank3
  8592  000B  085B               	movf	(_Iadc+1)^(0+384),w	;volatile
  8593  000C  0022               	movlb	2	; select bank2
  8594  000D  00E6               	movwf	(??_INTERRUPT_InterruptManager^(0+256)+1)
  8595  000E  0023               	movlb	3	; select bank3
  8596  000F  085A               	movf	_Iadc^(0+384),w	;volatile
  8597  0010  0022               	movlb	2	; select bank2
  8598  0011  00E5               	movwf	??_INTERRUPT_InterruptManager^(0+256)
  8599  0012  36E6               	lsrf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8600  0013  0CE5               	rrf	??_INTERRUPT_InterruptManager^(0+256),f
  8601  0014  09E5               	comf	??_INTERRUPT_InterruptManager^(0+256),f
  8602  0015  09E6               	comf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8603  0016  0AE5               	incf	??_INTERRUPT_InterruptManager^(0+256),f
  8604  0017  1903               	skipnz
  8605  0018  0AE6               	incf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8606  0019  319D  2581  3180   	fcall	_ADC_GetConversionResult
  8607  001C  0022               	movlb	2	; select bank2
  8608  001D  0865               	movf	??_INTERRUPT_InterruptManager^(0+256),w
  8609  001E  0770               	addwf	?_ADC_GetConversionResult,w
  8610  001F  00E7               	movwf	(??_INTERRUPT_InterruptManager+2)^(0+256)
  8611  0020  0866               	movf	(??_INTERRUPT_InterruptManager+1)^(0+256),w
  8612  0021  3D71               	addwfc	?_ADC_GetConversionResult+1,w
  8613  0022  00E8               	movwf	(??_INTERRUPT_InterruptManager+3)^(0+256)
  8614  0023  0023               	movlb	3	; select bank3
  8615  0024  086C               	movf	_Uadc^(0+384),w	;volatile
  8616  0025  0022               	movlb	2	; select bank2
  8617  0026  0767               	addwf	(??_INTERRUPT_InterruptManager+2)^(0+256),w
  8618  0027  00E9               	movwf	(??_INTERRUPT_InterruptManager+4)^(0+256)
  8619  0028  0023               	movlb	3	; select bank3
  8620  0029  086D               	movf	(_Uadc+1)^(0+384),w	;volatile
  8621  002A  0022               	movlb	2	; select bank2
  8622  002B  3D68               	addwfc	(??_INTERRUPT_InterruptManager+3)^(0+256),w
  8623  002C  00EA               	movwf	(??_INTERRUPT_InterruptManager+5)^(0+256)
  8624  002D  36EA               	lsrf	((??_INTERRUPT_InterruptManager+4)^(0+256)+1),f
  8625  002E  0CE9               	rrf	(??_INTERRUPT_InterruptManager+4)^(0+256),f
  8626  002F  0869               	movf	(??_INTERRUPT_InterruptManager+4)^(0+256),w
  8627  0030  0023               	movlb	3	; select bank3
  8628  0031  00EC               	movwf	_Uadc^(0+384)	;volatile
  8629  0032  0022               	movlb	2	; select bank2
  8630  0033  086A               	movf	(??_INTERRUPT_InterruptManager+5)^(0+256),w
  8631  0034  0023               	movlb	3	; select bank3
  8632  0035  00ED               	movwf	(_Uadc+1)^(0+384)	;volatile
  8633                           
  8634                           ;main.c: 487: FVRCON = 0x82;
  8635  0036  3082               	movlw	130
  8636  0037  0022               	movlb	2	; select bank2
  8637  0038  0097               	movwf	23	;volatile
  8638                           
  8639                           ;main.c: 488: ADC_SelectChannel(channel_AN3);
  8640  0039  3003               	movlw	3
  8641  003A  319D  25D6  3180   	fcall	_ADC_SelectChannel
  8642                           
  8643                           ;main.c: 489: if(MAIN_upConverterFlag) pwmCorrection = ((pwmCorrection<<2) + Iadc)>>3;
  8644  003D  0024               	movlb	4	; select bank4
  8645  003E  0849               	movf	_MAIN_upConverterFlag^(0+512),w
  8646  003F  1903               	btfsc	3,2
  8647  0040  2858               	goto	i1l5999
  8648  0041  0845               	movf	INTERRUPT_InterruptManager@pwmCorrection^(0+512),w
  8649  0042  0022               	movlb	2	; select bank2
  8650  0043  00E5               	movwf	??_INTERRUPT_InterruptManager^(0+256)
  8651  0044  01E6               	clrf	(??_INTERRUPT_InterruptManager^(0+256)+1)
  8652  0045  1BE5               	btfsc	??_INTERRUPT_InterruptManager^(0+256),7
  8653  0046  03E6               	decf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8654  0047  35E5               	lslf	??_INTERRUPT_InterruptManager^(0+256),f
  8655  0048  0DE6               	rlf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8656  0049  35E5               	lslf	??_INTERRUPT_InterruptManager^(0+256),f
  8657  004A  0DE6               	rlf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8658  004B  0023               	movlb	3	; select bank3
  8659  004C  085A               	movf	_Iadc^(0+384),w	;volatile
  8660  004D  0022               	movlb	2	; select bank2
  8661  004E  0765               	addwf	??_INTERRUPT_InterruptManager^(0+256),w
  8662  004F  00E7               	movwf	(??_INTERRUPT_InterruptManager+2)^(0+256)
  8663  0050  0023               	movlb	3	; select bank3
  8664  0051  085B               	movf	(_Iadc+1)^(0+384),w	;volatile
  8665  0052  0022               	movlb	2	; select bank2
  8666  0053  3D66               	addwfc	(??_INTERRUPT_InterruptManager+1)^(0+256),w
  8667  0054  00E8               	movwf	(??_INTERRUPT_InterruptManager+3)^(0+256)
  8668  0055  36E8               	lsrf	((??_INTERRUPT_InterruptManager+2)^(0+256)+1),f
  8669  0056  0CE7               	rrf	(??_INTERRUPT_InterruptManager+2)^(0+256),f
  8670  0057  286A               	goto	L10
  8671  0058                     i1l5999:	
  8672                           
  8673                           ;main.c: 490: else pwmCorrection = ((pwmCorrection<<1) + Iadc)>>2;
  8674  0058  0845               	movf	INTERRUPT_InterruptManager@pwmCorrection^(0+512),w
  8675  0059  0022               	movlb	2	; select bank2
  8676  005A  00E5               	movwf	??_INTERRUPT_InterruptManager^(0+256)
  8677  005B  01E6               	clrf	(??_INTERRUPT_InterruptManager^(0+256)+1)
  8678  005C  1BE5               	btfsc	??_INTERRUPT_InterruptManager^(0+256),7
  8679  005D  03E6               	decf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8680  005E  35E5               	lslf	??_INTERRUPT_InterruptManager^(0+256),f
  8681  005F  0DE6               	rlf	(??_INTERRUPT_InterruptManager^(0+256)+1),f
  8682  0060  0023               	movlb	3	; select bank3
  8683  0061  085A               	movf	_Iadc^(0+384),w	;volatile
  8684  0062  0022               	movlb	2	; select bank2
  8685  0063  0765               	addwf	??_INTERRUPT_InterruptManager^(0+256),w
  8686  0064  00E7               	movwf	(??_INTERRUPT_InterruptManager+2)^(0+256)
  8687  0065  0023               	movlb	3	; select bank3
  8688  0066  085B               	movf	(_Iadc+1)^(0+384),w	;volatile
  8689  0067  0022               	movlb	2	; select bank2
  8690  0068  3D66               	addwfc	(??_INTERRUPT_InterruptManager+1)^(0+256),w
  8691  0069  00E8               	movwf	(??_INTERRUPT_InterruptManager+3)^(0+256)
  8692  006A                     L10:	
  8693  006A  36E8               	lsrf	((??_INTERRUPT_InterruptManager+2)^(0+256)+1),f
  8694  006B  0CE7               	rrf	(??_INTERRUPT_InterruptManager+2)^(0+256),f
  8695  006C  36E8               	lsrf	((??_INTERRUPT_InterruptManager+2)^(0+256)+1),f
  8696  006D  0CE7               	rrf	(??_INTERRUPT_InterruptManager+2)^(0+256),f
  8697  006E  0867               	movf	(??_INTERRUPT_InterruptManager+2)^(0+256),w
  8698  006F  00E9               	movwf	(??_INTERRUPT_InterruptManager+4)^(0+256)
  8699  0070  0869               	movf	(??_INTERRUPT_InterruptManager+4)^(0+256),w
  8700  0071  0024               	movlb	4	; select bank4
  8701  0072  00C5               	movwf	INTERRUPT_InterruptManager@pwmCorrection^(0+512)
  8702                           
  8703                           ;main.c: 492: if((Uadc > Uadc_target) || (2 == MAIN_ovcFlag)) {
  8704  0073  0023               	movlb	3	; select bank3
  8705  0074  086D               	movf	(_Uadc+1)^(0+384),w	;volatile
  8706  0075  0024               	movlb	4	; select bank4
  8707  0076  023A               	subwf	(_Uadc_target+1)^(0+512),w
  8708  0077  1D03               	skipz
  8709  0078  287D               	goto	u611_25
  8710  0079  0023               	movlb	3	; select bank3
  8711  007A  086C               	movf	_Uadc^(0+384),w	;volatile
  8712  007B  0024               	movlb	4	; select bank4
  8713  007C  0239               	subwf	_Uadc_target^(0+512),w
  8714  007D                     u611_25:	
  8715  007D  1C03               	skipc
  8716  007E  2883               	goto	i1l6005
  8717  007F  3002               	movlw	2
  8718  0080  0648               	xorwf	_MAIN_ovcFlag^(0+512),w
  8719  0081  1D03               	btfss	3,2
  8720  0082  2887               	goto	i1l6007
  8721  0083                     i1l6005:	
  8722                           
  8723                           ;main.c: 493: PWM2_LoadDutyValue(0);
  8724  0083  3000               	movlw	0
  8725  0084  00F0               	movwf	i1PWM2_LoadDutyValue@dutyValue
  8726  0085  00F1               	movwf	i1PWM2_LoadDutyValue@dutyValue+1
  8727  0086  28BE               	goto	L11
  8728  0087                     i1l6007:	
  8729                           ;main.c: 494: } else {
  8730                           
  8731                           
  8732                           ;main.c: 495: pwm = PwmDutyCycleVoltageLimit+pwmCorrection;
  8733  0087  0024               	movlb	4	; select bank4
  8734  0088  084A               	movf	_PwmDutyCycleVoltageLimit^(0+512),w
  8735  0089  0745               	addwf	INTERRUPT_InterruptManager@pwmCorrection^(0+512),w
  8736  008A  0022               	movlb	2	; select bank2
  8737  008B  00EC               	movwf	INTERRUPT_InterruptManager@pwm^(0+256)
  8738  008C  01ED               	clrf	(INTERRUPT_InterruptManager@pwm+1)^(0+256)
  8739  008D  1803               	skipnc
  8740  008E  0AED               	incf	(INTERRUPT_InterruptManager@pwm^(0+256)+1),f
  8741  008F  0024               	movlb	4	; select bank4
  8742  0090  1FC5               	btfss	INTERRUPT_InterruptManager@pwmCorrection^(0+512),7
  8743  0091  2894               	goto	u613_24
  8744  0092  0022               	movlb	2	; select bank2
  8745  0093  03ED               	decf	(INTERRUPT_InterruptManager@pwm^(0+256)+1),f
  8746  0094                     u613_24:	
  8747                           
  8748                           ;main.c: 496: if(pwm > ((188))) pwm = ((188));
  8749  0094  3000               	movlw	0
  8750  0095  0022               	movlb	2	; select bank2
  8751  0096  026D               	subwf	(INTERRUPT_InterruptManager@pwm+1)^(0+256),w
  8752  0097  30BD               	movlw	189
  8753  0098  1903               	skipnz
  8754  0099  026C               	subwf	INTERRUPT_InterruptManager@pwm^(0+256),w
  8755  009A  1C03               	skipc
  8756  009B  28A0               	goto	i1l1179
  8757  009C  30BC               	movlw	188
  8758  009D  00EC               	movwf	INTERRUPT_InterruptManager@pwm^(0+256)
  8759  009E  3000               	movlw	0
  8760  009F  00ED               	movwf	(INTERRUPT_InterruptManager@pwm^(0+256)+1)
  8761  00A0                     i1l1179:	
  8762                           
  8763                           ;main.c: 497: if(pwm > PwmDutyCycleCurrentLimit) {
  8764  00A0  0023               	movlb	3	; select bank3
  8765  00A1  085F               	movf	_PwmDutyCycleCurrentLimit^(0+384),w
  8766  00A2  0022               	movlb	2	; select bank2
  8767  00A3  00E5               	movwf	??_INTERRUPT_InterruptManager^(0+256)
  8768  00A4  01E6               	clrf	(??_INTERRUPT_InterruptManager^(0+256)+1)
  8769  00A5  086D               	movf	(INTERRUPT_InterruptManager@pwm+1)^(0+256),w
  8770  00A6  0266               	subwf	(??_INTERRUPT_InterruptManager+1)^(0+256),w
  8771  00A7  1D03               	skipz
  8772  00A8  28AB               	goto	u615_25
  8773  00A9  086C               	movf	INTERRUPT_InterruptManager@pwm^(0+256),w
  8774  00AA  0265               	subwf	??_INTERRUPT_InterruptManager^(0+256),w
  8775  00AB                     u615_25:	
  8776  00AB  1803               	skipnc
  8777  00AC  28B9               	goto	i1l6015
  8778                           
  8779                           ;main.c: 498: pwm = PwmDutyCycleCurrentLimit;
  8780  00AD  0023               	movlb	3	; select bank3
  8781  00AE  085F               	movf	_PwmDutyCycleCurrentLimit^(0+384),w
  8782  00AF  0022               	movlb	2	; select bank2
  8783  00B0  00E5               	movwf	??_INTERRUPT_InterruptManager^(0+256)
  8784  00B1  01E6               	clrf	(??_INTERRUPT_InterruptManager^(0+256)+1)
  8785  00B2  0865               	movf	??_INTERRUPT_InterruptManager^(0+256),w
  8786  00B3  00EC               	movwf	INTERRUPT_InterruptManager@pwm^(0+256)
  8787  00B4  0866               	movf	(??_INTERRUPT_InterruptManager+1)^(0+256),w
  8788  00B5  00ED               	movwf	(INTERRUPT_InterruptManager@pwm+1)^(0+256)
  8789                           
  8790                           ;main.c: 499: MAIN_ovcFlag = 1;
  8791  00B6  0024               	movlb	4	; select bank4
  8792  00B7  01C8               	clrf	_MAIN_ovcFlag^(0+512)
  8793  00B8  0AC8               	incf	_MAIN_ovcFlag^(0+512),f
  8794  00B9                     i1l6015:	
  8795                           
  8796                           ;main.c: 500: }
  8797                           ;main.c: 501: PWM2_LoadDutyValue(pwm);
  8798  00B9  0022               	movlb	2	; select bank2
  8799  00BA  086D               	movf	(INTERRUPT_InterruptManager@pwm+1)^(0+256),w
  8800  00BB  00F1               	movwf	i1PWM2_LoadDutyValue@dutyValue+1
  8801  00BC  086C               	movf	INTERRUPT_InterruptManager@pwm^(0+256),w
  8802  00BD  00F0               	movwf	i1PWM2_LoadDutyValue@dutyValue
  8803  00BE                     L11:	
  8804  00BE  319E  262C  3180   	fcall	i1_PWM2_LoadDutyValue
  8805                           
  8806                           ;main.c: 502: }
  8807                           ;main.c: 505: ADC_StartConversion();
  8808  00C1  319D  2568  3180   	fcall	i1_ADC_StartConversion
  8809                           
  8810                           ;main.c: 506: main_CDC_to_RS485_Tasks();
  8811  00C4  3196  2688  3180   	fcall	_main_CDC_to_RS485_Tasks
  8812  00C7                     i1l6019:	
  8813                           ;main.c: 507: while(0 == ADC_IsConversionDone());
  8814                           
  8815  00C7  319D  2593  3180   	fcall	_ADC_IsConversionDone
  8816  00CA  3A00               	xorlw	0
  8817  00CB  1903               	skipnz
  8818  00CC  28C7               	goto	i1l6019
  8819                           
  8820                           ;main.c: 508: Iadc = ADC_GetConversionResult();
  8821  00CD  319D  2581  3180   	fcall	_ADC_GetConversionResult
  8822  00D0  0871               	movf	?_ADC_GetConversionResult+1,w
  8823  00D1  0023               	movlb	3	; select bank3
  8824  00D2  00DB               	movwf	(_Iadc+1)^(0+384)	;volatile
  8825  00D3  0870               	movf	?_ADC_GetConversionResult,w
  8826  00D4  00DA               	movwf	_Iadc^(0+384)	;volatile
  8827                           
  8828                           ;main.c: 509: FVRCON = 0x83;
  8829  00D5  3083               	movlw	131
  8830  00D6  0022               	movlb	2	; select bank2
  8831  00D7  0097               	movwf	23	;volatile
  8832                           
  8833                           ;main.c: 510: ADC_SelectChannel(channel_AN6);
  8834  00D8  3006               	movlw	6
  8835  00D9  319D  25D6  3180   	fcall	_ADC_SelectChannel
  8836                           
  8837                           ;main.c: 511: USBDeviceTasks();
  8838  00DC  318F  2704  3180   	fcall	_USBDeviceTasks
  8839                           
  8840                           ;main.c: 512: ADC_StartConversion();
  8841  00DF  319D  2568         	fcall	i1_ADC_StartConversion
  8842                           
  8843                           ;main.c: 515: PIR1bits.ADIF = 0;
  8844  00E1  0020               	movlb	0	; select bank0
  8845  00E2  1311               	bcf	17,6	;volatile
  8846  00E3  0022               	movlb	2	; select bank2
  8847  00E4  086B               	movf	(??_INTERRUPT_InterruptManager+6)^(0+256),w
  8848  00E5  0020               	movlb	0	; select bank0
  8849  00E6  00FF               	movwf	127
  8850  00E7  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8851  00E8  0009               	retfie
  8852  00E9                     __end_of_INTERRUPT_InterruptManager:	
  8853                           
  8854                           	psect	text34
  8855  1E2C                     __ptext34:	
  8856 ;; *************** function i1_PWM2_LoadDutyValue *****************
  8857 ;; Defined at:
  8858 ;;		line 71 in file "mcc_generated_files/pwm2.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;  dutyValue       2    0[COMMON] unsigned int 
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      void 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2, status,0
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8875 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8876 ;;Total ram usage:        4 bytes
  8877 ;; Hardware stack levels used:    1
  8878 ;; This function calls:
  8879 ;;		Nothing
  8880 ;; This function is called by:
  8881 ;;		_INTERRUPT_InterruptManager
  8882 ;; This function uses a non-reentrant model
  8883 ;;
  8884                           
  8885                           
  8886                           ;psect for function i1_PWM2_LoadDutyValue
  8887  1E2C                     i1_PWM2_LoadDutyValue:	
  8888                           
  8889                           ;pwm2.c: 74: PWM2DCH = (dutyValue & 0x03FC)>>2;
  8890                           
  8891                           ;incstack = 0
  8892                           ; Regs used in i1_PWM2_LoadDutyValue: [wreg+status,2+status,0]
  8893  1E2C  0871               	movf	i1PWM2_LoadDutyValue@dutyValue+1,w
  8894  1E2D  00F3               	movwf	??i1_PWM2_LoadDutyValue+1
  8895  1E2E  0870               	movf	i1PWM2_LoadDutyValue@dutyValue,w
  8896  1E2F  00F2               	movwf	??i1_PWM2_LoadDutyValue
  8897  1E30  36F3               	lsrf	??i1_PWM2_LoadDutyValue+1,f
  8898  1E31  0CF2               	rrf	??i1_PWM2_LoadDutyValue,f
  8899  1E32  36F3               	lsrf	??i1_PWM2_LoadDutyValue+1,f
  8900  1E33  0CF2               	rrf	??i1_PWM2_LoadDutyValue,f
  8901  1E34  0872               	movf	??i1_PWM2_LoadDutyValue,w
  8902  1E35  002C               	movlb	12	; select bank12
  8903  1E36  0095               	movwf	21	;volatile
  8904                           
  8905                           ;pwm2.c: 77: PWM2DCL = (dutyValue & 0x0003)<<6;
  8906  1E37  0870               	movf	i1PWM2_LoadDutyValue@dutyValue,w
  8907  1E38  3903               	andlw	3
  8908  1E39  00F2               	movwf	??i1_PWM2_LoadDutyValue
  8909  1E3A  3005               	movlw	5
  8910  1E3B                     u585_25:	
  8911  1E3B  35F2               	lslf	??i1_PWM2_LoadDutyValue,f
  8912  1E3C  3EFF               	addlw	-1
  8913  1E3D  1D03               	skipz
  8914  1E3E  2E3B               	goto	u585_25
  8915  1E3F  3572               	lslf	??i1_PWM2_LoadDutyValue,w
  8916  1E40  0094               	movwf	20	;volatile
  8917  1E41  0008               	return
  8918  1E42                     __end_ofi1_PWM2_LoadDutyValue:	
  8919                           
  8920                           	psect	text35
  8921  1D68                     __ptext35:	
  8922 ;; *************** function i1_ADC_StartConversion *****************
  8923 ;; Defined at:
  8924 ;;		line 95 in file "mcc_generated_files/adc.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;		None
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;		None
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      void 
  8931 ;; Registers used:
  8932 ;;		None
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8942 ;;Total ram usage:        0 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; This function calls:
  8945 ;;		Nothing
  8946 ;; This function is called by:
  8947 ;;		_INTERRUPT_InterruptManager
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           
  8952                           ;psect for function i1_ADC_StartConversion
  8953  1D68                     i1_ADC_StartConversion:	
  8954                           
  8955                           ;adc.c: 98: ADCON0bits.GO_nDONE = 1;
  8956                           
  8957                           ;incstack = 0
  8958                           ; Regs used in i1_ADC_StartConversion: []
  8959  1D68  0021               	movlb	1	; select bank1
  8960  1D69  149D               	bsf	29,1	;volatile
  8961  1D6A  0008               	return
  8962  1D6B                     __end_ofi1_ADC_StartConversion:	
  8963                           
  8964                           	psect	text36
  8965  1688                     __ptext36:	
  8966 ;; *************** function _main_CDC_to_RS485_Tasks *****************
  8967 ;; Defined at:
  8968 ;;		line 114 in file "main.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;		None
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      void 
  8975 ;; Registers used:
  8976 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  8982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  8984 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0
  8985 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0
  8986 ;;Total ram usage:        2 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:    2
  8989 ;; This function calls:
  8990 ;;		_CDCTxService2
  8991 ;;		_USART_getcUSART
  8992 ;;		_USART_putcUSART
  8993 ;;		_getsUSBUSART2
  8994 ;;		_putUSBUSART2
  8995 ;; This function is called by:
  8996 ;;		_INTERRUPT_InterruptManager
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           
  9001                           ;psect for function _main_CDC_to_RS485_Tasks
  9002  1688                     _main_CDC_to_RS485_Tasks:	
  9003                           
  9004                           ;main.c: 119: if( USBDeviceState < CONFIGURED_STATE )
  9005                           
  9006                           ;incstack = 0
  9007                           ; Regs used in _main_CDC_to_RS485_Tasks: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  9008  1688  3020               	movlw	32
  9009  1689  0023               	movlb	3	; select bank3
  9010  168A  0261               	subwf	_USBDeviceState^(0+384),w
  9011  168B  1C03               	btfss	3,0
  9012  168C  0008               	return
  9013                           
  9014                           ;main.c: 122: }
  9015                           ;main.c: 128: if( UCONbits.SUSPND== 1 )
  9016                           
  9017                           ;main.c: 120: {
  9018                           ;main.c: 121: return;
  9019  168D  003D               	movlb	29	; select bank29
  9020  168E  188E               	btfsc	14,1	;volatile
  9021  168F  0008               	return
  9022                           
  9023                           ;main.c: 131: }
  9024                           ;main.c: 153: if (RS232_Out_Data_Rdy == 0)
  9025                           
  9026                           ;main.c: 129: {
  9027                           ;main.c: 130: return;
  9028  1690  0024               	movlb	4	; select bank4
  9029  1691  084B               	movf	_RS232_Out_Data_Rdy^(0+512),w
  9030  1692  1D03               	btfss	3,2
  9031  1693  2EB0               	goto	i1l5659
  9032                           
  9033                           ;main.c: 154: {
  9034                           ;main.c: 155: LastRS232Out = getsUSBUSART2(RS232_Out_Data,64);
  9035  1694  3040               	movlw	64
  9036  1695  0021               	movlb	1	; select bank1
  9037  1696  00E1               	movwf	??_main_CDC_to_RS485_Tasks^(0+128)
  9038  1697  0861               	movf	??_main_CDC_to_RS485_Tasks^(0+128),w
  9039  1698  00FB               	movwf	getsUSBUSART2@len
  9040  1699  30A0               	movlw	(low (_RS232_Out_Data| (0+1280)))& (0+255)
  9041  169A  3192  2231  3196   	fcall	_getsUSBUSART2
  9042  169D  0021               	movlb	1	; select bank1
  9043  169E  00E2               	movwf	(??_main_CDC_to_RS485_Tasks+1)^(0+128)
  9044  169F  0862               	movf	(??_main_CDC_to_RS485_Tasks+1)^(0+128),w
  9045  16A0  0024               	movlb	4	; select bank4
  9046  16A1  00C7               	movwf	_LastRS232Out^(0+512)
  9047                           
  9048                           ;main.c: 156: if(LastRS232Out > 0)
  9049  16A2  0847               	movf	_LastRS232Out^(0+512),w
  9050  16A3  1903               	btfsc	3,2
  9051  16A4  2EAB               	goto	i1l1050
  9052                           
  9053                           ;main.c: 157: {
  9054                           ;main.c: 158: RS232_Out_Data_Rdy = 1;
  9055  16A5  01CB               	clrf	_RS232_Out_Data_Rdy^(0+512)
  9056  16A6  0ACB               	incf	_RS232_Out_Data_Rdy^(0+512),f
  9057                           
  9058                           ;main.c: 159: RS232cp = 0;
  9059  16A7  01CC               	clrf	_RS232cp^(0+512)
  9060                           
  9061                           ;main.c: 160: do { LATCbits.LATC1 = 1; } while(0);
  9062  16A8  0022               	movlb	2	; select bank2
  9063  16A9  148E               	bsf	14,1	;volatile
  9064                           
  9065                           ;main.c: 161: } else {
  9066  16AA  2EB0               	goto	i1l5659
  9067  16AB                     i1l1050:	
  9068                           
  9069                           ;main.c: 162: if(TXSTAbits.TRMT) do { LATCbits.LATC1 = 0; } while(0);
  9070  16AB  0023               	movlb	3	; select bank3
  9071  16AC  1C9E               	btfss	30,1	;volatile
  9072  16AD  2EB0               	goto	i1l5659
  9073  16AE  0022               	movlb	2	; select bank2
  9074  16AF  108E               	bcf	14,1	;volatile
  9075  16B0                     i1l5659:	
  9076                           
  9077                           ;main.c: 163: }
  9078                           ;main.c: 164: }
  9079                           ;main.c: 169: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
  9080  16B0  0024               	movlb	4	; select bank4
  9081  16B1  084B               	movf	_RS232_Out_Data_Rdy^(0+512),w
  9082  16B2  1903               	btfsc	3,2
  9083  16B3  2ECB               	goto	i1l5671
  9084  16B4  0023               	movlb	3	; select bank3
  9085  16B5  1C9E               	btfss	30,1	;volatile
  9086  16B6  2ECB               	goto	i1l5671
  9087                           
  9088                           ;main.c: 170: {
  9089                           ;main.c: 172: USART_putcUSART(RS232_Out_Data[RS232cp]);
  9090  16B7  0024               	movlb	4	; select bank4
  9091  16B8  084C               	movf	_RS232cp^(0+512),w
  9092  16B9  3EA0               	addlw	(low (_RS232_Out_Data| (0+1280)))& (0+255)
  9093  16BA  0086               	movwf	6
  9094  16BB  3005               	movlw	5	; select bank11/12
  9095  16BC  0087               	movwf	7
  9096  16BD  0801               	movf	1,w
  9097  16BE  319D  257C  3196   	fcall	_USART_putcUSART
  9098                           
  9099                           ;main.c: 173: ++RS232cp;
  9100  16C1  3001               	movlw	1
  9101  16C2  0021               	movlb	1	; select bank1
  9102  16C3  00E1               	movwf	??_main_CDC_to_RS485_Tasks^(0+128)
  9103  16C4  0861               	movf	??_main_CDC_to_RS485_Tasks^(0+128),w
  9104  16C5  0024               	movlb	4	; select bank4
  9105  16C6  07CC               	addwf	_RS232cp^(0+512),f
  9106                           
  9107                           ;main.c: 174: if (RS232cp == LastRS232Out) {
  9108  16C7  084C               	movf	_RS232cp^(0+512),w
  9109  16C8  0647               	xorwf	_LastRS232Out^(0+512),w
  9110  16C9  1903               	btfsc	3,2
  9111                           
  9112                           ;main.c: 175: RS232_Out_Data_Rdy = 0;
  9113  16CA  01CB               	clrf	_RS232_Out_Data_Rdy^(0+512)
  9114  16CB                     i1l5671:	
  9115                           
  9116                           ;main.c: 176: }
  9117                           ;main.c: 177: }
  9118                           ;main.c: 181: if(PIR1bits.RCIF && (NextUSBOut < (64 - 1)))
  9119  16CB  0020               	movlb	0	; select bank0
  9120  16CC  1E91               	btfss	17,5	;volatile
  9121  16CD  2EEC               	goto	i1l5681
  9122  16CE  303F               	movlw	63
  9123  16CF  0023               	movlb	3	; select bank3
  9124  16D0  025E               	subwf	_NextUSBOut^(0+384),w
  9125  16D1  1803               	skipnc
  9126  16D2  2EEC               	goto	i1l5681
  9127                           
  9128                           ;main.c: 182: {
  9129                           ;main.c: 183: USB_Out_Buffer[NextUSBOut] = USART_getcUSART();
  9130  16D3  319D  25F2  3196   	fcall	_USART_getcUSART
  9131  16D6  0021               	movlb	1	; select bank1
  9132  16D7  00E1               	movwf	??_main_CDC_to_RS485_Tasks^(0+128)
  9133  16D8  0023               	movlb	3	; select bank3
  9134  16D9  085E               	movf	_NextUSBOut^(0+384),w
  9135  16DA  3E20               	addlw	(low (_USB_Out_Buffer| (0+1024)))& (0+255)
  9136  16DB  0086               	movwf	6
  9137  16DC  3004               	movlw	4	; select bank8/9
  9138  16DD  0087               	movwf	7
  9139  16DE  0021               	movlb	1	; select bank1
  9140  16DF  0861               	movf	??_main_CDC_to_RS485_Tasks^(0+128),w
  9141  16E0  0081               	movwf	1
  9142                           
  9143                           ;main.c: 184: ++NextUSBOut;
  9144  16E1  3001               	movlw	1
  9145  16E2  00E1               	movwf	??_main_CDC_to_RS485_Tasks^(0+128)
  9146  16E3  0861               	movf	??_main_CDC_to_RS485_Tasks^(0+128),w
  9147  16E4  0023               	movlb	3	; select bank3
  9148  16E5  07DE               	addwf	_NextUSBOut^(0+384),f
  9149                           
  9150                           ;main.c: 185: USB_Out_Buffer[NextUSBOut] = 0;
  9151  16E6  085E               	movf	_NextUSBOut^(0+384),w
  9152  16E7  3E20               	addlw	(low (_USB_Out_Buffer| (0+1024)))& (0+255)
  9153  16E8  0086               	movwf	6
  9154  16E9  3004               	movlw	4	; select bank8/9
  9155  16EA  0087               	movwf	7
  9156  16EB  0181               	clrf	1
  9157  16EC                     i1l5681:	
  9158                           
  9159                           ;main.c: 186: }
  9160                           ;main.c: 191: if(((cdc_trf_state2 == 0)) && (NextUSBOut > 0))
  9161  16EC  0023               	movlb	3	; select bank3
  9162  16ED  0865               	movf	_cdc_trf_state2^(0+384),w
  9163  16EE  1D03               	btfss	3,2
  9164  16EF  2EFE               	goto	i1l5689
  9165  16F0  085E               	movf	_NextUSBOut^(0+384),w
  9166  16F1  1903               	btfsc	3,2
  9167  16F2  2EFE               	goto	i1l5689
  9168                           
  9169                           ;main.c: 192: {
  9170                           ;main.c: 193: putUSBUSART2(&USB_Out_Buffer[0], NextUSBOut);
  9171  16F3  085E               	movf	_NextUSBOut^(0+384),w
  9172  16F4  0021               	movlb	1	; select bank1
  9173  16F5  00E1               	movwf	??_main_CDC_to_RS485_Tasks^(0+128)
  9174  16F6  0861               	movf	??_main_CDC_to_RS485_Tasks^(0+128),w
  9175  16F7  00F0               	movwf	putUSBUSART2@length
  9176  16F8  3020               	movlw	(low (_USB_Out_Buffer| (0+1024)))& (0+255)
  9177  16F9  319E  2616  3196   	fcall	_putUSBUSART2
  9178                           
  9179                           ;main.c: 194: NextUSBOut = 0;
  9180  16FC  0023               	movlb	3	; select bank3
  9181  16FD  01DE               	clrf	_NextUSBOut^(0+384)
  9182  16FE                     i1l5689:	
  9183                           
  9184                           ;main.c: 195: }
  9185                           ;main.c: 197: CDCTxService2();
  9186  16FE  318C  244A         	fcall	_CDCTxService2
  9187  1700  0008               	return
  9188  1701                     __end_of_main_CDC_to_RS485_Tasks:	
  9189                           
  9190                           	psect	text37
  9191  1E16                     __ptext37:	
  9192 ;; *************** function _putUSBUSART2 *****************
  9193 ;; Defined at:
  9194 ;;		line 556 in file "usb/core/usb_device_cdc2.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;  data            1    wreg     PTR unsigned char 
  9197 ;;		 -> USB_Out_Buffer(64), 
  9198 ;;  length          1    0[COMMON] unsigned char 
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;  data            1    2[COMMON] PTR unsigned char 
  9201 ;;		 -> USB_Out_Buffer(64), 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  1    wreg      void 
  9204 ;; Registers used:
  9205 ;;		wreg, status,2, status,0
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9211 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9214 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9215 ;;Total ram usage:        3 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; This function calls:
  9218 ;;		Nothing
  9219 ;; This function is called by:
  9220 ;;		_main_CDC_to_RS485_Tasks
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           
  9225                           ;psect for function _putUSBUSART2
  9226  1E16                     _putUSBUSART2:	
  9227                           
  9228                           ;incstack = 0
  9229                           ; Regs used in _putUSBUSART2: [wreg+status,2+status,0]
  9230                           ;putUSBUSART2@data stored from wreg
  9231  1E16  00F2               	movwf	putUSBUSART2@data
  9232                           
  9233                           ;usb_device_cdc2.c: 581: ;
  9234                           ;usb_device_cdc2.c: 582: if(cdc_trf_state2 == 0)
  9235  1E17  0023               	movlb	3	; select bank3
  9236  1E18  0865               	movf	_cdc_trf_state2^(0+384),w
  9237  1E19  1D03               	btfss	3,2
  9238  1E1A  0008               	return
  9239                           
  9240                           ;usb_device_cdc2.c: 583: {
  9241                           ;usb_device_cdc2.c: 584: { pCDCSrc2.bRam = (uint8_t*)data; cdc_tx_len2 = length; cdc_mem
      +                          _type2 = 0x01; cdc_trf_state2 = 1; };
  9242  1E1B  0872               	movf	putUSBUSART2@data,w
  9243  1E1C  00F1               	movwf	??_putUSBUSART2
  9244  1E1D  0871               	movf	??_putUSBUSART2,w
  9245  1E1E  0024               	movlb	4	; select bank4
  9246  1E1F  00C1               	movwf	_pCDCSrc2^(0+512)
  9247  1E20  0870               	movf	putUSBUSART2@length,w
  9248  1E21  00F1               	movwf	??_putUSBUSART2
  9249  1E22  0871               	movf	??_putUSBUSART2,w
  9250  1E23  0023               	movlb	3	; select bank3
  9251  1E24  00E7               	movwf	_cdc_tx_len2^(0+384)
  9252  1E25  0024               	movlb	4	; select bank4
  9253  1E26  01D6               	clrf	_cdc_mem_type2^(0+512)
  9254  1E27  0AD6               	incf	_cdc_mem_type2^(0+512),f
  9255  1E28  0023               	movlb	3	; select bank3
  9256  1E29  01E5               	clrf	_cdc_trf_state2^(0+384)
  9257  1E2A  0AE5               	incf	_cdc_trf_state2^(0+384),f
  9258  1E2B  0008               	return
  9259  1E2C                     __end_of_putUSBUSART2:	
  9260                           
  9261                           	psect	text38
  9262  1231                     __ptext38:	
  9263 ;; *************** function _getsUSBUSART2 *****************
  9264 ;; Defined at:
  9265 ;;		line 485 in file "usb/core/usb_device_cdc2.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;  buffer          1    wreg     PTR unsigned char 
  9268 ;;		 -> RS232_Out_Data(64), 
  9269 ;;  len             1   11[COMMON] unsigned char 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;  buffer          1    0[BANK1 ] PTR unsigned char 
  9272 ;;		 -> RS232_Out_Data(64), 
  9273 ;; Return value:  Size  Location     Type
  9274 ;;                  1    wreg      unsigned char 
  9275 ;; Registers used:
  9276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9277 ;; Tracked objects:
  9278 ;;		On entry : 0/0
  9279 ;;		On exit  : 0/0
  9280 ;;		Unchanged: 0/0
  9281 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9282 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9283 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
  9284 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9285 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0
  9286 ;;Total ram usage:        4 bytes
  9287 ;; Hardware stack levels used:    1
  9288 ;; Hardware stack levels required when called:    1
  9289 ;; This function calls:
  9290 ;;		i1_USBTransferOnePacket
  9291 ;; This function is called by:
  9292 ;;		_main_CDC_to_RS485_Tasks
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           
  9297                           ;psect for function _getsUSBUSART2
  9298  1231                     _getsUSBUSART2:	
  9299                           
  9300                           ;incstack = 0
  9301                           ; Regs used in _getsUSBUSART2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9302                           ;getsUSBUSART2@buffer stored from wreg
  9303  1231  0021               	movlb	1	; select bank1
  9304  1232  00E0               	movwf	getsUSBUSART2@buffer^(0+128)
  9305                           
  9306                           ;usb_device_cdc2.c: 487: cdc_rx_len2 = 0;
  9307  1233  0023               	movlb	3	; select bank3
  9308  1234  01E3               	clrf	_cdc_rx_len2^(0+384)
  9309                           
  9310                           ;usb_device_cdc2.c: 489: if(!((CDCDataOutHandle2 != 0x0000) && ((*(volatile uint8_t*)CDC
      +                          DataOutHandle2 & 0x80) != 0x00)))
  9311  1235  0024               	movlb	4	; select bank4
  9312  1236  082D               	movf	_CDCDataOutHandle2^(0+512),w
  9313  1237  042E               	iorwf	(_CDCDataOutHandle2+1)^(0+512),w
  9314  1238  1903               	btfsc	3,2
  9315  1239  2A40               	goto	i1l5131
  9316  123A  082D               	movf	_CDCDataOutHandle2^(0+512),w
  9317  123B  0086               	movwf	6
  9318  123C  082E               	movf	(_CDCDataOutHandle2+1)^(0+512),w
  9319  123D  0087               	movwf	7
  9320  123E  1B81               	btfsc	1,7
  9321  123F  2A80               	goto	i1l5145
  9322  1240                     i1l5131:	
  9323                           
  9324                           ;usb_device_cdc2.c: 490: {
  9325                           ;usb_device_cdc2.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle2)->CNT))
  9326  1240  082D               	movf	_CDCDataOutHandle2^(0+512),w
  9327  1241  0086               	movwf	6
  9328  1242  082E               	movf	(_CDCDataOutHandle2+1)^(0+512),w
  9329  1243  0087               	movwf	7
  9330  1244  3141               	addfsr 1,1
  9331  1245  087B               	movf	getsUSBUSART2@len,w
  9332  1246  0201               	subwf	1,w
  9333  1247  1803               	skipnc
  9334  1248  2A52               	goto	i1l5135
  9335                           
  9336                           ;usb_device_cdc2.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle2)->CNT);
  9337  1249  082D               	movf	_CDCDataOutHandle2^(0+512),w
  9338  124A  0086               	movwf	6
  9339  124B  082E               	movf	(_CDCDataOutHandle2+1)^(0+512),w
  9340  124C  0087               	movwf	7
  9341  124D  3141               	addfsr 1,1
  9342  124E  0801               	movf	1,w
  9343  124F  00FC               	movwf	??_getsUSBUSART2
  9344  1250  087C               	movf	??_getsUSBUSART2,w
  9345  1251  00FB               	movwf	getsUSBUSART2@len
  9346  1252                     i1l5135:	
  9347                           
  9348                           ;usb_device_cdc2.c: 501: for(cdc_rx_len2 = 0; cdc_rx_len2 < len; cdc_rx_len2++)
  9349  1252  0023               	movlb	3	; select bank3
  9350  1253  01E3               	clrf	_cdc_rx_len2^(0+384)
  9351  1254                     i1l5141:	
  9352  1254  087B               	movf	getsUSBUSART2@len,w
  9353  1255  0263               	subwf	_cdc_rx_len2^(0+384),w
  9354  1256  1803               	btfsc	3,0
  9355  1257  2A6F               	goto	i1l5143
  9356                           
  9357                           ;usb_device_cdc2.c: 502: buffer[cdc_rx_len2] = cdc_data_rx2[cdc_rx_len2];
  9358  1258  0863               	movf	_cdc_rx_len2^(0+384),w
  9359  1259  3E20               	addlw	32
  9360  125A  0086               	movwf	6
  9361  125B  3001               	movlw	1	; select bank2/3
  9362  125C  0087               	movwf	7
  9363  125D  0801               	movf	1,w
  9364  125E  00FC               	movwf	??_getsUSBUSART2
  9365  125F  0863               	movf	_cdc_rx_len2^(0+384),w
  9366  1260  0021               	movlb	1	; select bank1
  9367  1261  0760               	addwf	getsUSBUSART2@buffer^(0+128),w
  9368  1262  00FD               	movwf	??_getsUSBUSART2+1
  9369  1263  087D               	movf	??_getsUSBUSART2+1,w
  9370  1264  0086               	movwf	6
  9371  1265  3005               	movlw	5	; select bank10/11
  9372  1266  0087               	movwf	7
  9373  1267  087C               	movf	??_getsUSBUSART2,w
  9374  1268  0081               	movwf	1
  9375  1269  3001               	movlw	1
  9376  126A  00FC               	movwf	??_getsUSBUSART2
  9377  126B  087C               	movf	??_getsUSBUSART2,w
  9378  126C  0023               	movlb	3	; select bank3
  9379  126D  07E3               	addwf	_cdc_rx_len2^(0+384),f
  9380  126E  2A54               	goto	i1l5141
  9381  126F                     i1l5143:	
  9382                           
  9383                           ;usb_device_cdc2.c: 508: CDCDataOutHandle2 = USBTransferOnePacket(4,0,(uint8_t*)&cdc_dat
      +                          a_rx2,sizeof(cdc_data_rx2));
  9384  126F  01F0               	clrf	i1USBTransferOnePacket@dir
  9385  1270  3020               	movlw	32
  9386  1271  00F1               	movwf	i1USBTransferOnePacket@data
  9387  1272  3001               	movlw	1
  9388  1273  00F2               	movwf	i1USBTransferOnePacket@data+1
  9389  1274  3040               	movlw	64
  9390  1275  00FC               	movwf	??_getsUSBUSART2
  9391  1276  087C               	movf	??_getsUSBUSART2,w
  9392  1277  00F3               	movwf	i1USBTransferOnePacket@len
  9393  1278  3004               	movlw	4
  9394  1279  3188  20F9         	fcall	i1_USBTransferOnePacket
  9395  127B  0871               	movf	?i1_USBTransferOnePacket+1,w
  9396  127C  0024               	movlb	4	; select bank4
  9397  127D  00AE               	movwf	(_CDCDataOutHandle2+1)^(0+512)
  9398  127E  0870               	movf	?i1_USBTransferOnePacket,w
  9399  127F  00AD               	movwf	_CDCDataOutHandle2^(0+512)
  9400  1280                     i1l5145:	
  9401                           
  9402                           ;usb_device_cdc2.c: 510: }
  9403                           ;usb_device_cdc2.c: 512: return cdc_rx_len2;
  9404  1280  0023               	movlb	3	; select bank3
  9405  1281  0863               	movf	_cdc_rx_len2^(0+384),w
  9406  1282  0008               	return
  9407  1283                     __end_of_getsUSBUSART2:	
  9408                           
  9409                           	psect	text39
  9410  1D7C                     __ptext39:	
  9411 ;; *************** function _USART_putcUSART *****************
  9412 ;; Defined at:
  9413 ;;		line 66 in file "app_uart_usb_utils.c"
  9414 ;; Parameters:    Size  Location     Type
  9415 ;;  c               1    wreg     unsigned char 
  9416 ;; Auto vars:     Size  Location     Type
  9417 ;;  c               1    0[COMMON] unsigned char 
  9418 ;; Return value:  Size  Location     Type
  9419 ;;                  1    wreg      void 
  9420 ;; Registers used:
  9421 ;;		wreg
  9422 ;; Tracked objects:
  9423 ;;		On entry : 0/0
  9424 ;;		On exit  : 0/0
  9425 ;;		Unchanged: 0/0
  9426 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9430 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9431 ;;Total ram usage:        1 bytes
  9432 ;; Hardware stack levels used:    1
  9433 ;; This function calls:
  9434 ;;		Nothing
  9435 ;; This function is called by:
  9436 ;;		_main_CDC_to_RS485_Tasks
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           
  9440                           
  9441                           ;psect for function _USART_putcUSART
  9442  1D7C                     _USART_putcUSART:	
  9443                           
  9444                           ;incstack = 0
  9445                           ; Regs used in _USART_putcUSART: [wreg]
  9446                           ;USART_putcUSART@c stored from wreg
  9447  1D7C  00F0               	movwf	USART_putcUSART@c
  9448                           
  9449                           ;app_uart_usb_utils.c: 68: TXREG = c;
  9450  1D7D  0870               	movf	USART_putcUSART@c,w
  9451  1D7E  0023               	movlb	3	; select bank3
  9452  1D7F  009A               	movwf	26	;volatile
  9453  1D80  0008               	return
  9454  1D81                     __end_of_USART_putcUSART:	
  9455                           
  9456                           	psect	text40
  9457  1DF2                     __ptext40:	
  9458 ;; *************** function _USART_getcUSART *****************
  9459 ;; Defined at:
  9460 ;;		line 142 in file "app_uart_usb_utils.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;		None
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  c               1    1[COMMON] unsigned char 
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  1    wreg      unsigned char 
  9467 ;; Registers used:
  9468 ;;		wreg
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9478 ;;Total ram usage:        2 bytes
  9479 ;; Hardware stack levels used:    1
  9480 ;; This function calls:
  9481 ;;		Nothing
  9482 ;; This function is called by:
  9483 ;;		_main_CDC_to_RS485_Tasks
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           
  9488                           ;psect for function _USART_getcUSART
  9489  1DF2                     _USART_getcUSART:	
  9490                           
  9491                           ;app_uart_usb_utils.c: 144: char c;
  9492                           ;app_uart_usb_utils.c: 146: if (RCSTAbits.OERR)
  9493                           
  9494                           ;incstack = 0
  9495                           ; Regs used in _USART_getcUSART: [wreg]
  9496  1DF2  0023               	movlb	3	; select bank3
  9497  1DF3  1C9D               	btfss	29,1	;volatile
  9498  1DF4  2DFC               	goto	i1l5235
  9499                           
  9500                           ;app_uart_usb_utils.c: 147: {
  9501                           ;app_uart_usb_utils.c: 148: RCSTAbits.CREN = 0;
  9502  1DF5  121D               	bcf	29,4	;volatile
  9503                           
  9504                           ;app_uart_usb_utils.c: 149: c = RCREG;
  9505  1DF6  0819               	movf	25,w	;volatile
  9506  1DF7  00F0               	movwf	??_USART_getcUSART
  9507  1DF8  0870               	movf	??_USART_getcUSART,w
  9508  1DF9  00F1               	movwf	USART_getcUSART@c
  9509                           
  9510                           ;app_uart_usb_utils.c: 150: RCSTAbits.CREN = 1;
  9511  1DFA  161D               	bsf	29,4	;volatile
  9512                           
  9513                           ;app_uart_usb_utils.c: 151: }
  9514  1DFB  2E00               	goto	i1l1208
  9515  1DFC                     i1l5235:	
  9516                           
  9517                           ;app_uart_usb_utils.c: 152: else
  9518                           ;app_uart_usb_utils.c: 153: {
  9519                           ;app_uart_usb_utils.c: 154: c = RCREG;
  9520  1DFC  0819               	movf	25,w	;volatile
  9521  1DFD  00F0               	movwf	??_USART_getcUSART
  9522  1DFE  0870               	movf	??_USART_getcUSART,w
  9523  1DFF  00F1               	movwf	USART_getcUSART@c
  9524  1E00                     i1l1208:	
  9525                           
  9526                           ;app_uart_usb_utils.c: 155: }
  9527                           ;app_uart_usb_utils.c: 160: return c;
  9528  1E00  0871               	movf	USART_getcUSART@c,w
  9529  1E01  0008               	return
  9530  1E02                     __end_of_USART_getcUSART:	
  9531                           
  9532                           	psect	text41
  9533  0C4A                     __ptext41:	
  9534 ;; *************** function _CDCTxService2 *****************
  9535 ;; Defined at:
  9536 ;;		line 836 in file "usb/core/usb_device_cdc2.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;		None
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  byte_to_send    1   13[COMMON] unsigned char 
  9541 ;;  i               1   12[COMMON] unsigned char 
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  1    wreg      void 
  9544 ;; Registers used:
  9545 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9552 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9553 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9554 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9555 ;;Total ram usage:        3 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:    1
  9558 ;; This function calls:
  9559 ;;		i1_USBTransferOnePacket
  9560 ;; This function is called by:
  9561 ;;		_main_CDC_to_RS485_Tasks
  9562 ;; This function uses a non-reentrant model
  9563 ;;
  9564                           
  9565                           
  9566                           ;psect for function _CDCTxService2
  9567  0C4A                     _CDCTxService2:	
  9568                           
  9569                           ;usb_device_cdc2.c: 838: uint8_t byte_to_send;
  9570                           ;usb_device_cdc2.c: 839: uint8_t i;
  9571                           ;usb_device_cdc2.c: 841: ;
  9572                           ;usb_device_cdc2.c: 843: {};
  9573                           ;usb_device_cdc2.c: 845: if(((CDCDataInHandle2 != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taInHandle2 & 0x80) != 0x00)))
  9574                           
  9575                           ;incstack = 0
  9576                           ; Regs used in _CDCTxService2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9577  0C4A  0024               	movlb	4	; select bank4
  9578  0C4B  0829               	movf	_CDCDataInHandle2^(0+512),w
  9579  0C4C  042A               	iorwf	(_CDCDataInHandle2+1)^(0+512),w
  9580  0C4D  1903               	btfsc	3,2
  9581  0C4E  2C55               	goto	i1l5163
  9582  0C4F  0829               	movf	_CDCDataInHandle2^(0+512),w
  9583  0C50  0086               	movwf	6
  9584  0C51  082A               	movf	(_CDCDataInHandle2+1)^(0+512),w
  9585  0C52  0087               	movwf	7
  9586  0C53  1B81               	btfsc	1,7
  9587  0C54  0008               	return
  9588  0C55                     i1l5163:	
  9589                           ;usb_device_cdc2.c: 846: {
  9590                           ;usb_device_cdc2.c: 847: ;
  9591                           ;usb_device_cdc2.c: 848: return;
  9592                           
  9593                           
  9594                           ;usb_device_cdc2.c: 849: }
  9595                           ;usb_device_cdc2.c: 856: if(cdc_trf_state2 == 3)
  9596  0C55  3003               	movlw	3
  9597  0C56  0023               	movlb	3	; select bank3
  9598  0C57  0665               	xorwf	_cdc_trf_state2^(0+384),w
  9599  0C58  1903               	btfsc	3,2
  9600                           
  9601                           ;usb_device_cdc2.c: 857: cdc_trf_state2 = 0;
  9602  0C59  01E5               	clrf	_cdc_trf_state2^(0+384)
  9603                           
  9604                           ;usb_device_cdc2.c: 862: if(cdc_trf_state2 == 0)
  9605  0C5A  0865               	movf	_cdc_trf_state2^(0+384),w
  9606  0C5B  1903               	btfsc	3,2
  9607  0C5C  0008               	return
  9608                           
  9609                           ;usb_device_cdc2.c: 866: }
  9610                           ;usb_device_cdc2.c: 871: if(cdc_trf_state2 == 2)
  9611                           
  9612                           ;usb_device_cdc2.c: 863: {
  9613                           ;usb_device_cdc2.c: 864: ;
  9614                           ;usb_device_cdc2.c: 865: return;
  9615  0C5D  3002               	movlw	2
  9616  0C5E  0665               	xorwf	_cdc_trf_state2^(0+384),w
  9617  0C5F  1D03               	btfss	3,2
  9618  0C60  2C76               	goto	i1l5177
  9619                           
  9620                           ;usb_device_cdc2.c: 872: {
  9621                           ;usb_device_cdc2.c: 873: CDCDataInHandle2 = USBTransferOnePacket(4,1,(0),0);
  9622  0C61  01F0               	clrf	i1USBTransferOnePacket@dir
  9623  0C62  0AF0               	incf	i1USBTransferOnePacket@dir,f
  9624  0C63  3000               	movlw	0
  9625  0C64  00F1               	movwf	i1USBTransferOnePacket@data
  9626  0C65  3000               	movlw	0
  9627  0C66  00F2               	movwf	i1USBTransferOnePacket@data+1
  9628  0C67  01F3               	clrf	i1USBTransferOnePacket@len
  9629  0C68  3004               	movlw	4
  9630  0C69  3188  20F9         	fcall	i1_USBTransferOnePacket
  9631  0C6B  0871               	movf	?i1_USBTransferOnePacket+1,w
  9632  0C6C  0024               	movlb	4	; select bank4
  9633  0C6D  00AA               	movwf	(_CDCDataInHandle2+1)^(0+512)
  9634  0C6E  0870               	movf	?i1_USBTransferOnePacket,w
  9635  0C6F  00A9               	movwf	_CDCDataInHandle2^(0+512)
  9636                           
  9637                           ;usb_device_cdc2.c: 875: cdc_trf_state2 = 3;
  9638  0C70  3003               	movlw	3
  9639  0C71  00FB               	movwf	??_CDCTxService2
  9640  0C72  087B               	movf	??_CDCTxService2,w
  9641  0C73  0023               	movlb	3	; select bank3
  9642  0C74  00E5               	movwf	_cdc_trf_state2^(0+384)
  9643                           
  9644                           ;usb_device_cdc2.c: 876: }
  9645  0C75  0008               	return
  9646  0C76                     i1l5177:	
  9647                           
  9648                           ;usb_device_cdc2.c: 877: else if(cdc_trf_state2 == 1)
  9649  0C76  0365               	decf	_cdc_trf_state2^(0+384),w
  9650  0C77  1D03               	btfss	3,2
  9651  0C78  0008               	return
  9652                           
  9653                           ;usb_device_cdc2.c: 878: {
  9654                           ;usb_device_cdc2.c: 882: if(cdc_tx_len2 > sizeof(cdc_data_tx2))
  9655  0C79  3041               	movlw	65
  9656  0C7A  0267               	subwf	_cdc_tx_len2^(0+384),w
  9657  0C7B  1C03               	skipc
  9658  0C7C  2C7F               	goto	i1l5183
  9659                           
  9660                           ;usb_device_cdc2.c: 883: byte_to_send = sizeof(cdc_data_tx2);
  9661  0C7D  3040               	movlw	64
  9662  0C7E  2C80               	goto	L12
  9663  0C7F                     i1l5183:	
  9664                           
  9665                           ;usb_device_cdc2.c: 884: else
  9666                           ;usb_device_cdc2.c: 885: byte_to_send = cdc_tx_len2;
  9667  0C7F  0867               	movf	_cdc_tx_len2^(0+384),w
  9668  0C80                     L12:	
  9669  0C80  00FB               	movwf	??_CDCTxService2
  9670  0C81  087B               	movf	??_CDCTxService2,w
  9671  0C82  00FD               	movwf	CDCTxService2@byte_to_send
  9672                           
  9673                           ;usb_device_cdc2.c: 890: cdc_tx_len2 = cdc_tx_len2 - byte_to_send;
  9674  0C83  037D               	decf	CDCTxService2@byte_to_send,w
  9675  0C84  3AFF               	xorlw	255
  9676  0C85  0767               	addwf	_cdc_tx_len2^(0+384),w
  9677  0C86  00FB               	movwf	??_CDCTxService2
  9678  0C87  087B               	movf	??_CDCTxService2,w
  9679  0C88  00E7               	movwf	_cdc_tx_len2^(0+384)
  9680                           
  9681                           ;usb_device_cdc2.c: 892: pCDCDst2.bRam = (uint8_t*)&cdc_data_tx2;
  9682  0C89  30A0               	movlw	160
  9683  0C8A  00FB               	movwf	??_CDCTxService2
  9684  0C8B  087B               	movf	??_CDCTxService2,w
  9685  0C8C  0024               	movlb	4	; select bank4
  9686  0C8D  00BD               	movwf	_pCDCDst2^(0+512)
  9687                           
  9688                           ;usb_device_cdc2.c: 894: i = byte_to_send;
  9689  0C8E  087D               	movf	CDCTxService2@byte_to_send,w
  9690  0C8F  00FB               	movwf	??_CDCTxService2
  9691  0C90  087B               	movf	??_CDCTxService2,w
  9692  0C91  00FC               	movwf	CDCTxService2@i
  9693                           
  9694                           ;usb_device_cdc2.c: 895: if(cdc_mem_type2 == 0x00)
  9695  0C92  0856               	movf	_cdc_mem_type2^(0+512),w
  9696  0C93  1903               	btfsc	3,2
  9697  0C94  2CAB               	goto	i1l5203
  9698  0C95  2CC4               	goto	i1l5213
  9699  0C96                     i1l5195:	
  9700                           ;usb_device_cdc2.c: 896: {
  9701                           ;usb_device_cdc2.c: 897: while(i)
  9702                           
  9703                           
  9704                           ;usb_device_cdc2.c: 898: {
  9705                           ;usb_device_cdc2.c: 899: *pCDCDst2.bRam = *pCDCSrc2.bRom;
  9706  0C96  0841               	movf	_pCDCSrc2^(0+512),w
  9707  0C97  0086               	movwf	6
  9708  0C98  3004               	movlw	4	; select bank8/9
  9709  0C99  0087               	movwf	7
  9710  0C9A  0801               	movf	1,w
  9711  0C9B  00FB               	movwf	??_CDCTxService2
  9712  0C9C  083D               	movf	_pCDCDst2^(0+512),w
  9713  0C9D  0086               	movwf	6
  9714  0C9E  0187               	clrf	7
  9715  0C9F  087B               	movf	??_CDCTxService2,w
  9716  0CA0  0081               	movwf	1
  9717                           
  9718                           ;usb_device_cdc2.c: 900: pCDCDst2.bRam++;
  9719  0CA1  3001               	movlw	1
  9720  0CA2  00FB               	movwf	??_CDCTxService2
  9721  0CA3  087B               	movf	??_CDCTxService2,w
  9722  0CA4  07BD               	addwf	_pCDCDst2^(0+512),f
  9723                           
  9724                           ;usb_device_cdc2.c: 901: pCDCSrc2.bRom++;
  9725  0CA5  3001               	movlw	1
  9726  0CA6  00FB               	movwf	??_CDCTxService2
  9727  0CA7  087B               	movf	??_CDCTxService2,w
  9728  0CA8  07C1               	addwf	_pCDCSrc2^(0+512),f
  9729                           
  9730                           ;usb_device_cdc2.c: 902: i--;
  9731  0CA9  3001               	movlw	1
  9732  0CAA  02FC               	subwf	CDCTxService2@i,f
  9733  0CAB                     i1l5203:	
  9734  0CAB  087C               	movf	CDCTxService2@i,w
  9735  0CAC  1903               	btfsc	3,2
  9736  0CAD  2CC7               	goto	i1l5215
  9737  0CAE  2C96               	goto	i1l5195
  9738  0CAF                     i1l5205:	
  9739                           ;usb_device_cdc2.c: 905: else
  9740                           ;usb_device_cdc2.c: 906: {
  9741                           ;usb_device_cdc2.c: 907: while(i)
  9742                           
  9743                           ;usb_device_cdc2.c: 903: }
  9744                           ;usb_device_cdc2.c: 904: }
  9745                           
  9746                           
  9747                           ;usb_device_cdc2.c: 908: {
  9748                           ;usb_device_cdc2.c: 909: *pCDCDst2.bRam = *pCDCSrc2.bRam;
  9749  0CAF  0841               	movf	_pCDCSrc2^(0+512),w
  9750  0CB0  0086               	movwf	6
  9751  0CB1  3004               	movlw	4	; select bank8/9
  9752  0CB2  0087               	movwf	7
  9753  0CB3  0801               	movf	1,w
  9754  0CB4  00FB               	movwf	??_CDCTxService2
  9755  0CB5  083D               	movf	_pCDCDst2^(0+512),w
  9756  0CB6  0086               	movwf	6
  9757  0CB7  0187               	clrf	7
  9758  0CB8  087B               	movf	??_CDCTxService2,w
  9759  0CB9  0081               	movwf	1
  9760                           
  9761                           ;usb_device_cdc2.c: 910: pCDCDst2.bRam++;
  9762  0CBA  3001               	movlw	1
  9763  0CBB  00FB               	movwf	??_CDCTxService2
  9764  0CBC  087B               	movf	??_CDCTxService2,w
  9765  0CBD  07BD               	addwf	_pCDCDst2^(0+512),f
  9766                           
  9767                           ;usb_device_cdc2.c: 911: pCDCSrc2.bRam++;
  9768  0CBE  3001               	movlw	1
  9769  0CBF  00FB               	movwf	??_CDCTxService2
  9770  0CC0  087B               	movf	??_CDCTxService2,w
  9771  0CC1  07C1               	addwf	_pCDCSrc2^(0+512),f
  9772                           
  9773                           ;usb_device_cdc2.c: 912: i--;
  9774  0CC2  3001               	movlw	1
  9775  0CC3  02FC               	subwf	CDCTxService2@i,f
  9776  0CC4                     i1l5213:	
  9777  0CC4  087C               	movf	CDCTxService2@i,w
  9778  0CC5  1D03               	btfss	3,2
  9779  0CC6  2CAF               	goto	i1l5205
  9780  0CC7                     i1l5215:	
  9781                           
  9782                           ;usb_device_cdc2.c: 913: }
  9783                           ;usb_device_cdc2.c: 914: }
  9784                           ;usb_device_cdc2.c: 920: if(cdc_tx_len2 == 0)
  9785  0CC7  0023               	movlb	3	; select bank3
  9786  0CC8  0867               	movf	_cdc_tx_len2^(0+384),w
  9787  0CC9  1D03               	btfss	3,2
  9788  0CCA  2CD5               	goto	i1l5223
  9789                           
  9790                           ;usb_device_cdc2.c: 921: {
  9791                           ;usb_device_cdc2.c: 922: if(byte_to_send == 64)
  9792  0CCB  3040               	movlw	64
  9793  0CCC  067D               	xorwf	CDCTxService2@byte_to_send,w
  9794  0CCD  1D03               	btfss	3,2
  9795  0CCE  2CD1               	goto	i1l5221
  9796                           
  9797                           ;usb_device_cdc2.c: 923: cdc_trf_state2 = 2;
  9798  0CCF  3002               	movlw	2
  9799  0CD0  2CD2               	goto	L13
  9800  0CD1                     i1l5221:	
  9801                           
  9802                           ;usb_device_cdc2.c: 924: else
  9803                           ;usb_device_cdc2.c: 925: cdc_trf_state2 = 3;
  9804  0CD1  3003               	movlw	3
  9805  0CD2                     L13:	
  9806  0CD2  00FB               	movwf	??_CDCTxService2
  9807  0CD3  087B               	movf	??_CDCTxService2,w
  9808  0CD4  00E5               	movwf	_cdc_trf_state2^(0+384)
  9809  0CD5                     i1l5223:	
  9810                           
  9811                           ;usb_device_cdc2.c: 926: }
  9812                           ;usb_device_cdc2.c: 927: CDCDataInHandle2 = USBTransferOnePacket(4,1,(uint8_t*)&cdc_data
      +                          _tx2,byte_to_send);
  9813  0CD5  01F0               	clrf	i1USBTransferOnePacket@dir
  9814  0CD6  0AF0               	incf	i1USBTransferOnePacket@dir,f
  9815  0CD7  30A0               	movlw	160
  9816  0CD8  00F1               	movwf	i1USBTransferOnePacket@data
  9817  0CD9  3000               	movlw	0
  9818  0CDA  00F2               	movwf	i1USBTransferOnePacket@data+1
  9819  0CDB  087D               	movf	CDCTxService2@byte_to_send,w
  9820  0CDC  00FB               	movwf	??_CDCTxService2
  9821  0CDD  087B               	movf	??_CDCTxService2,w
  9822  0CDE  00F3               	movwf	i1USBTransferOnePacket@len
  9823  0CDF  3004               	movlw	4
  9824  0CE0  3188  20F9         	fcall	i1_USBTransferOnePacket
  9825  0CE2  0871               	movf	?i1_USBTransferOnePacket+1,w
  9826  0CE3  0024               	movlb	4	; select bank4
  9827  0CE4  00AA               	movwf	(_CDCDataInHandle2+1)^(0+512)
  9828  0CE5  0870               	movf	?i1_USBTransferOnePacket,w
  9829  0CE6  00A9               	movwf	_CDCDataInHandle2^(0+512)
  9830  0CE7  0008               	return
  9831  0CE8                     __end_of_CDCTxService2:	
  9832                           
  9833                           	psect	text42
  9834  0F04                     __ptext42:	
  9835 ;; *************** function _USBDeviceTasks *****************
  9836 ;; Defined at:
  9837 ;;		line 477 in file "usb/core/usb_device.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;		None
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;  i               1   15[BANK1 ] unsigned char 
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  1    wreg      void 
  9844 ;; Registers used:
  9845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
  9851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
  9852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
  9853 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0
  9854 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0
  9855 ;;Total ram usage:        3 bytes
  9856 ;; Hardware stack levels used:    1
  9857 ;; Hardware stack levels required when called:    8
  9858 ;; This function calls:
  9859 ;;		_USBCtrlEPAllowStatusStage
  9860 ;;		_USBCtrlEPService
  9861 ;;		_USBIncrement1msInternalTimers
  9862 ;;		_USBStallHandler
  9863 ;;		_USBSuspend
  9864 ;;		_USBWakeFromSuspend
  9865 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9866 ;;		i1_USBDeviceInit
  9867 ;; This function is called by:
  9868 ;;		_INTERRUPT_InterruptManager
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           
  9873                           ;psect for function _USBDeviceTasks
  9874  0F04                     _USBDeviceTasks:	
  9875                           
  9876                           ;usb_device.c: 544: }
  9877                           ;usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
  9878                           
  9879                           ;usb_device.c: 543: return;
  9880                           
  9881                           ;usb_device.c: 542: PIR2bits.USBIF = 0;;
  9882                           
  9883                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
  9884                           
  9885                           ;usb_device.c: 511: UIE = 0;
  9886                           
  9887                           ;usb_device.c: 506: {
  9888                           ;usb_device.c: 508: UCON = 0;
  9889                           
  9890                           ;usb_device.c: 479: uint8_t i;
  9891                           ;usb_device.c: 505: if (1 != 1)
  9892                           
  9893                           ;incstack = 0
  9894                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9895  0F04  0023               	movlb	3	; select bank3
  9896  0F05  0861               	movf	_USBDeviceState^(0+384),w
  9897  0F06  1D03               	btfss	3,2
  9898  0F07  2F18               	goto	i1l5541
  9899                           
  9900                           ;usb_device.c: 567: {
  9901                           ;usb_device.c: 569: UCON = 0;
  9902  0F08  003D               	movlb	29	; select bank29
  9903  0F09  018E               	clrf	14	;volatile
  9904                           
  9905                           ;usb_device.c: 572: UIE = 0;
  9906  0F0A  0192               	clrf	18	;volatile
  9907                           
  9908                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  9909  0F0B  3016               	movlw	22
  9910  0F0C  0091               	movwf	17	;volatile
  9911  0F0D  309F               	movlw	159
  9912  0F0E  0097               	movwf	23	;volatile
  9913  0F0F  307B               	movlw	123
  9914  0F10  0092               	movwf	18	;volatile
  9915  0F11                     i1l389:	
  9916                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  9917                           
  9918  0F11  198E               	btfsc	14,3	;volatile
  9919  0F12  2F15               	goto	i1l391
  9920  0F13  158E               	bsf	14,3	;volatile
  9921  0F14  2F11               	goto	i1l389
  9922  0F15                     i1l391:	
  9923                           
  9924                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
  9925  0F15  0023               	movlb	3	; select bank3
  9926  0F16  01E1               	clrf	_USBDeviceState^(0+384)
  9927  0F17  0AE1               	incf	_USBDeviceState^(0+384),f
  9928  0F18                     i1l5541:	
  9929                           
  9930                           ;usb_device.c: 587: }
  9931                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  9932  0F18  0361               	decf	_USBDeviceState^(0+384),w
  9933  0F19  1D03               	btfss	3,2
  9934  0F1A  2F28               	goto	i1l5553
  9935                           
  9936                           ;usb_device.c: 591: {
  9937                           ;usb_device.c: 601: if(!UCONbits.SE0)
  9938  0F1B  003D               	movlb	29	; select bank29
  9939  0F1C  1A8E               	btfsc	14,5	;volatile
  9940  0F1D  2F28               	goto	i1l5553
  9941                           
  9942                           ;usb_device.c: 602: {
  9943                           ;usb_device.c: 608: {UIR = 0;};
  9944  0F1E  0190               	clrf	16	;volatile
  9945                           
  9946                           ;usb_device.c: 612: UIE=0;
  9947  0F1F  0192               	clrf	18	;volatile
  9948                           
  9949                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  9950  0F20  1412               	bsf	18,0	;volatile
  9951                           
  9952                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  9953  0F21  1612               	bsf	18,4	;volatile
  9954                           
  9955                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  9956  0F22  3002               	movlw	2
  9957  0F23  0022               	movlb	2	; select bank2
  9958  0F24  00E3               	movwf	??_USBDeviceTasks^(0+256)
  9959  0F25  0863               	movf	??_USBDeviceTasks^(0+256),w
  9960  0F26  0023               	movlb	3	; select bank3
  9961  0F27  00E1               	movwf	_USBDeviceState^(0+384)
  9962  0F28                     i1l5553:	
  9963                           
  9964                           ;usb_device.c: 617: }
  9965                           ;usb_device.c: 618: }
  9966                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  9967  0F28  003D               	movlb	29	; select bank29
  9968  0F29  1910               	btfsc	16,2	;volatile
  9969  0F2A  1D12               	btfss	18,2	;volatile
  9970  0F2B  2F35               	goto	i1l5561
  9971                           
  9972                           ;usb_device.c: 635: {
  9973                           ;usb_device.c: 636: (UIR &= 0xFB);
  9974  0F2C  30FB               	movlw	251
  9975  0F2D  0022               	movlb	2	; select bank2
  9976  0F2E  00E3               	movwf	??_USBDeviceTasks^(0+256)
  9977  0F2F  0863               	movf	??_USBDeviceTasks^(0+256),w
  9978  0F30  003D               	movlb	29	; select bank29
  9979  0F31  0590               	andwf	16,f	;volatile
  9980                           
  9981                           ;usb_device.c: 640: USBWakeFromSuspend();
  9982  0F32  319F  2765  318F   	fcall	_USBWakeFromSuspend
  9983  0F35                     i1l5561:	
  9984                           
  9985                           ;usb_device.c: 642: }
  9986                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  9987  0F35  003D               	movlb	29	; select bank29
  9988  0F36  1C8E               	btfss	14,1	;volatile
  9989  0F37  2F3B               	goto	i1l395
  9990                           
  9991                           ;usb_device.c: 648: {
  9992                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  9993  0F38  0020               	movlb	0	; select bank0
  9994  0F39  1112               	bcf	18,2	;volatile
  9995                           
  9996                           ;usb_device.c: 650: return;
  9997  0F3A  0008               	return
  9998  0F3B                     i1l395:	
  9999                           
 10000                           ;usb_device.c: 651: }
 10001                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 10002  0F3B  1810               	btfsc	16,0	;volatile
 10003  0F3C  1C12               	btfss	18,0	;volatile
 10004  0F3D  2F4D               	goto	i1l5573
 10005                           
 10006                           ;usb_device.c: 664: {
 10007                           ;usb_device.c: 665: USBDeviceInit();
 10008  0F3E  318C  24E8  318F   	fcall	i1_USBDeviceInit
 10009                           
 10010                           ;usb_device.c: 669: ;
 10011                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 10012  0F41  3004               	movlw	4
 10013  0F42  0022               	movlb	2	; select bank2
 10014  0F43  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10015  0F44  0863               	movf	??_USBDeviceTasks^(0+256),w
 10016  0F45  0023               	movlb	3	; select bank3
 10017  0F46  00E1               	movwf	_USBDeviceState^(0+384)
 10018                           
 10019                           ;usb_device.c: 681: (UIR &= 0xFE);
 10020  0F47  30FE               	movlw	254
 10021  0F48  0022               	movlb	2	; select bank2
 10022  0F49  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10023  0F4A  0863               	movf	??_USBDeviceTasks^(0+256),w
 10024  0F4B  003D               	movlb	29	; select bank29
 10025  0F4C  0590               	andwf	16,f	;volatile
 10026  0F4D                     i1l5573:	
 10027                           
 10028                           ;usb_device.c: 682: }
 10029                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 10030  0F4D  1A10               	btfsc	16,4	;volatile
 10031  0F4E  1E12               	btfss	18,4	;volatile
 10032  0F4F  2F53               	goto	i1l5579
 10033                           
 10034                           ;usb_device.c: 688: {
 10035                           ;usb_device.c: 694: USBSuspend();
 10036  0F50  319E  26EE  318F   	fcall	_USBSuspend
 10037  0F53                     i1l5579:	
 10038                           
 10039                           ;usb_device.c: 696: }
 10040                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 10041  0F53  003D               	movlb	29	; select bank29
 10042  0F54  1F10               	btfss	16,6	;volatile
 10043  0F55  2F7D               	goto	i1l5595
 10044                           
 10045                           ;usb_device.c: 709: {
 10046                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 10047  0F56  1F12               	btfss	18,6	;volatile
 10048  0F57  2F68               	goto	i1l5585
 10049                           
 10050                           ;usb_device.c: 712: {
 10051                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 10052  0F58  3073               	movlw	115
 10053  0F59  0021               	movlb	1	; select bank1
 10054  0F5A  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 10055  0F5B  3000               	movlw	0
 10056  0F5C  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
 10057  0F5D  3000               	movlw	0
 10058  0F5E  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 10059  0F5F  3000               	movlw	0
 10060  0F60  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 10061  0F61  3001               	movlw	1
 10062  0F62  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 10063  0F63  3000               	movlw	0
 10064  0F64  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
 10065  0F65  3190  2093  318F   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10066  0F68                     i1l5585:	
 10067                           
 10068                           ;usb_device.c: 714: }
 10069                           ;usb_device.c: 715: (UIR &= 0xBF);
 10070  0F68  30BF               	movlw	191
 10071  0F69  0022               	movlb	2	; select bank2
 10072  0F6A  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10073  0F6B  0863               	movf	??_USBDeviceTasks^(0+256),w
 10074  0F6C  003D               	movlb	29	; select bank29
 10075  0F6D  0590               	andwf	16,f	;volatile
 10076                           
 10077                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 10078  0F6E  319E  2688  318F   	fcall	_USBIncrement1msInternalTimers
 10079                           
 10080                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 10081  0F71  0024               	movlb	4	; select bank4
 10082  0F72  0853               	movf	_USBStatusStageTimeoutCounter^(0+512),w
 10083  0F73  1903               	btfsc	3,2
 10084  0F74  2F77               	goto	i1l400
 10085                           
 10086                           ;usb_device.c: 736: {
 10087                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 10088  0F75  3001               	movlw	1
 10089  0F76  02D3               	subwf	_USBStatusStageTimeoutCounter^(0+512),f
 10090  0F77                     i1l400:	
 10091                           
 10092                           ;usb_device.c: 738: }
 10093                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 10094  0F77  0853               	movf	_USBStatusStageTimeoutCounter^(0+512),w
 10095  0F78  1D03               	btfss	3,2
 10096  0F79  2F7D               	goto	i1l5595
 10097                           
 10098                           ;usb_device.c: 745: {
 10099                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 10100  0F7A  3195  25A9  318F   	fcall	_USBCtrlEPAllowStatusStage
 10101  0F7D                     i1l5595:	
 10102                           
 10103                           ;usb_device.c: 747: }
 10104                           ;usb_device.c: 749: }
 10105                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 10106  0F7D  003D               	movlb	29	; select bank29
 10107  0F7E  1A90               	btfsc	16,5	;volatile
 10108  0F7F  1E92               	btfss	18,5	;volatile
 10109  0F80  2F84               	goto	i1l5601
 10110                           
 10111                           ;usb_device.c: 752: {
 10112                           ;usb_device.c: 753: USBStallHandler();
 10113  0F81  3190  2000  318F   	fcall	_USBStallHandler
 10114  0F84                     i1l5601:	
 10115                           
 10116                           ;usb_device.c: 754: }
 10117                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 10118  0F84  003D               	movlb	29	; select bank29
 10119  0F85  1890               	btfsc	16,1	;volatile
 10120  0F86  1C92               	btfss	18,1	;volatile
 10121  0F87  2F9A               	goto	i1l5609
 10122                           
 10123                           ;usb_device.c: 757: {
 10124                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 10125  0F88  30FF               	movlw	255
 10126  0F89  0021               	movlb	1	; select bank1
 10127  0F8A  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 10128  0F8B  307F               	movlw	127
 10129  0F8C  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
 10130  0F8D  3000               	movlw	0
 10131  0F8E  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 10132  0F8F  3000               	movlw	0
 10133  0F90  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 10134  0F91  3001               	movlw	1
 10135  0F92  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 10136  0F93  3000               	movlw	0
 10137  0F94  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
 10138  0F95  3190  2093  318F   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10139                           
 10140                           ;usb_device.c: 759: {UEIR = 0;};
 10141  0F98  003D               	movlb	29	; select bank29
 10142  0F99  0193               	clrf	19	;volatile
 10143  0F9A                     i1l5609:	
 10144                           
 10145                           ;usb_device.c: 767: }
 10146                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 10147  0F9A  3004               	movlw	4
 10148  0F9B  0023               	movlb	3	; select bank3
 10149  0F9C  0261               	subwf	_USBDeviceState^(0+384),w
 10150  0F9D  1803               	skipnc
 10151  0F9E  2FA2               	goto	i1l404
 10152                           
 10153                           ;usb_device.c: 775: {
 10154                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
 10155  0F9F  0020               	movlb	0	; select bank0
 10156  0FA0  1112               	bcf	18,2	;volatile
 10157                           
 10158                           ;usb_device.c: 777: return;
 10159  0FA1  0008               	return
 10160  0FA2                     i1l404:	
 10161                           
 10162                           ;usb_device.c: 778: }
 10163                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 10164  0FA2  003D               	movlb	29	; select bank29
 10165  0FA3  1D92               	btfss	18,3	;volatile
 10166  0FA4  2FFD               	goto	i1l405
 10167                           
 10168                           ;usb_device.c: 784: {
 10169                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 10170  0FA5  0021               	movlb	1	; select bank1
 10171  0FA6  01EF               	clrf	USBDeviceTasks@i^(0+128)
 10172  0FA7  3004               	movlw	4
 10173  0FA8  026F               	subwf	USBDeviceTasks@i^(0+128),w
 10174  0FA9  1803               	btfsc	3,0
 10175  0FAA  2FFD               	goto	i1l405
 10176  0FAB                     i1l406:	
 10177                           
 10178                           ;usb_device.c: 786: {
 10179                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 10180  0FAB  003D               	movlb	29	; select bank29
 10181  0FAC  1D90               	btfss	16,3	;volatile
 10182  0FAD  2FFD               	goto	i1l405
 10183                           
 10184                           ;usb_device.c: 788: {
 10185                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 10186  0FAE  080F               	movf	15,w	;volatile
 10187  0FAF  0022               	movlb	2	; select bank2
 10188  0FB0  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10189  0FB1  0863               	movf	??_USBDeviceTasks^(0+256),w
 10190  0FB2  0023               	movlb	3	; select bank3
 10191  0FB3  00EF               	movwf	_USTATcopy^(0+384)
 10192                           
 10193                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 10194  0FB4  0C6F               	rrf	_USTATcopy^(0+384),w
 10195  0FB5  0022               	movlb	2	; select bank2
 10196  0FB6  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10197  0FB7  0CE3               	rrf	??_USBDeviceTasks^(0+256),f
 10198  0FB8  0C63               	rrf	??_USBDeviceTasks^(0+256),w
 10199  0FB9  390F               	andlw	15
 10200  0FBA  00E4               	movwf	(??_USBDeviceTasks+1)^(0+256)
 10201  0FBB  0864               	movf	(??_USBDeviceTasks+1)^(0+256),w
 10202  0FBC  0024               	movlb	4	; select bank4
 10203  0FBD  00D9               	movwf	_endpoint_number^(0+512)
 10204                           
 10205                           ;usb_device.c: 793: (UIR &= 0xF7);
 10206  0FBE  30F7               	movlw	247
 10207  0FBF  0022               	movlb	2	; select bank2
 10208  0FC0  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10209  0FC1  0863               	movf	??_USBDeviceTasks^(0+256),w
 10210  0FC2  003D               	movlb	29	; select bank29
 10211  0FC3  0590               	andwf	16,f	;volatile
 10212                           
 10213                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 10214  0FC4  0023               	movlb	3	; select bank3
 10215  0FC5  196F               	btfsc	_USTATcopy^(0+384),2
 10216  0FC6  2FCB               	goto	i1l5629
 10217                           
 10218                           ;usb_device.c: 799: {
 10219                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 10220  0FC7  0024               	movlb	4	; select bank4
 10221  0FC8  0859               	movf	_endpoint_number^(0+512),w
 10222  0FC9  3EB9               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 10223  0FCA  2FCE               	goto	L14
 10224  0FCB                     i1l5629:	
 10225                           ;usb_device.c: 801: }
 10226                           
 10227                           
 10228                           ;usb_device.c: 802: else
 10229                           ;usb_device.c: 803: {
 10230                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 10231  0FCB  0024               	movlb	4	; select bank4
 10232  0FCC  0859               	movf	_endpoint_number^(0+512),w
 10233  0FCD  3EB4               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 10234  0FCE                     L14:	
 10235  0FCE  0086               	movwf	6
 10236  0FCF  3002               	movlw	2	; select bank5/6
 10237  0FD0  0087               	movwf	7
 10238  0FD1  0801               	movf	1,w
 10239  0FD2  3901               	andlw	1
 10240  0FD3  0022               	movlb	2	; select bank2
 10241  0FD4  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10242  0FD5  3001               	movlw	1
 10243  0FD6  06E3               	xorwf	??_USBDeviceTasks^(0+256),f
 10244  0FD7  0801               	movf	1,w
 10245  0FD8  0663               	xorwf	??_USBDeviceTasks^(0+256),w
 10246  0FD9  39FE               	andlw	-2
 10247  0FDA  0663               	xorwf	??_USBDeviceTasks^(0+256),w
 10248  0FDB  0081               	movwf	1
 10249                           
 10250                           ;usb_device.c: 805: }
 10251                           ;usb_device.c: 810: if(endpoint_number == 0)
 10252  0FDC  0024               	movlb	4	; select bank4
 10253  0FDD  0859               	movf	_endpoint_number^(0+512),w
 10254  0FDE  1D03               	btfss	3,2
 10255  0FDF  2FE4               	goto	i1l5635
 10256                           
 10257                           ;usb_device.c: 811: {
 10258                           ;usb_device.c: 812: USBCtrlEPService();
 10259  0FE0  3194  242E  318F   	fcall	_USBCtrlEPService
 10260                           
 10261                           ;usb_device.c: 813: }
 10262  0FE3  2FF3               	goto	i1l5637
 10263  0FE4                     i1l5635:	
 10264                           
 10265                           ;usb_device.c: 814: else
 10266                           ;usb_device.c: 815: {
 10267                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 10268  0FE4  3072               	movlw	114
 10269  0FE5  0021               	movlb	1	; select bank1
 10270  0FE6  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 10271  0FE7  3000               	movlw	0
 10272  0FE8  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
 10273  0FE9  30EF               	movlw	low _USTATcopy
 10274  0FEA  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 10275  0FEB  3001               	movlw	high _USTATcopy
 10276  0FEC  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 10277  0FED  3000               	movlw	0
 10278  0FEE  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 10279  0FEF  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
 10280  0FF0  3190  2093  318F   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10281  0FF3                     i1l5637:	
 10282                           ;usb_device.c: 819: else
 10283                           ;usb_device.c: 820: {
 10284                           ;usb_device.c: 821: break;
 10285                           
 10286                           ;usb_device.c: 817: }
 10287                           ;usb_device.c: 818: }
 10288                           
 10289  0FF3  3001               	movlw	1
 10290  0FF4  0022               	movlb	2	; select bank2
 10291  0FF5  00E3               	movwf	??_USBDeviceTasks^(0+256)
 10292  0FF6  0863               	movf	??_USBDeviceTasks^(0+256),w
 10293  0FF7  0021               	movlb	1	; select bank1
 10294  0FF8  07EF               	addwf	USBDeviceTasks@i^(0+128),f
 10295  0FF9  3004               	movlw	4
 10296  0FFA  026F               	subwf	USBDeviceTasks@i^(0+128),w
 10297  0FFB  1C03               	skipc
 10298  0FFC  2FAB               	goto	i1l406
 10299  0FFD                     i1l405:	
 10300                           
 10301                           ;usb_device.c: 822: }
 10302                           ;usb_device.c: 823: }
 10303                           ;usb_device.c: 824: }
 10304                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
 10305  0FFD  0020               	movlb	0	; select bank0
 10306  0FFE  1112               	bcf	18,2	;volatile
 10307  0FFF  0008               	return
 10308  1000                     __end_of_USBDeviceTasks:	
 10309                           
 10310                           	psect	text43
 10311  0CE8                     __ptext43:	
 10312 ;; *************** function i1_USBDeviceInit *****************
 10313 ;; Defined at:
 10314 ;;		line 277 in file "usb/core/usb_device.c"
 10315 ;; Parameters:    Size  Location     Type
 10316 ;;		None
 10317 ;; Auto vars:     Size  Location     Type
 10318 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
 10319 ;;		 -> UEP1(1), 
 10320 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
 10321 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
 10322 ;; Return value:  Size  Location     Type
 10323 ;;                  1    wreg      void 
 10324 ;; Registers used:
 10325 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10326 ;; Tracked objects:
 10327 ;;		On entry : 0/0
 10328 ;;		On exit  : 0/0
 10329 ;;		Unchanged: 0/0
 10330 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 10331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10332 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10333 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10334 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10335 ;;Total ram usage:        5 bytes
 10336 ;; Hardware stack levels used:    1
 10337 ;; This function calls:
 10338 ;;		Nothing
 10339 ;; This function is called by:
 10340 ;;		_USBDeviceTasks
 10341 ;; This function uses a non-reentrant model
 10342 ;;
 10343                           
 10344                           
 10345                           ;psect for function i1_USBDeviceInit
 10346  0CE8                     i1_USBDeviceInit:	
 10347                           
 10348                           ;usb_device.c: 279: uint8_t i;
 10349                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 10350                           
 10351                           ;incstack = 0
 10352                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 10353  0CE8  0021               	movlb	1	; select bank1
 10354  0CE9  1112               	bcf	18,2	;volatile
 10355                           
 10356                           ;usb_device.c: 285: ;
 10357                           ;usb_device.c: 288: {UEIR = 0;};
 10358  0CEA  003D               	movlb	29	; select bank29
 10359  0CEB  0193               	clrf	19	;volatile
 10360                           
 10361                           ;usb_device.c: 291: {UIR = 0;};
 10362  0CEC  0190               	clrf	16	;volatile
 10363                           
 10364                           ;usb_device.c: 294: UEP0 = 0;
 10365  0CED  0198               	clrf	24	;volatile
 10366                           
 10367                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<4;i++) *p++ = 0
      +                          ; };
 10368  0CEE  300E               	movlw	14
 10369  0CEF  00F2               	movwf	i1USBDeviceInit@p+1
 10370  0CF0  3099               	movlw	153
 10371  0CF1  00F1               	movwf	i1USBDeviceInit@p
 10372  0CF2  01F3               	clrf	i1USBDeviceInit@i_1118
 10373  0CF3  3004               	movlw	4
 10374  0CF4  0273               	subwf	i1USBDeviceInit@i_1118,w
 10375  0CF5  1803               	btfsc	3,0
 10376  0CF6  2D08               	goto	i1l5353
 10377  0CF7                     i1l5345:	
 10378  0CF7  0871               	movf	i1USBDeviceInit@p,w
 10379  0CF8  0086               	movwf	6
 10380  0CF9  0872               	movf	i1USBDeviceInit@p+1,w
 10381  0CFA  0087               	movwf	7
 10382  0CFB  0181               	clrf	1
 10383  0CFC  3001               	movlw	1
 10384  0CFD  07F1               	addwf	i1USBDeviceInit@p,f
 10385  0CFE  3000               	movlw	0
 10386  0CFF  3DF2               	addwfc	i1USBDeviceInit@p+1,f
 10387  0D00  3001               	movlw	1
 10388  0D01  00F0               	movwf	??i1_USBDeviceInit
 10389  0D02  0870               	movf	??i1_USBDeviceInit,w
 10390  0D03  07F3               	addwf	i1USBDeviceInit@i_1118,f
 10391  0D04  3004               	movlw	4
 10392  0D05  0273               	subwf	i1USBDeviceInit@i_1118,w
 10393  0D06  1C03               	skipc
 10394  0D07  2CF7               	goto	i1l5345
 10395  0D08                     i1l5353:	
 10396                           
 10397                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10398  0D08  3016               	movlw	22
 10399  0D09  003D               	movlb	29	; select bank29
 10400  0D0A  0091               	movwf	17	;volatile
 10401  0D0B  309F               	movlw	159
 10402  0D0C  0097               	movwf	23	;volatile
 10403  0D0D  307B               	movlw	123
 10404  0D0E  0092               	movwf	18	;volatile
 10405                           
 10406                           ;usb_device.c: 301: ;
 10407                           ;usb_device.c: 304: ;
 10408                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 10409  0D0F  01F4               	clrf	i1USBDeviceInit@i
 10410  0D10  3014               	movlw	20
 10411  0D11  0274               	subwf	i1USBDeviceInit@i,w
 10412  0D12  1803               	btfsc	3,0
 10413  0D13  2D2D               	goto	i1l378
 10414  0D14                     i1l5361:	
 10415                           
 10416                           ;usb_device.c: 308: {
 10417                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 10418  0D14  0874               	movf	i1USBDeviceInit@i,w
 10419  0D15  00F0               	movwf	??i1_USBDeviceInit
 10420  0D16  3001               	movlw	1
 10421  0D17                     u509_25:	
 10422  0D17  35F0               	lslf	??i1_USBDeviceInit,f
 10423  0D18  3EFF               	addlw	-1
 10424  0D19  1D03               	skipz
 10425  0D1A  2D17               	goto	u509_25
 10426  0D1B  3570               	lslf	??i1_USBDeviceInit,w
 10427  0D1C  3E20               	addlw	32
 10428  0D1D  0086               	movwf	6
 10429  0D1E  0187               	clrf	7
 10430  0D1F  3000               	movlw	0
 10431  0D20  3FC0               	movwi [0]fsr1
 10432  0D21  3000               	movlw	0
 10433  0D22  3FC1               	movwi [1]fsr1
 10434  0D23  3FC2               	movwi [2]fsr1
 10435  0D24  3FC3               	movwi [3]fsr1
 10436  0D25  3001               	movlw	1
 10437  0D26  00F0               	movwf	??i1_USBDeviceInit
 10438  0D27  0870               	movf	??i1_USBDeviceInit,w
 10439  0D28  07F4               	addwf	i1USBDeviceInit@i,f
 10440  0D29  3014               	movlw	20
 10441  0D2A  0274               	subwf	i1USBDeviceInit@i,w
 10442  0D2B  1C03               	skipc
 10443  0D2C  2D14               	goto	i1l5361
 10444  0D2D                     i1l378:	
 10445                           
 10446                           ;usb_device.c: 310: }
 10447                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 10448  0D2D  003D               	movlb	29	; select bank29
 10449  0D2E  170E               	bsf	14,6	;volatile
 10450                           
 10451                           ;usb_device.c: 316: UADDR = 0x00;
 10452  0D2F  0196               	clrf	22	;volatile
 10453                           
 10454                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 10455  0D30  120E               	bcf	14,4	;volatile
 10456                           
 10457                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 10458  0D31  130E               	bcf	14,6	;volatile
 10459  0D32                     i1l5373:	
 10460                           ;usb_device.c: 325: do
 10461                           
 10462                           
 10463                           ;usb_device.c: 326: {
 10464                           ;usb_device.c: 327: (UIR &= 0xF7);
 10465  0D32  30F7               	movlw	247
 10466  0D33  00F0               	movwf	??i1_USBDeviceInit
 10467  0D34  0870               	movf	??i1_USBDeviceInit,w
 10468  0D35  0590               	andwf	16,f	;volatile
 10469                           
 10470                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 10471  0D36  0023               	movlb	3	; select bank3
 10472  0D37  01D7               	clrf	(_inPipes^(0+384)+2)
 10473                           
 10474                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 10475  0D38  0024               	movlb	4	; select bank4
 10476  0D39  01A2               	clrf	(_outPipes^(0+512)+2)
 10477                           
 10478                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 10479  0D3A  01A3               	clrf	(_outPipes^(0+512)+3)
 10480  0D3B  01A4               	clrf	((_outPipes+1)^(0+512)+3)
 10481                           
 10482                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 10483  0D3C  003D               	movlb	29	; select bank29
 10484  0D3D  1990               	btfsc	16,3	;volatile
 10485  0D3E  2D32               	goto	i1l5373
 10486                           
 10487                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 10488  0D3F  3001               	movlw	1
 10489  0D40  00F0               	movwf	??i1_USBDeviceInit
 10490  0D41  0870               	movf	??i1_USBDeviceInit,w
 10491  0D42  0024               	movlb	4	; select bank4
 10492  0D43  00D1               	movwf	_USBStatusStageEnabledFlag1^(0+512)	;volatile
 10493                           
 10494                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 10495  0D44  3001               	movlw	1
 10496  0D45  00F0               	movwf	??i1_USBDeviceInit
 10497  0D46  0870               	movf	??i1_USBDeviceInit,w
 10498  0D47  00D2               	movwf	_USBStatusStageEnabledFlag2^(0+512)	;volatile
 10499                           
 10500                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 10501  0D48  01CF               	clrf	_USBDeferINDataStagePackets^(0+512)	;volatile
 10502                           
 10503                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 10504  0D49  01D0               	clrf	_USBDeferOUTDataStagePackets^(0+512)	;volatile
 10505                           
 10506                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 10507  0D4A  01CE               	clrf	_USBBusIsSuspended^(0+512)
 10508                           
 10509                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(4+1u); i++)
 10510  0D4B  01F4               	clrf	i1USBDeviceInit@i
 10511  0D4C  3005               	movlw	5
 10512  0D4D  0274               	subwf	i1USBDeviceInit@i,w
 10513  0D4E  1803               	btfsc	3,0
 10514  0D4F  2D74               	goto	i1l5401
 10515  0D50                     i1l5395:	
 10516                           
 10517                           ;usb_device.c: 346: {
 10518                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 10519  0D50  3574               	lslf	i1USBDeviceInit@i,w
 10520  0D51  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 10521  0D52  0086               	movwf	6
 10522  0D53  3001               	movlw	1	; select bank3/4
 10523  0D54  0087               	movwf	7
 10524  0D55  3000               	movlw	0
 10525  0D56  3FC0               	movwi [0]fsr1
 10526  0D57  3FC1               	movwi [1]fsr1
 10527                           
 10528                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 10529  0D58  3574               	lslf	i1USBDeviceInit@i,w
 10530  0D59  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 10531  0D5A  0086               	movwf	6
 10532  0D5B  3002               	movlw	2	; select bank5/6
 10533  0D5C  0087               	movwf	7
 10534  0D5D  3000               	movlw	0
 10535  0D5E  3FC0               	movwi [0]fsr1
 10536  0D5F  3FC1               	movwi [1]fsr1
 10537                           
 10538                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 10539  0D60  0874               	movf	i1USBDeviceInit@i,w
 10540  0D61  3EB4               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 10541  0D62  0086               	movwf	6
 10542  0D63  3002               	movlw	2	; select bank5/6
 10543  0D64  0087               	movwf	7
 10544  0D65  0181               	clrf	1
 10545                           
 10546                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 10547  0D66  0874               	movf	i1USBDeviceInit@i,w
 10548  0D67  3EB9               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 10549  0D68  0086               	movwf	6
 10550  0D69  3002               	movlw	2	; select bank5/6
 10551  0D6A  0087               	movwf	7
 10552  0D6B  0181               	clrf	1
 10553  0D6C  3001               	movlw	1
 10554  0D6D  00F0               	movwf	??i1_USBDeviceInit
 10555  0D6E  0870               	movf	??i1_USBDeviceInit,w
 10556  0D6F  07F4               	addwf	i1USBDeviceInit@i,f
 10557  0D70  3005               	movlw	5
 10558  0D71  0274               	subwf	i1USBDeviceInit@i,w
 10559  0D72  1C03               	skipc
 10560  0D73  2D50               	goto	i1l5395
 10561  0D74                     i1l5401:	
 10562                           
 10563                           ;usb_device.c: 351: }
 10564                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10565  0D74  3028               	movlw	40
 10566  0D75  0023               	movlb	3	; select bank3
 10567  0D76  00CB               	movwf	_pBDTEntryIn^(0+384)
 10568  0D77  3000               	movlw	0
 10569  0D78  00CC               	movwf	(_pBDTEntryIn+1)^(0+384)
 10570                           
 10571                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 10572  0D79  3016               	movlw	22
 10573  0D7A  003D               	movlb	29	; select bank29
 10574  0D7B  0098               	movwf	24	;volatile
 10575                           
 10576                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10577  0D7C  3000               	movlw	0
 10578  0D7D  0020               	movlb	0	; select bank0
 10579  0D7E  00A3               	movwf	35	;volatile
 10580  0D7F  30A0               	movlw	160
 10581  0D80  00A2               	movwf	34	;volatile
 10582                           
 10583                           ;usb_device.c: 359: BDT[0].CNT = 8;
 10584  0D81  3008               	movlw	8
 10585  0D82  00A1               	movwf	33	;volatile
 10586                           
 10587                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 10588  0D83  3004               	movlw	4
 10589  0D84  00F0               	movwf	??i1_USBDeviceInit
 10590  0D85  0870               	movf	??i1_USBDeviceInit,w
 10591  0D86  00A0               	movwf	32	;volatile
 10592                           
 10593                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 10594  0D87  17A0               	bsf	32,7	;volatile
 10595                           
 10596                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 10597  0D88  0023               	movlb	3	; select bank3
 10598  0D89  01EE               	clrf	_USBActiveConfiguration^(0+384)
 10599                           
 10600                           ;usb_device.c: 366: USB1msTickCount = 0;
 10601  0D8A  3000               	movlw	0
 10602  0D8B  0025               	movlb	5	; select bank5
 10603  0D8C  00C9               	movwf	(_USB1msTickCount+3)^(0+640)
 10604  0D8D  3000               	movlw	0
 10605  0D8E  00C8               	movwf	(_USB1msTickCount+2)^(0+640)
 10606  0D8F  3000               	movlw	0
 10607  0D90  00C7               	movwf	(_USB1msTickCount+1)^(0+640)
 10608  0D91  3000               	movlw	0
 10609  0D92  00C6               	movwf	_USB1msTickCount^(0+640)
 10610                           
 10611                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 10612  0D93  0024               	movlb	4	; select bank4
 10613  0D94  01D4               	clrf	_USBTicksSinceSuspendEnd^(0+512)
 10614                           
 10615                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 10616  0D95  0023               	movlb	3	; select bank3
 10617  0D96  01E1               	clrf	_USBDeviceState^(0+384)
 10618  0D97  0008               	return
 10619  0D98                     __end_ofi1_USBDeviceInit:	
 10620                           
 10621                           	psect	text44
 10622  1F65                     __ptext44:	
 10623 ;; *************** function _USBWakeFromSuspend *****************
 10624 ;; Defined at:
 10625 ;;		line 2303 in file "usb/core/usb_device.c"
 10626 ;; Parameters:    Size  Location     Type
 10627 ;;		None
 10628 ;; Auto vars:     Size  Location     Type
 10629 ;;		None
 10630 ;; Return value:  Size  Location     Type
 10631 ;;                  1    wreg      void 
 10632 ;; Registers used:
 10633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10634 ;; Tracked objects:
 10635 ;;		On entry : 0/0
 10636 ;;		On exit  : 0/0
 10637 ;;		Unchanged: 0/0
 10638 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 10639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10641 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 10642 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 10643 ;;Total ram usage:        1 bytes
 10644 ;; Hardware stack levels used:    1
 10645 ;; Hardware stack levels required when called:    4
 10646 ;; This function calls:
 10647 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10648 ;; This function is called by:
 10649 ;;		_USBDeviceTasks
 10650 ;; This function uses a non-reentrant model
 10651 ;;
 10652                           
 10653                           
 10654                           ;psect for function _USBWakeFromSuspend
 10655  1F65                     _USBWakeFromSuspend:	
 10656                           
 10657                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 10658                           
 10659                           ;incstack = 0
 10660                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10661  1F65  0024               	movlb	4	; select bank4
 10662  1F66  01CE               	clrf	_USBBusIsSuspended^(0+512)
 10663                           
 10664                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 10665  1F67  3074               	movlw	116
 10666  1F68  0021               	movlb	1	; select bank1
 10667  1F69  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 10668  1F6A  3000               	movlw	0
 10669  1F6B  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
 10670  1F6C  3000               	movlw	0
 10671  1F6D  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 10672  1F6E  3000               	movlw	0
 10673  1F6F  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 10674  1F70  3000               	movlw	0
 10675  1F71  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 10676  1F72  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
 10677  1F73  3190  2093  319F   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10678                           
 10679                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 10680  1F76  003D               	movlb	29	; select bank29
 10681  1F77  108E               	bcf	14,1	;volatile
 10682                           
 10683                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 10684  1F78  1112               	bcf	18,2	;volatile
 10685  1F79                     i1l4959:	
 10686                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 10687                           
 10688  1F79  1D10               	btfss	16,2	;volatile
 10689  1F7A  2F82               	goto	i1l4961
 10690                           
 10691                           ;usb_device.c: 2343: {
 10692                           ;usb_device.c: 2344: (UIR &= 0xFB);
 10693  1F7B  30FB               	movlw	251
 10694  1F7C  0021               	movlb	1	; select bank1
 10695  1F7D  00E6               	movwf	??_USBWakeFromSuspend^(0+128)
 10696  1F7E  0866               	movf	??_USBWakeFromSuspend^(0+128),w
 10697  1F7F  003D               	movlb	29	; select bank29
 10698  1F80  0590               	andwf	16,f	;volatile
 10699  1F81  2F79               	goto	i1l4959
 10700  1F82                     i1l4961:	
 10701                           
 10702                           ;usb_device.c: 2345: }
 10703                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 10704  1F82  0024               	movlb	4	; select bank4
 10705  1F83  01D4               	clrf	_USBTicksSinceSuspendEnd^(0+512)
 10706  1F84  0008               	return
 10707  1F85                     __end_of_USBWakeFromSuspend:	
 10708                           
 10709                           	psect	text45
 10710  1EEE                     __ptext45:	
 10711 ;; *************** function _USBSuspend *****************
 10712 ;; Defined at:
 10713 ;;		line 2245 in file "usb/core/usb_device.c"
 10714 ;; Parameters:    Size  Location     Type
 10715 ;;		None
 10716 ;; Auto vars:     Size  Location     Type
 10717 ;;		None
 10718 ;; Return value:  Size  Location     Type
 10719 ;;                  1    wreg      void 
 10720 ;; Registers used:
 10721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10722 ;; Tracked objects:
 10723 ;;		On entry : 0/0
 10724 ;;		On exit  : 0/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 10727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10729 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 10730 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 10731 ;;Total ram usage:        1 bytes
 10732 ;; Hardware stack levels used:    1
 10733 ;; Hardware stack levels required when called:    4
 10734 ;; This function calls:
 10735 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10736 ;; This function is called by:
 10737 ;;		_USBDeviceTasks
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           
 10742                           ;psect for function _USBSuspend
 10743  1EEE                     _USBSuspend:	
 10744                           
 10745                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 10746                           
 10747                           ;incstack = 0
 10748                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10749  1EEE  003D               	movlb	29	; select bank29
 10750  1EEF  1512               	bsf	18,2	;volatile
 10751                           
 10752                           ;usb_device.c: 2271: (UIR &= 0xEF);
 10753  1EF0  30EF               	movlw	239
 10754  1EF1  0021               	movlb	1	; select bank1
 10755  1EF2  00E6               	movwf	??_USBSuspend^(0+128)
 10756  1EF3  0866               	movf	??_USBSuspend^(0+128),w
 10757  1EF4  003D               	movlb	29	; select bank29
 10758  1EF5  0590               	andwf	16,f	;volatile
 10759                           
 10760                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 10761  1EF6  148E               	bsf	14,1	;volatile
 10762                           
 10763                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 10764  1EF7  0024               	movlb	4	; select bank4
 10765  1EF8  01CE               	clrf	_USBBusIsSuspended^(0+512)
 10766  1EF9  0ACE               	incf	_USBBusIsSuspended^(0+512),f
 10767                           
 10768                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 10769  1EFA  01D4               	clrf	_USBTicksSinceSuspendEnd^(0+512)
 10770                           
 10771                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 10772  1EFB  3075               	movlw	117
 10773  1EFC  0021               	movlb	1	; select bank1
 10774  1EFD  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 10775  1EFE  3000               	movlw	0
 10776  1EFF  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
 10777  1F00  3000               	movlw	0
 10778  1F01  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 10779  1F02  3000               	movlw	0
 10780  1F03  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 10781  1F04  3000               	movlw	0
 10782  1F05  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 10783  1F06  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
 10784  1F07  3190  2093         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10785  1F09  0008               	return
 10786  1F0A                     __end_of_USBSuspend:	
 10787                           
 10788                           	psect	text46
 10789  1000                     __ptext46:	
 10790 ;; *************** function _USBStallHandler *****************
 10791 ;; Defined at:
 10792 ;;		line 2202 in file "usb/core/usb_device.c"
 10793 ;; Parameters:    Size  Location     Type
 10794 ;;		None
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;		None
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  1    wreg      void 
 10799 ;; Registers used:
 10800 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 10806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10810 ;;Total ram usage:        1 bytes
 10811 ;; Hardware stack levels used:    1
 10812 ;; This function calls:
 10813 ;;		Nothing
 10814 ;; This function is called by:
 10815 ;;		_USBDeviceTasks
 10816 ;; This function uses a non-reentrant model
 10817 ;;
 10818                           
 10819                           
 10820                           ;psect for function _USBStallHandler
 10821  1000                     _USBStallHandler:	
 10822                           
 10823                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 10824                           
 10825                           ;incstack = 0
 10826                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 10827  1000  003D               	movlb	29	; select bank29
 10828  1001  1C18               	btfss	24,0	;volatile
 10829  1002  2820               	goto	i1l4993
 10830                           
 10831                           ;usb_device.c: 2215: {
 10832                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 10833  1003  0023               	movlb	3	; select bank3
 10834  1004  0869               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10835  1005  0086               	movwf	6
 10836  1006  0187               	clrf	7
 10837  1007  3080               	movlw	128
 10838  1008  0601               	xorwf	1,w
 10839  1009  1D03               	btfss	3,2
 10840  100A  281E               	goto	i1l4991
 10841  100B  084B               	movf	_pBDTEntryIn^(0+384),w
 10842  100C  0086               	movwf	6
 10843  100D  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 10844  100E  0087               	movwf	7
 10845  100F  3084               	movlw	132
 10846  1010  0601               	xorwf	1,w
 10847  1011  1D03               	btfss	3,2
 10848  1012  281E               	goto	i1l4991
 10849                           
 10850                           ;usb_device.c: 2218: {
 10851                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10852  1013  300C               	movlw	12
 10853  1014  00F0               	movwf	??_USBStallHandler
 10854  1015  0869               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10855  1016  0086               	movwf	6
 10856  1017  0187               	clrf	7
 10857  1018  0870               	movf	??_USBStallHandler,w
 10858  1019  0081               	movwf	1
 10859                           
 10860                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10861  101A  0869               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10862  101B  0086               	movwf	6
 10863  101C  0187               	clrf	7
 10864  101D  1781               	bsf	1,7
 10865  101E                     i1l4991:	
 10866                           
 10867                           ;usb_device.c: 2222: }
 10868                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 10869  101E  003D               	movlb	29	; select bank29
 10870  101F  1018               	bcf	24,0	;volatile
 10871  1020                     i1l4993:	
 10872                           
 10873                           ;usb_device.c: 2224: }
 10874                           ;usb_device.c: 2226: (UIR &= 0xDF);
 10875  1020  30DF               	movlw	223
 10876  1021  00F0               	movwf	??_USBStallHandler
 10877  1022  0870               	movf	??_USBStallHandler,w
 10878  1023  0590               	andwf	16,f	;volatile
 10879  1024  0008               	return
 10880  1025                     __end_of_USBStallHandler:	
 10881                           
 10882                           	psect	text47
 10883  1E88                     __ptext47:	
 10884 ;; *************** function _USBIncrement1msInternalTimers *****************
 10885 ;; Defined at:
 10886 ;;		line 3025 in file "usb/core/usb_device.c"
 10887 ;; Parameters:    Size  Location     Type
 10888 ;;		None
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;		None
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      void 
 10893 ;; Registers used:
 10894 ;;		wreg, status,2, status,0
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 10900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10904 ;;Total ram usage:        1 bytes
 10905 ;; Hardware stack levels used:    1
 10906 ;; This function calls:
 10907 ;;		Nothing
 10908 ;; This function is called by:
 10909 ;;		_USBDeviceTasks
 10910 ;; This function uses a non-reentrant model
 10911 ;;
 10912                           
 10913                           
 10914                           ;psect for function _USBIncrement1msInternalTimers
 10915  1E88                     _USBIncrement1msInternalTimers:	
 10916                           
 10917                           ;usb_device.c: 3033: USB1msTickCount++;
 10918                           
 10919                           ;incstack = 0
 10920                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
 10921  1E88  3001               	movlw	1
 10922  1E89  0025               	movlb	5	; select bank5
 10923  1E8A  07C6               	addwf	_USB1msTickCount^(0+640),f
 10924  1E8B  3000               	movlw	0
 10925  1E8C  3DC7               	addwfc	(_USB1msTickCount+1)^(0+640),f
 10926  1E8D  3000               	movlw	0
 10927  1E8E  3DC8               	addwfc	(_USB1msTickCount+2)^(0+640),f
 10928  1E8F  3000               	movlw	0
 10929  1E90  3DC9               	addwfc	(_USB1msTickCount+3)^(0+640),f
 10930                           
 10931                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 10932  1E91  0024               	movlb	4	; select bank4
 10933  1E92  084E               	movf	_USBBusIsSuspended^(0+512),w
 10934  1E93  1D03               	btfss	3,2
 10935  1E94  0008               	return
 10936                           
 10937                           ;usb_device.c: 3035: {
 10938                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 10939  1E95  3001               	movlw	1
 10940  1E96  00F0               	movwf	??_USBIncrement1msInternalTimers
 10941  1E97  0870               	movf	??_USBIncrement1msInternalTimers,w
 10942  1E98  07D4               	addwf	_USBTicksSinceSuspendEnd^(0+512),f
 10943                           
 10944                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 10945  1E99  0854               	movf	_USBTicksSinceSuspendEnd^(0+512),w
 10946  1E9A  1D03               	btfss	3,2
 10947  1E9B  0008               	return
 10948                           
 10949                           ;usb_device.c: 3039: {
 10950                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 10951  1E9C  30FF               	movlw	255
 10952  1E9D  00F0               	movwf	??_USBIncrement1msInternalTimers
 10953  1E9E  0870               	movf	??_USBIncrement1msInternalTimers,w
 10954  1E9F  00D4               	movwf	_USBTicksSinceSuspendEnd^(0+512)
 10955  1EA0  0008               	return
 10956  1EA1                     __end_of_USBIncrement1msInternalTimers:	
 10957                           
 10958                           	psect	text48
 10959  142E                     __ptext48:	
 10960 ;; *************** function _USBCtrlEPService *****************
 10961 ;; Defined at:
 10962 ;;		line 2372 in file "usb/core/usb_device.c"
 10963 ;; Parameters:    Size  Location     Type
 10964 ;;		None
 10965 ;; Auto vars:     Size  Location     Type
 10966 ;;		None
 10967 ;; Return value:  Size  Location     Type
 10968 ;;                  1    wreg      void 
 10969 ;; Registers used:
 10970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10971 ;; Tracked objects:
 10972 ;;		On entry : 0/0
 10973 ;;		On exit  : 0/0
 10974 ;;		Unchanged: 0/0
 10975 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 10976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 10978 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0
 10979 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0
 10980 ;;Total ram usage:        3 bytes
 10981 ;; Hardware stack levels used:    1
 10982 ;; Hardware stack levels required when called:    7
 10983 ;; This function calls:
 10984 ;;		_USBCtrlTrfInHandler
 10985 ;;		_USBCtrlTrfOutHandler
 10986 ;;		_USBCtrlTrfSetupHandler
 10987 ;; This function is called by:
 10988 ;;		_USBDeviceTasks
 10989 ;; This function uses a non-reentrant model
 10990 ;;
 10991                           
 10992                           
 10993                           ;psect for function _USBCtrlEPService
 10994  142E                     _USBCtrlEPService:	
 10995                           
 10996                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 10997                           
 10998                           ;incstack = 0
 10999                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11000  142E  302D               	movlw	45
 11001  142F  0022               	movlb	2	; select bank2
 11002  1430  00E0               	movwf	??_USBCtrlEPService^(0+256)
 11003  1431  0860               	movf	??_USBCtrlEPService^(0+256),w
 11004  1432  0024               	movlb	4	; select bank4
 11005  1433  00D3               	movwf	_USBStatusStageTimeoutCounter^(0+512)
 11006                           
 11007                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 11008  1434  0023               	movlb	3	; select bank3
 11009  1435  086F               	movf	_USTATcopy^(0+384),w
 11010  1436  39FD               	andlw	253
 11011  1437  1D03               	btfss	3,2
 11012  1438  2C7C               	goto	i1l5013
 11013                           
 11014                           ;usb_device.c: 2383: {
 11015                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 11016  1439  366F               	lsrf	_USTATcopy^(0+384),w
 11017  143A  393F               	andlw	63
 11018  143B  0022               	movlb	2	; select bank2
 11019  143C  00E0               	movwf	??_USBCtrlEPService^(0+256)
 11020  143D  3001               	movlw	1
 11021  143E                     u450_25:	
 11022  143E  35E0               	lslf	??_USBCtrlEPService^(0+256),f
 11023  143F  3EFF               	addlw	-1
 11024  1440  1D03               	skipz
 11025  1441  2C3E               	goto	u450_25
 11026  1442  3560               	lslf	??_USBCtrlEPService^(0+256),w
 11027  1443  3E20               	addlw	32
 11028  1444  00E1               	movwf	(??_USBCtrlEPService+1)^(0+256)
 11029  1445  0861               	movf	(??_USBCtrlEPService+1)^(0+256),w
 11030  1446  0023               	movlb	3	; select bank3
 11031  1447  00E9               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 11032                           
 11033                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11034  1448  0869               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11035  1449  0022               	movlb	2	; select bank2
 11036  144A  00EE               	movwf	_pBDTEntryEP0OutNext^(0+256)
 11037  144B  39FF               	andlw	255
 11038  144C  1D03               	skipz
 11039  144D  3000               	movlw	0
 11040  144E  00EF               	movwf	(_pBDTEntryEP0OutNext+1)^(0+256)
 11041                           
 11042                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 11043  144F  3004               	movlw	4
 11044  1450  066E               	xorwf	_pBDTEntryEP0OutNext^(0+256),w
 11045  1451  00EE               	movwf	_pBDTEntryEP0OutNext^(0+256)
 11046  1452  3000               	movlw	0
 11047  1453  066F               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11048  1454  00EF               	movwf	(_pBDTEntryEP0OutNext+1)^(0+256)
 11049                           
 11050                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 11051  1455  0023               	movlb	3	; select bank3
 11052  1456  0869               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11053  1457  0086               	movwf	6
 11054  1458  0187               	clrf	7
 11055  1459  0C01               	rrf	1,w
 11056  145A  0C89               	rrf	9,f
 11057  145B  390F               	andlw	15
 11058  145C  3A0D               	xorlw	13
 11059  145D  1D03               	skipz
 11060  145E  2C79               	goto	i1l5011
 11061                           
 11062                           ;usb_device.c: 2400: {
 11063                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
 11064  145F  30A0               	movlw	160
 11065  1460  0086               	movwf	6
 11066  1461  0187               	clrf	7
 11067  1462  0023               	movlb	3	; select bank3
 11068  1463  0869               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11069  1464  3E02               	addlw	2
 11070  1465  0084               	movwf	4
 11071  1466  0185               	clrf	5
 11072  1467  3F00               	moviw [0]fsr0
 11073  1468  0022               	movlb	2	; select bank2
 11074  1469  00E0               	movwf	??_USBCtrlEPService^(0+256)
 11075  146A  3F01               	moviw [1]fsr0
 11076  146B  00E1               	movwf	(??_USBCtrlEPService^(0+256)+1)
 11077  146C  0860               	movf	??_USBCtrlEPService^(0+256),w
 11078  146D  0084               	movwf	4
 11079  146E  0861               	movf	(??_USBCtrlEPService+1)^(0+256),w
 11080  146F  0085               	movwf	5
 11081  1470  3008               	movlw	8
 11082  1471  00E2               	movwf	(??_USBCtrlEPService+2)^(0+256)
 11083  1472                     u452_2m0:	
 11084  1472  0012               	moviw fsr0++
 11085  1473  001E               	movwi fsr1++
 11086  1474  0BE2               	decfsz	(??_USBCtrlEPService+2)^(0+256),f
 11087  1475  2C72               	goto	u452_2m0
 11088                           
 11089                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 11090  1476  3193  237F         	fcall	_USBCtrlTrfSetupHandler
 11091                           
 11092                           ;usb_device.c: 2409: }
 11093  1478  0008               	return
 11094  1479                     i1l5011:	
 11095                           
 11096                           ;usb_device.c: 2410: else
 11097                           ;usb_device.c: 2411: {
 11098                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 11099  1479  3190  20CF         	fcall	_USBCtrlTrfOutHandler
 11100                           
 11101                           ;usb_device.c: 2414: }
 11102                           ;usb_device.c: 2415: }
 11103  147B  0008               	return
 11104  147C                     i1l5013:	
 11105                           
 11106                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 11107  147C  30FD               	movlw	253
 11108  147D  0023               	movlb	3	; select bank3
 11109  147E  056F               	andwf	_USTATcopy^(0+384),w
 11110  147F  0022               	movlb	2	; select bank2
 11111  1480  00E0               	movwf	??_USBCtrlEPService^(0+256)
 11112  1481  3004               	movlw	4
 11113  1482  0660               	xorwf	??_USBCtrlEPService^(0+256),w
 11114  1483  1D03               	btfss	3,2
 11115  1484  0008               	return
 11116                           
 11117                           ;usb_device.c: 2417: {
 11118                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 11119  1485  3197  2780         	fcall	_USBCtrlTrfInHandler
 11120  1487  0008               	return
 11121  1488                     __end_of_USBCtrlEPService:	
 11122                           
 11123                           	psect	text49
 11124  137F                     __ptext49:	
 11125 ;; *************** function _USBCtrlTrfSetupHandler *****************
 11126 ;; Defined at:
 11127 ;;		line 2465 in file "usb/core/usb_device.c"
 11128 ;; Parameters:    Size  Location     Type
 11129 ;;		None
 11130 ;; Auto vars:     Size  Location     Type
 11131 ;;		None
 11132 ;; Return value:  Size  Location     Type
 11133 ;;                  1    wreg      void 
 11134 ;; Registers used:
 11135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 11141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11143 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 11144 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 11145 ;;Total ram usage:        1 bytes
 11146 ;; Hardware stack levels used:    1
 11147 ;; Hardware stack levels required when called:    6
 11148 ;; This function calls:
 11149 ;;		_USBCheckStdRequest
 11150 ;;		_USBCtrlEPServiceComplete
 11151 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11152 ;; This function is called by:
 11153 ;;		_USBCtrlEPService
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           
 11158                           ;psect for function _USBCtrlTrfSetupHandler
 11159  137F                     _USBCtrlTrfSetupHandler:	
 11160                           
 11161                           ;usb_device.c: 2470: shortPacketStatus = 0;
 11162                           
 11163                           ;incstack = 0
 11164                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11165  137F  0023               	movlb	3	; select bank3
 11166  1380  01EA               	clrf	_shortPacketStatus^(0+384)
 11167                           
 11168                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 11169  1381  01E0               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
 11170                           
 11171                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 11172  1382  0024               	movlb	4	; select bank4
 11173  1383  01CF               	clrf	_USBDeferINDataStagePackets^(0+512)	;volatile
 11174                           
 11175                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 11176  1384  01D0               	clrf	_USBDeferOUTDataStagePackets^(0+512)	;volatile
 11177                           
 11178                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 11179  1385  01C6               	clrf	_BothEP0OutUOWNsSet^(0+512)
 11180                           
 11181                           ;usb_device.c: 2475: controlTransferState = 0;
 11182  1386  0023               	movlb	3	; select bank3
 11183  1387  01E8               	clrf	_controlTransferState^(0+384)
 11184                           
 11185                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 11186  1388  307F               	movlw	127
 11187  1389  0021               	movlb	1	; select bank1
 11188  138A  00EE               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 11189  138B  0023               	movlb	3	; select bank3
 11190  138C  084B               	movf	_pBDTEntryIn^(0+384),w
 11191  138D  0086               	movwf	6
 11192  138E  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11193  138F  0087               	movwf	7
 11194  1390  0021               	movlb	1	; select bank1
 11195  1391  086E               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 11196  1392  0581               	andwf	1,f
 11197                           
 11198                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 11199  1393  3004               	movlw	4
 11200  1394  0023               	movlb	3	; select bank3
 11201  1395  064B               	xorwf	_pBDTEntryIn^(0+384),w
 11202  1396  00CB               	movwf	_pBDTEntryIn^(0+384)
 11203  1397  3000               	movlw	0
 11204  1398  064C               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 11205  1399  00CC               	movwf	(_pBDTEntryIn+1)^(0+384)
 11206                           
 11207                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 11208  139A  307F               	movlw	127
 11209  139B  0021               	movlb	1	; select bank1
 11210  139C  00EE               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 11211  139D  0023               	movlb	3	; select bank3
 11212  139E  084B               	movf	_pBDTEntryIn^(0+384),w
 11213  139F  0086               	movwf	6
 11214  13A0  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11215  13A1  0087               	movwf	7
 11216  13A2  0021               	movlb	1	; select bank1
 11217  13A3  086E               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 11218  13A4  0581               	andwf	1,f
 11219                           
 11220                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 11221  13A5  3004               	movlw	4
 11222  13A6  0023               	movlb	3	; select bank3
 11223  13A7  064B               	xorwf	_pBDTEntryIn^(0+384),w
 11224  13A8  00CB               	movwf	_pBDTEntryIn^(0+384)
 11225  13A9  3000               	movlw	0
 11226  13AA  064C               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 11227  13AB  00CC               	movwf	(_pBDTEntryIn+1)^(0+384)
 11228                           
 11229                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 11230  13AC  307F               	movlw	127
 11231  13AD  0021               	movlb	1	; select bank1
 11232  13AE  00EE               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 11233  13AF  0022               	movlb	2	; select bank2
 11234  13B0  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11235  13B1  0086               	movwf	6
 11236  13B2  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11237  13B3  0087               	movwf	7
 11238  13B4  0021               	movlb	1	; select bank1
 11239  13B5  086E               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 11240  13B6  0581               	andwf	1,f
 11241                           
 11242                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 11243  13B7  0023               	movlb	3	; select bank3
 11244  13B8  01D7               	clrf	(_inPipes^(0+384)+2)
 11245                           
 11246                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 11247  13B9  01D8               	clrf	(_inPipes^(0+384)+3)
 11248  13BA  01D9               	clrf	((_inPipes+1)^(0+384)+3)
 11249                           
 11250                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 11251  13BB  0024               	movlb	4	; select bank4
 11252  13BC  01A2               	clrf	(_outPipes^(0+512)+2)
 11253                           
 11254                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 11255  13BD  01A3               	clrf	(_outPipes^(0+512)+3)
 11256  13BE  01A4               	clrf	((_outPipes+1)^(0+512)+3)
 11257                           
 11258                           ;usb_device.c: 2500: USBCheckStdRequest();
 11259  13BF  3193  23D4  3193   	fcall	_USBCheckStdRequest
 11260                           
 11261                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 11262  13C2  3000               	movlw	0
 11263  13C3  0021               	movlb	1	; select bank1
 11264  13C4  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
 11265  13C5  3003               	movlw	3
 11266  13C6  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 11267  13C7  3000               	movlw	0
 11268  13C8  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 11269  13C9  3000               	movlw	0
 11270  13CA  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 11271  13CB  3000               	movlw	0
 11272  13CC  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 11273  13CD  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
 11274  13CE  3190  2093  3193   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11275                           
 11276                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 11277  13D1  318B  2321         	fcall	_USBCtrlEPServiceComplete
 11278  13D3  0008               	return
 11279  13D4                     __end_of_USBCtrlTrfSetupHandler:	
 11280                           
 11281                           	psect	text50
 11282  0B21                     __ptext50:	
 11283 ;; *************** function _USBCtrlEPServiceComplete *****************
 11284 ;; Defined at:
 11285 ;;		line 1616 in file "usb/core/usb_device.c"
 11286 ;; Parameters:    Size  Location     Type
 11287 ;;		None
 11288 ;; Auto vars:     Size  Location     Type
 11289 ;;		None
 11290 ;; Return value:  Size  Location     Type
 11291 ;;                  1    wreg      void 
 11292 ;; Registers used:
 11293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11294 ;; Tracked objects:
 11295 ;;		On entry : 0/0
 11296 ;;		On exit  : 0/0
 11297 ;;		Unchanged: 0/0
 11298 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 11299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11301 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11303 ;;Total ram usage:        2 bytes
 11304 ;; Hardware stack levels used:    1
 11305 ;; Hardware stack levels required when called:    2
 11306 ;; This function calls:
 11307 ;;		_USBCtrlEPAllowDataStage
 11308 ;;		_USBCtrlEPAllowStatusStage
 11309 ;; This function is called by:
 11310 ;;		_USBCtrlTrfSetupHandler
 11311 ;; This function uses a non-reentrant model
 11312 ;;
 11313                           
 11314                           
 11315                           ;psect for function _USBCtrlEPServiceComplete
 11316  0B21                     _USBCtrlEPServiceComplete:	
 11317                           
 11318                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 11319                           
 11320                           ;incstack = 0
 11321                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11322  0B21  003D               	movlb	29	; select bank29
 11323  0B22  120E               	bcf	14,4	;volatile
 11324                           
 11325                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 11326  0B23  0023               	movlb	3	; select bank3
 11327  0B24  1BD7               	btfsc	(_inPipes^(0+384)+2),7
 11328  0B25  2B6A               	goto	i1l457
 11329                           
 11330                           ;usb_device.c: 1629: {
 11331                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 11332  0B26  0024               	movlb	4	; select bank4
 11333  0B27  1FA2               	btfss	(_outPipes^(0+512)+2),7
 11334  0B28  2B38               	goto	i1l4507
 11335                           
 11336                           ;usb_device.c: 1631: {
 11337                           ;usb_device.c: 1632: controlTransferState = 2;
 11338  0B29  3002               	movlw	2
 11339  0B2A  00F5               	movwf	??_USBCtrlEPServiceComplete
 11340  0B2B  0875               	movf	??_USBCtrlEPServiceComplete,w
 11341  0B2C  0023               	movlb	3	; select bank3
 11342  0B2D  00E8               	movwf	_controlTransferState^(0+384)
 11343                           
 11344                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 11345  0B2E  0024               	movlb	4	; select bank4
 11346  0B2F  0850               	movf	_USBDeferOUTDataStagePackets^(0+512),w	;volatile
 11347  0B30  1D03               	btfss	3,2
 11348  0B31  2B34               	goto	i1l4503
 11349                           
 11350                           ;usb_device.c: 1644: {
 11351                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 11352  0B32  3194  2488         	fcall	_USBCtrlEPAllowDataStage
 11353  0B34                     i1l4503:	
 11354                           
 11355                           ;usb_device.c: 1646: }
 11356                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 11357  0B34  0024               	movlb	4	; select bank4
 11358  0B35  01D2               	clrf	_USBStatusStageEnabledFlag2^(0+512)	;volatile
 11359                           
 11360                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 11361  0B36  01D1               	clrf	_USBStatusStageEnabledFlag1^(0+512)	;volatile
 11362                           
 11363                           ;usb_device.c: 1652: }
 11364  0B37  0008               	return
 11365  0B38                     i1l4507:	
 11366                           
 11367                           ;usb_device.c: 1653: else
 11368                           ;usb_device.c: 1654: {
 11369                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 11370  0B38  0022               	movlb	2	; select bank2
 11371  0B39  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11372  0B3A  3E01               	addlw	1
 11373  0B3B  00F5               	movwf	??_USBCtrlEPServiceComplete
 11374  0B3C  3000               	movlw	0
 11375  0B3D  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11376  0B3E  00F6               	movwf	??_USBCtrlEPServiceComplete+1
 11377  0B3F  0875               	movf	??_USBCtrlEPServiceComplete,w
 11378  0B40  0086               	movwf	6
 11379  0B41  0876               	movf	??_USBCtrlEPServiceComplete+1,w
 11380  0B42  0087               	movwf	7
 11381  0B43  3008               	movlw	8
 11382  0B44  0081               	movwf	1
 11383                           
 11384                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11385  0B45  30A0               	movlw	160
 11386  0B46  00F5               	movwf	??_USBCtrlEPServiceComplete
 11387  0B47  3000               	movlw	0
 11388  0B48  00F6               	movwf	??_USBCtrlEPServiceComplete+1
 11389  0B49  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11390  0B4A  0086               	movwf	6
 11391  0B4B  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11392  0B4C  0087               	movwf	7
 11393  0B4D  3142               	addfsr 1,2
 11394  0B4E  0875               	movf	??_USBCtrlEPServiceComplete,w
 11395  0B4F  3FC0               	movwi [0]fsr1
 11396  0B50  0876               	movf	??_USBCtrlEPServiceComplete+1,w
 11397  0B51  3FC1               	movwi [1]fsr1
 11398                           
 11399                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11400  0B52  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11401  0B53  0086               	movwf	6
 11402  0B54  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11403  0B55  0087               	movwf	7
 11404  0B56  300C               	movlw	12
 11405  0B57  0081               	movwf	1
 11406                           
 11407                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11408  0B58  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11409  0B59  0086               	movwf	6
 11410  0B5A  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11411  0B5B  0087               	movwf	7
 11412  0B5C  1781               	bsf	1,7
 11413                           
 11414                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 11415  0B5D  0023               	movlb	3	; select bank3
 11416  0B5E  084B               	movf	_pBDTEntryIn^(0+384),w
 11417  0B5F  0086               	movwf	6
 11418  0B60  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11419  0B61  0087               	movwf	7
 11420  0B62  3004               	movlw	4
 11421  0B63  0081               	movwf	1
 11422                           
 11423                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11424  0B64  084B               	movf	_pBDTEntryIn^(0+384),w
 11425  0B65  0086               	movwf	6
 11426  0B66  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11427  0B67  0087               	movwf	7
 11428  0B68  1781               	bsf	1,7
 11429                           
 11430                           ;usb_device.c: 1665: }
 11431                           ;usb_device.c: 1666: }
 11432  0B69  0008               	return
 11433  0B6A                     i1l457:	
 11434                           
 11435                           ;usb_device.c: 1667: else
 11436                           ;usb_device.c: 1668: {
 11437                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 11438  0B6A  0021               	movlb	1	; select bank1
 11439  0B6B  1FA0               	btfss	32,7	;volatile
 11440  0B6C  2B81               	goto	i1l4533
 11441                           
 11442                           ;usb_device.c: 1670: {
 11443                           ;usb_device.c: 1671: controlTransferState = 1;
 11444  0B6D  0023               	movlb	3	; select bank3
 11445  0B6E  01E8               	clrf	_controlTransferState^(0+384)
 11446  0B6F  0AE8               	incf	_controlTransferState^(0+384),f
 11447                           
 11448                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 11449  0B70  0024               	movlb	4	; select bank4
 11450  0B71  084F               	movf	_USBDeferINDataStagePackets^(0+512),w	;volatile
 11451  0B72  1D03               	btfss	3,2
 11452  0B73  2B77               	goto	i1l4525
 11453                           
 11454                           ;usb_device.c: 1686: {
 11455                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 11456  0B74  3194  2488  318B   	fcall	_USBCtrlEPAllowDataStage
 11457  0B77                     i1l4525:	
 11458                           
 11459                           ;usb_device.c: 1688: }
 11460                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 11461  0B77  0024               	movlb	4	; select bank4
 11462  0B78  01D2               	clrf	_USBStatusStageEnabledFlag2^(0+512)	;volatile
 11463                           
 11464                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 11465  0B79  01D1               	clrf	_USBStatusStageEnabledFlag1^(0+512)	;volatile
 11466                           
 11467                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 11468  0B7A  0023               	movlb	3	; select bank3
 11469  0B7B  0860               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 11470  0B7C  1D03               	btfss	3,2
 11471  0B7D  0008               	return
 11472                           
 11473                           ;usb_device.c: 1713: {
 11474                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 11475  0B7E  3195  25A9         	fcall	_USBCtrlEPAllowStatusStage
 11476                           
 11477                           ;usb_device.c: 1715: }
 11478                           ;usb_device.c: 1716: }
 11479  0B80  0008               	return
 11480  0B81                     i1l4533:	
 11481                           
 11482                           ;usb_device.c: 1717: else
 11483                           ;usb_device.c: 1718: {
 11484                           ;usb_device.c: 1729: controlTransferState = 2;
 11485  0B81  3002               	movlw	2
 11486  0B82  00F5               	movwf	??_USBCtrlEPServiceComplete
 11487  0B83  0875               	movf	??_USBCtrlEPServiceComplete,w
 11488  0B84  0023               	movlb	3	; select bank3
 11489  0B85  00E8               	movwf	_controlTransferState^(0+384)
 11490                           
 11491                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 11492  0B86  0022               	movlb	2	; select bank2
 11493  0B87  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11494  0B88  3E01               	addlw	1
 11495  0B89  00F5               	movwf	??_USBCtrlEPServiceComplete
 11496  0B8A  3000               	movlw	0
 11497  0B8B  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11498  0B8C  00F6               	movwf	??_USBCtrlEPServiceComplete+1
 11499  0B8D  0875               	movf	??_USBCtrlEPServiceComplete,w
 11500  0B8E  0086               	movwf	6
 11501  0B8F  0876               	movf	??_USBCtrlEPServiceComplete+1,w
 11502  0B90  0087               	movwf	7
 11503  0B91  3008               	movlw	8
 11504  0B92  0081               	movwf	1
 11505                           
 11506                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11507  0B93  30A0               	movlw	160
 11508  0B94  00F5               	movwf	??_USBCtrlEPServiceComplete
 11509  0B95  3000               	movlw	0
 11510  0B96  00F6               	movwf	??_USBCtrlEPServiceComplete+1
 11511  0B97  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11512  0B98  0086               	movwf	6
 11513  0B99  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11514  0B9A  0087               	movwf	7
 11515  0B9B  3142               	addfsr 1,2
 11516  0B9C  0875               	movf	??_USBCtrlEPServiceComplete,w
 11517  0B9D  3FC0               	movwi [0]fsr1
 11518  0B9E  0876               	movf	??_USBCtrlEPServiceComplete+1,w
 11519  0B9F  3FC1               	movwi [1]fsr1
 11520                           
 11521                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 11522  0BA0  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11523  0BA1  0086               	movwf	6
 11524  0BA2  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11525  0BA3  0087               	movwf	7
 11526  0BA4  3004               	movlw	4
 11527  0BA5  0081               	movwf	1
 11528                           
 11529                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11530  0BA6  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11531  0BA7  0086               	movwf	6
 11532  0BA8  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11533  0BA9  0087               	movwf	7
 11534  0BAA  1781               	bsf	1,7
 11535                           
 11536                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 11537  0BAB  0024               	movlb	4	; select bank4
 11538  0BAC  01D2               	clrf	_USBStatusStageEnabledFlag2^(0+512)	;volatile
 11539                           
 11540                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 11541  0BAD  01D1               	clrf	_USBStatusStageEnabledFlag1^(0+512)	;volatile
 11542                           
 11543                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 11544  0BAE  0023               	movlb	3	; select bank3
 11545  0BAF  0860               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 11546  0BB0  1D03               	btfss	3,2
 11547  0BB1  0008               	return
 11548                           
 11549                           ;usb_device.c: 1741: {
 11550                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 11551  0BB2  3195  25A9         	fcall	_USBCtrlEPAllowStatusStage
 11552  0BB4  0008               	return
 11553  0BB5                     __end_of_USBCtrlEPServiceComplete:	
 11554                           
 11555                           	psect	text51
 11556  1488                     __ptext51:	
 11557 ;; *************** function _USBCtrlEPAllowDataStage *****************
 11558 ;; Defined at:
 11559 ;;		line 1488 in file "usb/core/usb_device.c"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;		None
 11562 ;; Auto vars:     Size  Location     Type
 11563 ;;		None
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  1    wreg      void 
 11566 ;; Registers used:
 11567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11568 ;; Tracked objects:
 11569 ;;		On entry : 0/0
 11570 ;;		On exit  : 0/0
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 11573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11577 ;;Total ram usage:        2 bytes
 11578 ;; Hardware stack levels used:    1
 11579 ;; Hardware stack levels required when called:    1
 11580 ;; This function calls:
 11581 ;;		_USBCtrlTrfTxService
 11582 ;; This function is called by:
 11583 ;;		_USBCtrlEPServiceComplete
 11584 ;; This function uses a non-reentrant model
 11585 ;;
 11586                           
 11587                           
 11588                           ;psect for function _USBCtrlEPAllowDataStage
 11589  1488                     _USBCtrlEPAllowDataStage:	
 11590                           
 11591                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 11592                           
 11593                           ;incstack = 0
 11594                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11595  1488  0024               	movlb	4	; select bank4
 11596  1489  01CF               	clrf	_USBDeferINDataStagePackets^(0+512)	;volatile
 11597                           
 11598                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 11599  148A  01D0               	clrf	_USBDeferOUTDataStagePackets^(0+512)	;volatile
 11600                           
 11601                           ;usb_device.c: 1493: if(controlTransferState == 2)
 11602  148B  3002               	movlw	2
 11603  148C  0023               	movlb	3	; select bank3
 11604  148D  0668               	xorwf	_controlTransferState^(0+384),w
 11605  148E  1D03               	btfss	3,2
 11606  148F  2CB6               	goto	i1l4277
 11607                           
 11608                           ;usb_device.c: 1494: {
 11609                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 11610  1490  0022               	movlb	2	; select bank2
 11611  1491  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11612  1492  3E01               	addlw	1
 11613  1493  00F3               	movwf	??_USBCtrlEPAllowDataStage
 11614  1494  3000               	movlw	0
 11615  1495  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11616  1496  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
 11617  1497  0873               	movf	??_USBCtrlEPAllowDataStage,w
 11618  1498  0086               	movwf	6
 11619  1499  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
 11620  149A  0087               	movwf	7
 11621  149B  3008               	movlw	8
 11622  149C  0081               	movwf	1
 11623                           
 11624                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 11625  149D  30A8               	movlw	168
 11626  149E  00F3               	movwf	??_USBCtrlEPAllowDataStage
 11627  149F  3000               	movlw	0
 11628  14A0  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
 11629  14A1  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11630  14A2  0086               	movwf	6
 11631  14A3  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11632  14A4  0087               	movwf	7
 11633  14A5  3142               	addfsr 1,2
 11634  14A6  0873               	movf	??_USBCtrlEPAllowDataStage,w
 11635  14A7  3FC0               	movwi [0]fsr1
 11636  14A8  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
 11637  14A9  3FC1               	movwi [1]fsr1
 11638                           
 11639                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 11640  14AA  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11641  14AB  0086               	movwf	6
 11642  14AC  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11643  14AD  0087               	movwf	7
 11644  14AE  3048               	movlw	72
 11645  14AF  0081               	movwf	1
 11646                           
 11647                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11648  14B0  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 11649  14B1  0086               	movwf	6
 11650  14B2  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 11651  14B3  0087               	movwf	7
 11652  14B4  1781               	bsf	1,7
 11653                           
 11654                           ;usb_device.c: 1500: }
 11655  14B5  0008               	return
 11656  14B6                     i1l4277:	
 11657                           
 11658                           ;usb_device.c: 1501: else
 11659                           ;usb_device.c: 1502: {
 11660                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 11661  14B6  0023               	movlb	3	; select bank3
 11662  14B7  0859               	movf	((_inPipes+1)^(0+384)+3),w
 11663  14B8  0021               	movlb	1	; select bank1
 11664  14B9  0227               	subwf	39,w	;volatile
 11665  14BA  1D03               	skipz
 11666  14BB  2CC0               	goto	u354_25
 11667  14BC  0023               	movlb	3	; select bank3
 11668  14BD  0858               	movf	(_inPipes^(0+384)+3),w
 11669  14BE  0021               	movlb	1	; select bank1
 11670  14BF  0226               	subwf	38,w	;volatile
 11671  14C0                     u354_25:	
 11672  14C0  1803               	skipnc
 11673  14C1  2CC9               	goto	i1l4281
 11674                           
 11675                           ;usb_device.c: 1506: {
 11676                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 11677  14C2  0827               	movf	39,w	;volatile
 11678  14C3  0023               	movlb	3	; select bank3
 11679  14C4  00D9               	movwf	((_inPipes+1)^(0+384)+3)
 11680  14C5  0021               	movlb	1	; select bank1
 11681  14C6  0826               	movf	38,w	;volatile
 11682  14C7  0023               	movlb	3	; select bank3
 11683  14C8  00D8               	movwf	(_inPipes^(0+384)+3)
 11684  14C9                     i1l4281:	
 11685                           
 11686                           ;usb_device.c: 1508: }
 11687                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 11688  14C9  3188  2004         	fcall	_USBCtrlTrfTxService
 11689                           
 11690                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 11691  14CB  30A8               	movlw	168
 11692  14CC  00F3               	movwf	??_USBCtrlEPAllowDataStage
 11693  14CD  3000               	movlw	0
 11694  14CE  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
 11695  14CF  0023               	movlb	3	; select bank3
 11696  14D0  084B               	movf	_pBDTEntryIn^(0+384),w
 11697  14D1  0086               	movwf	6
 11698  14D2  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11699  14D3  0087               	movwf	7
 11700  14D4  3142               	addfsr 1,2
 11701  14D5  0873               	movf	??_USBCtrlEPAllowDataStage,w
 11702  14D6  3FC0               	movwi [0]fsr1
 11703  14D7  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
 11704  14D8  3FC1               	movwi [1]fsr1
 11705                           
 11706                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11707  14D9  084B               	movf	_pBDTEntryIn^(0+384),w
 11708  14DA  0086               	movwf	6
 11709  14DB  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11710  14DC  0087               	movwf	7
 11711  14DD  3048               	movlw	72
 11712  14DE  0081               	movwf	1
 11713                           
 11714                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11715  14DF  084B               	movf	_pBDTEntryIn^(0+384),w
 11716  14E0  0086               	movwf	6
 11717  14E1  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 11718  14E2  0087               	movwf	7
 11719  14E3  1781               	bsf	1,7
 11720  14E4  0008               	return
 11721  14E5                     __end_of_USBCtrlEPAllowDataStage:	
 11722                           
 11723                           	psect	text52
 11724  13D4                     __ptext52:	
 11725 ;; *************** function _USBCheckStdRequest *****************
 11726 ;; Defined at:
 11727 ;;		line 2686 in file "usb/core/usb_device.c"
 11728 ;; Parameters:    Size  Location     Type
 11729 ;;		None
 11730 ;; Auto vars:     Size  Location     Type
 11731 ;;		None
 11732 ;; Return value:  Size  Location     Type
 11733 ;;                  1    wreg      void 
 11734 ;; Registers used:
 11735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11736 ;; Tracked objects:
 11737 ;;		On entry : 0/0
 11738 ;;		On exit  : 0/0
 11739 ;;		Unchanged: 0/0
 11740 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 11741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11743 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 11744 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 11745 ;;Total ram usage:        1 bytes
 11746 ;; Hardware stack levels used:    1
 11747 ;; Hardware stack levels required when called:    5
 11748 ;; This function calls:
 11749 ;;		_USBStdFeatureReqHandler
 11750 ;;		_USBStdGetDscHandler
 11751 ;;		_USBStdGetStatusHandler
 11752 ;;		_USBStdSetCfgHandler
 11753 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11754 ;; This function is called by:
 11755 ;;		_USBCtrlTrfSetupHandler
 11756 ;; This function uses a non-reentrant model
 11757 ;;
 11758                           
 11759                           
 11760                           ;psect for function _USBCheckStdRequest
 11761  13D4                     _USBCheckStdRequest:	
 11762                           
 11763                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 11764                           
 11765                           ;incstack = 0
 11766                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11767  13D4  0021               	movlb	1	; select bank1
 11768  13D5  0E20               	swapf	32,w	;volatile
 11769  13D6  0C89               	rrf	9,f
 11770  13D7  3903               	andlw	3
 11771  13D8  3A00               	xorlw	0
 11772  13D9  1D03               	btfss	3,2
 11773  13DA  0008               	return
 11774  13DB  2C22               	goto	i1l4631
 11775  13DC                     i1l584:	
 11776                           ;usb_device.c: 2691: {
 11777                           ;usb_device.c: 2692: case 5:
 11778                           
 11779                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
 11780                           
 11781                           
 11782                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 11783  13DC  0023               	movlb	3	; select bank3
 11784  13DD  17D7               	bsf	(_inPipes^(0+384)+2),7
 11785                           
 11786                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 11787  13DE  3008               	movlw	8
 11788  13DF  0021               	movlb	1	; select bank1
 11789  13E0  00ED               	movwf	??_USBCheckStdRequest^(0+128)
 11790  13E1  086D               	movf	??_USBCheckStdRequest^(0+128),w
 11791  13E2  0023               	movlb	3	; select bank3
 11792  13E3  00E1               	movwf	_USBDeviceState^(0+384)
 11793                           
 11794                           ;usb_device.c: 2696: break;
 11795  13E4  0008               	return
 11796  13E5                     i1l4601:	
 11797                           ;usb_device.c: 2697: case 6:
 11798                           
 11799                           
 11800                           ;usb_device.c: 2698: USBStdGetDscHandler();
 11801  13E5  3197  2701         	fcall	_USBStdGetDscHandler
 11802                           
 11803                           ;usb_device.c: 2699: break;
 11804  13E7  0008               	return
 11805  13E8                     i1l4603:	
 11806                           ;usb_device.c: 2700: case 9:
 11807                           
 11808                           
 11809                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 11810  13E8  318A  2200         	fcall	_USBStdSetCfgHandler
 11811                           
 11812                           ;usb_device.c: 2702: break;
 11813  13EA  0008               	return
 11814  13EB                     i1l4605:	
 11815                           ;usb_device.c: 2703: case 8:
 11816                           
 11817                           
 11818                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 11819  13EB  30EE               	movlw	low _USBActiveConfiguration
 11820  13EC  0023               	movlb	3	; select bank3
 11821  13ED  00D5               	movwf	_inPipes^(0+384)
 11822  13EE  3001               	movlw	high _USBActiveConfiguration
 11823  13EF  00D6               	movwf	(_inPipes+1)^(0+384)
 11824                           
 11825                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11826  13F0  1457               	bsf	(_inPipes^(0+384)+2),0
 11827                           
 11828                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 11829  13F1  01D8               	clrf	(_inPipes^(0+384)+3)
 11830  13F2  0AD8               	incf	(_inPipes^(0+384)+3),f
 11831                           
 11832                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 11833  13F3  17D7               	bsf	(_inPipes^(0+384)+2),7
 11834                           
 11835                           ;usb_device.c: 2708: break;
 11836  13F4  0008               	return
 11837  13F5                     i1l4613:	
 11838                           ;usb_device.c: 2709: case 0:
 11839                           
 11840                           
 11841                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 11842  13F5  3193  232A         	fcall	_USBStdGetStatusHandler
 11843                           
 11844                           ;usb_device.c: 2711: break;
 11845  13F7  0008               	return
 11846  13F8                     i1l4615:	
 11847                           ;usb_device.c: 2712: case 1:
 11848                           
 11849                           
 11850                           ;usb_device.c: 2713: case 3:
 11851                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 11852  13F8  3186  260D         	fcall	_USBStdFeatureReqHandler
 11853                           
 11854                           ;usb_device.c: 2715: break;
 11855  13FA  0008               	return
 11856  13FB                     i1l4617:	
 11857                           ;usb_device.c: 2716: case 10:
 11858                           
 11859                           
 11860                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 11861  13FB  0021               	movlb	1	; select bank1
 11862  13FC  0824               	movf	36,w	;volatile
 11863  13FD  3E68               	addlw	(low (_USBAlternateInterface| (0+512)))& (0+255)
 11864  13FE  0023               	movlb	3	; select bank3
 11865  13FF  00D5               	movwf	_inPipes^(0+384)
 11866  1400  3002               	movlw	2
 11867  1401  00D6               	movwf	(_inPipes+1)^(0+384)
 11868                           
 11869                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11870  1402  1457               	bsf	(_inPipes^(0+384)+2),0
 11871                           
 11872                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 11873  1403  01D8               	clrf	(_inPipes^(0+384)+3)
 11874  1404  0AD8               	incf	(_inPipes^(0+384)+3),f
 11875                           
 11876                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 11877  1405  17D7               	bsf	(_inPipes^(0+384)+2),7
 11878                           
 11879                           ;usb_device.c: 2721: break;
 11880  1406  0008               	return
 11881  1407                     i1l593:	
 11882                           ;usb_device.c: 2722: case 11:
 11883                           
 11884                           
 11885                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 11886  1407  0023               	movlb	3	; select bank3
 11887  1408  17D7               	bsf	(_inPipes^(0+384)+2),7
 11888                           
 11889                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 11890  1409  0021               	movlb	1	; select bank1
 11891  140A  0822               	movf	34,w	;volatile
 11892  140B  00ED               	movwf	??_USBCheckStdRequest^(0+128)
 11893  140C  0824               	movf	36,w	;volatile
 11894  140D  3E68               	addlw	(low (_USBAlternateInterface| (0+512)))& (0+255)
 11895  140E  0086               	movwf	6
 11896  140F  3002               	movlw	2	; select bank4/5
 11897  1410  0087               	movwf	7
 11898  1411  086D               	movf	??_USBCheckStdRequest^(0+128),w
 11899  1412  0081               	movwf	1
 11900                           
 11901                           ;usb_device.c: 2725: break;
 11902  1413  0008               	return
 11903  1414                     i1l4627:	
 11904                           ;usb_device.c: 2726: case 7:
 11905                           
 11906                           
 11907                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 11908  1414  3000               	movlw	0
 11909  1415  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
 11910  1416  3002               	movlw	2
 11911  1417  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 11912  1418  3000               	movlw	0
 11913  1419  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 11914  141A  3000               	movlw	0
 11915  141B  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 11916  141C  3000               	movlw	0
 11917  141D  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 11918  141E  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
 11919  141F  3190  2093         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11920                           
 11921                           ;usb_device.c: 2732: }
 11922                           
 11923                           ;usb_device.c: 2731: break;
 11924                           
 11925                           ;usb_device.c: 2730: default:
 11926                           
 11927                           ;usb_device.c: 2729: case 12:
 11928                           
 11929                           ;usb_device.c: 2728: break;
 11930  1421  0008               	return
 11931  1422                     i1l4631:	
 11932  1422  0021               	movlb	1	; select bank1
 11933  1423  0821               	movf	33,w	;volatile
 11934                           
 11935                           ; Switch size 1, requested type "space"
 11936                           ; Number of cases is 11, Range of values is 0 to 12
 11937                           ; switch strategies available:
 11938                           ; Name         Instructions Cycles
 11939                           ; direct_byte           32     6 (fixed)
 11940                           ; simple_byte           34    18 (average)
 11941                           ; jumptable            260     6 (fixed)
 11942                           ;	Chosen strategy is direct_byte
 11943  1424  0084               	movwf	4
 11944  1425  300D               	movlw	13
 11945  1426  0204               	subwf	4,w
 11946  1427  1803               	skipnc
 11947  1428  0008               	return
 11948  1429  3198               	movlp	high i1S6093
 11949  142A  3504               	lslf	4,w
 11950  142B  3E00               	addlw	low i1S6093
 11951  142C  0082               	movwf	2
 11952  142D                     i1l582:	
 11953  142D  0008               	return
 11954  142E                     __end_of_USBCheckStdRequest:	
 11955                           
 11956                           	psect	swtext1
 11957  1800                     __pswtext1:	
 11958  1800                     i1S6093:	
 11959  1800  3193  2BF5         	ljmp	i1l4613
 11960  1802  3193  2BF8         	ljmp	i1l4615
 11961  1804  3194  2C2D         	ljmp	i1l582
 11962  1806  3193  2BF8         	ljmp	i1l4615
 11963  1808  3194  2C2D         	ljmp	i1l582
 11964  180A  3193  2BDC         	ljmp	i1l584
 11965  180C  3193  2BE5         	ljmp	i1l4601
 11966  180E  3194  2C14         	ljmp	i1l4627
 11967  1810  3193  2BEB         	ljmp	i1l4605
 11968  1812  3193  2BE8         	ljmp	i1l4603
 11969  1814  3193  2BFB         	ljmp	i1l4617
 11970  1816  3194  2C07         	ljmp	i1l593
 11971  1818  3194  2C2D         	ljmp	i1l582
 11972                           
 11973                           	psect	text53
 11974  0A00                     __ptext53:	
 11975 ;; *************** function _USBStdSetCfgHandler *****************
 11976 ;; Defined at:
 11977 ;;		line 1968 in file "usb/core/usb_device.c"
 11978 ;; Parameters:    Size  Location     Type
 11979 ;;		None
 11980 ;; Auto vars:     Size  Location     Type
 11981 ;;  p               2    7[BANK1 ] PTR unsigned char 
 11982 ;;		 -> UEP1(1), 
 11983 ;;  i               1    9[BANK1 ] unsigned char 
 11984 ;;  i               1   10[BANK1 ] unsigned char 
 11985 ;; Return value:  Size  Location     Type
 11986 ;;                  1    wreg      void 
 11987 ;; Registers used:
 11988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11989 ;; Tracked objects:
 11990 ;;		On entry : 0/0
 11991 ;;		On exit  : 0/0
 11992 ;;		Unchanged: 0/0
 11993 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 11994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 11995 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0
 11996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 11997 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0
 11998 ;;Total ram usage:        5 bytes
 11999 ;; Hardware stack levels used:    1
 12000 ;; Hardware stack levels required when called:    4
 12001 ;; This function calls:
 12002 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12003 ;;		i1_memset
 12004 ;; This function is called by:
 12005 ;;		_USBCheckStdRequest
 12006 ;; This function uses a non-reentrant model
 12007 ;;
 12008                           
 12009                           
 12010                           ;psect for function _USBStdSetCfgHandler
 12011  0A00                     _USBStdSetCfgHandler:	
 12012                           
 12013                           ;usb_device.c: 1970: uint8_t i;
 12014                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 12015                           
 12016                           ;incstack = 0
 12017                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12018  0A00  0023               	movlb	3	; select bank3
 12019  0A01  17D7               	bsf	(_inPipes^(0+384)+2),7
 12020                           
 12021                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<4;i++) *p++ = 
      +                          0; };
 12022  0A02  300E               	movlw	14
 12023  0A03  0021               	movlb	1	; select bank1
 12024  0A04  00E8               	movwf	(USBStdSetCfgHandler@p+1)^(0+128)
 12025  0A05  3099               	movlw	153
 12026  0A06  00E7               	movwf	USBStdSetCfgHandler@p^(0+128)
 12027  0A07  01E9               	clrf	USBStdSetCfgHandler@i_1459^(0+128)
 12028  0A08  3004               	movlw	4
 12029  0A09  0269               	subwf	USBStdSetCfgHandler@i_1459^(0+128),w
 12030  0A0A  1803               	btfsc	3,0
 12031  0A0B  2A1D               	goto	i1l4305
 12032  0A0C                     i1l4297:	
 12033  0A0C  0867               	movf	USBStdSetCfgHandler@p^(0+128),w
 12034  0A0D  0086               	movwf	6
 12035  0A0E  0868               	movf	(USBStdSetCfgHandler@p+1)^(0+128),w
 12036  0A0F  0087               	movwf	7
 12037  0A10  0181               	clrf	1
 12038  0A11  3001               	movlw	1
 12039  0A12  07E7               	addwf	USBStdSetCfgHandler@p^(0+128),f
 12040  0A13  3000               	movlw	0
 12041  0A14  3DE8               	addwfc	(USBStdSetCfgHandler@p+1)^(0+128),f
 12042  0A15  3001               	movlw	1
 12043  0A16  00E6               	movwf	??_USBStdSetCfgHandler^(0+128)
 12044  0A17  0866               	movf	??_USBStdSetCfgHandler^(0+128),w
 12045  0A18  07E9               	addwf	USBStdSetCfgHandler@i_1459^(0+128),f
 12046  0A19  3004               	movlw	4
 12047  0A1A  0269               	subwf	USBStdSetCfgHandler@i_1459^(0+128),w
 12048  0A1B  1C03               	skipc
 12049  0A1C  2A0C               	goto	i1l4297
 12050  0A1D                     i1l4305:	
 12051                           
 12052                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 12053  0A1D  3020               	movlw	32
 12054  0A1E  00F0               	movwf	i1memset@p1
 12055  0A1F  3000               	movlw	0
 12056  0A20  00F1               	movwf	i1memset@p1+1
 12057  0A21  3000               	movlw	0
 12058  0A22  00F2               	movwf	i1memset@c
 12059  0A23  00F3               	movwf	i1memset@c+1
 12060  0A24  3050               	movlw	80
 12061  0A25  00F4               	movwf	i1memset@n
 12062  0A26  3000               	movlw	0
 12063  0A27  00F5               	movwf	i1memset@n+1
 12064  0A28  319E  2670  318A   	fcall	i1_memset
 12065                           
 12066                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 12067  0A2B  003D               	movlb	29	; select bank29
 12068  0A2C  170E               	bsf	14,6	;volatile
 12069                           
 12070                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(4+1u); i++)
 12071  0A2D  0021               	movlb	1	; select bank1
 12072  0A2E  01EA               	clrf	USBStdSetCfgHandler@i^(0+128)
 12073  0A2F  3005               	movlw	5
 12074  0A30  026A               	subwf	USBStdSetCfgHandler@i^(0+128),w
 12075  0A31  1803               	btfsc	3,0
 12076  0A32  2A47               	goto	i1l4321
 12077  0A33                     i1l4315:	
 12078                           
 12079                           ;usb_device.c: 1988: {
 12080                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 12081  0A33  086A               	movf	USBStdSetCfgHandler@i^(0+128),w
 12082  0A34  3EB4               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 12083  0A35  0086               	movwf	6
 12084  0A36  3002               	movlw	2	; select bank5/6
 12085  0A37  0087               	movwf	7
 12086  0A38  0181               	clrf	1
 12087                           
 12088                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 12089  0A39  086A               	movf	USBStdSetCfgHandler@i^(0+128),w
 12090  0A3A  3EB9               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 12091  0A3B  0086               	movwf	6
 12092  0A3C  3002               	movlw	2	; select bank5/6
 12093  0A3D  0087               	movwf	7
 12094  0A3E  0181               	clrf	1
 12095  0A3F  3001               	movlw	1
 12096  0A40  00E6               	movwf	??_USBStdSetCfgHandler^(0+128)
 12097  0A41  0866               	movf	??_USBStdSetCfgHandler^(0+128),w
 12098  0A42  07EA               	addwf	USBStdSetCfgHandler@i^(0+128),f
 12099  0A43  3005               	movlw	5
 12100  0A44  026A               	subwf	USBStdSetCfgHandler@i^(0+128),w
 12101  0A45  1C03               	skipc
 12102  0A46  2A33               	goto	i1l4315
 12103  0A47                     i1l4321:	
 12104                           
 12105                           ;usb_device.c: 1991: }
 12106                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 12107  0A47  3068               	movlw	low _USBAlternateInterface
 12108  0A48  00F0               	movwf	i1memset@p1
 12109  0A49  3002               	movlw	high _USBAlternateInterface
 12110  0A4A  00F1               	movwf	i1memset@p1+1
 12111  0A4B  3000               	movlw	0
 12112  0A4C  00F2               	movwf	i1memset@c
 12113  0A4D  00F3               	movwf	i1memset@c+1
 12114  0A4E  3002               	movlw	2
 12115  0A4F  00F4               	movwf	i1memset@n
 12116  0A50  3000               	movlw	0
 12117  0A51  00F5               	movwf	i1memset@n+1
 12118  0A52  319E  2670  318A   	fcall	i1_memset
 12119                           
 12120                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 12121  0A55  003D               	movlb	29	; select bank29
 12122  0A56  130E               	bcf	14,6	;volatile
 12123                           
 12124                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12125  0A57  3028               	movlw	40
 12126  0A58  0023               	movlb	3	; select bank3
 12127  0A59  00CB               	movwf	_pBDTEntryIn^(0+384)
 12128  0A5A  3000               	movlw	0
 12129  0A5B  00CC               	movwf	(_pBDTEntryIn+1)^(0+384)
 12130                           
 12131                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 12132  0A5C  3020               	movlw	32
 12133  0A5D  0021               	movlb	1	; select bank1
 12134  0A5E  00E6               	movwf	??_USBStdSetCfgHandler^(0+128)
 12135  0A5F  0866               	movf	??_USBStdSetCfgHandler^(0+128),w
 12136  0A60  0023               	movlb	3	; select bank3
 12137  0A61  00E9               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 12138                           
 12139                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12140  0A62  0869               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 12141  0A63  0022               	movlb	2	; select bank2
 12142  0A64  00EE               	movwf	_pBDTEntryEP0OutNext^(0+256)
 12143  0A65  39FF               	andlw	255
 12144  0A66  1D03               	skipz
 12145  0A67  3000               	movlw	0
 12146  0A68  00EF               	movwf	(_pBDTEntryEP0OutNext+1)^(0+256)
 12147                           
 12148                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 12149  0A69  0021               	movlb	1	; select bank1
 12150  0A6A  0822               	movf	34,w	;volatile
 12151  0A6B  00E6               	movwf	??_USBStdSetCfgHandler^(0+128)
 12152  0A6C  0866               	movf	??_USBStdSetCfgHandler^(0+128),w
 12153  0A6D  0023               	movlb	3	; select bank3
 12154  0A6E  00EE               	movwf	_USBActiveConfiguration^(0+384)
 12155                           
 12156                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 12157  0A6F  086E               	movf	_USBActiveConfiguration^(0+384),w
 12158  0A70  1D03               	btfss	3,2
 12159  0A71  2A79               	goto	i1l4337
 12160                           
 12161                           ;usb_device.c: 2010: {
 12162                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 12163  0A72  3010               	movlw	16
 12164  0A73  0021               	movlb	1	; select bank1
 12165  0A74  00E6               	movwf	??_USBStdSetCfgHandler^(0+128)
 12166  0A75  0866               	movf	??_USBStdSetCfgHandler^(0+128),w
 12167  0A76  0023               	movlb	3	; select bank3
 12168  0A77  00E1               	movwf	_USBDeviceState^(0+384)
 12169                           
 12170                           ;usb_device.c: 2013: }
 12171  0A78  0008               	return
 12172  0A79                     i1l4337:	
 12173                           
 12174                           ;usb_device.c: 2014: else
 12175                           ;usb_device.c: 2015: {
 12176                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 12177  0A79  3000               	movlw	0
 12178  0A7A  0021               	movlb	1	; select bank1
 12179  0A7B  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
 12180  0A7C  3001               	movlw	1
 12181  0A7D  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 12182  0A7E  30EE               	movlw	low _USBActiveConfiguration
 12183  0A7F  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 12184  0A80  3001               	movlw	high _USBActiveConfiguration
 12185  0A81  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 12186  0A82  3001               	movlw	1
 12187  0A83  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 12188  0A84  3000               	movlw	0
 12189  0A85  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
 12190  0A86  3190  2093         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 12191                           
 12192                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 12193  0A88  3020               	movlw	32
 12194  0A89  0021               	movlb	1	; select bank1
 12195  0A8A  00E6               	movwf	??_USBStdSetCfgHandler^(0+128)
 12196  0A8B  0866               	movf	??_USBStdSetCfgHandler^(0+128),w
 12197  0A8C  0023               	movlb	3	; select bank3
 12198  0A8D  00E1               	movwf	_USBDeviceState^(0+384)
 12199  0A8E  0008               	return
 12200  0A8F                     __end_of_USBStdSetCfgHandler:	
 12201                           
 12202                           	psect	text54
 12203  1E70                     __ptext54:	
 12204 ;; *************** function i1_memset *****************
 12205 ;; Defined at:
 12206 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\memset.c"
 12207 ;; Parameters:    Size  Location     Type
 12208 ;;  p1              2    0[COMMON] PTR void 
 12209 ;;		 -> cmdRxBuffer(64), USBAlternateInterface(2), BDT(80), 
 12210 ;;  c               2    2[COMMON] int 
 12211 ;;  n               2    4[COMMON] unsigned int 
 12212 ;; Auto vars:     Size  Location     Type
 12213 ;;  memset          2    6[COMMON] PTR unsigned char 
 12214 ;;		 -> cmdRxBuffer(64), USBAlternateInterface(2), BDT(80), 
 12215 ;; Return value:  Size  Location     Type
 12216 ;;                  1    wreg      PTR void 
 12217 ;; Registers used:
 12218 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12219 ;; Tracked objects:
 12220 ;;		On entry : 0/0
 12221 ;;		On exit  : 0/0
 12222 ;;		Unchanged: 0/0
 12223 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 12224 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12225 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12227 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12228 ;;Total ram usage:        8 bytes
 12229 ;; Hardware stack levels used:    1
 12230 ;; This function calls:
 12231 ;;		Nothing
 12232 ;; This function is called by:
 12233 ;;		_USBStdSetCfgHandler
 12234 ;; This function uses a non-reentrant model
 12235 ;;
 12236                           
 12237                           
 12238                           ;psect for function i1_memset
 12239  1E70                     i1_memset:	
 12240                           
 12241                           ;incstack = 0
 12242                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 12243  1E70  0871               	movf	i1memset@p1+1,w
 12244  1E71  00F7               	movwf	i1memset@p+1
 12245  1E72  0870               	movf	i1memset@p1,w
 12246  1E73  00F6               	movwf	i1memset@p
 12247  1E74                     i1l4227:	
 12248  1E74  3001               	movlw	1
 12249  1E75  02F4               	subwf	i1memset@n,f
 12250  1E76  3000               	movlw	0
 12251  1E77  3BF5               	subwfb	i1memset@n+1,f
 12252  1E78  0A74               	incf	i1memset@n,w
 12253  1E79  1903               	btfsc	3,2
 12254  1E7A  0A75               	incf	i1memset@n+1,w
 12255  1E7B  1903               	btfsc	3,2
 12256  1E7C  0008               	return
 12257  1E7D  0876               	movf	i1memset@p,w
 12258  1E7E  0086               	movwf	6
 12259  1E7F  0877               	movf	i1memset@p+1,w
 12260  1E80  0087               	movwf	7
 12261  1E81  0872               	movf	i1memset@c,w
 12262  1E82  0081               	movwf	1
 12263  1E83  3001               	movlw	1
 12264  1E84  07F6               	addwf	i1memset@p,f
 12265  1E85  3000               	movlw	0
 12266  1E86  3DF7               	addwfc	i1memset@p+1,f
 12267  1E87  2E74               	goto	i1l4227
 12268  1E88                     __end_ofi1_memset:	
 12269                           ;	Return value of i1_memset is never used
 12270                           
 12271                           
 12272                           	psect	text55
 12273  132A                     __ptext55:	
 12274 ;; *************** function _USBStdGetStatusHandler *****************
 12275 ;; Defined at:
 12276 ;;		line 2129 in file "usb/core/usb_device.c"
 12277 ;; Parameters:    Size  Location     Type
 12278 ;;		None
 12279 ;; Auto vars:     Size  Location     Type
 12280 ;;  p               2    1[COMMON] PTR struct __BDT
 12281 ;;		 -> RAM(4096), NULL(0), BDT(80), 
 12282 ;; Return value:  Size  Location     Type
 12283 ;;                  1    wreg      void 
 12284 ;; Registers used:
 12285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12286 ;; Tracked objects:
 12287 ;;		On entry : 0/0
 12288 ;;		On exit  : 0/0
 12289 ;;		Unchanged: 0/0
 12290 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 12291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12294 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12295 ;;Total ram usage:        3 bytes
 12296 ;; Hardware stack levels used:    1
 12297 ;; This function calls:
 12298 ;;		Nothing
 12299 ;; This function is called by:
 12300 ;;		_USBCheckStdRequest
 12301 ;; This function uses a non-reentrant model
 12302 ;;
 12303                           
 12304                           
 12305                           ;psect for function _USBStdGetStatusHandler
 12306  132A                     _USBStdGetStatusHandler:	
 12307                           
 12308                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 12309                           
 12310                           ;incstack = 0
 12311                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 12312  132A  0021               	movlb	1	; select bank1
 12313  132B  01A8               	clrf	40	;volatile
 12314                           
 12315                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 12316  132C  01A9               	clrf	41	;volatile
 12317                           
 12318                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 12319  132D  2B66               	goto	i1l4391
 12320  132E                     i1l522:	
 12321                           ;usb_device.c: 2135: {
 12322                           ;usb_device.c: 2136: case (0x00):
 12323                           
 12324                           
 12325                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 12326  132E  0023               	movlb	3	; select bank3
 12327  132F  17D7               	bsf	(_inPipes^(0+384)+2),7
 12328                           
 12329                           ;usb_device.c: 2145: }
 12330                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 12331                           
 12332                           ;usb_device.c: 2143: {
 12333                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 12334                           
 12335                           ;usb_device.c: 2142: if(0 == 1)
 12336  1330  0024               	movlb	4	; select bank4
 12337  1331  034D               	decf	_RemoteWakeup^(0+512),w
 12338  1332  1D03               	btfss	3,2
 12339  1333  2B72               	goto	i1l525
 12340                           
 12341                           ;usb_device.c: 2148: {
 12342                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 12343  1334  0021               	movlb	1	; select bank1
 12344  1335  14A8               	bsf	40,1	;volatile
 12345                           
 12346                           ;usb_device.c: 2150: }
 12347                           ;usb_device.c: 2151: break;
 12348  1336  2B72               	goto	i1l525
 12349  1337                     i1l526:	
 12350                           ;usb_device.c: 2152: case (0x01):
 12351                           
 12352                           
 12353                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 12354  1337  0023               	movlb	3	; select bank3
 12355  1338  17D7               	bsf	(_inPipes^(0+384)+2),7
 12356                           
 12357                           ;usb_device.c: 2154: break;
 12358  1339  2B72               	goto	i1l525
 12359  133A                     i1l527:	
 12360                           ;usb_device.c: 2155: case (0x02):
 12361                           
 12362                           
 12363                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 12364  133A  0023               	movlb	3	; select bank3
 12365  133B  17D7               	bsf	(_inPipes^(0+384)+2),7
 12366                           
 12367                           ;usb_device.c: 2160: {
 12368                           ;usb_device.c: 2161: BDT_ENTRY *p;
 12369                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 12370  133C  0021               	movlb	1	; select bank1
 12371  133D  1BA4               	btfsc	36,7	;volatile
 12372  133E  2B4A               	goto	i1l4381
 12373                           
 12374                           ;usb_device.c: 2164: {
 12375                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 12376  133F  0824               	movf	36,w	;volatile
 12377  1340  390F               	andlw	15
 12378  1341  0709               	addwf	9,w
 12379  1342  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 12380  1343  0086               	movwf	6
 12381  1344  3002               	movlw	2	; select bank5/6
 12382  1345  0087               	movwf	7
 12383  1346  3F40               	moviw [0]fsr1
 12384  1347  00F1               	movwf	USBStdGetStatusHandler@p
 12385  1348  3F41               	moviw [1]fsr1
 12386  1349  2B54               	goto	L15
 12387  134A                     i1l4381:	
 12388                           ;usb_device.c: 2166: }
 12389                           
 12390                           
 12391                           ;usb_device.c: 2167: else
 12392                           ;usb_device.c: 2168: {
 12393                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 12394  134A  0824               	movf	36,w	;volatile
 12395  134B  390F               	andlw	15
 12396  134C  0709               	addwf	9,w
 12397  134D  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 12398  134E  0086               	movwf	6
 12399  134F  3001               	movlw	1	; select bank3/4
 12400  1350  0087               	movwf	7
 12401  1351  3F40               	moviw [0]fsr1
 12402  1352  00F1               	movwf	USBStdGetStatusHandler@p
 12403  1353  3F41               	moviw [1]fsr1
 12404  1354                     L15:	
 12405  1354  00F2               	movwf	USBStdGetStatusHandler@p+1
 12406                           
 12407                           ;usb_device.c: 2170: }
 12408                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 12409  1355  0871               	movf	USBStdGetStatusHandler@p,w
 12410  1356  0086               	movwf	6
 12411  1357  0872               	movf	USBStdGetStatusHandler@p+1,w
 12412  1358  0087               	movwf	7
 12413  1359  1F81               	btfss	1,7
 12414  135A  2B72               	goto	i1l525
 12415  135B  0871               	movf	USBStdGetStatusHandler@p,w
 12416  135C  0086               	movwf	6
 12417  135D  0872               	movf	USBStdGetStatusHandler@p+1,w
 12418  135E  0087               	movwf	7
 12419  135F  1D01               	btfss	1,2
 12420  1360  2B72               	goto	i1l525
 12421                           
 12422                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 12423  1361  3001               	movlw	1
 12424  1362  00F0               	movwf	??_USBStdGetStatusHandler
 12425  1363  0870               	movf	??_USBStdGetStatusHandler,w
 12426  1364  00A8               	movwf	40	;volatile
 12427                           
 12428                           ;usb_device.c: 2175: }
 12429                           ;usb_device.c: 2176: }
 12430                           
 12431                           ;usb_device.c: 2174: break;
 12432  1365  2B72               	goto	i1l525
 12433  1366                     i1l4391:	
 12434  1366  0820               	movf	32,w	;volatile
 12435  1367  391F               	andlw	31
 12436                           
 12437                           ; Switch size 1, requested type "space"
 12438                           ; Number of cases is 3, Range of values is 0 to 2
 12439                           ; switch strategies available:
 12440                           ; Name         Instructions Cycles
 12441                           ; simple_byte           10     6 (average)
 12442                           ; direct_byte           12     6 (fixed)
 12443                           ; jumptable            260     6 (fixed)
 12444                           ;	Chosen strategy is simple_byte
 12445  1368  3A00               	xorlw	0	; case 0
 12446  1369  1903               	skipnz
 12447  136A  2B2E               	goto	i1l522
 12448  136B  3A01               	xorlw	1	; case 1
 12449  136C  1903               	skipnz
 12450  136D  2B37               	goto	i1l526
 12451  136E  3A03               	xorlw	3	; case 2
 12452  136F  1903               	skipnz
 12453  1370  2B3A               	goto	i1l527
 12454  1371  2B72               	goto	i1l525
 12455  1372                     i1l525:	
 12456                           
 12457                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 12458  1372  0023               	movlb	3	; select bank3
 12459  1373  1FD7               	btfss	(_inPipes^(0+384)+2),7
 12460  1374  0008               	return
 12461                           
 12462                           ;usb_device.c: 2179: {
 12463                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 12464  1375  30A8               	movlw	168
 12465  1376  00D5               	movwf	_inPipes^(0+384)
 12466  1377  3000               	movlw	0
 12467  1378  00D6               	movwf	(_inPipes+1)^(0+384)
 12468                           
 12469                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12470  1379  1457               	bsf	(_inPipes^(0+384)+2),0
 12471                           
 12472                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 12473  137A  3002               	movlw	2
 12474  137B  00F0               	movwf	??_USBStdGetStatusHandler
 12475  137C  0870               	movf	??_USBStdGetStatusHandler,w
 12476  137D  00D8               	movwf	(_inPipes^(0+384)+3)
 12477  137E  0008               	return
 12478  137F                     __end_of_USBStdGetStatusHandler:	
 12479                           
 12480                           	psect	text56
 12481  1701                     __ptext56:	
 12482 ;; *************** function _USBStdGetDscHandler *****************
 12483 ;; Defined at:
 12484 ;;		line 2043 in file "usb/core/usb_device.c"
 12485 ;; Parameters:    Size  Location     Type
 12486 ;;		None
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;		None
 12489 ;; Return value:  Size  Location     Type
 12490 ;;                  1    wreg      void 
 12491 ;; Registers used:
 12492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 12493 ;; Tracked objects:
 12494 ;;		On entry : 0/0
 12495 ;;		On exit  : 0/0
 12496 ;;		Unchanged: 0/0
 12497 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 12498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12500 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12501 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12502 ;;Total ram usage:        3 bytes
 12503 ;; Hardware stack levels used:    1
 12504 ;; This function calls:
 12505 ;;		Nothing
 12506 ;; This function is called by:
 12507 ;;		_USBCheckStdRequest
 12508 ;; This function uses a non-reentrant model
 12509 ;;
 12510                           
 12511                           
 12512                           ;psect for function _USBStdGetDscHandler
 12513  1701                     _USBStdGetDscHandler:	
 12514                           
 12515                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 12516                           
 12517                           ;incstack = 0
 12518                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 12519  1701  3080               	movlw	128
 12520  1702  0021               	movlb	1	; select bank1
 12521  1703  0620               	xorwf	32,w	;volatile
 12522  1704  1D03               	btfss	3,2
 12523  1705  0008               	return
 12524                           
 12525                           ;usb_device.c: 2046: {
 12526                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 12527  1706  30C0               	movlw	192
 12528  1707  00F0               	movwf	??_USBStdGetDscHandler
 12529  1708  0870               	movf	??_USBStdGetDscHandler,w
 12530  1709  0023               	movlb	3	; select bank3
 12531  170A  00D7               	movwf	(_inPipes^(0+384)+2)
 12532                           
 12533                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 12534  170B  2F73               	goto	i1l4369
 12535  170C                     i1l4345:	
 12536                           ;usb_device.c: 2050: {
 12537                           ;usb_device.c: 2051: case 0x01:
 12538                           
 12539                           
 12540                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 12541  170C  30F2               	movlw	low (_device_dsc| (0+32768))
 12542  170D  0023               	movlb	3	; select bank3
 12543  170E  00D5               	movwf	_inPipes^(0+384)
 12544  170F  3082               	movlw	high (_device_dsc| (0+32768))
 12545  1710  00D6               	movwf	(_inPipes^(0+384)+1)
 12546                           
 12547                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 12548  1711  3012               	movlw	18
 12549  1712  00D8               	movwf	(_inPipes^(0+384)+3)
 12550  1713  3000               	movlw	0
 12551  1714  00D9               	movwf	(_inPipes^(0+384)+4)
 12552                           
 12553                           ;usb_device.c: 2058: break;
 12554  1715  0008               	return
 12555  1716                     i1l4347:	
 12556                           ;usb_device.c: 2059: case 0x02:
 12557                           
 12558                           
 12559                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 12560  1716  0021               	movlb	1	; select bank1
 12561  1717  0822               	movf	34,w	;volatile
 12562  1718  1D03               	btfss	3,2
 12563  1719  2F49               	goto	i1l4355
 12564                           
 12565                           ;usb_device.c: 2064: {
 12566                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 12567  171A  0822               	movf	34,w	;volatile
 12568  171B  00F0               	movwf	??_USBStdGetDscHandler
 12569  171C  01F1               	clrf	??_USBStdGetDscHandler+1
 12570  171D  35F0               	lslf	??_USBStdGetDscHandler,f
 12571  171E  0DF1               	rlf	??_USBStdGetDscHandler+1,f
 12572  171F  30B3               	movlw	low (_USB_CD_Ptr| (0+32768))
 12573  1720  0770               	addwf	??_USBStdGetDscHandler,w
 12574  1721  0084               	movwf	4
 12575  1722  3081               	movlw	high (_USB_CD_Ptr| (0+32768))
 12576  1723  3D71               	addwfc	??_USBStdGetDscHandler+1,w
 12577  1724  0085               	movwf	5
 12578  1725  3F00               	moviw [0]fsr0
 12579  1726  0023               	movlb	3	; select bank3
 12580  1727  00D5               	movwf	_inPipes^(0+384)
 12581  1728  3F01               	moviw [1]fsr0
 12582  1729  00D6               	movwf	(_inPipes+1)^(0+384)
 12583                           
 12584                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 12585  172A  0856               	movf	(_inPipes+1)^(0+384),w
 12586  172B  00F1               	movwf	??_USBStdGetDscHandler+1
 12587  172C  0855               	movf	_inPipes^(0+384),w
 12588  172D  00F0               	movwf	??_USBStdGetDscHandler
 12589  172E  3002               	movlw	2
 12590  172F  0770               	addwf	??_USBStdGetDscHandler,w
 12591  1730  0084               	movwf	4
 12592  1731  0871               	movf	??_USBStdGetDscHandler+1,w
 12593  1732  1803               	skipnc
 12594  1733  0A71               	incf	??_USBStdGetDscHandler+1,w
 12595  1734  0085               	movwf	5
 12596  1735  0800               	movf	0,w	;code access
 12597  1736  00F2               	movwf	??_USBStdGetDscHandler+2
 12598  1737  0872               	movf	??_USBStdGetDscHandler+2,w
 12599  1738  00D8               	movwf	(_inPipes^(0+384)+3)
 12600                           
 12601                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 12602  1739  0856               	movf	(_inPipes+1)^(0+384),w
 12603  173A  00F1               	movwf	??_USBStdGetDscHandler+1
 12604  173B  0855               	movf	_inPipes^(0+384),w
 12605  173C  00F0               	movwf	??_USBStdGetDscHandler
 12606  173D  3003               	movlw	3
 12607  173E  0770               	addwf	??_USBStdGetDscHandler,w
 12608  173F  0084               	movwf	4
 12609  1740  0871               	movf	??_USBStdGetDscHandler+1,w
 12610  1741  1803               	skipnc
 12611  1742  0A71               	incf	??_USBStdGetDscHandler+1,w
 12612  1743  0085               	movwf	5
 12613  1744  0800               	movf	0,w	;code access
 12614  1745  00F2               	movwf	??_USBStdGetDscHandler+2
 12615  1746  0872               	movf	??_USBStdGetDscHandler+2,w
 12616  1747  00D9               	movwf	(_inPipes^(0+384)+4)
 12617                           
 12618                           ;usb_device.c: 2076: }
 12619  1748  0008               	return
 12620  1749                     i1l4355:	
 12621                           
 12622                           ;usb_device.c: 2077: else
 12623                           ;usb_device.c: 2078: {
 12624                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 12625  1749  0023               	movlb	3	; select bank3
 12626  174A  01D7               	clrf	(_inPipes^(0+384)+2)
 12627                           
 12628                           ;usb_device.c: 2080: }
 12629                           ;usb_device.c: 2081: break;
 12630  174B  0008               	return
 12631  174C                     i1l4357:	
 12632                           ;usb_device.c: 2082: case 0x03:
 12633                           
 12634                           
 12635                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<5)
 12636  174C  3005               	movlw	5
 12637  174D  0021               	movlb	1	; select bank1
 12638  174E  0222               	subwf	34,w	;volatile
 12639  174F  1803               	skipnc
 12640  1750  2F6D               	goto	i1l4363
 12641                           
 12642                           ;usb_device.c: 2087: {
 12643                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 12644  1751  0822               	movf	34,w	;volatile
 12645  1752  00F0               	movwf	??_USBStdGetDscHandler
 12646  1753  01F1               	clrf	??_USBStdGetDscHandler+1
 12647  1754  35F0               	lslf	??_USBStdGetDscHandler,f
 12648  1755  0DF1               	rlf	??_USBStdGetDscHandler+1,f
 12649  1756  30A4               	movlw	low (_USB_SD_Ptr| (0+32768))
 12650  1757  0770               	addwf	??_USBStdGetDscHandler,w
 12651  1758  0084               	movwf	4
 12652  1759  3081               	movlw	high (_USB_SD_Ptr| (0+32768))
 12653  175A  3D71               	addwfc	??_USBStdGetDscHandler+1,w
 12654  175B  0085               	movwf	5
 12655  175C  3F00               	moviw [0]fsr0
 12656  175D  0023               	movlb	3	; select bank3
 12657  175E  00D5               	movwf	_inPipes^(0+384)
 12658  175F  3F01               	moviw [1]fsr0
 12659  1760  00D6               	movwf	(_inPipes+1)^(0+384)
 12660                           
 12661                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 12662  1761  0855               	movf	_inPipes^(0+384),w
 12663  1762  0084               	movwf	4
 12664  1763  0856               	movf	(_inPipes+1)^(0+384),w
 12665  1764  0085               	movwf	5
 12666  1765  0800               	movf	0,w	;code access
 12667  1766  00F0               	movwf	??_USBStdGetDscHandler
 12668  1767  01F1               	clrf	??_USBStdGetDscHandler+1
 12669  1768  0870               	movf	??_USBStdGetDscHandler,w
 12670  1769  00D8               	movwf	(_inPipes^(0+384)+3)
 12671  176A  0871               	movf	??_USBStdGetDscHandler+1,w
 12672  176B  00D9               	movwf	((_inPipes+1)^(0+384)+3)
 12673                           
 12674                           ;usb_device.c: 2092: }
 12675  176C  0008               	return
 12676  176D                     i1l4363:	
 12677                           
 12678                           ;usb_device.c: 2102: else
 12679                           ;usb_device.c: 2103: {
 12680                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 12681  176D  0023               	movlb	3	; select bank3
 12682  176E  01D7               	clrf	(_inPipes^(0+384)+2)
 12683                           
 12684                           ;usb_device.c: 2105: }
 12685                           ;usb_device.c: 2106: break;
 12686  176F  0008               	return
 12687  1770                     i1l4365:	
 12688                           ;usb_device.c: 2107: default:
 12689                           
 12690                           
 12691                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 12692  1770  0023               	movlb	3	; select bank3
 12693  1771  01D7               	clrf	(_inPipes^(0+384)+2)
 12694                           
 12695                           ;usb_device.c: 2110: }
 12696                           
 12697                           ;usb_device.c: 2109: break;
 12698  1772  0008               	return
 12699  1773                     i1l4369:	
 12700  1773  0021               	movlb	1	; select bank1
 12701  1774  0823               	movf	35,w	;volatile
 12702                           
 12703                           ; Switch size 1, requested type "space"
 12704                           ; Number of cases is 3, Range of values is 1 to 3
 12705                           ; switch strategies available:
 12706                           ; Name         Instructions Cycles
 12707                           ; simple_byte           10     6 (average)
 12708                           ; direct_byte           15     9 (fixed)
 12709                           ; jumptable            263     9 (fixed)
 12710                           ;	Chosen strategy is simple_byte
 12711  1775  3A01               	xorlw	1	; case 1
 12712  1776  1903               	skipnz
 12713  1777  2F0C               	goto	i1l4345
 12714  1778  3A03               	xorlw	3	; case 2
 12715  1779  1903               	skipnz
 12716  177A  2F16               	goto	i1l4347
 12717  177B  3A01               	xorlw	1	; case 3
 12718  177C  1903               	skipnz
 12719  177D  2F4C               	goto	i1l4357
 12720  177E  2F70               	goto	i1l4365
 12721  177F  0008               	return
 12722  1780                     __end_of_USBStdGetDscHandler:	
 12723                           
 12724                           	psect	text57
 12725  060D                     __ptext57:	
 12726 ;; *************** function _USBStdFeatureReqHandler *****************
 12727 ;; Defined at:
 12728 ;;		line 2754 in file "usb/core/usb_device.c"
 12729 ;; Parameters:    Size  Location     Type
 12730 ;;		None
 12731 ;; Auto vars:     Size  Location     Type
 12732 ;;  p               2   11[BANK1 ] PTR struct __BDT
 12733 ;;		 -> RAM(4096), NULL(0), BDT(80), 
 12734 ;;  pUEP            2    8[BANK1 ] PTR unsigned char 
 12735 ;;		 -> UEP0(1), 
 12736 ;;  current_ep_d    1   10[BANK1 ] struct .
 12737 ;; Return value:  Size  Location     Type
 12738 ;;                  1    wreg      void 
 12739 ;; Registers used:
 12740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12741 ;; Tracked objects:
 12742 ;;		On entry : 0/0
 12743 ;;		On exit  : 0/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 12746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 12747 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0
 12748 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0
 12749 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0
 12750 ;;Total ram usage:        7 bytes
 12751 ;; Hardware stack levels used:    1
 12752 ;; Hardware stack levels required when called:    4
 12753 ;; This function calls:
 12754 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12755 ;; This function is called by:
 12756 ;;		_USBCheckStdRequest
 12757 ;; This function uses a non-reentrant model
 12758 ;;
 12759                           
 12760                           
 12761                           ;psect for function _USBStdFeatureReqHandler
 12762  060D                     _USBStdFeatureReqHandler:	
 12763                           
 12764                           ;usb_device.c: 2756: BDT_ENTRY *p;
 12765                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 12766                           ;usb_device.c: 2761: unsigned char* pUEP;
 12767                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 12768                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 12769                           
 12770                           ;incstack = 0
 12771                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12772  060D  0021               	movlb	1	; select bank1
 12773  060E  0322               	decf	34,w	;volatile
 12774  060F  1D03               	btfss	3,2
 12775  0610  2E23               	goto	i1l4411
 12776  0611  0820               	movf	32,w	;volatile
 12777  0612  391F               	andlw	31
 12778  0613  3A00               	xorlw	0
 12779  0614  1D03               	skipz
 12780  0615  2E23               	goto	i1l4411
 12781                           
 12782                           ;usb_device.c: 2801: {
 12783                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 12784  0616  0023               	movlb	3	; select bank3
 12785  0617  17D7               	bsf	(_inPipes^(0+384)+2),7
 12786                           
 12787                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 12788  0618  3003               	movlw	3
 12789  0619  0021               	movlb	1	; select bank1
 12790  061A  0621               	xorwf	33,w	;volatile
 12791  061B  1D03               	btfss	3,2
 12792  061C  2E21               	goto	i1l4409
 12793                           
 12794                           ;usb_device.c: 2804: RemoteWakeup = 1;
 12795  061D  0024               	movlb	4	; select bank4
 12796  061E  01CD               	clrf	_RemoteWakeup^(0+512)
 12797  061F  0ACD               	incf	_RemoteWakeup^(0+512),f
 12798  0620  2E23               	goto	i1l4411
 12799  0621                     i1l4409:	
 12800                           
 12801                           ;usb_device.c: 2805: else
 12802                           ;usb_device.c: 2806: RemoteWakeup = 0;
 12803  0621  0024               	movlb	4	; select bank4
 12804  0622  01CD               	clrf	_RemoteWakeup^(0+512)
 12805  0623                     i1l4411:	
 12806                           
 12807                           ;usb_device.c: 2807: }
 12808                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 12809                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 12810                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 4)&&
 12811                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 12812  0623  0021               	movlb	1	; select bank1
 12813  0624  0822               	movf	34,w	;volatile
 12814  0625  1D03               	btfss	3,2
 12815  0626  0008               	return
 12816  0627  0820               	movf	32,w	;volatile
 12817  0628  391F               	andlw	31
 12818  0629  3A02               	xorlw	2
 12819  062A  1D03               	skipz
 12820  062B  0008               	return
 12821  062C  0824               	movf	36,w	;volatile
 12822  062D  390F               	andlw	15
 12823  062E  3A00               	xorlw	0
 12824  062F  1903               	skipnz
 12825  0630  0008               	return
 12826  0631  0824               	movf	36,w	;volatile
 12827  0632  390F               	andlw	15
 12828  0633  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 12829  0634  3005               	movlw	5
 12830  0635  0266               	subwf	??_USBStdFeatureReqHandler^(0+128),w
 12831  0636  1803               	skipnc
 12832  0637  0008               	return
 12833  0638  3020               	movlw	32
 12834  0639  0023               	movlb	3	; select bank3
 12835  063A  0661               	xorwf	_USBDeviceState^(0+384),w
 12836  063B  1D03               	btfss	3,2
 12837  063C  0008               	return
 12838                           
 12839                           ;usb_device.c: 2814: {
 12840                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 12841  063D  17D7               	bsf	(_inPipes^(0+384)+2),7
 12842                           
 12843                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 12844  063E  0021               	movlb	1	; select bank1
 12845  063F  1BA4               	btfsc	36,7	;volatile
 12846  0640  2E50               	goto	i1l4425
 12847                           
 12848                           ;usb_device.c: 2821: {
 12849                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 12850  0641  0824               	movf	36,w	;volatile
 12851  0642  390F               	andlw	15
 12852  0643  0709               	addwf	9,w
 12853  0644  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 12854  0645  0086               	movwf	6
 12855  0646  3002               	movlw	2	; select bank5/6
 12856  0647  0087               	movwf	7
 12857  0648  3F40               	moviw [0]fsr1
 12858  0649  00EB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 12859  064A  3F41               	moviw [1]fsr1
 12860  064B  00EC               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
 12861                           
 12862                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 12863  064C  0824               	movf	36,w	;volatile
 12864  064D  390F               	andlw	15
 12865  064E  3EB9               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 12866  064F  2E5E               	goto	L16
 12867  0650                     i1l4425:	
 12868                           ;usb_device.c: 2824: }
 12869                           
 12870                           
 12871                           ;usb_device.c: 2825: else
 12872                           ;usb_device.c: 2826: {
 12873                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 12874  0650  0824               	movf	36,w	;volatile
 12875  0651  390F               	andlw	15
 12876  0652  0709               	addwf	9,w
 12877  0653  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 12878  0654  0086               	movwf	6
 12879  0655  3001               	movlw	1	; select bank3/4
 12880  0656  0087               	movwf	7
 12881  0657  3F40               	moviw [0]fsr1
 12882  0658  00EB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 12883  0659  3F41               	moviw [1]fsr1
 12884  065A  00EC               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
 12885                           
 12886                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 12887  065B  0824               	movf	36,w	;volatile
 12888  065C  390F               	andlw	15
 12889  065D  3EB4               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 12890  065E                     L16:	
 12891  065E  0086               	movwf	6
 12892  065F  3002               	movlw	2	; select bank5/6
 12893  0660  0087               	movwf	7
 12894  0661  0801               	movf	1,w
 12895  0662  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 12896  0663  0866               	movf	??_USBStdFeatureReqHandler^(0+128),w
 12897  0664  00EA               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+128)
 12898                           
 12899                           ;usb_device.c: 2829: }
 12900                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 12901  0665  186A               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),0
 12902  0666  2E71               	goto	i1l4431
 12903                           
 12904                           ;usb_device.c: 2836: {
 12905                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 12906  0667  30FB               	movlw	251
 12907  0668  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 12908  0669  30FF               	movlw	255
 12909  066A  00E7               	movwf	(??_USBStdFeatureReqHandler^(0+128)+1)
 12910  066B  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 12911  066C  0566               	andwf	??_USBStdFeatureReqHandler^(0+128),w
 12912  066D  00EB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 12913  066E  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 12914  066F  0567               	andwf	(??_USBStdFeatureReqHandler+1)^(0+128),w
 12915  0670  2E76               	goto	L17
 12916  0671                     i1l4431:	
 12917                           ;usb_device.c: 2838: }
 12918                           
 12919                           
 12920                           ;usb_device.c: 2839: else
 12921                           ;usb_device.c: 2840: {
 12922                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 12923  0671  3004               	movlw	4
 12924  0672  046B               	iorwf	USBStdFeatureReqHandler@p^(0+128),w
 12925  0673  00EB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 12926  0674  3000               	movlw	0
 12927  0675  046C               	iorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 12928  0676                     L17:	
 12929  0676  00EC               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
 12930                           
 12931                           ;usb_device.c: 2842: }
 12932                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 12933  0677  1BA4               	btfsc	36,7	;volatile
 12934  0678  2E85               	goto	i1l4437
 12935                           
 12936                           ;usb_device.c: 2848: {
 12937                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 12938  0679  0824               	movf	36,w	;volatile
 12939  067A  390F               	andlw	15
 12940  067B  0709               	addwf	9,w
 12941  067C  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 12942  067D  0086               	movwf	6
 12943  067E  3002               	movlw	2	; select bank5/6
 12944  067F  0087               	movwf	7
 12945  0680  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 12946  0681  3FC0               	movwi [0]fsr1
 12947  0682  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 12948  0683  3FC1               	movwi [1]fsr1
 12949                           
 12950                           ;usb_device.c: 2850: }
 12951  0684  2E90               	goto	i1l4439
 12952  0685                     i1l4437:	
 12953                           
 12954                           ;usb_device.c: 2851: else
 12955                           ;usb_device.c: 2852: {
 12956                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 12957  0685  0824               	movf	36,w	;volatile
 12958  0686  390F               	andlw	15
 12959  0687  0709               	addwf	9,w
 12960  0688  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 12961  0689  0086               	movwf	6
 12962  068A  3001               	movlw	1	; select bank3/4
 12963  068B  0087               	movwf	7
 12964  068C  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 12965  068D  3FC0               	movwi [0]fsr1
 12966  068E  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 12967  068F  3FC1               	movwi [1]fsr1
 12968  0690                     i1l4439:	
 12969                           
 12970                           ;usb_device.c: 2854: }
 12971                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 12972  0690  3003               	movlw	3
 12973  0691  0621               	xorwf	33,w	;volatile
 12974  0692  1D03               	btfss	3,2
 12975  0693  2EB2               	goto	i1l4453
 12976                           
 12977                           ;usb_device.c: 2858: {
 12978                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 12979  0694  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 12980  0695  0086               	movwf	6
 12981  0696  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 12982  0697  0087               	movwf	7
 12983  0698  1F81               	btfss	1,7
 12984  0699  2EA7               	goto	i1l4449
 12985                           
 12986                           ;usb_device.c: 2860: {
 12987                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 12988  069A  1BA4               	btfsc	36,7	;volatile
 12989  069B  2EA0               	goto	i1l4447
 12990                           
 12991                           ;usb_device.c: 2864: {
 12992                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 12993  069C  0824               	movf	36,w	;volatile
 12994  069D  390F               	andlw	15
 12995  069E  3EB9               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 12996  069F  2EA3               	goto	L18
 12997  06A0                     i1l4447:	
 12998                           ;usb_device.c: 2866: }
 12999                           
 13000                           
 13001                           ;usb_device.c: 2867: else
 13002                           ;usb_device.c: 2868: {
 13003                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 13004  06A0  0824               	movf	36,w	;volatile
 13005  06A1  390F               	andlw	15
 13006  06A2  3EB4               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 13007  06A3                     L18:	
 13008  06A3  0086               	movwf	6
 13009  06A4  3002               	movlw	2	; select bank5/6
 13010  06A5  0087               	movwf	7
 13011  06A6  1481               	bsf	1,1
 13012  06A7                     i1l4449:	
 13013                           
 13014                           ;usb_device.c: 2870: }
 13015                           ;usb_device.c: 2871: }
 13016                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 13017  06A7  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13018  06A8  0086               	movwf	6
 13019  06A9  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13020  06AA  0087               	movwf	7
 13021  06AB  1501               	bsf	1,2
 13022                           
 13023                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 13024  06AC  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13025  06AD  0086               	movwf	6
 13026  06AE  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13027  06AF  0087               	movwf	7
 13028  06B0  1781               	bsf	1,7
 13029                           
 13030                           ;usb_device.c: 2876: }
 13031  06B1  0008               	return
 13032  06B2                     i1l4453:	
 13033                           
 13034                           ;usb_device.c: 2877: else
 13035                           ;usb_device.c: 2878: {
 13036                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 13037  06B2  3004               	movlw	4
 13038  06B3  066B               	xorwf	USBStdFeatureReqHandler@p^(0+128),w
 13039  06B4  00EB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 13040  06B5  3000               	movlw	0
 13041  06B6  066C               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13042  06B7  00EC               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
 13043                           
 13044                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 13045  06B8  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13046  06B9  0086               	movwf	6
 13047  06BA  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13048  06BB  0087               	movwf	7
 13049  06BC  1F81               	btfss	1,7
 13050  06BD  2EDB               	goto	i1l4463
 13051                           
 13052                           ;usb_device.c: 2885: {
 13053                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 13054  06BE  307F               	movlw	127
 13055  06BF  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 13056  06C0  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13057  06C1  0086               	movwf	6
 13058  06C2  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13059  06C3  0087               	movwf	7
 13060  06C4  0866               	movf	??_USBStdFeatureReqHandler^(0+128),w
 13061  06C5  0581               	andwf	1,f
 13062                           
 13063                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 13064  06C6  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13065  06C7  0086               	movwf	6
 13066  06C8  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13067  06C9  0087               	movwf	7
 13068  06CA  1701               	bsf	1,6
 13069                           
 13070                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 13071  06CB  3000               	movlw	0
 13072  06CC  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
 13073  06CD  3005               	movlw	5
 13074  06CE  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 13075  06CF  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13076  06D0  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 13077  06D1  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13078  06D2  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 13079  06D3  3002               	movlw	2
 13080  06D4  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 13081  06D5  3000               	movlw	0
 13082  06D6  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
 13083  06D7  3190  2093  3186   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 13084                           
 13085                           ;usb_device.c: 2891: }
 13086  06DA  2EE1               	goto	i1l4465
 13087  06DB                     i1l4463:	
 13088                           
 13089                           ;usb_device.c: 2892: else
 13090                           ;usb_device.c: 2893: {
 13091                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 13092  06DB  0021               	movlb	1	; select bank1
 13093  06DC  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13094  06DD  0086               	movwf	6
 13095  06DE  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13096  06DF  0087               	movwf	7
 13097  06E0  1701               	bsf	1,6
 13098  06E1                     i1l4465:	
 13099                           
 13100                           ;usb_device.c: 2896: }
 13101                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 13102  06E1  3004               	movlw	4
 13103  06E2  0021               	movlb	1	; select bank1
 13104  06E3  066B               	xorwf	USBStdFeatureReqHandler@p^(0+128),w
 13105  06E4  00EB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 13106  06E5  3000               	movlw	0
 13107  06E6  066C               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13108  06E7  00EC               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
 13109                           
 13110                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 13111  06E8  18EA               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),1
 13112  06E9  2EF0               	goto	i1l618
 13113  06EA  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13114  06EB  0086               	movwf	6
 13115  06EC  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13116  06ED  0087               	movwf	7
 13117  06EE  1F81               	btfss	1,7
 13118  06EF  2F15               	goto	i1l4477
 13119  06F0                     i1l618:	
 13120                           
 13121                           ;usb_device.c: 2907: {
 13122                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 13123  06F0  1BA4               	btfsc	36,7	;volatile
 13124  06F1  2EF6               	goto	i1l4473
 13125                           
 13126                           ;usb_device.c: 2909: {
 13127                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 13128  06F2  0824               	movf	36,w	;volatile
 13129  06F3  390F               	andlw	15
 13130  06F4  3EB9               	addlw	(low (_ep_data_out| (0+512)))& (0+255)
 13131  06F5  2EF9               	goto	L19
 13132  06F6                     i1l4473:	
 13133                           ;usb_device.c: 2911: }
 13134                           
 13135                           
 13136                           ;usb_device.c: 2912: else
 13137                           ;usb_device.c: 2913: {
 13138                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 13139  06F6  0824               	movf	36,w	;volatile
 13140  06F7  390F               	andlw	15
 13141  06F8  3EB4               	addlw	(low (_ep_data_in| (0+512)))& (0+255)
 13142  06F9                     L19:	
 13143  06F9  0086               	movwf	6
 13144  06FA  3002               	movlw	2	; select bank5/6
 13145  06FB  0087               	movwf	7
 13146  06FC  1081               	bcf	1,1
 13147                           
 13148                           ;usb_device.c: 2915: }
 13149                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 13150  06FD  303B               	movlw	59
 13151  06FE  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 13152  06FF  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13153  0700  0086               	movwf	6
 13154  0701  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13155  0702  0087               	movwf	7
 13156  0703  0866               	movf	??_USBStdFeatureReqHandler^(0+128),w
 13157  0704  0581               	andwf	1,f
 13158                           
 13159                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 13160  0705  3000               	movlw	0
 13161  0706  00E1               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
 13162  0707  3005               	movlw	5
 13163  0708  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
 13164  0709  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13165  070A  00E3               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
 13166  070B  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13167  070C  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
 13168  070D  3002               	movlw	2
 13169  070E  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
 13170  070F  3000               	movlw	0
 13171  0710  00E5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
 13172  0711  3190  2093  3186   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 13173                           
 13174                           ;usb_device.c: 2921: }
 13175  0714  2F1E               	goto	i1l4479
 13176  0715                     i1l4477:	
 13177                           
 13178                           ;usb_device.c: 2922: else
 13179                           ;usb_device.c: 2923: {
 13180                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 13181  0715  303B               	movlw	59
 13182  0716  0021               	movlb	1	; select bank1
 13183  0717  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 13184  0718  086B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 13185  0719  0086               	movwf	6
 13186  071A  086C               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
 13187  071B  0087               	movwf	7
 13188  071C  0866               	movf	??_USBStdFeatureReqHandler^(0+128),w
 13189  071D  0581               	andwf	1,f
 13190  071E                     i1l4479:	
 13191                           
 13192                           ;usb_device.c: 2926: }
 13193                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 13194  071E  0021               	movlb	1	; select bank1
 13195  071F  0824               	movf	36,w	;volatile
 13196  0720  390F               	andlw	15
 13197  0721  3E98               	addlw	152
 13198  0722  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 13199  0723  01E7               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
 13200  0724  300E               	movlw	14
 13201  0725  3DE7               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
 13202  0726  0866               	movf	??_USBStdFeatureReqHandler^(0+128),w
 13203  0727  00E8               	movwf	USBStdFeatureReqHandler@pUEP^(0+128)
 13204  0728  0867               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
 13205  0729  00E9               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+128)
 13206                           
 13207                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 13208  072A  30FE               	movlw	254
 13209  072B  00E6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 13210  072C  0868               	movf	USBStdFeatureReqHandler@pUEP^(0+128),w
 13211  072D  0086               	movwf	6
 13212  072E  0869               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+128),w
 13213  072F  0087               	movwf	7
 13214  0730  0866               	movf	??_USBStdFeatureReqHandler^(0+128),w
 13215  0731  0581               	andwf	1,f
 13216  0732  0008               	return
 13217  0733                     __end_of_USBStdFeatureReqHandler:	
 13218                           
 13219                           	psect	text58
 13220  1093                     __ptext58:	
 13221 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 13222 ;; Defined at:
 13223 ;;		line 53 in file "usb/usb_events.c"
 13224 ;; Parameters:    Size  Location     Type
 13225 ;;  event           2    0[BANK1 ] enum E2485
 13226 ;;  pdata           2    2[BANK1 ] PTR void 
 13227 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 13228 ;;		 -> BDT(80), 
 13229 ;;  size            2    4[BANK1 ] unsigned int 
 13230 ;; Auto vars:     Size  Location     Type
 13231 ;;		None
 13232 ;; Return value:  Size  Location     Type
 13233 ;;                  1    wreg      unsigned char 
 13234 ;; Registers used:
 13235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13236 ;; Tracked objects:
 13237 ;;		On entry : 0/0
 13238 ;;		On exit  : 0/0
 13239 ;;		Unchanged: 0/0
 13240 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 13241 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0
 13242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13244 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0
 13245 ;;Total ram usage:        6 bytes
 13246 ;; Hardware stack levels used:    1
 13247 ;; Hardware stack levels required when called:    3
 13248 ;; This function calls:
 13249 ;;		_CDCInitEP
 13250 ;;		_CDCInitEP2
 13251 ;;		_USBCheckCDCRequest
 13252 ;;		_USBCheckCDCRequest2
 13253 ;;		_main_CDC_to_RS485_Initialize
 13254 ;;		_main_Communication_Initialize
 13255 ;; This function is called by:
 13256 ;;		_USBDeviceTasks
 13257 ;;		_USBStdSetCfgHandler
 13258 ;;		_USBSuspend
 13259 ;;		_USBWakeFromSuspend
 13260 ;;		_USBCtrlTrfSetupHandler
 13261 ;;		_USBCheckStdRequest
 13262 ;;		_USBStdFeatureReqHandler
 13263 ;; This function uses a non-reentrant model
 13264 ;;
 13265                           
 13266                           
 13267                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
 13268  1093                     _USER_USB_CALLBACK_EVENT_HANDLER:	
 13269                           
 13270                           ;usb_events.c: 55: switch( (int) event )
 13271                           
 13272                           ;incstack = 0
 13273                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 13274  1093  28A6               	goto	i1l4147
 13275  1094                     i1l4141:	
 13276                           ;usb_events.c: 90: case EVENT_CONFIGURED:
 13277                           
 13278                           ;usb_events.c: 88: break;
 13279                           
 13280                           ;usb_events.c: 79: case EVENT_RESUME:
 13281                           
 13282                           ;usb_events.c: 77: break;
 13283                           
 13284                           ;usb_events.c: 66: case EVENT_SUSPEND:
 13285                           
 13286                           ;usb_events.c: 64: break;
 13287                           
 13288                           ;usb_events.c: 60: case EVENT_SOF:
 13289                           
 13290                           ;usb_events.c: 58: break;
 13291                           
 13292                           ;usb_events.c: 56: {
 13293                           ;usb_events.c: 57: case EVENT_TRANSFER:
 13294                           
 13295                           
 13296                           ;usb_events.c: 93: CDCInitEP();
 13297  1094  3190  2025  3190   	fcall	_CDCInitEP
 13298                           
 13299                           ;usb_events.c: 94: CDCInitEP2();
 13300  1097  3190  205C  3190   	fcall	_CDCInitEP2
 13301                           
 13302                           ;usb_events.c: 96: main_CDC_to_RS485_Initialize();
 13303  109A  319F  27A9  3190   	fcall	_main_CDC_to_RS485_Initialize
 13304                           
 13305                           ;usb_events.c: 97: main_Communication_Initialize();
 13306  109D  319F  2785         	fcall	_main_Communication_Initialize
 13307                           
 13308                           ;usb_events.c: 101: break;
 13309                           
 13310                           ;usb_events.c: 100: case EVENT_SET_DESCRIPTOR:
 13311                           
 13312                           ;usb_events.c: 98: break;
 13313  109F  0008               	return
 13314  10A0                     i1l4143:	
 13315                           ;usb_events.c: 103: case EVENT_EP0_REQUEST:
 13316                           
 13317                           
 13318                           ;usb_events.c: 106: USBCheckCDCRequest();
 13319  10A0  3194  24E5  3190   	fcall	_USBCheckCDCRequest
 13320                           
 13321                           ;usb_events.c: 107: USBCheckCDCRequest2();
 13322  10A3  3195  2545         	fcall	_USBCheckCDCRequest2
 13323                           
 13324                           ;usb_events.c: 118: }
 13325                           
 13326                           ;usb_events.c: 117: break;
 13327                           
 13328                           ;usb_events.c: 116: default:
 13329                           
 13330                           ;usb_events.c: 114: break;
 13331                           
 13332                           ;usb_events.c: 113: case EVENT_TRANSFER_TERMINATED:
 13333                           
 13334                           ;usb_events.c: 111: break;
 13335                           
 13336                           ;usb_events.c: 110: case EVENT_BUS_ERROR:
 13337                           
 13338                           ;usb_events.c: 108: break;
 13339  10A5  0008               	return
 13340  10A6                     i1l4147:	
 13341                           
 13342                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 13343                           ; Switch size 1, requested type "space"
 13344                           ; Number of cases is 2, Range of values is 0 to 127
 13345                           ; switch strategies available:
 13346                           ; Name         Instructions Cycles
 13347                           ; simple_byte            7     4 (average)
 13348                           ; direct_byte          262     6 (fixed)
 13349                           ; jumptable            260     6 (fixed)
 13350                           ;	Chosen strategy is simple_byte
 13351  10A6  0021               	movlb	1	; select bank1
 13352  10A7  0861               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
 13353  10A8  3A00               	xorlw	0	; case 0
 13354  10A9  1903               	skipnz
 13355  10AA  28AF               	goto	i1l6095
 13356  10AB  3A7F               	xorlw	127	; case 127
 13357  10AC  1903               	skipnz
 13358  10AD  28C9               	goto	i1l6097
 13359  10AE  28CE               	goto	i1l909
 13360  10AF                     i1l6095:	
 13361                           
 13362                           ; Switch size 1, requested type "space"
 13363                           ; Number of cases is 8, Range of values is 1 to 117
 13364                           ; switch strategies available:
 13365                           ; Name         Instructions Cycles
 13366                           ; simple_byte           25    13 (average)
 13367                           ; direct_byte          243     9 (fixed)
 13368                           ; jumptable            263     9 (fixed)
 13369                           ;	Chosen strategy is simple_byte
 13370  10AF  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 13371  10B0  3A01               	xorlw	1	; case 1
 13372  10B1  1903               	skipnz
 13373  10B2  2894               	goto	i1l4141
 13374  10B3  3A03               	xorlw	3	; case 2
 13375  10B4  1903               	skipnz
 13376  10B5  28CE               	goto	i1l909
 13377  10B6  3A01               	xorlw	1	; case 3
 13378  10B7  1903               	skipnz
 13379  10B8  28A0               	goto	i1l4143
 13380  10B9  3A06               	xorlw	6	; case 5
 13381  10BA  1903               	skipnz
 13382  10BB  28CE               	goto	i1l909
 13383  10BC  3A77               	xorlw	119	; case 114
 13384  10BD  1903               	skipnz
 13385  10BE  28CE               	goto	i1l909
 13386  10BF  3A01               	xorlw	1	; case 115
 13387  10C0  1903               	skipnz
 13388  10C1  28CE               	goto	i1l909
 13389  10C2  3A07               	xorlw	7	; case 116
 13390  10C3  1903               	skipnz
 13391  10C4  28CE               	goto	i1l909
 13392  10C5  3A01               	xorlw	1	; case 117
 13393  10C6  1903               	skipnz
 13394  10C7  28CE               	goto	i1l909
 13395  10C8  28CE               	goto	i1l909
 13396  10C9                     i1l6097:	
 13397                           
 13398                           ; Switch size 1, requested type "space"
 13399                           ; Number of cases is 1, Range of values is 255 to 255
 13400                           ; switch strategies available:
 13401                           ; Name         Instructions Cycles
 13402                           ; simple_byte            4     3 (average)
 13403                           ; direct_byte            7     5 (fixed)
 13404                           ; jumptable            263     9 (fixed)
 13405                           ;	Chosen strategy is simple_byte
 13406  10C9  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 13407  10CA  3AFF               	xorlw	255	; case 255
 13408  10CB  1903               	skipnz
 13409  10CC  28CE               	goto	i1l909
 13410  10CD  28CE               	goto	i1l909
 13411  10CE                     i1l909:	
 13412                           ;usb_events.c: 119: return 1;
 13413                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
 13414                           
 13415  10CE  0008               	return
 13416  10CF                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
 13417                           
 13418                           	psect	text59
 13419  1F85                     __ptext59:	
 13420 ;; *************** function _main_Communication_Initialize *****************
 13421 ;; Defined at:
 13422 ;;		line 254 in file "main.c"
 13423 ;; Parameters:    Size  Location     Type
 13424 ;;		None
 13425 ;; Auto vars:     Size  Location     Type
 13426 ;;  i               1    1[COMMON] unsigned char 
 13427 ;; Return value:  Size  Location     Type
 13428 ;;                  1    wreg      void 
 13429 ;; Registers used:
 13430 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13431 ;; Tracked objects:
 13432 ;;		On entry : 0/0
 13433 ;;		On exit  : 0/0
 13434 ;;		Unchanged: 0/0
 13435 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 13436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13437 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13439 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13440 ;;Total ram usage:        2 bytes
 13441 ;; Hardware stack levels used:    1
 13442 ;; Hardware stack levels required when called:    1
 13443 ;; This function calls:
 13444 ;;		i1_TMR1_Reload
 13445 ;; This function is called by:
 13446 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           
 13450                           
 13451                           ;psect for function _main_Communication_Initialize
 13452  1F85                     _main_Communication_Initialize:	
 13453                           
 13454                           ;main.c: 256: unsigned char i;
 13455                           ;main.c: 258: line_coding.bCharFormat = 0;
 13456                           
 13457                           ;incstack = 0
 13458                           ; Regs used in _main_Communication_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
 13459  1F85  0024               	movlb	4	; select bank4
 13460  1F86  01E1               	clrf	(_line_coding^(0+512)+4)
 13461                           
 13462                           ;main.c: 259: line_coding.bDataBits = 8;
 13463  1F87  3008               	movlw	8
 13464  1F88  00F0               	movwf	??_main_Communication_Initialize
 13465  1F89  0870               	movf	??_main_Communication_Initialize,w
 13466  1F8A  00E3               	movwf	(_line_coding^(0+512)+6)
 13467                           
 13468                           ;main.c: 260: line_coding.bParityType = 0;
 13469  1F8B  01E2               	clrf	(_line_coding^(0+512)+5)
 13470                           
 13471                           ;main.c: 261: line_coding.dwDTERate = 9600;
 13472  1F8C  3000               	movlw	0
 13473  1F8D  00E0               	movwf	(_line_coding+3)^(0+512)
 13474  1F8E  3000               	movlw	0
 13475  1F8F  00DF               	movwf	(_line_coding+2)^(0+512)
 13476  1F90  3025               	movlw	37
 13477  1F91  00DE               	movwf	(_line_coding+1)^(0+512)
 13478  1F92  3080               	movlw	128
 13479  1F93  00DD               	movwf	_line_coding^(0+512)
 13480                           
 13481                           ;main.c: 264: TMR1IF = 0;
 13482  1F94  0020               	movlb	0	; select bank0
 13483  1F95  1011               	bcf	17,0	;volatile
 13484                           
 13485                           ;main.c: 266: TMR1_Reload();
 13486  1F96  319D  259A  319F   	fcall	i1_TMR1_Reload
 13487                           
 13488                           ;main.c: 269: for (i=0; i<sizeof(writeBuffer); i++)
 13489  1F99  01F1               	clrf	main_Communication_Initialize@i
 13490  1F9A                     L20:	
 13491  1F9A  3040               	movlw	64
 13492  1F9B  0271               	subwf	main_Communication_Initialize@i,w
 13493  1F9C  1803               	btfsc	3,0
 13494  1F9D  0008               	return
 13495                           
 13496                           ;main.c: 270: {
 13497                           ;main.c: 271: writeBuffer[i] = 0;
 13498  1F9E  0871               	movf	main_Communication_Initialize@i,w
 13499  1F9F  3EA0               	addlw	(low (_writeBuffer| (0+1024)))& (0+255)
 13500  1FA0  0086               	movwf	6
 13501  1FA1  3004               	movlw	4	; select bank9/10
 13502  1FA2  0087               	movwf	7
 13503  1FA3  0181               	clrf	1
 13504  1FA4  3001               	movlw	1
 13505  1FA5  00F0               	movwf	??_main_Communication_Initialize
 13506  1FA6  0870               	movf	??_main_Communication_Initialize,w
 13507  1FA7  07F1               	addwf	main_Communication_Initialize@i,f
 13508  1FA8  2F9A               	goto	L20
 13509  1FA9                     __end_of_main_Communication_Initialize:	
 13510                           
 13511                           	psect	text60
 13512  1D9A                     __ptext60:	
 13513 ;; *************** function i1_TMR1_Reload *****************
 13514 ;; Defined at:
 13515 ;;		line 132 in file "mcc_generated_files/tmr1.c"
 13516 ;; Parameters:    Size  Location     Type
 13517 ;;		None
 13518 ;; Auto vars:     Size  Location     Type
 13519 ;;		None
 13520 ;; Return value:  Size  Location     Type
 13521 ;;                  1    wreg      void 
 13522 ;; Registers used:
 13523 ;;		wreg, status,2
 13524 ;; Tracked objects:
 13525 ;;		On entry : 0/0
 13526 ;;		On exit  : 0/0
 13527 ;;		Unchanged: 0/0
 13528 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 13529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13533 ;;Total ram usage:        0 bytes
 13534 ;; Hardware stack levels used:    1
 13535 ;; This function calls:
 13536 ;;		Nothing
 13537 ;; This function is called by:
 13538 ;;		_main_Communication_Initialize
 13539 ;; This function uses a non-reentrant model
 13540 ;;
 13541                           
 13542                           
 13543                           ;psect for function i1_TMR1_Reload
 13544  1D9A                     i1_TMR1_Reload:	
 13545                           
 13546                           ;tmr1.c: 135: TMR1H = (timer1ReloadVal >> 8);
 13547                           
 13548                           ;incstack = 0
 13549                           ; Regs used in i1_TMR1_Reload: [wreg+status,2]
 13550  1D9A  0023               	movlb	3	; select bank3
 13551  1D9B  085D               	movf	(_timer1ReloadVal+1)^(0+384),w	;volatile
 13552  1D9C  0020               	movlb	0	; select bank0
 13553  1D9D  0097               	movwf	23	;volatile
 13554                           
 13555                           ;tmr1.c: 136: TMR1L = timer1ReloadVal;
 13556  1D9E  0023               	movlb	3	; select bank3
 13557  1D9F  085C               	movf	_timer1ReloadVal^(0+384),w	;volatile
 13558  1DA0  0020               	movlb	0	; select bank0
 13559  1DA1  0096               	movwf	22	;volatile
 13560  1DA2  0008               	return
 13561  1DA3                     __end_ofi1_TMR1_Reload:	
 13562                           
 13563                           	psect	text61
 13564  1FA9                     __ptext61:	
 13565 ;; *************** function _main_CDC_to_RS485_Initialize *****************
 13566 ;; Defined at:
 13567 ;;		line 92 in file "main.c"
 13568 ;; Parameters:    Size  Location     Type
 13569 ;;		None
 13570 ;; Auto vars:     Size  Location     Type
 13571 ;;  i               1    1[COMMON] unsigned char 
 13572 ;; Return value:  Size  Location     Type
 13573 ;;                  1    wreg      void 
 13574 ;; Registers used:
 13575 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13576 ;; Tracked objects:
 13577 ;;		On entry : 0/0
 13578 ;;		On exit  : 0/0
 13579 ;;		Unchanged: 0/0
 13580 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 13581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13584 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13585 ;;Total ram usage:        2 bytes
 13586 ;; Hardware stack levels used:    1
 13587 ;; This function calls:
 13588 ;;		Nothing
 13589 ;; This function is called by:
 13590 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13591 ;; This function uses a non-reentrant model
 13592 ;;
 13593                           
 13594                           
 13595                           ;psect for function _main_CDC_to_RS485_Initialize
 13596  1FA9                     _main_CDC_to_RS485_Initialize:	
 13597                           
 13598                           ;main.c: 94: unsigned char i;
 13599                           ;main.c: 96: line_coding2.bCharFormat = 0;
 13600                           
 13601                           ;incstack = 0
 13602                           ; Regs used in _main_CDC_to_RS485_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0]
 13603  1FA9  0025               	movlb	5	; select bank5
 13604  1FAA  01E8               	clrf	(_line_coding2^(0+640)+4)
 13605                           
 13606                           ;main.c: 97: line_coding2.bDataBits = 8;
 13607  1FAB  3008               	movlw	8
 13608  1FAC  00F0               	movwf	??_main_CDC_to_RS485_Initialize
 13609  1FAD  0870               	movf	??_main_CDC_to_RS485_Initialize,w
 13610  1FAE  00EA               	movwf	(_line_coding2^(0+640)+6)
 13611                           
 13612                           ;main.c: 98: line_coding2.bParityType = 0;
 13613  1FAF  01E9               	clrf	(_line_coding2^(0+640)+5)
 13614                           
 13615                           ;main.c: 99: line_coding2.dwDTERate = 9600;
 13616  1FB0  3000               	movlw	0
 13617  1FB1  00E7               	movwf	(_line_coding2+3)^(0+640)
 13618  1FB2  3000               	movlw	0
 13619  1FB3  00E6               	movwf	(_line_coding2+2)^(0+640)
 13620  1FB4  3025               	movlw	37
 13621  1FB5  00E5               	movwf	(_line_coding2+1)^(0+640)
 13622  1FB6  3080               	movlw	128
 13623  1FB7  00E4               	movwf	_line_coding2^(0+640)
 13624                           
 13625                           ;main.c: 102: for (i=0; i<sizeof(USB_Out_Buffer); i++)
 13626  1FB8  01F1               	clrf	main_CDC_to_RS485_Initialize@i
 13627  1FB9  3040               	movlw	64
 13628  1FBA  0271               	subwf	main_CDC_to_RS485_Initialize@i,w
 13629  1FBB  1803               	btfsc	3,0
 13630  1FBC  2FCB               	goto	i1l4115
 13631  1FBD                     i1l4109:	
 13632                           
 13633                           ;main.c: 103: {
 13634                           ;main.c: 104: USB_Out_Buffer[i] = 0;
 13635  1FBD  0871               	movf	main_CDC_to_RS485_Initialize@i,w
 13636  1FBE  3E20               	addlw	(low (_USB_Out_Buffer| (0+1024)))& (0+255)
 13637  1FBF  0086               	movwf	6
 13638  1FC0  3004               	movlw	4	; select bank8/9
 13639  1FC1  0087               	movwf	7
 13640  1FC2  0181               	clrf	1
 13641  1FC3  3001               	movlw	1
 13642  1FC4  00F0               	movwf	??_main_CDC_to_RS485_Initialize
 13643  1FC5  0870               	movf	??_main_CDC_to_RS485_Initialize,w
 13644  1FC6  07F1               	addwf	main_CDC_to_RS485_Initialize@i,f
 13645  1FC7  3040               	movlw	64
 13646  1FC8  0271               	subwf	main_CDC_to_RS485_Initialize@i,w
 13647  1FC9  1C03               	skipc
 13648  1FCA  2FBD               	goto	i1l4109
 13649  1FCB                     i1l4115:	
 13650                           
 13651                           ;main.c: 105: }
 13652                           ;main.c: 107: NextUSBOut = 0;
 13653  1FCB  0023               	movlb	3	; select bank3
 13654  1FCC  01DE               	clrf	_NextUSBOut^(0+384)
 13655                           
 13656                           ;main.c: 108: LastRS232Out = 0;
 13657  1FCD  0024               	movlb	4	; select bank4
 13658  1FCE  01C7               	clrf	_LastRS232Out^(0+512)
 13659  1FCF  0008               	return
 13660  1FD0                     __end_of_main_CDC_to_RS485_Initialize:	
 13661                           
 13662                           	psect	text62
 13663  1545                     __ptext62:	
 13664 ;; *************** function _USBCheckCDCRequest2 *****************
 13665 ;; Defined at:
 13666 ;;		line 147 in file "usb/core/usb_device_cdc2.c"
 13667 ;; Parameters:    Size  Location     Type
 13668 ;;		None
 13669 ;; Auto vars:     Size  Location     Type
 13670 ;;		None
 13671 ;; Return value:  Size  Location     Type
 13672 ;;                  1    wreg      void 
 13673 ;; Registers used:
 13674 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13675 ;; Tracked objects:
 13676 ;;		On entry : 0/0
 13677 ;;		On exit  : 0/0
 13678 ;;		Unchanged: 0/0
 13679 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 13680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13684 ;;Total ram usage:        1 bytes
 13685 ;; Hardware stack levels used:    1
 13686 ;; This function calls:
 13687 ;;		Nothing
 13688 ;; This function is called by:
 13689 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13690 ;; This function uses a non-reentrant model
 13691 ;;
 13692                           
 13693                           
 13694                           ;psect for function _USBCheckCDCRequest2
 13695  1545                     _USBCheckCDCRequest2:	
 13696                           
 13697                           ;usb_device_cdc2.c: 152: if(SetupPkt.Recipient != (0x01)) return;
 13698                           
 13699                           ;incstack = 0
 13700                           ; Regs used in _USBCheckCDCRequest2: [wreg-fsr0h+status,2+status,0]
 13701  1545  0021               	movlb	1	; select bank1
 13702  1546  0820               	movf	32,w	;volatile
 13703  1547  391F               	andlw	31
 13704  1548  3A01               	xorlw	1
 13705  1549  1D03               	btfss	3,2
 13706  154A  0008               	return
 13707                           
 13708                           ;usb_device_cdc2.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
 13709  154B  0E20               	swapf	32,w	;volatile
 13710  154C  0C89               	rrf	9,f
 13711  154D  3903               	andlw	3
 13712  154E  3A01               	xorlw	1
 13713  154F  1D03               	btfss	3,2
 13714  1550  0008               	return
 13715                           
 13716                           ;usb_device_cdc2.c: 163: if((SetupPkt.bIntfID != 0x02)&&
 13717                           ;usb_device_cdc2.c: 164: (SetupPkt.bIntfID != 0x03)) return;
 13718  1551  3002               	movlw	2
 13719  1552  0624               	xorwf	36,w	;volatile
 13720  1553  1903               	btfsc	3,2
 13721  1554  2D96               	goto	i1l4077
 13722  1555  3003               	movlw	3
 13723  1556  0624               	xorwf	36,w	;volatile
 13724  1557  1D03               	btfss	3,2
 13725  1558  0008               	return
 13726  1559  2D96               	goto	i1l4077
 13727  155A                     i1l4049:	
 13728                           ;usb_device_cdc2.c: 167: {
 13729                           ;usb_device_cdc2.c: 169: case 0x00:
 13730                           
 13731                           ;usb_device_cdc2.c: 166: switch(SetupPkt.bRequest)
 13732                           
 13733                           
 13734                           ;usb_device_cdc2.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respon
      +                          se2;
 13735  155A  30DC               	movlw	low _dummy_encapsulated_cmd_response2
 13736  155B  0023               	movlb	3	; select bank3
 13737  155C  00D5               	movwf	_inPipes^(0+384)
 13738  155D  3002               	movlw	high _dummy_encapsulated_cmd_response2
 13739  155E  00D6               	movwf	(_inPipes+1)^(0+384)
 13740                           
 13741                           ;usb_device_cdc2.c: 172: inPipes[0].wCount.Val = 0x08;
 13742  155F  3008               	movlw	8
 13743  1560  00D8               	movwf	(_inPipes^(0+384)+3)
 13744  1561  3000               	movlw	0
 13745  1562  00D9               	movwf	(_inPipes^(0+384)+4)
 13746                           
 13747                           ;usb_device_cdc2.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13748  1563  1457               	bsf	(_inPipes^(0+384)+2),0
 13749                           
 13750                           ;usb_device_cdc2.c: 174: inPipes[0].info.bits.busy = 1;
 13751  1564  17D7               	bsf	(_inPipes^(0+384)+2),7
 13752                           
 13753                           ;usb_device_cdc2.c: 175: break;
 13754  1565  0008               	return
 13755  1566                     i1l4057:	
 13756                           ;usb_device_cdc2.c: 176: case 0x01:
 13757                           
 13758                           
 13759                           ;usb_device_cdc2.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respon
      +                          se2;
 13760  1566  30DC               	movlw	low _dummy_encapsulated_cmd_response2
 13761  1567  0023               	movlb	3	; select bank3
 13762  1568  00D5               	movwf	_inPipes^(0+384)
 13763  1569  3002               	movlw	high _dummy_encapsulated_cmd_response2
 13764  156A  00D6               	movwf	(_inPipes+1)^(0+384)
 13765                           
 13766                           ;usb_device_cdc2.c: 179: inPipes[0].info.bits.busy = 1;
 13767  156B  17D7               	bsf	(_inPipes^(0+384)+2),7
 13768                           
 13769                           ;usb_device_cdc2.c: 180: break;
 13770  156C  0008               	return
 13771  156D                     i1l4061:	
 13772                           ;usb_device_cdc2.c: 184: case 0x20:
 13773                           
 13774                           
 13775                           ;usb_device_cdc2.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
 13776  156D  0021               	movlb	1	; select bank1
 13777  156E  0827               	movf	39,w	;volatile
 13778  156F  0024               	movlb	4	; select bank4
 13779  1570  00A4               	movwf	((_outPipes+1)^(0+512)+3)
 13780  1571  0021               	movlb	1	; select bank1
 13781  1572  0826               	movf	38,w	;volatile
 13782  1573  0024               	movlb	4	; select bank4
 13783  1574  00A3               	movwf	(_outPipes^(0+512)+3)
 13784                           
 13785                           ;usb_device_cdc2.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice2.SetLineCoding._b
      +                          yte[0];
 13786  1575  30CA               	movlw	(low (_cdc_notice2| (0+512)))& (0+255)
 13787  1576  00F0               	movwf	??_USBCheckCDCRequest2
 13788  1577  0870               	movf	??_USBCheckCDCRequest2,w
 13789  1578  00A0               	movwf	_outPipes^(0+512)
 13790                           
 13791                           ;usb_device_cdc2.c: 187: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 13792  1579  304E               	movlw	low _USART_mySetLineCodingHandler
 13793  157A  00A5               	movwf	(low ((_outPipes| (0+512)+5)))^0
 13794  157B  3011               	movlw	high _USART_mySetLineCodingHandler
 13795  157C  00A6               	movwf	((low ((_outPipes| (0+512)+5)))^0+1)
 13796                           
 13797                           ;usb_device_cdc2.c: 188: outPipes[0].info.bits.busy = 1;
 13798  157D  17A2               	bsf	(_outPipes^(0+512)+2),7
 13799                           
 13800                           ;usb_device_cdc2.c: 189: break;
 13801  157E  0008               	return
 13802  157F                     i1l4065:	
 13803                           ;usb_device_cdc2.c: 191: case 0x21:
 13804                           
 13805                           
 13806                           ;usb_device_cdc2.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding2; inPipes[0].wC
      +                          ount.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 13807  157F  30E4               	movlw	low _line_coding2
 13808  1580  0023               	movlb	3	; select bank3
 13809  1581  00D5               	movwf	_inPipes^(0+384)
 13810  1582  3002               	movlw	high _line_coding2
 13811  1583  00D6               	movwf	(_inPipes+1)^(0+384)
 13812  1584  3007               	movlw	7
 13813  1585  00D8               	movwf	(_inPipes^(0+384)+3)
 13814  1586  3000               	movlw	0
 13815  1587  00D9               	movwf	(_inPipes^(0+384)+4)
 13816  1588  30C1               	movlw	193
 13817  1589  00F0               	movwf	??_USBCheckCDCRequest2
 13818  158A  0870               	movf	??_USBCheckCDCRequest2,w
 13819  158B  00D7               	movwf	(_inPipes^(0+384)+2)
 13820                           
 13821                           ;usb_device_cdc2.c: 196: break;
 13822  158C  0008               	return
 13823  158D                     i1l4071:	
 13824                           ;usb_device_cdc2.c: 198: case 0x22:
 13825                           
 13826                           
 13827                           ;usb_device_cdc2.c: 199: control_signal_bitmap2._byte = (uint8_t)SetupPkt.wValue;
 13828  158D  0021               	movlb	1	; select bank1
 13829  158E  0822               	movf	34,w	;volatile
 13830  158F  00F0               	movwf	??_USBCheckCDCRequest2
 13831  1590  0870               	movf	??_USBCheckCDCRequest2,w
 13832  1591  0024               	movlb	4	; select bank4
 13833  1592  00D8               	movwf	_control_signal_bitmap2^(0+512)
 13834                           
 13835                           ;usb_device_cdc2.c: 231: inPipes[0].info.bits.busy = 1;
 13836  1593  0023               	movlb	3	; select bank3
 13837  1594  17D7               	bsf	(_inPipes^(0+384)+2),7
 13838                           
 13839                           ;usb_device_cdc2.c: 258: }
 13840                           
 13841                           ;usb_device_cdc2.c: 257: break;
 13842                           
 13843                           ;usb_device_cdc2.c: 256: default:
 13844                           
 13845                           ;usb_device_cdc2.c: 232: break;
 13846  1595  0008               	return
 13847  1596                     i1l4077:	
 13848  1596  0021               	movlb	1	; select bank1
 13849  1597  0821               	movf	33,w	;volatile
 13850                           
 13851                           ; Switch size 1, requested type "space"
 13852                           ; Number of cases is 5, Range of values is 0 to 34
 13853                           ; switch strategies available:
 13854                           ; Name         Instructions Cycles
 13855                           ; simple_byte           16     9 (average)
 13856                           ; direct_byte           76     6 (fixed)
 13857                           ; jumptable            260     6 (fixed)
 13858                           ;	Chosen strategy is simple_byte
 13859  1598  3A00               	xorlw	0	; case 0
 13860  1599  1903               	skipnz
 13861  159A  2D5A               	goto	i1l4049
 13862  159B  3A01               	xorlw	1	; case 1
 13863  159C  1903               	skipnz
 13864  159D  2D66               	goto	i1l4057
 13865  159E  3A21               	xorlw	33	; case 32
 13866  159F  1903               	skipnz
 13867  15A0  2D6D               	goto	i1l4061
 13868  15A1  3A01               	xorlw	1	; case 33
 13869  15A2  1903               	skipnz
 13870  15A3  2D7F               	goto	i1l4065
 13871  15A4  3A03               	xorlw	3	; case 34
 13872  15A5  1903               	skipnz
 13873  15A6  2D8D               	goto	i1l4071
 13874  15A7  2DA8               	goto	i1l792
 13875  15A8                     i1l792:	
 13876  15A8  0008               	return
 13877  15A9                     __end_of_USBCheckCDCRequest2:	
 13878                           
 13879                           	psect	text63
 13880  14E5                     __ptext63:	
 13881 ;; *************** function _USBCheckCDCRequest *****************
 13882 ;; Defined at:
 13883 ;;		line 147 in file "usb/core/usb_device_cdc.c"
 13884 ;; Parameters:    Size  Location     Type
 13885 ;;		None
 13886 ;; Auto vars:     Size  Location     Type
 13887 ;;		None
 13888 ;; Return value:  Size  Location     Type
 13889 ;;                  1    wreg      void 
 13890 ;; Registers used:
 13891 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13892 ;; Tracked objects:
 13893 ;;		On entry : 0/0
 13894 ;;		On exit  : 0/0
 13895 ;;		Unchanged: 0/0
 13896 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 13897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13900 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 13901 ;;Total ram usage:        1 bytes
 13902 ;; Hardware stack levels used:    1
 13903 ;; This function calls:
 13904 ;;		Nothing
 13905 ;; This function is called by:
 13906 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13907 ;; This function uses a non-reentrant model
 13908 ;;
 13909                           
 13910                           
 13911                           ;psect for function _USBCheckCDCRequest
 13912  14E5                     _USBCheckCDCRequest:	
 13913                           
 13914                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
 13915                           
 13916                           ;incstack = 0
 13917                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
 13918  14E5  0021               	movlb	1	; select bank1
 13919  14E6  0820               	movf	32,w	;volatile
 13920  14E7  391F               	andlw	31
 13921  14E8  3A01               	xorlw	1
 13922  14E9  1D03               	btfss	3,2
 13923  14EA  0008               	return
 13924                           
 13925                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
 13926  14EB  0E20               	swapf	32,w	;volatile
 13927  14EC  0C89               	rrf	9,f
 13928  14ED  3903               	andlw	3
 13929  14EE  3A01               	xorlw	1
 13930  14EF  1D03               	btfss	3,2
 13931  14F0  0008               	return
 13932                           
 13933                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
 13934                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
 13935  14F1  0824               	movf	36,w	;volatile
 13936  14F2  1903               	btfsc	3,2
 13937  14F3  2D32               	goto	i1l4015
 13938  14F4  0324               	decf	36,w	;volatile
 13939  14F5  1D03               	btfss	3,2
 13940  14F6  0008               	return
 13941  14F7  2D32               	goto	i1l4015
 13942  14F8                     i1l3985:	
 13943                           ;usb_device_cdc.c: 167: {
 13944                           ;usb_device_cdc.c: 169: case 0x00:
 13945                           
 13946                           ;usb_device_cdc.c: 166: switch(SetupPkt.bRequest)
 13947                           
 13948                           
 13949                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 13950  14F8  30D4               	movlw	low _dummy_encapsulated_cmd_response
 13951  14F9  0023               	movlb	3	; select bank3
 13952  14FA  00D5               	movwf	_inPipes^(0+384)
 13953  14FB  3002               	movlw	high _dummy_encapsulated_cmd_response
 13954  14FC  00D6               	movwf	(_inPipes+1)^(0+384)
 13955                           
 13956                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
 13957  14FD  3008               	movlw	8
 13958  14FE  00D8               	movwf	(_inPipes^(0+384)+3)
 13959  14FF  3000               	movlw	0
 13960  1500  00D9               	movwf	(_inPipes^(0+384)+4)
 13961                           
 13962                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13963  1501  1457               	bsf	(_inPipes^(0+384)+2),0
 13964                           
 13965                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
 13966  1502  17D7               	bsf	(_inPipes^(0+384)+2),7
 13967                           
 13968                           ;usb_device_cdc.c: 175: break;
 13969  1503  0008               	return
 13970  1504                     i1l3993:	
 13971                           ;usb_device_cdc.c: 176: case 0x01:
 13972                           
 13973                           
 13974                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 13975  1504  30D4               	movlw	low _dummy_encapsulated_cmd_response
 13976  1505  0023               	movlb	3	; select bank3
 13977  1506  00D5               	movwf	_inPipes^(0+384)
 13978  1507  3002               	movlw	high _dummy_encapsulated_cmd_response
 13979  1508  00D6               	movwf	(_inPipes+1)^(0+384)
 13980                           
 13981                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
 13982  1509  17D7               	bsf	(_inPipes^(0+384)+2),7
 13983                           
 13984                           ;usb_device_cdc.c: 180: break;
 13985  150A  0008               	return
 13986  150B                     i1l3997:	
 13987                           ;usb_device_cdc.c: 184: case 0x20:
 13988                           
 13989                           
 13990                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
 13991  150B  0021               	movlb	1	; select bank1
 13992  150C  0827               	movf	39,w	;volatile
 13993  150D  0024               	movlb	4	; select bank4
 13994  150E  00A4               	movwf	((_outPipes+1)^(0+512)+3)
 13995  150F  0021               	movlb	1	; select bank1
 13996  1510  0826               	movf	38,w	;volatile
 13997  1511  0024               	movlb	4	; select bank4
 13998  1512  00A3               	movwf	(_outPipes^(0+512)+3)
 13999                           
 14000                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 14001  1513  305D               	movlw	(low (_line_coding| (0+512)))& (0+255)
 14002  1514  00F0               	movwf	??_USBCheckCDCRequest
 14003  1515  0870               	movf	??_USBCheckCDCRequest,w
 14004  1516  00A0               	movwf	_outPipes^(0+512)
 14005                           
 14006                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
 14007  1517  01A5               	clrf	(low ((_outPipes| (0+512)+5)))^0
 14008  1518  01A6               	clrf	((low ((_outPipes| (0+512)+5))+1))^0
 14009                           
 14010                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
 14011  1519  17A2               	bsf	(_outPipes^(0+512)+2),7
 14012                           
 14013                           ;usb_device_cdc.c: 189: break;
 14014  151A  0008               	return
 14015  151B                     i1l4003:	
 14016                           ;usb_device_cdc.c: 191: case 0x21:
 14017                           
 14018                           
 14019                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 14020  151B  305D               	movlw	low _line_coding
 14021  151C  0023               	movlb	3	; select bank3
 14022  151D  00D5               	movwf	_inPipes^(0+384)
 14023  151E  3002               	movlw	high _line_coding
 14024  151F  00D6               	movwf	(_inPipes+1)^(0+384)
 14025  1520  3007               	movlw	7
 14026  1521  00D8               	movwf	(_inPipes^(0+384)+3)
 14027  1522  3000               	movlw	0
 14028  1523  00D9               	movwf	(_inPipes^(0+384)+4)
 14029  1524  30C1               	movlw	193
 14030  1525  00F0               	movwf	??_USBCheckCDCRequest
 14031  1526  0870               	movf	??_USBCheckCDCRequest,w
 14032  1527  00D7               	movwf	(_inPipes^(0+384)+2)
 14033                           
 14034                           ;usb_device_cdc.c: 196: break;
 14035  1528  0008               	return
 14036  1529                     i1l4009:	
 14037                           ;usb_device_cdc.c: 198: case 0x22:
 14038                           
 14039                           
 14040                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 14041  1529  0021               	movlb	1	; select bank1
 14042  152A  0822               	movf	34,w	;volatile
 14043  152B  00F0               	movwf	??_USBCheckCDCRequest
 14044  152C  0870               	movf	??_USBCheckCDCRequest,w
 14045  152D  0024               	movlb	4	; select bank4
 14046  152E  00D7               	movwf	_control_signal_bitmap^(0+512)
 14047                           
 14048                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 14049  152F  0023               	movlb	3	; select bank3
 14050  1530  17D7               	bsf	(_inPipes^(0+384)+2),7
 14051                           
 14052                           ;usb_device_cdc.c: 258: }
 14053                           
 14054                           ;usb_device_cdc.c: 257: break;
 14055                           
 14056                           ;usb_device_cdc.c: 256: default:
 14057                           
 14058                           ;usb_device_cdc.c: 232: break;
 14059  1531  0008               	return
 14060  1532                     i1l4015:	
 14061  1532  0021               	movlb	1	; select bank1
 14062  1533  0821               	movf	33,w	;volatile
 14063                           
 14064                           ; Switch size 1, requested type "space"
 14065                           ; Number of cases is 5, Range of values is 0 to 34
 14066                           ; switch strategies available:
 14067                           ; Name         Instructions Cycles
 14068                           ; simple_byte           16     9 (average)
 14069                           ; direct_byte           76     6 (fixed)
 14070                           ; jumptable            260     6 (fixed)
 14071                           ;	Chosen strategy is simple_byte
 14072  1534  3A00               	xorlw	0	; case 0
 14073  1535  1903               	skipnz
 14074  1536  2CF8               	goto	i1l3985
 14075  1537  3A01               	xorlw	1	; case 1
 14076  1538  1903               	skipnz
 14077  1539  2D04               	goto	i1l3993
 14078  153A  3A21               	xorlw	33	; case 32
 14079  153B  1903               	skipnz
 14080  153C  2D0B               	goto	i1l3997
 14081  153D  3A01               	xorlw	1	; case 33
 14082  153E  1903               	skipnz
 14083  153F  2D1B               	goto	i1l4003
 14084  1540  3A03               	xorlw	3	; case 34
 14085  1541  1903               	skipnz
 14086  1542  2D29               	goto	i1l4009
 14087  1543  2D44               	goto	i1l674
 14088  1544                     i1l674:	
 14089  1544  0008               	return
 14090  1545                     __end_of_USBCheckCDCRequest:	
 14091                           
 14092                           	psect	text64
 14093  105C                     __ptext64:	
 14094 ;; *************** function _CDCInitEP2 *****************
 14095 ;; Defined at:
 14096 ;;		line 294 in file "usb/core/usb_device_cdc2.c"
 14097 ;; Parameters:    Size  Location     Type
 14098 ;;		None
 14099 ;; Auto vars:     Size  Location     Type
 14100 ;;		None
 14101 ;; Return value:  Size  Location     Type
 14102 ;;                  1    wreg      void 
 14103 ;; Registers used:
 14104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14105 ;; Tracked objects:
 14106 ;;		On entry : 0/0
 14107 ;;		On exit  : 0/0
 14108 ;;		Unchanged: 0/0
 14109 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14114 ;;Total ram usage:        1 bytes
 14115 ;; Hardware stack levels used:    1
 14116 ;; Hardware stack levels required when called:    2
 14117 ;; This function calls:
 14118 ;;		_USBEnableEndpoint
 14119 ;;		i1_USBTransferOnePacket
 14120 ;; This function is called by:
 14121 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14122 ;; This function uses a non-reentrant model
 14123 ;;
 14124                           
 14125                           
 14126                           ;psect for function _CDCInitEP2
 14127  105C                     _CDCInitEP2:	
 14128                           
 14129                           ;usb_device_cdc2.c: 297: line_coding2.dwDTERate = 19200;
 14130                           
 14131                           ;incstack = 0
 14132                           ; Regs used in _CDCInitEP2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14133  105C  3000               	movlw	0
 14134  105D  0025               	movlb	5	; select bank5
 14135  105E  00E7               	movwf	(_line_coding2+3)^(0+640)
 14136  105F  3000               	movlw	0
 14137  1060  00E6               	movwf	(_line_coding2+2)^(0+640)
 14138  1061  304B               	movlw	75
 14139  1062  00E5               	movwf	(_line_coding2+1)^(0+640)
 14140  1063  3000               	movlw	0
 14141  1064  00E4               	movwf	_line_coding2^(0+640)
 14142                           
 14143                           ;usb_device_cdc2.c: 298: line_coding2.bCharFormat = 0x00;
 14144  1065  01E8               	clrf	(_line_coding2^(0+640)+4)
 14145                           
 14146                           ;usb_device_cdc2.c: 299: line_coding2.bParityType = 0x00;
 14147  1066  01E9               	clrf	(_line_coding2^(0+640)+5)
 14148                           
 14149                           ;usb_device_cdc2.c: 300: line_coding2.bDataBits = 0x08;
 14150  1067  3008               	movlw	8
 14151  1068  00FD               	movwf	??_CDCInitEP2
 14152  1069  087D               	movf	??_CDCInitEP2,w
 14153  106A  00EA               	movwf	(_line_coding2^(0+640)+6)
 14154                           
 14155                           ;usb_device_cdc2.c: 302: cdc_rx_len2 = 0;
 14156  106B  0023               	movlb	3	; select bank3
 14157  106C  01E3               	clrf	_cdc_rx_len2^(0+384)
 14158                           
 14159                           ;usb_device_cdc2.c: 315: USBEnableEndpoint(3,0x02|0x10|0x08);
 14160  106D  301A               	movlw	26
 14161  106E  00FD               	movwf	??_CDCInitEP2
 14162  106F  087D               	movf	??_CDCInitEP2,w
 14163  1070  00F7               	movwf	USBEnableEndpoint@options
 14164  1071  3003               	movlw	3
 14165  1072  319F  2745  3190   	fcall	_USBEnableEndpoint
 14166                           
 14167                           ;usb_device_cdc2.c: 316: USBEnableEndpoint(4,0x02|0x04|0x10|0x08);
 14168  1075  301E               	movlw	30
 14169  1076  00FD               	movwf	??_CDCInitEP2
 14170  1077  087D               	movf	??_CDCInitEP2,w
 14171  1078  00F7               	movwf	USBEnableEndpoint@options
 14172  1079  3004               	movlw	4
 14173  107A  319F  2745  3190   	fcall	_USBEnableEndpoint
 14174                           
 14175                           ;usb_device_cdc2.c: 318: CDCDataOutHandle2 = USBTransferOnePacket(4,0,(uint8_t*)&cdc_dat
      +                          a_rx2,sizeof(cdc_data_rx2));
 14176  107D  01F0               	clrf	i1USBTransferOnePacket@dir
 14177  107E  3020               	movlw	32
 14178  107F  00F1               	movwf	i1USBTransferOnePacket@data
 14179  1080  3001               	movlw	1
 14180  1081  00F2               	movwf	i1USBTransferOnePacket@data+1
 14181  1082  3040               	movlw	64
 14182  1083  00FD               	movwf	??_CDCInitEP2
 14183  1084  087D               	movf	??_CDCInitEP2,w
 14184  1085  00F3               	movwf	i1USBTransferOnePacket@len
 14185  1086  3004               	movlw	4
 14186  1087  3188  20F9         	fcall	i1_USBTransferOnePacket
 14187  1089  0871               	movf	?i1_USBTransferOnePacket+1,w
 14188  108A  0024               	movlb	4	; select bank4
 14189  108B  00AE               	movwf	(_CDCDataOutHandle2+1)^(0+512)
 14190  108C  0870               	movf	?i1_USBTransferOnePacket,w
 14191  108D  00AD               	movwf	_CDCDataOutHandle2^(0+512)
 14192                           
 14193                           ;usb_device_cdc2.c: 319: CDCDataInHandle2 = (0);
 14194  108E  01A9               	clrf	_CDCDataInHandle2^(0+512)
 14195  108F  01AA               	clrf	(_CDCDataInHandle2+1)^(0+512)
 14196                           
 14197                           ;usb_device_cdc2.c: 346: cdc_trf_state2 = 0;
 14198  1090  0023               	movlb	3	; select bank3
 14199  1091  01E5               	clrf	_cdc_trf_state2^(0+384)
 14200  1092  0008               	return
 14201  1093                     __end_of_CDCInitEP2:	
 14202                           
 14203                           	psect	text65
 14204  1025                     __ptext65:	
 14205 ;; *************** function _CDCInitEP *****************
 14206 ;; Defined at:
 14207 ;;		line 294 in file "usb/core/usb_device_cdc.c"
 14208 ;; Parameters:    Size  Location     Type
 14209 ;;		None
 14210 ;; Auto vars:     Size  Location     Type
 14211 ;;		None
 14212 ;; Return value:  Size  Location     Type
 14213 ;;                  1    wreg      void 
 14214 ;; Registers used:
 14215 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14216 ;; Tracked objects:
 14217 ;;		On entry : 0/0
 14218 ;;		On exit  : 0/0
 14219 ;;		Unchanged: 0/0
 14220 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14223 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14225 ;;Total ram usage:        1 bytes
 14226 ;; Hardware stack levels used:    1
 14227 ;; Hardware stack levels required when called:    2
 14228 ;; This function calls:
 14229 ;;		_USBEnableEndpoint
 14230 ;;		i1_USBTransferOnePacket
 14231 ;; This function is called by:
 14232 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14233 ;; This function uses a non-reentrant model
 14234 ;;
 14235                           
 14236                           
 14237                           ;psect for function _CDCInitEP
 14238  1025                     _CDCInitEP:	
 14239                           
 14240                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
 14241                           
 14242                           ;incstack = 0
 14243                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14244  1025  3000               	movlw	0
 14245  1026  0024               	movlb	4	; select bank4
 14246  1027  00E0               	movwf	(_line_coding+3)^(0+512)
 14247  1028  3000               	movlw	0
 14248  1029  00DF               	movwf	(_line_coding+2)^(0+512)
 14249  102A  304B               	movlw	75
 14250  102B  00DE               	movwf	(_line_coding+1)^(0+512)
 14251  102C  3000               	movlw	0
 14252  102D  00DD               	movwf	_line_coding^(0+512)
 14253                           
 14254                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
 14255  102E  01E1               	clrf	(_line_coding^(0+512)+4)
 14256                           
 14257                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
 14258  102F  01E2               	clrf	(_line_coding^(0+512)+5)
 14259                           
 14260                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
 14261  1030  3008               	movlw	8
 14262  1031  00FD               	movwf	??_CDCInitEP
 14263  1032  087D               	movf	??_CDCInitEP,w
 14264  1033  00E3               	movwf	(_line_coding^(0+512)+6)
 14265                           
 14266                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
 14267  1034  0023               	movlb	3	; select bank3
 14268  1035  01E2               	clrf	_cdc_rx_len^(0+384)
 14269                           
 14270                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
 14271  1036  301A               	movlw	26
 14272  1037  00FD               	movwf	??_CDCInitEP
 14273  1038  087D               	movf	??_CDCInitEP,w
 14274  1039  00F7               	movwf	USBEnableEndpoint@options
 14275  103A  3001               	movlw	1
 14276  103B  319F  2745  3190   	fcall	_USBEnableEndpoint
 14277                           
 14278                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 14279  103E  301E               	movlw	30
 14280  103F  00FD               	movwf	??_CDCInitEP
 14281  1040  087D               	movf	??_CDCInitEP,w
 14282  1041  00F7               	movwf	USBEnableEndpoint@options
 14283  1042  3002               	movlw	2
 14284  1043  319F  2745  3190   	fcall	_USBEnableEndpoint
 14285                           
 14286                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 14287  1046  01F0               	clrf	i1USBTransferOnePacket@dir
 14288  1047  3020               	movlw	32
 14289  1048  00F1               	movwf	i1USBTransferOnePacket@data
 14290  1049  3001               	movlw	1
 14291  104A  00F2               	movwf	i1USBTransferOnePacket@data+1
 14292  104B  3040               	movlw	64
 14293  104C  00FD               	movwf	??_CDCInitEP
 14294  104D  087D               	movf	??_CDCInitEP,w
 14295  104E  00F3               	movwf	i1USBTransferOnePacket@len
 14296  104F  3002               	movlw	2
 14297  1050  3188  20F9         	fcall	i1_USBTransferOnePacket
 14298  1052  0871               	movf	?i1_USBTransferOnePacket+1,w
 14299  1053  0024               	movlb	4	; select bank4
 14300  1054  00AC               	movwf	(_CDCDataOutHandle+1)^(0+512)
 14301  1055  0870               	movf	?i1_USBTransferOnePacket,w
 14302  1056  00AB               	movwf	_CDCDataOutHandle^(0+512)
 14303                           
 14304                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
 14305  1057  01A7               	clrf	_CDCDataInHandle^(0+512)
 14306  1058  01A8               	clrf	(_CDCDataInHandle+1)^(0+512)
 14307                           
 14308                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
 14309  1059  0023               	movlb	3	; select bank3
 14310  105A  01E4               	clrf	_cdc_trf_state^(0+384)
 14311  105B  0008               	return
 14312  105C                     __end_of_CDCInitEP:	
 14313                           
 14314                           	psect	text66
 14315  08F9                     __ptext66:	
 14316 ;; *************** function i1_USBTransferOnePacket *****************
 14317 ;; Defined at:
 14318 ;;		line 995 in file "usb/core/usb_device.c"
 14319 ;; Parameters:    Size  Location     Type
 14320 ;;  ep              1    wreg     unsigned char 
 14321 ;;  dir             1    0[COMMON] unsigned char 
 14322 ;;  data            2    1[COMMON] PTR unsigned char 
 14323 ;;		 -> cdc_data_tx2(64), cdc_data_rx2(64), cdc_data_tx(64), cdc_data_rx(64), 
 14324 ;;		 -> NULL(0), 
 14325 ;;  len             1    3[COMMON] unsigned char 
 14326 ;; Auto vars:     Size  Location     Type
 14327 ;;  ep              1    8[COMMON] unsigned char 
 14328 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
 14329 ;;		 -> RAM(4096), NULL(0), BDT(80), 
 14330 ;; Return value:  Size  Location     Type
 14331 ;;                  2    0[COMMON] PTR void 
 14332 ;; Registers used:
 14333 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14334 ;; Tracked objects:
 14335 ;;		On entry : 0/0
 14336 ;;		On exit  : 0/0
 14337 ;;		Unchanged: 0/0
 14338 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14339 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14340 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14341 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14342 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14343 ;;Total ram usage:       11 bytes
 14344 ;; Hardware stack levels used:    1
 14345 ;; This function calls:
 14346 ;;		Nothing
 14347 ;; This function is called by:
 14348 ;;		_CDCInitEP
 14349 ;;		_CDCInitEP2
 14350 ;;		_getsUSBUSART2
 14351 ;;		_CDCTxService2
 14352 ;; This function uses a non-reentrant model
 14353 ;;
 14354                           
 14355                           
 14356                           ;psect for function i1_USBTransferOnePacket
 14357  08F9                     i1_USBTransferOnePacket:	
 14358                           
 14359                           ;incstack = 0
 14360                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 14361                           ;i1USBTransferOnePacket@ep stored from wreg
 14362  08F9  00F8               	movwf	i1USBTransferOnePacket@ep
 14363                           
 14364                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 14365                           ;usb_device.c: 1000: if(dir != 0)
 14366  08FA  0870               	movf	i1USBTransferOnePacket@dir,w
 14367  08FB  1903               	btfsc	3,2
 14368  08FC  2906               	goto	i1l3947
 14369                           
 14370                           ;usb_device.c: 1001: {
 14371                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 14372  08FD  3578               	lslf	i1USBTransferOnePacket@ep,w
 14373  08FE  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14374  08FF  0086               	movwf	6
 14375  0900  3001               	movlw	1	; select bank3/4
 14376  0901  0087               	movwf	7
 14377  0902  3F40               	moviw [0]fsr1
 14378  0903  00F9               	movwf	i1USBTransferOnePacket@handle
 14379  0904  3F41               	moviw [1]fsr1
 14380  0905  290E               	goto	L21
 14381  0906                     i1l3947:	
 14382                           ;usb_device.c: 1004: }
 14383                           
 14384                           
 14385                           ;usb_device.c: 1005: else
 14386                           ;usb_device.c: 1006: {
 14387                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 14388  0906  3578               	lslf	i1USBTransferOnePacket@ep,w
 14389  0907  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 14390  0908  0086               	movwf	6
 14391  0909  3002               	movlw	2	; select bank5/6
 14392  090A  0087               	movwf	7
 14393  090B  3F40               	moviw [0]fsr1
 14394  090C  00F9               	movwf	i1USBTransferOnePacket@handle
 14395  090D  3F41               	moviw [1]fsr1
 14396  090E                     L21:	
 14397  090E  00FA               	movwf	i1USBTransferOnePacket@handle+1
 14398                           
 14399                           ;usb_device.c: 1009: }
 14400                           ;usb_device.c: 1013: if(handle == 0)
 14401  090F  0879               	movf	i1USBTransferOnePacket@handle,w
 14402  0910  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
 14403  0911  1D03               	btfss	3,2
 14404  0912  2916               	goto	i1l3955
 14405                           
 14406                           ;usb_device.c: 1014: {
 14407                           ;usb_device.c: 1015: return 0;
 14408  0913  01F0               	clrf	?i1_USBTransferOnePacket
 14409  0914  01F1               	clrf	?i1_USBTransferOnePacket+1
 14410  0915  0008               	return
 14411  0916                     i1l3955:	
 14412                           
 14413                           ;usb_device.c: 1016: }
 14414                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 14415  0916  30FF               	movlw	255
 14416  0917  0571               	andwf	i1USBTransferOnePacket@data,w
 14417  0918  00F4               	movwf	??i1_USBTransferOnePacket
 14418  0919  307F               	movlw	127
 14419  091A  0572               	andwf	i1USBTransferOnePacket@data+1,w
 14420  091B  00F5               	movwf	??i1_USBTransferOnePacket+1
 14421  091C  0879               	movf	i1USBTransferOnePacket@handle,w
 14422  091D  0086               	movwf	6
 14423  091E  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14424  091F  0087               	movwf	7
 14425  0920  3142               	addfsr 1,2
 14426  0921  0874               	movf	??i1_USBTransferOnePacket,w
 14427  0922  3FC0               	movwi [0]fsr1
 14428  0923  0875               	movf	??i1_USBTransferOnePacket+1,w
 14429  0924  3FC1               	movwi [1]fsr1
 14430                           
 14431                           ;usb_device.c: 1030: handle->CNT = len;
 14432  0925  0879               	movf	i1USBTransferOnePacket@handle,w
 14433  0926  3E01               	addlw	1
 14434  0927  00F4               	movwf	??i1_USBTransferOnePacket
 14435  0928  3000               	movlw	0
 14436  0929  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
 14437  092A  00F5               	movwf	??i1_USBTransferOnePacket+1
 14438  092B  0874               	movf	??i1_USBTransferOnePacket,w
 14439  092C  0086               	movwf	6
 14440  092D  0875               	movf	??i1_USBTransferOnePacket+1,w
 14441  092E  0087               	movwf	7
 14442  092F  0873               	movf	i1USBTransferOnePacket@len,w
 14443  0930  0081               	movwf	1
 14444                           
 14445                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 14446  0931  3040               	movlw	64
 14447  0932  00F4               	movwf	??i1_USBTransferOnePacket
 14448  0933  0879               	movf	i1USBTransferOnePacket@handle,w
 14449  0934  0086               	movwf	6
 14450  0935  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14451  0936  0087               	movwf	7
 14452  0937  0874               	movf	??i1_USBTransferOnePacket,w
 14453  0938  0581               	andwf	1,f
 14454                           
 14455                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 14456  0939  0879               	movf	i1USBTransferOnePacket@handle,w
 14457  093A  0086               	movwf	6
 14458  093B  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14459  093C  0087               	movwf	7
 14460  093D  1581               	bsf	1,3
 14461                           
 14462                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 14463  093E  0879               	movf	i1USBTransferOnePacket@handle,w
 14464  093F  0086               	movwf	6
 14465  0940  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14466  0941  0087               	movwf	7
 14467  0942  1781               	bsf	1,7
 14468                           
 14469                           ;usb_device.c: 1036: if(dir != 0)
 14470  0943  0870               	movf	i1USBTransferOnePacket@dir,w
 14471  0944  1903               	btfsc	3,2
 14472  0945  295F               	goto	i1l3965
 14473                           
 14474                           ;usb_device.c: 1037: {
 14475                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 14476  0946  3578               	lslf	i1USBTransferOnePacket@ep,w
 14477  0947  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14478  0948  0086               	movwf	6
 14479  0949  3001               	movlw	1	; select bank3/4
 14480  094A  0087               	movwf	7
 14481  094B  3F40               	moviw [0]fsr1
 14482  094C  00F4               	movwf	??i1_USBTransferOnePacket
 14483  094D  3F41               	moviw [1]fsr1
 14484  094E  00F5               	movwf	??i1_USBTransferOnePacket+1
 14485  094F  3004               	movlw	4
 14486  0950  0674               	xorwf	??i1_USBTransferOnePacket,w
 14487  0951  00F6               	movwf	??i1_USBTransferOnePacket+2
 14488  0952  3000               	movlw	0
 14489  0953  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 14490  0954  00F7               	movwf	??i1_USBTransferOnePacket+3
 14491  0955  3578               	lslf	i1USBTransferOnePacket@ep,w
 14492  0956  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14493  0957  0086               	movwf	6
 14494  0958  3001               	movlw	1	; select bank3/4
 14495  0959  0087               	movwf	7
 14496  095A  0876               	movf	??i1_USBTransferOnePacket+2,w
 14497  095B  3FC0               	movwi [0]fsr1
 14498  095C  0877               	movf	??i1_USBTransferOnePacket+3,w
 14499  095D  3FC1               	movwi [1]fsr1
 14500                           
 14501                           ;usb_device.c: 1040: }
 14502  095E  2977               	goto	i1l3967
 14503  095F                     i1l3965:	
 14504                           
 14505                           ;usb_device.c: 1041: else
 14506                           ;usb_device.c: 1042: {
 14507                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 14508  095F  3578               	lslf	i1USBTransferOnePacket@ep,w
 14509  0960  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 14510  0961  0086               	movwf	6
 14511  0962  3002               	movlw	2	; select bank5/6
 14512  0963  0087               	movwf	7
 14513  0964  3F40               	moviw [0]fsr1
 14514  0965  00F4               	movwf	??i1_USBTransferOnePacket
 14515  0966  3F41               	moviw [1]fsr1
 14516  0967  00F5               	movwf	??i1_USBTransferOnePacket+1
 14517  0968  3004               	movlw	4
 14518  0969  0674               	xorwf	??i1_USBTransferOnePacket,w
 14519  096A  00F6               	movwf	??i1_USBTransferOnePacket+2
 14520  096B  3000               	movlw	0
 14521  096C  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 14522  096D  00F7               	movwf	??i1_USBTransferOnePacket+3
 14523  096E  3578               	lslf	i1USBTransferOnePacket@ep,w
 14524  096F  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 14525  0970  0086               	movwf	6
 14526  0971  3002               	movlw	2	; select bank5/6
 14527  0972  0087               	movwf	7
 14528  0973  0876               	movf	??i1_USBTransferOnePacket+2,w
 14529  0974  3FC0               	movwi [0]fsr1
 14530  0975  0877               	movf	??i1_USBTransferOnePacket+3,w
 14531  0976  3FC1               	movwi [1]fsr1
 14532  0977                     i1l3967:	
 14533                           
 14534                           ;usb_device.c: 1045: }
 14535                           ;usb_device.c: 1046: return (void*)handle;
 14536  0977  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14537  0978  00F1               	movwf	?i1_USBTransferOnePacket+1
 14538  0979  0879               	movf	i1USBTransferOnePacket@handle,w
 14539  097A  00F0               	movwf	?i1_USBTransferOnePacket
 14540  097B  0008               	return
 14541  097C                     __end_ofi1_USBTransferOnePacket:	
 14542                           
 14543                           	psect	text67
 14544  1F45                     __ptext67:	
 14545 ;; *************** function _USBEnableEndpoint *****************
 14546 ;; Defined at:
 14547 ;;		line 878 in file "usb/core/usb_device.c"
 14548 ;; Parameters:    Size  Location     Type
 14549 ;;  ep              1    wreg     unsigned char 
 14550 ;;  options         1    7[COMMON] unsigned char 
 14551 ;; Auto vars:     Size  Location     Type
 14552 ;;  ep              1   12[COMMON] unsigned char 
 14553 ;;  p               2   10[COMMON] PTR unsigned char 
 14554 ;;		 -> UEP0(1), 
 14555 ;; Return value:  Size  Location     Type
 14556 ;;                  1    wreg      void 
 14557 ;; Registers used:
 14558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14559 ;; Tracked objects:
 14560 ;;		On entry : 0/0
 14561 ;;		On exit  : 0/0
 14562 ;;		Unchanged: 0/0
 14563 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14564 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14565 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14566 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14567 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14568 ;;Total ram usage:        6 bytes
 14569 ;; Hardware stack levels used:    1
 14570 ;; Hardware stack levels required when called:    1
 14571 ;; This function calls:
 14572 ;;		_USBConfigureEndpoint
 14573 ;; This function is called by:
 14574 ;;		_CDCInitEP
 14575 ;;		_CDCInitEP2
 14576 ;; This function uses a non-reentrant model
 14577 ;;
 14578                           
 14579                           
 14580                           ;psect for function _USBEnableEndpoint
 14581  1F45                     _USBEnableEndpoint:	
 14582                           
 14583                           ;incstack = 0
 14584                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14585                           ;USBEnableEndpoint@ep stored from wreg
 14586  1F45  00FC               	movwf	USBEnableEndpoint@ep
 14587                           
 14588                           ;usb_device.c: 880: unsigned char* p;
 14589                           ;usb_device.c: 884: if(options & 0x04)
 14590  1F46  1D77               	btfss	USBEnableEndpoint@options,2
 14591  1F47  2F4D               	goto	i1l3931
 14592                           
 14593                           ;usb_device.c: 885: {
 14594                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 14595  1F48  01F0               	clrf	USBConfigureEndpoint@direction
 14596  1F49  087C               	movf	USBEnableEndpoint@ep,w
 14597  1F4A  3191  210C  319F   	fcall	_USBConfigureEndpoint
 14598  1F4D                     i1l3931:	
 14599                           
 14600                           ;usb_device.c: 887: }
 14601                           ;usb_device.c: 888: if(options & 0x02)
 14602  1F4D  1CF7               	btfss	USBEnableEndpoint@options,1
 14603  1F4E  2F54               	goto	i1l3935
 14604                           
 14605                           ;usb_device.c: 889: {
 14606                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 14607  1F4F  01F0               	clrf	USBConfigureEndpoint@direction
 14608  1F50  0AF0               	incf	USBConfigureEndpoint@direction,f
 14609  1F51  087C               	movf	USBEnableEndpoint@ep,w
 14610  1F52  3191  210C         	fcall	_USBConfigureEndpoint
 14611  1F54                     i1l3935:	
 14612                           
 14613                           ;usb_device.c: 891: }
 14614                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 14615  1F54  087C               	movf	USBEnableEndpoint@ep,w
 14616  1F55  3E98               	addlw	152
 14617  1F56  00F8               	movwf	??_USBEnableEndpoint
 14618  1F57  01F9               	clrf	??_USBEnableEndpoint+1
 14619  1F58  300E               	movlw	14
 14620  1F59  3DF9               	addwfc	??_USBEnableEndpoint+1,f
 14621  1F5A  0878               	movf	??_USBEnableEndpoint,w
 14622  1F5B  00FA               	movwf	USBEnableEndpoint@p
 14623  1F5C  0879               	movf	??_USBEnableEndpoint+1,w
 14624  1F5D  00FB               	movwf	USBEnableEndpoint@p+1
 14625                           
 14626                           ;usb_device.c: 901: *p = options;
 14627  1F5E  087A               	movf	USBEnableEndpoint@p,w
 14628  1F5F  0086               	movwf	6
 14629  1F60  087B               	movf	USBEnableEndpoint@p+1,w
 14630  1F61  0087               	movwf	7
 14631  1F62  0877               	movf	USBEnableEndpoint@options,w
 14632  1F63  0081               	movwf	1
 14633  1F64  0008               	return
 14634  1F65                     __end_of_USBEnableEndpoint:	
 14635                           
 14636                           	psect	text68
 14637  110C                     __ptext68:	
 14638 ;; *************** function _USBConfigureEndpoint *****************
 14639 ;; Defined at:
 14640 ;;		line 1543 in file "usb/core/usb_device.c"
 14641 ;; Parameters:    Size  Location     Type
 14642 ;;  EPNum           1    wreg     unsigned char 
 14643 ;;  direction       1    0[COMMON] unsigned char 
 14644 ;; Auto vars:     Size  Location     Type
 14645 ;;  EPNum           1    5[COMMON] unsigned char 
 14646 ;;  handle          1    6[COMMON] PTR volatile struct __BD
 14647 ;;		 -> BDT(80), 
 14648 ;; Return value:  Size  Location     Type
 14649 ;;                  1    wreg      void 
 14650 ;; Registers used:
 14651 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14652 ;; Tracked objects:
 14653 ;;		On entry : 0/0
 14654 ;;		On exit  : 0/0
 14655 ;;		Unchanged: 0/0
 14656 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14657 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14659 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14660 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14661 ;;Total ram usage:        7 bytes
 14662 ;; Hardware stack levels used:    1
 14663 ;; This function calls:
 14664 ;;		Nothing
 14665 ;; This function is called by:
 14666 ;;		_USBEnableEndpoint
 14667 ;; This function uses a non-reentrant model
 14668 ;;
 14669                           
 14670                           
 14671                           ;psect for function _USBConfigureEndpoint
 14672  110C                     _USBConfigureEndpoint:	
 14673                           
 14674                           ;incstack = 0
 14675                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 14676                           ;USBConfigureEndpoint@EPNum stored from wreg
 14677  110C  00F5               	movwf	USBConfigureEndpoint@EPNum
 14678                           
 14679                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 14680                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 14681  110D  3020               	movlw	32
 14682  110E  00F1               	movwf	??_USBConfigureEndpoint
 14683  110F  0871               	movf	??_USBConfigureEndpoint,w
 14684  1110  00F6               	movwf	USBConfigureEndpoint@handle
 14685                           
 14686                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 14687  1111  0870               	movf	USBConfigureEndpoint@direction,w
 14688  1112  00F1               	movwf	??_USBConfigureEndpoint
 14689  1113  3001               	movlw	1
 14690  1114                     u314_25:	
 14691  1114  35F1               	lslf	??_USBConfigureEndpoint,f
 14692  1115  0B89               	decfsz	9,f
 14693  1116  2914               	goto	u314_25
 14694  1117  0875               	movf	USBConfigureEndpoint@EPNum,w
 14695  1118  00F2               	movwf	??_USBConfigureEndpoint+1
 14696  1119  3001               	movlw	1
 14697  111A                     u315_25:	
 14698  111A  35F2               	lslf	??_USBConfigureEndpoint+1,f
 14699  111B  3EFF               	addlw	-1
 14700  111C  1D03               	skipz
 14701  111D  291A               	goto	u315_25
 14702  111E  3572               	lslf	??_USBConfigureEndpoint+1,w
 14703  111F  0771               	addwf	??_USBConfigureEndpoint,w
 14704  1120  00F3               	movwf	??_USBConfigureEndpoint+2
 14705  1121  3001               	movlw	1
 14706  1122                     u316_25:	
 14707  1122  35F3               	lslf	??_USBConfigureEndpoint+2,f
 14708  1123  3EFF               	addlw	-1
 14709  1124  1D03               	skipz
 14710  1125  2922               	goto	u316_25
 14711  1126  3573               	lslf	??_USBConfigureEndpoint+2,w
 14712  1127  00F4               	movwf	??_USBConfigureEndpoint+3
 14713  1128  0874               	movf	??_USBConfigureEndpoint+3,w
 14714  1129  07F6               	addwf	USBConfigureEndpoint@handle,f
 14715                           
 14716                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 14717  112A  0876               	movf	USBConfigureEndpoint@handle,w
 14718  112B  0086               	movwf	6
 14719  112C  0187               	clrf	7
 14720  112D  1381               	bcf	1,7
 14721                           
 14722                           ;usb_device.c: 1557: if(direction == 0)
 14723  112E  0870               	movf	USBConfigureEndpoint@direction,w
 14724  112F  1D03               	btfss	3,2
 14725  1130  293B               	goto	i1l3921
 14726                           
 14727                           ;usb_device.c: 1558: {
 14728                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 14729  1131  3575               	lslf	USBConfigureEndpoint@EPNum,w
 14730  1132  3EAA               	addlw	(low (_pBDTEntryOut| (0+512)))& (0+255)
 14731  1133  0086               	movwf	6
 14732  1134  3002               	movlw	2	; select bank5/6
 14733  1135  0087               	movwf	7
 14734  1136  0876               	movf	USBConfigureEndpoint@handle,w
 14735  1137  3FC0               	movwi [0]fsr1
 14736  1138  3000               	movlw	0
 14737  1139  3FC1               	movwi [1]fsr1
 14738                           
 14739                           ;usb_device.c: 1560: }
 14740  113A  2944               	goto	i1l3923
 14741  113B                     i1l3921:	
 14742                           
 14743                           ;usb_device.c: 1561: else
 14744                           ;usb_device.c: 1562: {
 14745                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 14746  113B  3575               	lslf	USBConfigureEndpoint@EPNum,w
 14747  113C  3ECB               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14748  113D  0086               	movwf	6
 14749  113E  3001               	movlw	1	; select bank3/4
 14750  113F  0087               	movwf	7
 14751  1140  0876               	movf	USBConfigureEndpoint@handle,w
 14752  1141  3FC0               	movwi [0]fsr1
 14753  1142  3000               	movlw	0
 14754  1143  3FC1               	movwi [1]fsr1
 14755  1144                     i1l3923:	
 14756                           
 14757                           ;usb_device.c: 1564: }
 14758                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 14759  1144  0876               	movf	USBConfigureEndpoint@handle,w
 14760  1145  0086               	movwf	6
 14761  1146  0187               	clrf	7
 14762  1147  1301               	bcf	1,6
 14763                           
 14764                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 14765  1148  0876               	movf	USBConfigureEndpoint@handle,w
 14766  1149  3E04               	addlw	4
 14767  114A  0086               	movwf	6
 14768  114B  0187               	clrf	7
 14769  114C  1701               	bsf	1,6
 14770  114D  0008               	return
 14771  114E                     __end_of_USBConfigureEndpoint:	
 14772                           
 14773                           	psect	text69
 14774  10CF                     __ptext69:	
 14775 ;; *************** function _USBCtrlTrfOutHandler *****************
 14776 ;; Defined at:
 14777 ;;		line 2538 in file "usb/core/usb_device.c"
 14778 ;; Parameters:    Size  Location     Type
 14779 ;;		None
 14780 ;; Auto vars:     Size  Location     Type
 14781 ;;		None
 14782 ;; Return value:  Size  Location     Type
 14783 ;;                  1    wreg      void 
 14784 ;; Registers used:
 14785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14786 ;; Tracked objects:
 14787 ;;		On entry : 0/0
 14788 ;;		On exit  : 0/0
 14789 ;;		Unchanged: 0/0
 14790 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14793 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0
 14794 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0
 14795 ;;Total ram usage:        2 bytes
 14796 ;; Hardware stack levels used:    1
 14797 ;; Hardware stack levels required when called:    3
 14798 ;; This function calls:
 14799 ;;		_USBCtrlTrfRxService
 14800 ;; This function is called by:
 14801 ;;		_USBCtrlEPService
 14802 ;; This function uses a non-reentrant model
 14803 ;;
 14804                           
 14805                           
 14806                           ;psect for function _USBCtrlTrfOutHandler
 14807  10CF                     _USBCtrlTrfOutHandler:	
 14808                           
 14809                           ;usb_device.c: 2540: if(controlTransferState == 2)
 14810                           
 14811                           ;incstack = 0
 14812                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14813  10CF  3002               	movlw	2
 14814  10D0  0023               	movlb	3	; select bank3
 14815  10D1  0668               	xorwf	_controlTransferState^(0+384),w
 14816  10D2  1D03               	btfss	3,2
 14817  10D3  28D7               	goto	i1l4753
 14818                           
 14819                           ;usb_device.c: 2541: {
 14820                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 14821  10D4  3187  2733         	fcall	_USBCtrlTrfRxService
 14822                           
 14823                           ;usb_device.c: 2543: }
 14824  10D6  0008               	return
 14825  10D7                     i1l4753:	
 14826                           
 14827                           ;usb_device.c: 2544: else
 14828                           ;usb_device.c: 2545: {
 14829                           ;usb_device.c: 2548: controlTransferState = 0;
 14830  10D7  0023               	movlb	3	; select bank3
 14831  10D8  01E8               	clrf	_controlTransferState^(0+384)
 14832                           
 14833                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 14834  10D9  0024               	movlb	4	; select bank4
 14835  10DA  0846               	movf	_BothEP0OutUOWNsSet^(0+512),w
 14836  10DB  1D03               	btfss	3,2
 14837  10DC  2909               	goto	i1l4765
 14838                           
 14839                           ;usb_device.c: 2556: {
 14840                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 14841  10DD  0022               	movlb	2	; select bank2
 14842  10DE  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 14843  10DF  3E01               	addlw	1
 14844  10E0  0021               	movlb	1	; select bank1
 14845  10E1  00EC               	movwf	??_USBCtrlTrfOutHandler^(0+128)
 14846  10E2  3000               	movlw	0
 14847  10E3  0022               	movlb	2	; select bank2
 14848  10E4  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 14849  10E5  0021               	movlb	1	; select bank1
 14850  10E6  00ED               	movwf	(??_USBCtrlTrfOutHandler+1)^(0+128)
 14851  10E7  086C               	movf	??_USBCtrlTrfOutHandler^(0+128),w
 14852  10E8  0086               	movwf	6
 14853  10E9  086D               	movf	(??_USBCtrlTrfOutHandler+1)^(0+128),w
 14854  10EA  0087               	movwf	7
 14855  10EB  3008               	movlw	8
 14856  10EC  0081               	movwf	1
 14857                           
 14858                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14859  10ED  30A0               	movlw	160
 14860  10EE  00EC               	movwf	??_USBCtrlTrfOutHandler^(0+128)
 14861  10EF  3000               	movlw	0
 14862  10F0  00ED               	movwf	(??_USBCtrlTrfOutHandler^(0+128)+1)
 14863  10F1  0022               	movlb	2	; select bank2
 14864  10F2  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 14865  10F3  0086               	movwf	6
 14866  10F4  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 14867  10F5  0087               	movwf	7
 14868  10F6  3142               	addfsr 1,2
 14869  10F7  0021               	movlb	1	; select bank1
 14870  10F8  086C               	movf	??_USBCtrlTrfOutHandler^(0+128),w
 14871  10F9  3FC0               	movwi [0]fsr1
 14872  10FA  086D               	movf	(??_USBCtrlTrfOutHandler^(0+128)+1),w
 14873  10FB  3FC1               	movwi [1]fsr1
 14874                           
 14875                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14876  10FC  0022               	movlb	2	; select bank2
 14877  10FD  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 14878  10FE  0086               	movwf	6
 14879  10FF  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 14880  1100  0087               	movwf	7
 14881  1101  300C               	movlw	12
 14882  1102  0081               	movwf	1
 14883                           
 14884                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14885  1103  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 14886  1104  0086               	movwf	6
 14887  1105  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 14888  1106  0087               	movwf	7
 14889  1107  1781               	bsf	1,7
 14890                           
 14891                           ;usb_device.c: 2561: }
 14892  1108  0008               	return
 14893  1109                     i1l4765:	
 14894                           
 14895                           ;usb_device.c: 2562: else
 14896                           ;usb_device.c: 2563: {
 14897                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 14898  1109  0024               	movlb	4	; select bank4
 14899  110A  01C6               	clrf	_BothEP0OutUOWNsSet^(0+512)
 14900  110B  0008               	return
 14901  110C                     __end_of_USBCtrlTrfOutHandler:	
 14902                           
 14903                           	psect	text70
 14904  0733                     __ptext70:	
 14905 ;; *************** function _USBCtrlTrfRxService *****************
 14906 ;; Defined at:
 14907 ;;		line 1852 in file "usb/core/usb_device.c"
 14908 ;; Parameters:    Size  Location     Type
 14909 ;;		None
 14910 ;; Auto vars:     Size  Location     Type
 14911 ;;  byteToRead      1   11[BANK1 ] unsigned char 
 14912 ;;  i               1   10[BANK1 ] unsigned char 
 14913 ;; Return value:  Size  Location     Type
 14914 ;;                  1    wreg      void 
 14915 ;; Registers used:
 14916 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14917 ;; Tracked objects:
 14918 ;;		On entry : 0/0
 14919 ;;		On exit  : 0/0
 14920 ;;		Unchanged: 0/0
 14921 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 14922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 14923 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0
 14924 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0
 14925 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0
 14926 ;;Total ram usage:        4 bytes
 14927 ;; Hardware stack levels used:    1
 14928 ;; Hardware stack levels required when called:    2
 14929 ;; This function calls:
 14930 ;;		Absolute function
 14931 ;;		_USART_mySetLineCodingHandler
 14932 ;;		_USBCtrlEPAllowStatusStage
 14933 ;; This function is called by:
 14934 ;;		_USBCtrlTrfOutHandler
 14935 ;; This function uses a non-reentrant model
 14936 ;;
 14937                           
 14938                           
 14939                           ;psect for function _USBCtrlTrfRxService
 14940  0733                     _USBCtrlTrfRxService:	
 14941                           
 14942                           ;usb_device.c: 1854: uint8_t byteToRead;
 14943                           ;usb_device.c: 1855: uint8_t i;
 14944                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 14945                           
 14946                           ;incstack = 0
 14947                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14948  0733  0023               	movlb	3	; select bank3
 14949  0734  0869               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 14950  0735  0086               	movwf	6
 14951  0736  0187               	clrf	7
 14952  0737  3F41               	moviw [1]fsr1
 14953  0738  0021               	movlb	1	; select bank1
 14954  0739  00EB               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
 14955                           
 14956                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 14957  073A  086B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
 14958  073B  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 14959  073C  01E9               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
 14960  073D  0869               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
 14961  073E  0024               	movlb	4	; select bank4
 14962  073F  0224               	subwf	((_outPipes+1)^(0+512)+3),w
 14963  0740  1D03               	skipz
 14964  0741  2F46               	goto	u395_25
 14965  0742  0021               	movlb	1	; select bank1
 14966  0743  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 14967  0744  0024               	movlb	4	; select bank4
 14968  0745  0223               	subwf	(_outPipes^(0+512)+3),w
 14969  0746                     u395_25:	
 14970  0746  1803               	skipnc
 14971  0747  2F4D               	goto	i1l485
 14972                           
 14973                           ;usb_device.c: 1866: {
 14974                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 14975  0748  0823               	movf	(_outPipes^(0+512)+3),w
 14976  0749  0021               	movlb	1	; select bank1
 14977  074A  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 14978  074B  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 14979  074C  00EB               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
 14980  074D                     i1l485:	
 14981                           
 14982                           ;usb_device.c: 1868: }
 14983                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 14984  074D  0021               	movlb	1	; select bank1
 14985  074E  086B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
 14986  074F  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 14987  0750  01E9               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
 14988  0751  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 14989  0752  0024               	movlb	4	; select bank4
 14990  0753  02A3               	subwf	(_outPipes^(0+512)+3),f
 14991  0754  0021               	movlb	1	; select bank1
 14992  0755  0869               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
 14993  0756  0024               	movlb	4	; select bank4
 14994  0757  3BA4               	subwfb	((_outPipes+1)^(0+512)+3),f
 14995                           
 14996                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 14997  0758  0021               	movlb	1	; select bank1
 14998  0759  01EA               	clrf	USBCtrlTrfRxService@i^(0+128)
 14999  075A                     i1l4563:	
 15000  075A  086B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
 15001  075B  026A               	subwf	USBCtrlTrfRxService@i^(0+128),w
 15002  075C  1803               	btfsc	3,0
 15003  075D  2F77               	goto	i1l4565
 15004                           
 15005                           ;usb_device.c: 1875: {
 15006                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 15007  075E  086A               	movf	USBCtrlTrfRxService@i^(0+128),w
 15008  075F  3EA8               	addlw	168
 15009  0760  0086               	movwf	6
 15010  0761  0187               	clrf	7
 15011  0762  0801               	movf	1,w
 15012  0763  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15013  0764  0024               	movlb	4	; select bank4
 15014  0765  0820               	movf	_outPipes^(0+512),w
 15015  0766  0086               	movwf	6
 15016  0767  3002               	movlw	2	; select bank4/5
 15017  0768  0087               	movwf	7
 15018  0769  0021               	movlb	1	; select bank1
 15019  076A  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15020  076B  0081               	movwf	1
 15021  076C  3001               	movlw	1
 15022  076D  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15023  076E  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15024  076F  0024               	movlb	4	; select bank4
 15025  0770  07A0               	addwf	_outPipes^(0+512),f
 15026  0771  3001               	movlw	1
 15027  0772  0021               	movlb	1	; select bank1
 15028  0773  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15029  0774  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15030  0775  07EA               	addwf	USBCtrlTrfRxService@i^(0+128),f
 15031  0776  2F5A               	goto	i1l4563
 15032  0777                     i1l4565:	
 15033                           
 15034                           ;usb_device.c: 1877: }
 15035                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 15036  0777  0024               	movlb	4	; select bank4
 15037  0778  0823               	movf	(_outPipes^(0+512)+3),w
 15038  0779  0424               	iorwf	((_outPipes+1)^(0+512)+3),w
 15039  077A  1903               	btfsc	3,2
 15040  077B  2FBB               	goto	i1l4577
 15041                           
 15042                           ;usb_device.c: 1882: {
 15043                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 15044  077C  0022               	movlb	2	; select bank2
 15045  077D  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15046  077E  3E01               	addlw	1
 15047  077F  0021               	movlb	1	; select bank1
 15048  0780  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15049  0781  3000               	movlw	0
 15050  0782  0022               	movlb	2	; select bank2
 15051  0783  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15052  0784  0021               	movlb	1	; select bank1
 15053  0785  00E9               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
 15054  0786  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15055  0787  0086               	movwf	6
 15056  0788  0869               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
 15057  0789  0087               	movwf	7
 15058  078A  3008               	movlw	8
 15059  078B  0081               	movwf	1
 15060                           
 15061                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 15062  078C  30A8               	movlw	168
 15063  078D  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15064  078E  3000               	movlw	0
 15065  078F  00E9               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
 15066  0790  0022               	movlb	2	; select bank2
 15067  0791  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15068  0792  0086               	movwf	6
 15069  0793  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15070  0794  0087               	movwf	7
 15071  0795  3142               	addfsr 1,2
 15072  0796  0021               	movlb	1	; select bank1
 15073  0797  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15074  0798  3FC0               	movwi [0]fsr1
 15075  0799  0869               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
 15076  079A  3FC1               	movwi [1]fsr1
 15077                           
 15078                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 15079  079B  0023               	movlb	3	; select bank3
 15080  079C  0869               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 15081  079D  0086               	movwf	6
 15082  079E  0187               	clrf	7
 15083  079F  1B01               	btfsc	1,6
 15084  07A0  2FAE               	goto	i1l4575
 15085                           
 15086                           ;usb_device.c: 1886: {
 15087                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 15088  07A1  0022               	movlb	2	; select bank2
 15089  07A2  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15090  07A3  0086               	movwf	6
 15091  07A4  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15092  07A5  0087               	movwf	7
 15093  07A6  3048               	movlw	72
 15094  07A7  0081               	movwf	1
 15095                           
 15096                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15097  07A8  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15098  07A9  0086               	movwf	6
 15099  07AA  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15100  07AB  0087               	movwf	7
 15101  07AC  1781               	bsf	1,7
 15102                           
 15103                           ;usb_device.c: 1889: }
 15104  07AD  0008               	return
 15105  07AE                     i1l4575:	
 15106                           
 15107                           ;usb_device.c: 1890: else
 15108                           ;usb_device.c: 1891: {
 15109                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 15110  07AE  0022               	movlb	2	; select bank2
 15111  07AF  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15112  07B0  0086               	movwf	6
 15113  07B1  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15114  07B2  0087               	movwf	7
 15115  07B3  3008               	movlw	8
 15116  07B4  0081               	movwf	1
 15117                           
 15118                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15119  07B5  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15120  07B6  0086               	movwf	6
 15121  07B7  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15122  07B8  0087               	movwf	7
 15123  07B9  1781               	bsf	1,7
 15124                           
 15125                           ;usb_device.c: 1894: }
 15126                           ;usb_device.c: 1895: }
 15127  07BA  0008               	return
 15128  07BB                     i1l4577:	
 15129                           
 15130                           ;usb_device.c: 1896: else
 15131                           ;usb_device.c: 1897: {
 15132                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 15133  07BB  0022               	movlb	2	; select bank2
 15134  07BC  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15135  07BD  3E01               	addlw	1
 15136  07BE  0021               	movlb	1	; select bank1
 15137  07BF  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15138  07C0  3000               	movlw	0
 15139  07C1  0022               	movlb	2	; select bank2
 15140  07C2  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15141  07C3  0021               	movlb	1	; select bank1
 15142  07C4  00E9               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
 15143  07C5  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15144  07C6  0086               	movwf	6
 15145  07C7  0869               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
 15146  07C8  0087               	movwf	7
 15147  07C9  3008               	movlw	8
 15148  07CA  0081               	movwf	1
 15149                           
 15150                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 15151  07CB  30A0               	movlw	160
 15152  07CC  00E8               	movwf	??_USBCtrlTrfRxService^(0+128)
 15153  07CD  3000               	movlw	0
 15154  07CE  00E9               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
 15155  07CF  0022               	movlb	2	; select bank2
 15156  07D0  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15157  07D1  0086               	movwf	6
 15158  07D2  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15159  07D3  0087               	movwf	7
 15160  07D4  3142               	addfsr 1,2
 15161  07D5  0021               	movlb	1	; select bank1
 15162  07D6  0868               	movf	??_USBCtrlTrfRxService^(0+128),w
 15163  07D7  3FC0               	movwi [0]fsr1
 15164  07D8  0869               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
 15165  07D9  3FC1               	movwi [1]fsr1
 15166                           
 15167                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 15168  07DA  0022               	movlb	2	; select bank2
 15169  07DB  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15170  07DC  0086               	movwf	6
 15171  07DD  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15172  07DE  0087               	movwf	7
 15173  07DF  3004               	movlw	4
 15174  07E0  0081               	movwf	1
 15175                           
 15176                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15177  07E1  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15178  07E2  0086               	movwf	6
 15179  07E3  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15180  07E4  0087               	movwf	7
 15181  07E5  1781               	bsf	1,7
 15182                           
 15183                           ;usb_device.c: 1914: if(outPipes[0].pFunc != (0))
 15184  07E6  0024               	movlb	4	; select bank4
 15185  07E7  0825               	movf	(low ((_outPipes| (0+512)+5)))^0,w
 15186  07E8  0426               	iorwf	((low ((_outPipes| (0+512)+5))+1))^0,w
 15187  07E9  1903               	btfsc	3,2
 15188  07EA  2FF5               	goto	i1l4589
 15189                           
 15190                           ;usb_device.c: 1915: {
 15191                           ;usb_device.c: 1921: outPipes[0].pFunc();
 15192  07EB  3005               	movlw	5
 15193  07EC  3E20               	addlw	(low (_outPipes| (0+512)))& (0+255)
 15194  07ED  0086               	movwf	6
 15195  07EE  3002               	movlw	2	; select bank4/5
 15196  07EF  0087               	movwf	7
 15197  07F0  3F41               	moviw [1]fsr1
 15198  07F1  008A               	movwf	10
 15199  07F2  3F40               	moviw [0]fsr1
 15200  07F3  000A               	callw
 15201  07F4  3187               	pagesel	$
 15202  07F5                     i1l4589:	
 15203                           
 15204                           ;usb_device.c: 1926: }
 15205                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 15206  07F5  0024               	movlb	4	; select bank4
 15207  07F6  13A2               	bcf	(_outPipes^(0+512)+2),7
 15208                           
 15209                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 15210  07F7  0023               	movlb	3	; select bank3
 15211  07F8  0860               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 15212  07F9  1D03               	btfss	3,2
 15213  07FA  0008               	return
 15214                           
 15215                           ;usb_device.c: 1942: {
 15216                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 15217  07FB  3195  25A9         	fcall	_USBCtrlEPAllowStatusStage
 15218  07FD  0008               	return
 15219  07FE                     __end_of_USBCtrlTrfRxService:	
 15220                           
 15221                           	psect	text71
 15222  15A9                     __ptext71:	
 15223 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 15224 ;; Defined at:
 15225 ;;		line 1416 in file "usb/core/usb_device.c"
 15226 ;; Parameters:    Size  Location     Type
 15227 ;;		None
 15228 ;; Auto vars:     Size  Location     Type
 15229 ;;		None
 15230 ;; Return value:  Size  Location     Type
 15231 ;;                  1    wreg      void 
 15232 ;; Registers used:
 15233 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15234 ;; Tracked objects:
 15235 ;;		On entry : 0/0
 15236 ;;		On exit  : 0/0
 15237 ;;		Unchanged: 0/0
 15238 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 15239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15243 ;;Total ram usage:        2 bytes
 15244 ;; Hardware stack levels used:    1
 15245 ;; This function calls:
 15246 ;;		Nothing
 15247 ;; This function is called by:
 15248 ;;		_USBDeviceTasks
 15249 ;;		_USBCtrlEPServiceComplete
 15250 ;;		_USBCtrlTrfRxService
 15251 ;; This function uses a non-reentrant model
 15252 ;;
 15253                           
 15254                           
 15255                           ;psect for function _USBCtrlEPAllowStatusStage
 15256  15A9                     _USBCtrlEPAllowStatusStage:	
 15257                           
 15258                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 15259                           
 15260                           ;incstack = 0
 15261                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 15262  15A9  0024               	movlb	4	; select bank4
 15263  15AA  0851               	movf	_USBStatusStageEnabledFlag1^(0+512),w	;volatile
 15264  15AB  1D03               	btfss	3,2
 15265  15AC  0008               	return
 15266                           
 15267                           ;usb_device.c: 1424: {
 15268                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 15269  15AD  3001               	movlw	1
 15270  15AE  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15271  15AF  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15272  15B0  00D1               	movwf	_USBStatusStageEnabledFlag1^(0+512)	;volatile
 15273                           
 15274                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 15275  15B1  0852               	movf	_USBStatusStageEnabledFlag2^(0+512),w	;volatile
 15276  15B2  1D03               	btfss	3,2
 15277  15B3  0008               	return
 15278                           
 15279                           ;usb_device.c: 1427: {
 15280                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 15281  15B4  3001               	movlw	1
 15282  15B5  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15283  15B6  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15284  15B7  00D2               	movwf	_USBStatusStageEnabledFlag2^(0+512)	;volatile
 15285                           
 15286                           ;usb_device.c: 1432: if(controlTransferState == 2)
 15287  15B8  3002               	movlw	2
 15288  15B9  0023               	movlb	3	; select bank3
 15289  15BA  0668               	xorwf	_controlTransferState^(0+384),w
 15290  15BB  1D03               	btfss	3,2
 15291  15BC  2DCF               	goto	i1l4245
 15292                           
 15293                           ;usb_device.c: 1433: {
 15294                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 15295  15BD  084B               	movf	_pBDTEntryIn^(0+384),w
 15296  15BE  0086               	movwf	6
 15297  15BF  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15298  15C0  0087               	movwf	7
 15299  15C1  3141               	addfsr 1,1
 15300  15C2  0181               	clrf	1
 15301                           
 15302                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 15303  15C3  084B               	movf	_pBDTEntryIn^(0+384),w
 15304  15C4  0086               	movwf	6
 15305  15C5  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15306  15C6  0087               	movwf	7
 15307  15C7  3048               	movlw	72
 15308  15C8  0081               	movwf	1
 15309                           
 15310                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15311  15C9  084B               	movf	_pBDTEntryIn^(0+384),w
 15312  15CA  0086               	movwf	6
 15313  15CB  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15314  15CC  0087               	movwf	7
 15315  15CD  1781               	bsf	1,7
 15316                           
 15317                           ;usb_device.c: 1437: }
 15318  15CE  0008               	return
 15319  15CF                     i1l4245:	
 15320                           
 15321                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 15322  15CF  0368               	decf	_controlTransferState^(0+384),w
 15323  15D0  1D03               	btfss	3,2
 15324  15D1  0008               	return
 15325                           
 15326                           ;usb_device.c: 1439: {
 15327                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 15328  15D2  0024               	movlb	4	; select bank4
 15329  15D3  01C6               	clrf	_BothEP0OutUOWNsSet^(0+512)
 15330                           
 15331                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 15332  15D4  3008               	movlw	8
 15333  15D5  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15334  15D6  0023               	movlb	3	; select bank3
 15335  15D7  0A69               	incf	_pBDTEntryEP0OutCurrent^(0+384),w
 15336  15D8  0086               	movwf	6
 15337  15D9  0187               	clrf	7
 15338  15DA  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15339  15DB  0081               	movwf	1
 15340                           
 15341                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 15342  15DC  30A0               	movlw	160
 15343  15DD  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15344  15DE  3000               	movlw	0
 15345  15DF  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
 15346  15E0  0869               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 15347  15E1  3E02               	addlw	2
 15348  15E2  0086               	movwf	6
 15349  15E3  0187               	clrf	7
 15350  15E4  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15351  15E5  3FC0               	movwi [0]fsr1
 15352  15E6  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
 15353  15E7  3FC1               	movwi [1]fsr1
 15354                           
 15355                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 15356  15E8  3004               	movlw	4
 15357  15E9  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15358  15EA  0869               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 15359  15EB  0086               	movwf	6
 15360  15EC  0187               	clrf	7
 15361  15ED  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15362  15EE  0081               	movwf	1
 15363                           
 15364                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 15365  15EF  0869               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 15366  15F0  0086               	movwf	6
 15367  15F1  0187               	clrf	7
 15368  15F2  1781               	bsf	1,7
 15369                           
 15370                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 15371  15F3  0024               	movlb	4	; select bank4
 15372  15F4  01C6               	clrf	_BothEP0OutUOWNsSet^(0+512)
 15373  15F5  0AC6               	incf	_BothEP0OutUOWNsSet^(0+512),f
 15374                           
 15375                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 15376  15F6  0022               	movlb	2	; select bank2
 15377  15F7  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15378  15F8  3E01               	addlw	1
 15379  15F9  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15380  15FA  3000               	movlw	0
 15381  15FB  3D6F               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15382  15FC  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
 15383  15FD  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15384  15FE  0086               	movwf	6
 15385  15FF  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
 15386  1600  0087               	movwf	7
 15387  1601  3008               	movlw	8
 15388  1602  0081               	movwf	1
 15389                           
 15390                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 15391  1603  30A0               	movlw	160
 15392  1604  00F0               	movwf	??_USBCtrlEPAllowStatusStage
 15393  1605  3000               	movlw	0
 15394  1606  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
 15395  1607  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15396  1608  0086               	movwf	6
 15397  1609  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15398  160A  0087               	movwf	7
 15399  160B  3142               	addfsr 1,2
 15400  160C  0870               	movf	??_USBCtrlEPAllowStatusStage,w
 15401  160D  3FC0               	movwi [0]fsr1
 15402  160E  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
 15403  160F  3FC1               	movwi [1]fsr1
 15404                           
 15405                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 15406  1610  086E               	movf	_pBDTEntryEP0OutNext^(0+256),w
 15407  1611  0086               	movwf	6
 15408  1612  086F               	movf	(_pBDTEntryEP0OutNext+1)^(0+256),w
 15409  1613  0087               	movwf	7
 15410  1614  3080               	movlw	128
 15411  1615  0081               	movwf	1
 15412  1616  0008               	return
 15413  1617                     __end_of_USBCtrlEPAllowStatusStage:	
 15414                           
 15415                           	psect	text72
 15416  1780                     __ptext72:	
 15417 ;; *************** function _USBCtrlTrfInHandler *****************
 15418 ;; Defined at:
 15419 ;;		line 2592 in file "usb/core/usb_device.c"
 15420 ;; Parameters:    Size  Location     Type
 15421 ;;		None
 15422 ;; Auto vars:     Size  Location     Type
 15423 ;;  lastDTS         1   10[BANK1 ] unsigned char 
 15424 ;; Return value:  Size  Location     Type
 15425 ;;                  1    wreg      void 
 15426 ;; Registers used:
 15427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15428 ;; Tracked objects:
 15429 ;;		On entry : 0/0
 15430 ;;		On exit  : 0/0
 15431 ;;		Unchanged: 0/0
 15432 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 15433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15434 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0
 15435 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0
 15436 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0
 15437 ;;Total ram usage:        3 bytes
 15438 ;; Hardware stack levels used:    1
 15439 ;; Hardware stack levels required when called:    2
 15440 ;; This function calls:
 15441 ;;		Absolute function
 15442 ;;		_USART_mySetLineCodingHandler
 15443 ;;		_USBCtrlTrfTxService
 15444 ;; This function is called by:
 15445 ;;		_USBCtrlEPService
 15446 ;; This function uses a non-reentrant model
 15447 ;;
 15448                           
 15449                           
 15450                           ;psect for function _USBCtrlTrfInHandler
 15451  1780                     _USBCtrlTrfInHandler:	
 15452                           
 15453                           ;usb_device.c: 2594: uint8_t lastDTS;
 15454                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 15455                           
 15456                           ;incstack = 0
 15457                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15458  1780  0023               	movlb	3	; select bank3
 15459  1781  084B               	movf	_pBDTEntryIn^(0+384),w
 15460  1782  0086               	movwf	6
 15461  1783  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15462  1784  0087               	movwf	7
 15463  1785  3000               	movlw	0
 15464  1786  1B01               	btfsc	1,6
 15465  1787  3001               	movlw	1
 15466  1788  0021               	movlb	1	; select bank1
 15467  1789  00EA               	movwf	USBCtrlTrfInHandler@lastDTS^(0+128)
 15468                           
 15469                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 15470  178A  3004               	movlw	4
 15471  178B  0023               	movlb	3	; select bank3
 15472  178C  064B               	xorwf	_pBDTEntryIn^(0+384),w
 15473  178D  00CB               	movwf	_pBDTEntryIn^(0+384)
 15474  178E  3000               	movlw	0
 15475  178F  064C               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 15476  1790  00CC               	movwf	(_pBDTEntryIn+1)^(0+384)
 15477                           
 15478                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 15479  1791  3008               	movlw	8
 15480  1792  0661               	xorwf	_USBDeviceState^(0+384),w
 15481  1793  1D03               	btfss	3,2
 15482  1794  2FA5               	goto	i1l4781
 15483                           
 15484                           ;usb_device.c: 2605: {
 15485                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 15486  1795  0021               	movlb	1	; select bank1
 15487  1796  0822               	movf	34,w	;volatile
 15488  1797  397F               	andlw	127
 15489  1798  003D               	movlb	29	; select bank29
 15490  1799  0096               	movwf	22	;volatile
 15491                           
 15492                           ;usb_device.c: 2607: if(UADDR != 0u)
 15493  179A  0816               	movf	22,w	;volatile
 15494  179B  1903               	btfsc	3,2
 15495  179C  2F9F               	goto	i1l4779
 15496                           
 15497                           ;usb_device.c: 2608: {
 15498                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 15499  179D  3010               	movlw	16
 15500  179E  2FA0               	goto	L22
 15501  179F                     i1l4779:	
 15502                           ;usb_device.c: 2610: }
 15503                           
 15504                           
 15505                           ;usb_device.c: 2611: else
 15506                           ;usb_device.c: 2612: {
 15507                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 15508  179F  3004               	movlw	4
 15509  17A0                     L22:	
 15510  17A0  0021               	movlb	1	; select bank1
 15511  17A1  00E8               	movwf	??_USBCtrlTrfInHandler^(0+128)
 15512  17A2  0868               	movf	??_USBCtrlTrfInHandler^(0+128),w
 15513  17A3  0023               	movlb	3	; select bank3
 15514  17A4  00E1               	movwf	_USBDeviceState^(0+384)
 15515  17A5                     i1l4781:	
 15516                           
 15517                           ;usb_device.c: 2614: }
 15518                           ;usb_device.c: 2615: }
 15519                           ;usb_device.c: 2618: if(controlTransferState == 1)
 15520  17A5  0368               	decf	_controlTransferState^(0+384),w
 15521  17A6  1D03               	btfss	3,2
 15522  17A7  2FEA               	goto	i1l570
 15523                           
 15524                           ;usb_device.c: 2619: {
 15525                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
 15526  17A8  30A8               	movlw	168
 15527  17A9  0021               	movlb	1	; select bank1
 15528  17AA  00E8               	movwf	??_USBCtrlTrfInHandler^(0+128)
 15529  17AB  3000               	movlw	0
 15530  17AC  00E9               	movwf	(??_USBCtrlTrfInHandler^(0+128)+1)
 15531  17AD  0023               	movlb	3	; select bank3
 15532  17AE  084B               	movf	_pBDTEntryIn^(0+384),w
 15533  17AF  0086               	movwf	6
 15534  17B0  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15535  17B1  0087               	movwf	7
 15536  17B2  3142               	addfsr 1,2
 15537  17B3  0021               	movlb	1	; select bank1
 15538  17B4  0868               	movf	??_USBCtrlTrfInHandler^(0+128),w
 15539  17B5  3FC0               	movwi [0]fsr1
 15540  17B6  0869               	movf	(??_USBCtrlTrfInHandler^(0+128)+1),w
 15541  17B7  3FC1               	movwi [1]fsr1
 15542                           
 15543                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 15544  17B8  3188  2004  3197   	fcall	_USBCtrlTrfTxService
 15545                           
 15546                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 15547  17BB  3002               	movlw	2
 15548  17BC  0023               	movlb	3	; select bank3
 15549  17BD  066A               	xorwf	_shortPacketStatus^(0+384),w
 15550  17BE  1D03               	btfss	3,2
 15551  17BF  2FCC               	goto	i1l4791
 15552                           
 15553                           ;usb_device.c: 2628: {
 15554                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 15555  17C0  084B               	movf	_pBDTEntryIn^(0+384),w
 15556  17C1  0086               	movwf	6
 15557  17C2  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15558  17C3  0087               	movwf	7
 15559  17C4  3004               	movlw	4
 15560  17C5  0081               	movwf	1
 15561                           
 15562                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15563  17C6  084B               	movf	_pBDTEntryIn^(0+384),w
 15564  17C7  0086               	movwf	6
 15565  17C8  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15566  17C9  0087               	movwf	7
 15567  17CA  1781               	bsf	1,7
 15568                           
 15569                           ;usb_device.c: 2633: }
 15570  17CB  0008               	return
 15571  17CC                     i1l4791:	
 15572                           
 15573                           ;usb_device.c: 2634: else
 15574                           ;usb_device.c: 2635: {
 15575                           ;usb_device.c: 2636: if(lastDTS == 0)
 15576  17CC  0021               	movlb	1	; select bank1
 15577  17CD  086A               	movf	USBCtrlTrfInHandler@lastDTS^(0+128),w
 15578  17CE  1D03               	btfss	3,2
 15579  17CF  2FDD               	goto	i1l4795
 15580                           
 15581                           ;usb_device.c: 2637: {
 15582                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 15583  17D0  0023               	movlb	3	; select bank3
 15584  17D1  084B               	movf	_pBDTEntryIn^(0+384),w
 15585  17D2  0086               	movwf	6
 15586  17D3  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15587  17D4  0087               	movwf	7
 15588  17D5  3048               	movlw	72
 15589  17D6  0081               	movwf	1
 15590                           
 15591                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15592  17D7  084B               	movf	_pBDTEntryIn^(0+384),w
 15593  17D8  0086               	movwf	6
 15594  17D9  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15595  17DA  0087               	movwf	7
 15596  17DB  1781               	bsf	1,7
 15597                           
 15598                           ;usb_device.c: 2640: }
 15599  17DC  0008               	return
 15600  17DD                     i1l4795:	
 15601                           
 15602                           ;usb_device.c: 2641: else
 15603                           ;usb_device.c: 2642: {
 15604                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 15605  17DD  0023               	movlb	3	; select bank3
 15606  17DE  084B               	movf	_pBDTEntryIn^(0+384),w
 15607  17DF  0086               	movwf	6
 15608  17E0  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15609  17E1  0087               	movwf	7
 15610  17E2  3008               	movlw	8
 15611  17E3  0081               	movwf	1
 15612                           
 15613                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15614  17E4  084B               	movf	_pBDTEntryIn^(0+384),w
 15615  17E5  0086               	movwf	6
 15616  17E6  084C               	movf	(_pBDTEntryIn+1)^(0+384),w
 15617  17E7  0087               	movwf	7
 15618  17E8  1781               	bsf	1,7
 15619                           
 15620                           ;usb_device.c: 2645: }
 15621                           ;usb_device.c: 2646: }
 15622                           ;usb_device.c: 2647: }
 15623  17E9  0008               	return
 15624  17EA                     i1l570:	
 15625                           
 15626                           ;usb_device.c: 2648: else
 15627                           ;usb_device.c: 2649: {
 15628                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 15629  17EA  0024               	movlb	4	; select bank4
 15630  17EB  1FA2               	btfss	(_outPipes^(0+512)+2),7
 15631  17EC  2FFD               	goto	i1l4803
 15632                           
 15633                           ;usb_device.c: 2654: {
 15634                           ;usb_device.c: 2655: if(outPipes[0].pFunc != (0))
 15635  17ED  0825               	movf	(low ((_outPipes| (0+512)+5)))^0,w
 15636  17EE  0426               	iorwf	((low ((_outPipes| (0+512)+5))+1))^0,w
 15637  17EF  1903               	btfsc	3,2
 15638  17F0  2FFB               	goto	i1l4801
 15639                           
 15640                           ;usb_device.c: 2656: {
 15641                           ;usb_device.c: 2657: outPipes[0].pFunc();
 15642  17F1  3005               	movlw	5
 15643  17F2  3E20               	addlw	(low (_outPipes| (0+512)))& (0+255)
 15644  17F3  0086               	movwf	6
 15645  17F4  3002               	movlw	2	; select bank4/5
 15646  17F5  0087               	movwf	7
 15647  17F6  3F41               	moviw [1]fsr1
 15648  17F7  008A               	movwf	10
 15649  17F8  3F40               	moviw [0]fsr1
 15650  17F9  000A               	callw
 15651  17FA  3197               	pagesel	$
 15652  17FB                     i1l4801:	
 15653                           
 15654                           ;usb_device.c: 2658: }
 15655                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 15656  17FB  0024               	movlb	4	; select bank4
 15657  17FC  13A2               	bcf	(_outPipes^(0+512)+2),7
 15658  17FD                     i1l4803:	
 15659                           
 15660                           ;usb_device.c: 2660: }
 15661                           ;usb_device.c: 2662: controlTransferState = 0;
 15662  17FD  0023               	movlb	3	; select bank3
 15663  17FE  01E8               	clrf	_controlTransferState^(0+384)
 15664  17FF  0008               	return
 15665  1800                     __end_of_USBCtrlTrfInHandler:	
 15666                           
 15667                           	psect	text73
 15668  0804                     __ptext73:	
 15669 ;; *************** function _USBCtrlTrfTxService *****************
 15670 ;; Defined at:
 15671 ;;		line 1771 in file "usb/core/usb_device.c"
 15672 ;; Parameters:    Size  Location     Type
 15673 ;;		None
 15674 ;; Auto vars:     Size  Location     Type
 15675 ;;  byteToSend      1    2[COMMON] unsigned char 
 15676 ;; Return value:  Size  Location     Type
 15677 ;;                  1    wreg      void 
 15678 ;; Registers used:
 15679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 15680 ;; Tracked objects:
 15681 ;;		On entry : 0/0
 15682 ;;		On exit  : 0/0
 15683 ;;		Unchanged: 0/0
 15684 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 15685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15687 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15688 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15689 ;;Total ram usage:        3 bytes
 15690 ;; Hardware stack levels used:    1
 15691 ;; This function calls:
 15692 ;;		Nothing
 15693 ;; This function is called by:
 15694 ;;		_USBCtrlEPAllowDataStage
 15695 ;;		_USBCtrlTrfInHandler
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           
 15700                           ;psect for function _USBCtrlTrfTxService
 15701  0804                     _USBCtrlTrfTxService:	
 15702                           
 15703                           ;usb_device.c: 1773: uint8_t byteToSend;
 15704                           ;usb_device.c: 1777: byteToSend = 8;
 15705                           
 15706                           ;incstack = 0
 15707                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 15708  0804  3008               	movlw	8
 15709  0805  00F0               	movwf	??_USBCtrlTrfTxService
 15710  0806  0870               	movf	??_USBCtrlTrfTxService,w
 15711  0807  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 15712                           
 15713                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 15714  0808  3000               	movlw	0
 15715  0809  0023               	movlb	3	; select bank3
 15716  080A  0259               	subwf	((_inPipes+1)^(0+384)+3),w
 15717  080B  3008               	movlw	8
 15718  080C  1903               	skipnz
 15719  080D  0258               	subwf	(_inPipes^(0+384)+3),w
 15720  080E  1803               	skipnc
 15721  080F  2821               	goto	i1l470
 15722                           
 15723                           ;usb_device.c: 1779: {
 15724                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 15725  0810  0858               	movf	(_inPipes^(0+384)+3),w
 15726  0811  00F0               	movwf	??_USBCtrlTrfTxService
 15727  0812  0870               	movf	??_USBCtrlTrfTxService,w
 15728  0813  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 15729                           
 15730                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 15731  0814  086A               	movf	_shortPacketStatus^(0+384),w
 15732  0815  1D03               	btfss	3,2
 15733  0816  281A               	goto	i1l4165
 15734                           
 15735                           ;usb_device.c: 1788: {
 15736                           ;usb_device.c: 1789: shortPacketStatus = 1;
 15737  0817  01EA               	clrf	_shortPacketStatus^(0+384)
 15738  0818  0AEA               	incf	_shortPacketStatus^(0+384),f
 15739                           
 15740                           ;usb_device.c: 1790: }
 15741  0819  2821               	goto	i1l470
 15742  081A                     i1l4165:	
 15743                           
 15744                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 15745  081A  036A               	decf	_shortPacketStatus^(0+384),w
 15746  081B  1D03               	btfss	3,2
 15747  081C  2821               	goto	i1l470
 15748                           
 15749                           ;usb_device.c: 1792: {
 15750                           ;usb_device.c: 1793: shortPacketStatus = 2;
 15751  081D  3002               	movlw	2
 15752  081E  00F0               	movwf	??_USBCtrlTrfTxService
 15753  081F  0870               	movf	??_USBCtrlTrfTxService,w
 15754  0820  00EA               	movwf	_shortPacketStatus^(0+384)
 15755  0821                     i1l470:	
 15756                           
 15757                           ;usb_device.c: 1794: }
 15758                           ;usb_device.c: 1795: }
 15759                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 15760  0821  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 15761  0822  00F0               	movwf	??_USBCtrlTrfTxService
 15762  0823  01F1               	clrf	??_USBCtrlTrfTxService+1
 15763  0824  0870               	movf	??_USBCtrlTrfTxService,w
 15764  0825  02D8               	subwf	(_inPipes^(0+384)+3),f
 15765  0826  0871               	movf	??_USBCtrlTrfTxService+1,w
 15766  0827  3BD9               	subwfb	((_inPipes+1)^(0+384)+3),f
 15767                           
 15768                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 15769  0828  084B               	movf	_pBDTEntryIn^(0+384),w
 15770  0829  3E01               	addlw	1
 15771  082A  00F0               	movwf	??_USBCtrlTrfTxService
 15772  082B  3000               	movlw	0
 15773  082C  3D4C               	addwfc	(_pBDTEntryIn+1)^(0+384),w
 15774  082D  00F1               	movwf	??_USBCtrlTrfTxService+1
 15775  082E  0870               	movf	??_USBCtrlTrfTxService,w
 15776  082F  0086               	movwf	6
 15777  0830  0871               	movf	??_USBCtrlTrfTxService+1,w
 15778  0831  0087               	movwf	7
 15779  0832  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 15780  0833  0081               	movwf	1
 15781                           
 15782                           ;usb_device.c: 1808: pDst = ( uint8_t*)CtrlTrfData;
 15783  0834  30A8               	movlw	168
 15784  0835  00F0               	movwf	??_USBCtrlTrfTxService
 15785  0836  0870               	movf	??_USBCtrlTrfTxService,w
 15786  0837  0024               	movlb	4	; select bank4
 15787  0838  00DA               	movwf	_pDst^(0+512)
 15788                           
 15789                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 15790  0839  0023               	movlb	3	; select bank3
 15791  083A  1C57               	btfss	(_inPipes^(0+384)+2),0
 15792  083B  2856               	goto	i1l4185
 15793  083C  2873               	goto	i1l4195
 15794  083D                     i1l4177:	
 15795                           ;usb_device.c: 1810: {
 15796                           ;usb_device.c: 1811: while(byteToSend)
 15797                           
 15798                           
 15799                           ;usb_device.c: 1812: {
 15800                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 15801  083D  0023               	movlb	3	; select bank3
 15802  083E  0855               	movf	_inPipes^(0+384),w
 15803  083F  0084               	movwf	4
 15804  0840  0856               	movf	(_inPipes+1)^(0+384),w
 15805  0841  0085               	movwf	5
 15806  0842  0800               	movf	0,w	;code access
 15807  0843  00F0               	movwf	??_USBCtrlTrfTxService
 15808  0844  0024               	movlb	4	; select bank4
 15809  0845  085A               	movf	_pDst^(0+512),w
 15810  0846  0086               	movwf	6
 15811  0847  0187               	clrf	7
 15812  0848  0870               	movf	??_USBCtrlTrfTxService,w
 15813  0849  0081               	movwf	1
 15814  084A  3001               	movlw	1
 15815  084B  0023               	movlb	3	; select bank3
 15816  084C  07D5               	addwf	_inPipes^(0+384),f
 15817  084D  3000               	movlw	0
 15818  084E  3DD6               	addwfc	(_inPipes+1)^(0+384),f
 15819  084F  3001               	movlw	1
 15820  0850  00F0               	movwf	??_USBCtrlTrfTxService
 15821  0851  0870               	movf	??_USBCtrlTrfTxService,w
 15822  0852  0024               	movlb	4	; select bank4
 15823  0853  07DA               	addwf	_pDst^(0+512),f
 15824                           
 15825                           ;usb_device.c: 1814: byteToSend--;
 15826  0854  3001               	movlw	1
 15827  0855  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 15828  0856                     i1l4185:	
 15829  0856  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 15830  0857  1903               	btfsc	3,2
 15831  0858  0008               	return
 15832  0859  283D               	goto	i1l4177
 15833  085A                     i1l4187:	
 15834                           ;usb_device.c: 1817: else
 15835                           ;usb_device.c: 1818: {
 15836                           ;usb_device.c: 1819: while(byteToSend)
 15837                           
 15838                           ;usb_device.c: 1815: }
 15839                           ;usb_device.c: 1816: }
 15840                           
 15841                           
 15842                           ;usb_device.c: 1820: {
 15843                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 15844  085A  0023               	movlb	3	; select bank3
 15845  085B  0855               	movf	_inPipes^(0+384),w
 15846  085C  0084               	movwf	4
 15847  085D  0856               	movf	(_inPipes+1)^(0+384),w
 15848  085E  0085               	movwf	5
 15849  085F  0800               	movf	0,w	;code access
 15850  0860  00F0               	movwf	??_USBCtrlTrfTxService
 15851  0861  0024               	movlb	4	; select bank4
 15852  0862  085A               	movf	_pDst^(0+512),w
 15853  0863  0086               	movwf	6
 15854  0864  0187               	clrf	7
 15855  0865  0870               	movf	??_USBCtrlTrfTxService,w
 15856  0866  0081               	movwf	1
 15857  0867  3001               	movlw	1
 15858  0868  0023               	movlb	3	; select bank3
 15859  0869  07D5               	addwf	_inPipes^(0+384),f
 15860  086A  3000               	movlw	0
 15861  086B  3DD6               	addwfc	(_inPipes+1)^(0+384),f
 15862  086C  3001               	movlw	1
 15863  086D  00F0               	movwf	??_USBCtrlTrfTxService
 15864  086E  0870               	movf	??_USBCtrlTrfTxService,w
 15865  086F  0024               	movlb	4	; select bank4
 15866  0870  07DA               	addwf	_pDst^(0+512),f
 15867                           
 15868                           ;usb_device.c: 1822: byteToSend--;
 15869  0871  3001               	movlw	1
 15870  0872  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 15871  0873                     i1l4195:	
 15872  0873  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 15873  0874  1903               	btfsc	3,2
 15874  0875  0008               	return
 15875  0876  285A               	goto	i1l4187
 15876  0877                     __end_of_USBCtrlTrfTxService:	
 15877                           
 15878                           	psect	text74
 15879  114E                     __ptext74:	
 15880 ;; *************** function _USART_mySetLineCodingHandler *****************
 15881 ;; Defined at:
 15882 ;;		line 92 in file "app_uart_usb_utils.c"
 15883 ;; Parameters:    Size  Location     Type
 15884 ;;		None
 15885 ;; Auto vars:     Size  Location     Type
 15886 ;;  dwBaud          4    4[BANK1 ] unsigned long 
 15887 ;; Return value:  Size  Location     Type
 15888 ;;                  1    wreg      void 
 15889 ;; Registers used:
 15890 ;;		wreg, status,2, status,0, pclath, cstack
 15891 ;; Tracked objects:
 15892 ;;		On entry : 0/0
 15893 ;;		On exit  : 0/0
 15894 ;;		Unchanged: 0/0
 15895 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 15896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 15897 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0
 15898 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0
 15899 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0
 15900 ;;Total ram usage:        8 bytes
 15901 ;; Hardware stack levels used:    1
 15902 ;; Hardware stack levels required when called:    1
 15903 ;; This function calls:
 15904 ;;		i1___lldiv
 15905 ;; This function is called by:
 15906 ;;		_USBCheckCDCRequest2
 15907 ;;		_USBCtrlTrfRxService
 15908 ;;		_USBCtrlTrfInHandler
 15909 ;; This function uses a non-reentrant model
 15910 ;;
 15911                           
 15912                           
 15913                           ;psect for function _USART_mySetLineCodingHandler
 15914  114E                     _USART_mySetLineCodingHandler:	
 15915                           
 15916                           ;app_uart_usb_utils.c: 116: {line_coding2.dwDTERate=cdc_notice2.GetLineCoding.dwDTERate;
      +                          };
 15917                           
 15918                           ;incstack = 0
 15919                           ; Regs used in _USART_mySetLineCodingHandler: [wreg+status,2+status,0+pclath+cstack]
 15920  114E  0025               	movlb	5	; select bank5
 15921  114F  084D               	movf	(_cdc_notice2+3)^(0+640),w
 15922  1150  00E7               	movwf	(_line_coding2+3)^(0+640)
 15923  1151  084C               	movf	(_cdc_notice2+2)^(0+640),w
 15924  1152  00E6               	movwf	(_line_coding2+2)^(0+640)
 15925  1153  084B               	movf	(_cdc_notice2+1)^(0+640),w
 15926  1154  00E5               	movwf	(_line_coding2+1)^(0+640)
 15927  1155  084A               	movf	_cdc_notice2^(0+640),w
 15928  1156  00E4               	movwf	_line_coding2^(0+640)
 15929                           
 15930                           ;app_uart_usb_utils.c: 118: uint32_t dwBaud;
 15931                           ;app_uart_usb_utils.c: 119: dwBaud = ((48000000/4) / line_coding2.dwDTERate) - 1;
 15932  1157  0867               	movf	(_line_coding2+3)^(0+640),w
 15933  1158  00F3               	movwf	i1___lldiv@divisor+3
 15934  1159  0866               	movf	(_line_coding2+2)^(0+640),w
 15935  115A  00F2               	movwf	i1___lldiv@divisor+2
 15936  115B  0865               	movf	(_line_coding2+1)^(0+640),w
 15937  115C  00F1               	movwf	i1___lldiv@divisor+1
 15938  115D  0864               	movf	_line_coding2^(0+640),w
 15939  115E  00F0               	movwf	i1___lldiv@divisor
 15940  115F  3000               	movlw	0
 15941  1160  00F7               	movwf	i1___lldiv@dividend+3
 15942  1161  30B7               	movlw	183
 15943  1162  00F6               	movwf	i1___lldiv@dividend+2
 15944  1163  301B               	movlw	27
 15945  1164  00F5               	movwf	i1___lldiv@dividend+1
 15946  1165  3000               	movlw	0
 15947  1166  00F4               	movwf	i1___lldiv@dividend
 15948  1167  3191  21DF  3191   	fcall	i1___lldiv
 15949  116A  30FF               	movlw	255
 15950  116B  0770               	addwf	?i1___lldiv,w
 15951  116C  0021               	movlb	1	; select bank1
 15952  116D  00E4               	movwf	USART_mySetLineCodingHandler@dwBaud^(0+128)
 15953  116E  30FF               	movlw	255
 15954  116F  3D71               	addwfc	?i1___lldiv+1,w
 15955  1170  00E5               	movwf	(USART_mySetLineCodingHandler@dwBaud+1)^(0+128)
 15956  1171  30FF               	movlw	255
 15957  1172  3D72               	addwfc	?i1___lldiv+2,w
 15958  1173  00E6               	movwf	(USART_mySetLineCodingHandler@dwBaud+2)^(0+128)
 15959  1174  30FF               	movlw	255
 15960  1175  3D73               	addwfc	?i1___lldiv+3,w
 15961  1176  00E7               	movwf	(USART_mySetLineCodingHandler@dwBaud+3)^(0+128)
 15962                           
 15963                           ;app_uart_usb_utils.c: 120: SPBRG = (uint8_t) dwBaud;
 15964  1177  0864               	movf	USART_mySetLineCodingHandler@dwBaud^(0+128),w
 15965  1178  00E0               	movwf	??_USART_mySetLineCodingHandler^(0+128)
 15966  1179  01E1               	clrf	(??_USART_mySetLineCodingHandler^(0+128)+1)
 15967  117A  0860               	movf	??_USART_mySetLineCodingHandler^(0+128),w
 15968  117B  0023               	movlb	3	; select bank3
 15969  117C  009B               	movwf	27	;volatile
 15970  117D  0021               	movlb	1	; select bank1
 15971  117E  0861               	movf	(??_USART_mySetLineCodingHandler+1)^(0+128),w
 15972  117F  0023               	movlb	3	; select bank3
 15973  1180  009C               	movwf	28	;volatile
 15974                           
 15975                           ;app_uart_usb_utils.c: 121: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 15976  1181  0021               	movlb	1	; select bank1
 15977  1182  0864               	movf	USART_mySetLineCodingHandler@dwBaud^(0+128),w
 15978  1183  00E0               	movwf	??_USART_mySetLineCodingHandler^(0+128)
 15979  1184  0865               	movf	(USART_mySetLineCodingHandler@dwBaud+1)^(0+128),w
 15980  1185  00E1               	movwf	(??_USART_mySetLineCodingHandler^(0+128)+1)
 15981  1186  0866               	movf	(USART_mySetLineCodingHandler@dwBaud+2)^(0+128),w
 15982  1187  00E2               	movwf	(??_USART_mySetLineCodingHandler^(0+128)+2)
 15983  1188  0867               	movf	(USART_mySetLineCodingHandler@dwBaud+3)^(0+128),w
 15984  1189  00E3               	movwf	(??_USART_mySetLineCodingHandler^(0+128)+3)
 15985  118A  3008               	movlw	8
 15986  118B                     u386_25:	
 15987  118B  36E3               	lsrf	(??_USART_mySetLineCodingHandler^(0+128)+3),f
 15988  118C  0CE2               	rrf	(??_USART_mySetLineCodingHandler^(0+128)+2),f
 15989  118D  0CE1               	rrf	(??_USART_mySetLineCodingHandler^(0+128)+1),f
 15990  118E  0CE0               	rrf	??_USART_mySetLineCodingHandler^(0+128),f
 15991  118F  0B89               	decfsz	9,f
 15992  1190  298B               	goto	u386_25
 15993  1191  0860               	movf	??_USART_mySetLineCodingHandler^(0+128),w
 15994  1192  0023               	movlb	3	; select bank3
 15995  1193  009C               	movwf	28	;volatile
 15996  1194  0008               	return
 15997  1195                     __end_of_USART_mySetLineCodingHandler:	
 15998                           
 15999                           	psect	text75
 16000  11DF                     __ptext75:	
 16001 ;; *************** function i1___lldiv *****************
 16002 ;; Defined at:
 16003 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
 16004 ;; Parameters:    Size  Location     Type
 16005 ;;  divisor         4    0[COMMON] unsigned long 
 16006 ;;  dividend        4    4[COMMON] unsigned long 
 16007 ;; Auto vars:     Size  Location     Type
 16008 ;;  __lldiv         4    9[COMMON] unsigned long 
 16009 ;;  __lldiv         1   13[COMMON] unsigned char 
 16010 ;; Return value:  Size  Location     Type
 16011 ;;                  4    0[COMMON] unsigned long 
 16012 ;; Registers used:
 16013 ;;		wreg, status,2, status,0
 16014 ;; Tracked objects:
 16015 ;;		On entry : 0/0
 16016 ;;		On exit  : 0/0
 16017 ;;		Unchanged: 0/0
 16018 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 16019 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16020 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16022 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16023 ;;Total ram usage:       14 bytes
 16024 ;; Hardware stack levels used:    1
 16025 ;; This function calls:
 16026 ;;		Nothing
 16027 ;; This function is called by:
 16028 ;;		_USART_mySetLineCodingHandler
 16029 ;; This function uses a non-reentrant model
 16030 ;;
 16031                           
 16032                           
 16033                           ;psect for function i1___lldiv
 16034  11DF                     i1___lldiv:	
 16035                           
 16036                           ;incstack = 0
 16037                           ; Regs used in i1___lldiv: [wreg+status,2+status,0]
 16038  11DF  3000               	movlw	0
 16039  11E0  00FC               	movwf	i1___lldiv@quotient+3
 16040  11E1  3000               	movlw	0
 16041  11E2  00FB               	movwf	i1___lldiv@quotient+2
 16042  11E3  3000               	movlw	0
 16043  11E4  00FA               	movwf	i1___lldiv@quotient+1
 16044  11E5  3000               	movlw	0
 16045  11E6  00F9               	movwf	i1___lldiv@quotient
 16046  11E7  0873               	movf	i1___lldiv@divisor+3,w
 16047  11E8  0472               	iorwf	i1___lldiv@divisor+2,w
 16048  11E9  0471               	iorwf	i1___lldiv@divisor+1,w
 16049  11EA  0470               	iorwf	i1___lldiv@divisor,w
 16050  11EB  1903               	skipnz
 16051  11EC  2A28               	goto	i1l4217
 16052  11ED  01FD               	clrf	i1___lldiv@counter
 16053  11EE  0AFD               	incf	i1___lldiv@counter,f
 16054  11EF                     i1l4203:	
 16055  11EF  1BF3               	btfsc	i1___lldiv@divisor+3,7
 16056  11F0  29FD               	goto	i1l4205
 16057  11F1  3001               	movlw	1
 16058  11F2                     u342_25:	
 16059  11F2  35F0               	lslf	i1___lldiv@divisor,f
 16060  11F3  0DF1               	rlf	i1___lldiv@divisor+1,f
 16061  11F4  0DF2               	rlf	i1___lldiv@divisor+2,f
 16062  11F5  0DF3               	rlf	i1___lldiv@divisor+3,f
 16063  11F6  0B89               	decfsz	9,f
 16064  11F7  29F2               	goto	u342_25
 16065  11F8  3001               	movlw	1
 16066  11F9  00F8               	movwf	??i1___lldiv
 16067  11FA  0878               	movf	??i1___lldiv,w
 16068  11FB  07FD               	addwf	i1___lldiv@counter,f
 16069  11FC  29EF               	goto	i1l4203
 16070  11FD                     i1l4205:	
 16071  11FD  3001               	movlw	1
 16072  11FE                     u344_25:	
 16073  11FE  35F9               	lslf	i1___lldiv@quotient,f
 16074  11FF  0DFA               	rlf	i1___lldiv@quotient+1,f
 16075  1200  0DFB               	rlf	i1___lldiv@quotient+2,f
 16076  1201  0DFC               	rlf	i1___lldiv@quotient+3,f
 16077  1202  0B89               	decfsz	9,f
 16078  1203  29FE               	goto	u344_25
 16079  1204  0873               	movf	i1___lldiv@divisor+3,w
 16080  1205  0277               	subwf	i1___lldiv@dividend+3,w
 16081  1206  1D03               	skipz
 16082  1207  2A12               	goto	u345_25
 16083  1208  0872               	movf	i1___lldiv@divisor+2,w
 16084  1209  0276               	subwf	i1___lldiv@dividend+2,w
 16085  120A  1D03               	skipz
 16086  120B  2A12               	goto	u345_25
 16087  120C  0871               	movf	i1___lldiv@divisor+1,w
 16088  120D  0275               	subwf	i1___lldiv@dividend+1,w
 16089  120E  1D03               	skipz
 16090  120F  2A12               	goto	u345_25
 16091  1210  0870               	movf	i1___lldiv@divisor,w
 16092  1211  0274               	subwf	i1___lldiv@dividend,w
 16093  1212                     u345_25:	
 16094  1212  1C03               	skipc
 16095  1213  2A1D               	goto	i1l4213
 16096  1214  0870               	movf	i1___lldiv@divisor,w
 16097  1215  02F4               	subwf	i1___lldiv@dividend,f
 16098  1216  0871               	movf	i1___lldiv@divisor+1,w
 16099  1217  3BF5               	subwfb	i1___lldiv@dividend+1,f
 16100  1218  0872               	movf	i1___lldiv@divisor+2,w
 16101  1219  3BF6               	subwfb	i1___lldiv@dividend+2,f
 16102  121A  0873               	movf	i1___lldiv@divisor+3,w
 16103  121B  3BF7               	subwfb	i1___lldiv@dividend+3,f
 16104  121C  1479               	bsf	i1___lldiv@quotient,0
 16105  121D                     i1l4213:	
 16106  121D  3001               	movlw	1
 16107  121E                     u346_25:	
 16108  121E  36F3               	lsrf	i1___lldiv@divisor+3,f
 16109  121F  0CF2               	rrf	i1___lldiv@divisor+2,f
 16110  1220  0CF1               	rrf	i1___lldiv@divisor+1,f
 16111  1221  0CF0               	rrf	i1___lldiv@divisor,f
 16112  1222  0B89               	decfsz	9,f
 16113  1223  2A1E               	goto	u346_25
 16114  1224  3001               	movlw	1
 16115  1225  02FD               	subwf	i1___lldiv@counter,f
 16116  1226  1D03               	btfss	3,2
 16117  1227  29FD               	goto	i1l4205
 16118  1228                     i1l4217:	
 16119  1228  087C               	movf	i1___lldiv@quotient+3,w
 16120  1229  00F3               	movwf	?i1___lldiv+3
 16121  122A  087B               	movf	i1___lldiv@quotient+2,w
 16122  122B  00F2               	movwf	?i1___lldiv+2
 16123  122C  087A               	movf	i1___lldiv@quotient+1,w
 16124  122D  00F1               	movwf	?i1___lldiv+1
 16125  122E  0879               	movf	i1___lldiv@quotient,w
 16126  122F  00F0               	movwf	?i1___lldiv
 16127  1230  0008               	return
 16128  1231                     __end_ofi1___lldiv:	
 16129                           
 16130                           	psect	text76
 16131  1DD6                     __ptext76:	
 16132 ;; *************** function _ADC_SelectChannel *****************
 16133 ;; Defined at:
 16134 ;;		line 87 in file "mcc_generated_files/adc.c"
 16135 ;; Parameters:    Size  Location     Type
 16136 ;;  channel         1    wreg     enum E2468
 16137 ;; Auto vars:     Size  Location     Type
 16138 ;;  channel         1    1[COMMON] enum E2468
 16139 ;; Return value:  Size  Location     Type
 16140 ;;                  1    wreg      void 
 16141 ;; Registers used:
 16142 ;;		wreg, status,2, status,0
 16143 ;; Tracked objects:
 16144 ;;		On entry : 0/0
 16145 ;;		On exit  : 0/0
 16146 ;;		Unchanged: 0/0
 16147 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 16148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16151 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16152 ;;Total ram usage:        2 bytes
 16153 ;; Hardware stack levels used:    1
 16154 ;; This function calls:
 16155 ;;		Nothing
 16156 ;; This function is called by:
 16157 ;;		_INTERRUPT_InterruptManager
 16158 ;; This function uses a non-reentrant model
 16159 ;;
 16160                           
 16161                           
 16162                           ;psect for function _ADC_SelectChannel
 16163  1DD6                     _ADC_SelectChannel:	
 16164                           
 16165                           ;incstack = 0
 16166                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 16167                           ;ADC_SelectChannel@channel stored from wreg
 16168  1DD6  00F1               	movwf	ADC_SelectChannel@channel
 16169                           
 16170                           ;adc.c: 90: ADCON0bits.CHS = channel;
 16171  1DD7  0871               	movf	ADC_SelectChannel@channel,w
 16172  1DD8  00F0               	movwf	??_ADC_SelectChannel
 16173  1DD9  0DF0               	rlf	??_ADC_SelectChannel,f
 16174  1DDA  0DF0               	rlf	??_ADC_SelectChannel,f
 16175  1DDB  0021               	movlb	1	; select bank1
 16176  1DDC  081D               	movf	29,w	;volatile
 16177  1DDD  0670               	xorwf	??_ADC_SelectChannel,w
 16178  1DDE  3983               	andlw	-125
 16179  1DDF  0670               	xorwf	??_ADC_SelectChannel,w
 16180  1DE0  009D               	movwf	29	;volatile
 16181                           
 16182                           ;adc.c: 92: ADCON0bits.ADON = 1;
 16183  1DE1  141D               	bsf	29,0	;volatile
 16184  1DE2  0008               	return
 16185  1DE3                     __end_of_ADC_SelectChannel:	
 16186                           
 16187                           	psect	text77
 16188  1D93                     __ptext77:	
 16189 ;; *************** function _ADC_IsConversionDone *****************
 16190 ;; Defined at:
 16191 ;;		line 102 in file "mcc_generated_files/adc.c"
 16192 ;; Parameters:    Size  Location     Type
 16193 ;;		None
 16194 ;; Auto vars:     Size  Location     Type
 16195 ;;		None
 16196 ;; Return value:  Size  Location     Type
 16197 ;;                  1    wreg      unsigned char 
 16198 ;; Registers used:
 16199 ;;		wreg, status,0
 16200 ;; Tracked objects:
 16201 ;;		On entry : 0/0
 16202 ;;		On exit  : 0/0
 16203 ;;		Unchanged: 0/0
 16204 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 16205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16209 ;;Total ram usage:        0 bytes
 16210 ;; Hardware stack levels used:    1
 16211 ;; This function calls:
 16212 ;;		Nothing
 16213 ;; This function is called by:
 16214 ;;		_INTERRUPT_InterruptManager
 16215 ;; This function uses a non-reentrant model
 16216 ;;
 16217                           
 16218                           
 16219                           ;psect for function _ADC_IsConversionDone
 16220  1D93                     _ADC_IsConversionDone:	
 16221                           
 16222                           ;adc.c: 105: return (!ADCON0bits.GO_nDONE);
 16223                           
 16224                           ;incstack = 0
 16225                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
 16226  1D93  1003               	clrc
 16227  1D94  0021               	movlb	1	; select bank1
 16228  1D95  1C9D               	btfss	29,1	;volatile
 16229  1D96  1403               	setc
 16230  1D97  3000               	movlw	0
 16231  1D98  3D09               	addwfc	9,w
 16232  1D99  0008               	return
 16233  1D9A                     __end_of_ADC_IsConversionDone:	
 16234                           
 16235                           	psect	text78
 16236  1D81                     __ptext78:	
 16237 ;; *************** function _ADC_GetConversionResult *****************
 16238 ;; Defined at:
 16239 ;;		line 108 in file "mcc_generated_files/adc.c"
 16240 ;; Parameters:    Size  Location     Type
 16241 ;;		None
 16242 ;; Auto vars:     Size  Location     Type
 16243 ;;		None
 16244 ;; Return value:  Size  Location     Type
 16245 ;;                  2    0[COMMON] unsigned int 
 16246 ;; Registers used:
 16247 ;;		wreg
 16248 ;; Tracked objects:
 16249 ;;		On entry : 0/0
 16250 ;;		On exit  : 0/0
 16251 ;;		Unchanged: 0/0
 16252 ;; Data sizes:     COMMON   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK1
      +2
 16253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0
 16257 ;;Total ram usage:        2 bytes
 16258 ;; Hardware stack levels used:    1
 16259 ;; This function calls:
 16260 ;;		Nothing
 16261 ;; This function is called by:
 16262 ;;		_INTERRUPT_InterruptManager
 16263 ;; This function uses a non-reentrant model
 16264 ;;
 16265                           
 16266                           
 16267                           ;psect for function _ADC_GetConversionResult
 16268  1D81                     _ADC_GetConversionResult:	
 16269                           
 16270                           ;adc.c: 111: return ((ADRESH << 8) + ADRESL);
 16271                           
 16272                           ;incstack = 0
 16273                           ; Regs used in _ADC_GetConversionResult: [wreg]
 16274  1D81  0021               	movlb	1	; select bank1
 16275  1D82  081C               	movf	28,w	;volatile
 16276  1D83  00F1               	movwf	?_ADC_GetConversionResult+1
 16277  1D84  081B               	movf	27,w	;volatile
 16278  1D85  00F0               	movwf	?_ADC_GetConversionResult
 16279  1D86  0008               	return
 16280  1D87                     __end_of_ADC_GetConversionResult:	
 16281  007E                     btemp	set	126	;btemp
 16282  007E                     int$flags	set	126
 16283  007E                     wtemp0	set	126


Data Sizes:
    Strings     39
    Constant    459
    Data        4
    BSS         572
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK1            16     16      16
    BANK2            16     14      16
    BANK3            80     43      80
    BANK4            80      0      78
    BANK5            80      0      75
    BANK6            80      0      64
    BANK7            80      0      64
    BANK8            80      0      64
    BANK9            80      0      64
    BANK10           80      0      64
    BANK11           80      0      64
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> STR_1(CODE[39]), errorMsg(CODE[13]), cdc_data_tx2(ABS[64]), cdc_data_rx2(ABS[64]), 
		 -> cdc_data_tx(ABS[64]), cdc_data_rx(BANK2[64]), CtrlTrfData(BANK1[8]), RAM(DATA[4096]), 
		 -> SetupPkt(BANK1[8]), NULL(NULL[0]), 

    __builtin_memcpy$0	PTR void  size(2) Largest target is 64
		 -> writeStatusBuffer(BANK7[64]), writeBuffer(BANK9[64]), SetupPkt(BANK1[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK3[1]), USBActiveConfiguration(BANK3[1]), NULL(NULL[0]), 
		 -> BDT(ABS[80]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    memset@p1	PTR void  size(2) Largest target is 80
		 -> cmdRxBuffer(BANK6[64]), USBAlternateInterface(BANK4[2]), BDT(ABS[80]), 

    memset@p	PTR unsigned char  size(2) Largest target is 80
		 -> cmdRxBuffer(BANK6[64]), USBAlternateInterface(BANK4[2]), BDT(ABS[80]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdRxBuffer(BANK6[64]), 

    my_uitoa@str	PTR unsigned char  size(1) Largest target is 64
		 -> writeStatusBuffer(BANK7[64]), 

    main_SetDcDcRegulator@pI_mA	PTR long  size(1) Largest target is 4
		 -> MAIN_Iout_limit_mA(BANK4[4]), 

    main_SetDcDcRegulator@pU_mV	PTR long  size(1) Largest target is 4
		 -> MAIN_Uout_target_mV(BANK4[4]), 

    putUSBUSART2@data	PTR unsigned char  size(1) Largest target is 64
		 -> USB_Out_Buffer(BANK8[64]), 

    getsUSBUSART2@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> RS232_Out_Data(BANK11[64]), 

    CDCDataInHandle2	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    CDCDataOutHandle2	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    pCDCDst2.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst2.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst2.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst2.bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc2.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc2.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc2.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc2.bRam	PTR unsigned char  size(1) Largest target is 0

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeStatusBuffer(BANK7[64]), writeBuffer(BANK9[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK10[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1646_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1646_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1646_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1646_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    USB_SD_Ptr	const PTR const unsigned char [5] size(2) Largest target is 52
		 -> sd004(CODE[50]), sd003(CODE[52]), sd002(CODE[50]), sd001(CODE[22]), 
		 -> sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [2] size(2) Largest target is 141
		 -> configDescriptor1(CODE[141]), 

    sp__memset	PTR void  size(2) Largest target is 80
		 -> cmdRxBuffer(BANK6[64]), USBAlternateInterface(BANK4[2]), BDT(ABS[80]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK1[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 80
		 -> BDT(ABS[80]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 80
		 -> NULL(NULL[0]), BDT(ABS[80]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx2(ABS[64]), cdc_data_rx2(ABS[64]), cdc_data_tx(ABS[64]), cdc_data_rx(BANK2[64]), 
		 -> NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[5] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    pBDTEntryIn	PTR volatile struct __BDT[5] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(ABS[80]), 

    S558$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), Absolute function(), 

    S548$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S548$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S524$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S524$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S524$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S524$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _main_CDC_to_RS485_Tasks->_CDCTxService2
    _main_CDC_to_RS485_Tasks->_getsUSBUSART2
    _getsUSBUSART2->i1_USBTransferOnePacket
    _CDCTxService2->i1_USBTransferOnePacket
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->_CDCInitEP
    _USER_USB_CALLBACK_EVENT_HANDLER->_CDCInitEP2
    _CDCInitEP2->_USBEnableEndpoint
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USART_mySetLineCodingHandler->i1___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _main_CDC_to_RS485_Tasks->_getsUSBUSART2
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _main in BANK3

    _main->_main_CommunicationHandler
    _main_CommunicationHandler->_main_SetDcDcRegulator
    _my_uitoa->___wmul
    _main_SetDcDcRegulator->_main_switchStepUp_Down
    _main_switchStepUp_Down->___aldiv
    ___aldiv->___lmul
    ___lldiv->___lmul
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   44237
                                             42 BANK3      1     1      0
                _ADC_StartConversion
                  _SYSTEM_Initialize
                    _TMR1_StartTimer
                      _USBDeviceInit
          _main_CommunicationHandler
              _main_SetDcDcRegulator
         _main_overcurrentProtection
 ---------------------------------------------------------------------------------
 (1) _main_overcurrentProtection                           2     2      0       0
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _main_CommunicationHandler                            4     4      0   38103
                                             38 BANK3      4     4      0
                       _CDCTxService
                        _TMR1_Reload
                            ___lldiv
                             ___lmul
                             ___wmul
                               _atoi
                       _getsUSBUSART
              _main_SetDcDcRegulator
                             _memset
                           _my_uitoa
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          4     1      3     296
                                              0 BANK3      4     1      3
 ---------------------------------------------------------------------------------
 (2) _my_uitoa                                            16    14      2    8153
                                              6 BANK3     16    14      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     850
                                              0 BANK3      8     2      6
 ---------------------------------------------------------------------------------
 (1) _main_SetDcDcRegulator                                6     5      1    5862
                                             32 BANK3      6     5      1
                            ___aldiv
                            ___lldiv
                             ___lmul
             _main_switchStepUp_Down
 ---------------------------------------------------------------------------------
 (2) _main_switchStepUp_Down                               5     1      4    2519
                                             27 BANK3      5     1      4
                 _PWM2_LoadDutyValue
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     982
                                              0 BANK3     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    1012
                                             12 BANK3     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _PWM2_LoadDutyValue                                   4     2      2     348
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     644
                                             12 BANK3     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     3      1    2848
                                             11 BANK3      4     3      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    7976
                                              6 BANK3      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    7608
                                              0 BANK3      6     2      4
 ---------------------------------------------------------------------------------
 (2) _TMR1_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         3     3      0    2793
                                             11 BANK3      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    2656
                                              0 BANK3     11     7      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        5     5      0     272
                                              0 BANK3      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           9     9      0   47573
                                              5 BANK2      9     9      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                     _USBDeviceTasks
            _main_CDC_to_RS485_Tasks
              i1_ADC_StartConversion
               i1_PWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (6) i1_PWM2_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) i1_ADC_StartConversion                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _main_CDC_to_RS485_Tasks                              2     2      0    2076
                                              1 BANK1      2     2      0
                      _CDCTxService2
                    _USART_getcUSART
                    _USART_putcUSART
                      _getsUSBUSART2
                       _putUSBUSART2
 ---------------------------------------------------------------------------------
 (7) _putUSBUSART2                                         3     2      1     169
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (7) _getsUSBUSART2                                        4     3      1     958
                                             11 COMMON     3     2      1
                                              0 BANK1      1     1      0
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USART_putcUSART                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USART_getcUSART                                      2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _CDCTxService2                                        3     3      0     903
                                             11 COMMON     3     3      0
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _USBDeviceTasks                                       3     3      0   45310
                                             15 BANK1      1     1      0
                                              3 BANK2      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (7) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (7) _USBWakeFromSuspend                                   1     1      0    6182
                                              6 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBSuspend                                           1     1      0    6182
                                              6 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBIncrement1msInternalTimers                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPService                                     3     3      0   26446
                                              0 BANK2      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfSetupHandler                               1     1      0   25699
                                             14 BANK1      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowDataStage                             2     2      0      92
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCheckStdRequest                                   1     1      0   19425
                                             13 BANK1      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStdSetCfgHandler                                 5     5      0    6544
                                              6 BANK1      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (11) i1_memset                                            8     2      6     202
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (10) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (10) _USBStdGetDscHandler                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (10) _USBStdFeatureReqHandler                             7     7      0    6653
                                              6 BANK1      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    6182
                                              0 BANK1      6     0      6
                          _CDCInitEP
                         _CDCInitEP2
                 _USBCheckCDCRequest
                _USBCheckCDCRequest2
       _main_CDC_to_RS485_Initialize
      _main_Communication_Initialize
 ---------------------------------------------------------------------------------
 (8) _main_Communication_Initialize                        2     2      0      68
                                              0 COMMON     2     2      0
                      i1_TMR1_Reload
 ---------------------------------------------------------------------------------
 (9) i1_TMR1_Reload                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _main_CDC_to_RS485_Initialize                         2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBCheckCDCRequest2                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBCheckCDCRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP2                                           1     1      0    1677
                                             13 COMMON     1     1      0
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) _CDCInitEP                                            1     1      0    1677
                                             13 COMMON     1     1      0
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) i1_USBTransferOnePacket                              11     7      4     766
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (9) _USBEnableEndpoint                                    6     5      1     911
                                              7 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (10) _USBConfigureEndpoint                                7     6      1     400
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfOutHandler                                 2     2      0     373
                                             12 BANK1      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfRxService                                  4     4      0     373
                                              8 BANK1      4     4      0
                   Absolute function *
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPAllowStatusStage                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfInHandler                                  3     3      0     374
                                              8 BANK1      3     3      0
                   Absolute function *
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfTxService                                 3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (10) _USART_mySetLineCodingHandler                        8     8      0     259
                                              0 BANK1      8     8      0
                          i1___lldiv
 ---------------------------------------------------------------------------------
 (11) i1___lldiv                                          14     6      8     214
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _WDT_Initialize
   _TMR1_StartTimer
   _USBDeviceInit
   _main_CommunicationHandler
     _CDCTxService
       _USBTransferOnePacket
     _TMR1_Reload
     ___lldiv
       ___lmul (ARG)
     ___lmul
     ___wmul
     _atoi
       ___wmul
       _isdigit
     _getsUSBUSART
       _USBTransferOnePacket
     _main_SetDcDcRegulator
       ___aldiv
         ___lmul (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _main_switchStepUp_Down
         _PWM2_LoadDutyValue
         ___aldiv
           ___lmul (ARG)
         ___lmul
     _memset
     _my_uitoa
       ___wmul
     _putUSBUSART
   _main_SetDcDcRegulator
     ___aldiv
       ___lmul (ARG)
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _main_switchStepUp_Down
       _PWM2_LoadDutyValue
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _main_overcurrentProtection

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         Absolute function(Fake) *
         _USART_mySetLineCodingHandler *
           i1___lldiv
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           Absolute function(Fake) *
           _USART_mySetLineCodingHandler *
             i1___lldiv
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _CDCInitEP2
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _USBCheckCDCRequest
               _USBCheckCDCRequest2
               _main_CDC_to_RS485_Initialize
               _main_Communication_Initialize
                 i1_TMR1_Reload
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _CDCInitEP2
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _USBCheckCDCRequest
               _USBCheckCDCRequest2
               _main_CDC_to_RS485_Initialize
               _main_Communication_Initialize
                 i1_TMR1_Reload
             i1_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
             _CDCInitEP2
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
             _USBCheckCDCRequest
             _USBCheckCDCRequest2
             _main_CDC_to_RS485_Initialize
             _main_Communication_Initialize
               i1_TMR1_Reload
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
           _CDCInitEP2
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
           _USBCheckCDCRequest
           _USBCheckCDCRequest2
           _main_CDC_to_RS485_Initialize
           _main_Communication_Initialize
             i1_TMR1_Reload
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _CDCInitEP2
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _USBCheckCDCRequest
         _USBCheckCDCRequest2
         _main_CDC_to_RS485_Initialize
         _main_Communication_Initialize
           i1_TMR1_Reload
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _CDCInitEP2
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _USBCheckCDCRequest
         _USBCheckCDCRequest2
         _main_CDC_to_RS485_Initialize
         _main_Communication_Initialize
           i1_TMR1_Reload
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i1_USBTransferOnePacket
       _CDCInitEP2
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i1_USBTransferOnePacket
       _USBCheckCDCRequest
       _USBCheckCDCRequest2
       _main_CDC_to_RS485_Initialize
       _main_Communication_Initialize
         i1_TMR1_Reload
     i1_USBDeviceInit
   _main_CDC_to_RS485_Tasks
     _CDCTxService2
       i1_USBTransferOnePacket
     _USART_getcUSART
     _USART_putcUSART
     _getsUSBUSART2
       i1_USBTransferOnePacket
     _putUSBUSART2
   i1_ADC_StartConversion
   i1_PWM2_LoadDutyValue

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK1            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK2            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK2               10      E      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK3            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK3               50     2B      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK4            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK4               50      0      4E      11       97.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK5            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK5               50      0      4B      13       93.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK6            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK6               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK7            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK7               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
ABS                  0      0     297      18        0.0%
BITBANK8            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK8               50      0      40      20       80.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK9            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK9               50      0      40      22       80.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK10           50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK10              50      0      40      24       80.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK11           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK11              50      0      40      26       80.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK12           30      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK12              30      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
DATA                 0      0     297      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sun May 28 20:21:55 2017

                                 __CFG_CP$ON 0000                        __end_ofi1_TMR1_Reload 1DA3  
                                 _USB_SD_Ptr 01A4                                            pc 0002  
                     __end_of_FVR_Initialize 1D78                                _USBDeviceInit 0E4B  
                        ___wmul@multiplicand 01A2                           __size_of_CDCInitEP 0037  
                    _main_CDC_to_RS485_Tasks 1688         USER_USB_CALLBACK_EVENT_HANDLER@event 00E0  
       USER_USB_CALLBACK_EVENT_HANDLER@pdata 00E2                                          l107 1DC6  
                __end_of_USBStdGetDscHandler 1780                                          l378 0E92  
                                        _BDT 0020                                          _PR2 001B  
                                        _UIE 0E92                                          _UIR 0E90  
                            _timer1ReloadVal 01DC                                   _USBSuspend 1EEE  
                       USBStdSetCfgHandler@i 00EA                         USBStdSetCfgHandler@p 00E7  
                            _TMR2_Initialize 1DA3                main_switchStepUp_Down@Uout_mV 01BB  
                               __CFG_BORV$LO 0000                                          wreg 0009  
                             _USBDeviceTasks 0F04                          __size_of_CDCInitEP2 0037  
                             _USBDeviceState 01E1                        ??_USBCtrlTrfRxService 00E8  
                             ??_getsUSBUSART 01AC                     USBEnableEndpoint@options 0077  
                               __CFG_LVP$OFF 0000                                         l1213 1F13  
                                       l1117 03C4                                         l1144 04A0  
                                       l1137 0490                                         l1165 1F3D  
                                       l1094 0412                                         l1268 0888  
                 USBConfigureEndpoint@handle 0076                                         l5103 0E04  
                                       l5031 12E4                                         l5023 1EBF  
                                       l5121 0E31                                         l5105 0E09  
                                       l5113 0E24                                         l5041 12FA  
                                       l5123 0E35                                         l5115 0E28  
                                       l5043 1313                                         l5035 12F9  
                                       l5045 1327                                         l5063 0DA3  
                                       l5303 1621                                         l5321 1646  
                                       l5305 1619                                         l5241 04F1  
                                       l5083 0DD0                                         l5331 1683  
                                       l5323 164A                                         l5315 163E  
                                       l5307 1626                                         l5251 0537  
                                       l5243 04FD                                         l5077 0DC7  
                                       l5325 1673                                         l5503 0EDF  
                                       l5095 0DE9                                         l5255 054E  
                                       l5247 0514                                         l5257 0575  
                                       l5249 052B                                         l5281 0AA6  
                                       l4707 099A                                         l4643 1FE3  
                                       l5259 0599                                         l4717 09E3  
                                       l4661 0899                                         l5293 0B14  
                                       l5463 0E79                                         l5455 0E6C  
                                       l5447 0E5B                                         l4719 09FB  
                                       l4671 08B7                                         l4639 1FD9  
                                       l4807 0BC6                                         l4815 0C06  
                                       l5289 0B0E                                         l5721 03A0  
                                       l5713 0385                                         l5801 11BF  
                                       l5475 0E97                                         l4827 1F0D  
                                       l4683 08E2                                         l5803 11C2  
                                       l4669 08A9                                         l5741 040C  
                                       l5725 03C7                                         l5717 0397  
                                       l5733 03F3                                         l5709 037C  
                                       l4847 1DF0                                         l4871 12CD  
                                       l4687 08F0                                         l4679 08D7  
                                       l5751 0459                                         l5743 0358  
                                       l5815 11D8                                         l5807 11C9  
                                       l5497 0EBB                                         l4857 1294  
                                       l5761 0474                                         l5729 03E2  
                                       l4699 098A                                         l4867 12C2  
                                       l4859 12A2                                         l5771 049E  
                                       l5763 047F                                         l5747 0416  
                                       l5765 0486                                         l5757 046B  
                                       l5769 0493                                         l5777 04A9  
                                       l5779 04B2                                         l5787 04C6  
                                       l5789 04D5                                         STR_1 0315  
                               __CFG_WDTE$ON 0000                                         _LATA 010C  
                                       _LATC 010E                            _writeStatusBuffer 03A0  
                                       u4115 08B8                                         u4035 1FE4  
                                       u4125 08CC                                         u4045 1FEB  
                                       u4135 08D8                                         u4305 1F14  
                                       u4315 1F19                                         u4405 12C3  
                                       u4095 08AC                                         u4365 1297  
                                       u5175 0E7C                                         u4385 12A3  
                                       u4395 12B7                                         u3875 1EB2  
                                       u5805 11AF                        ??_USBCtrlTrfTxService 0070  
                                       u5780 049C                                         u4975 0AD4  
                                       _UCFG 0E91                                         _UEP0 0E98  
                                       _UEP1 0E99                                         _UEIE 0E97  
                                       _UEIR 0E93                                         _UCON 0E8E  
                                       _TMR2 001A                                         _WPUA 020C  
                                       _Iadc 01DA                                         _Uadc 01EC  
                               __CFG_WRT$OFF 0000                              _CDCDataInHandle 0227  
     USBStdFeatureReqHandler@current_ep_data 00EA                                         _pDst 025A  
                                       _atoi 1617                            i1___lldiv@divisor 0070  
                                       _main 1F26                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                _BaudRateGen 02BE                                         fsr1l 0006  
                                       btemp 007E                            i1___lldiv@counter 007D  
                              __CFG_BOREN$ON 0000                                         start 00E9  
                                 _Iadc_limit 022F                                __CFG_IESO$OFF 0000  
              main_CDC_to_RS485_Initialize@i 0071                   __end_of_USBCheckStdRequest 142E  
                            _USART_putcUSART 1D7C                       ??_USBCtrlTrfOutHandler 00EC  
                              __CFG_MCLRE$ON 0000                          USBDeviceInit@i_1118 01A3  
                  ??_USBStdFeatureReqHandler 00E6               ?_main_Communication_Initialize 0070  
              ?_USART_mySetLineCodingHandler 0070                     ??_USBStdGetStatusHandler 0070  
                            ??_getsUSBUSART2 007C                               ?_USBDeviceInit 0070  
                    __end_of_PWM2_Initialize 1D8D                              ?_FVR_Initialize 0070  
             __size_of_OSCILLATOR_Initialize 000B                __end_of_OSCILLATOR_Initialize 1DCA  
                                _writeBuffer 04A0                              __end_of___aldiv 08F9  
                                      ?_atoi 01A6                                        ?_main 0070  
          __size_of_USBCtrlEPServiceComplete 0094                              _TMR1_StartTimer 1D6E  
                            __end_of___lldiv 12D6                                        _T1CON 0018  
                     __end_of_USBDeviceTasks 1000                                        _T2CON 001C  
                  ?_USBCtrlEPServiceComplete 0070                  ??_main_CommunicationHandler 01C6  
                                      i1l400 0F77                                        i1l404 0FA2  
                                      i1l405 0FFD                                        i1l406 0FAB  
                                      i1l522 132E                                        i1l525 1372  
                                      i1l470 0821                                        i1l526 1337  
                                      i1l527 133A                                        i1l391 0F15  
                                      i1l457 0B6A                                        i1l570 17EA  
                                      i1l618 06F0                                        i1l378 0D2D  
                                      i1l395 0F3B                                        i1l485 074D  
                                      i1l389 0F11                                        i1l582 142D  
                                      i1l584 13DC                                        i1l593 1407  
                                      i1l674 1544                                        i1l909 10CE  
                                      i1l792 15A8                                        _UADDR 0E96  
                                      _RCREG 0199                                        _RCSTA 019D  
                                      u572m0 03D2                                        _TMR1H 0017  
                                      _TMR1L 0016                                        _SPBRG 019B  
                                      u576m0 0466                                        _TRISA 008C  
                                      _TRISC 008E                                        _USTAT 0E8F  
                     ?i1_ADC_StartConversion 0070                                        _TXREG 019A  
                                      _TXSTA 019E             __size_of_ADC_GetConversionResult 0006  
                                 i1memset@p1 0070           __size_of_USBCtrlEPAllowStatusStage 006E  
                        ___lmul@multiplicand 01A4                               __CFG_FCMEN$OFF 0000  
                           _CDCDataInHandle2 0229              __end_of_USBCtrlEPAllowDataStage 14E5  
                                      _sd000 0311                                        _sd001 02DC  
                                      _sd002 0278                                        _sd003 0244  
                                      _sd004 02AA               ?_USBIncrement1msInternalTimers 0070  
                         i1___lldiv@dividend 0074                               _WDT_Initialize 1D78  
                                      _okMsg 01AE                              __end_of_isdigit 1DF2  
                               _BaudRateGen2 02C2                                        atoi@a 01AB  
                                      atoi@s 01AD                      __end_of_USART_getcUSART 1E02  
               __end_ofi1_PWM2_LoadDutyValue 1E42                      __end_of_TMR1_Initialize 1E16  
                                      pclath 000A                            __end_of_CDCInitEP 105C  
                                      status 0003                                        wtemp0 007E  
                            _TMR2_StartTimer 1D71                             __end_ofi1_memset 1E88  
                         __size_ofi1___lldiv 0052                             USART_getcUSART@c 0071  
                            putUSBUSART@data 01A0           USART_mySetLineCodingHandler@dwBaud 00E4  
               __size_of_USBStdSetCfgHandler 008F                              __initialization 00EB  
            __size_of_main_switchStepUp_Down 0095                                 __end_of_atoi 1688  
                               __end_of_main 1F45                        _control_signal_bitmap 0257  
                  ??_main_CDC_to_RS485_Tasks 00E1                           i1___lldiv@quotient 0079  
                               _cdc_data_rx2 0120                                 _cdc_data_tx2 00A0  
                    __end_of_TMR2_Initialize 1DAC                               __CFG_LPBOR$OFF 0000  
                ?_INTERRUPT_InterruptManager 0070                    __size_of_USBCtrlEPService 005A  
                                     ??_atoi 01A8                                       ??_main 01CA  
                            ?_USBDeviceTasks 0070                                  ?_USBSuspend 0070  
                                 _NextUSBOut 01DE                 ??_main_overcurrentProtection 01A0  
                        __CFG_USBLSCLK$48MHz 0000                              i1_USBDeviceInit 0CE8  
                     __end_of_WDT_Initialize 1D7C                __size_of_ADC_IsConversionDone 0007  
                               _cdc_mem_type 0255                                       _ADCON0 009D  
                                     _ADCON1 009E                                       _ADCON2 009F  
                           _CDCDataOutHandle 022B                                       i1S6093 1800  
                                     _ACTCON 039B                                       _ADRESH 009C  
                                     _ADRESL 009B                                       _APFCON 011D  
                                     _ANSELA 018C                                       _ANSELC 018E  
                            getsUSBUSART@len 01AB                                       _T1GCON 0019  
                                     i1l1050 16AB                        __size_of_CDCTxService 00B3  
                                     i1l1208 1E00                                       i1l4003 151B  
                                     i1l1179 00A0                                       i1l4015 1532  
                                     i1l4009 1529                                       i1l4203 11EF  
                                     i1l4115 1FCB                                       i1l5011 1479  
                                     i1l4213 121D                                       i1l4205 11FD  
                                     i1l4061 156D                                       i1l4109 1FBD  
                                     i1l4141 1094                                       i1l5013 147C  
                                     i1l4071 158D                                       i1l4143 10A0  
                                     i1l4217 1228                                       i1l4065 157F  
                                     i1l4057 1566                                       i1l4049 155A  
                                     i1l4321 0A47                                       i1l4305 0A1D  
                                     i1l4147 10A6                                       i1l4411 0623  
                                     i1l4227 1E74                                       i1l4315 0A33  
                                     i1l5203 0CAB                                       i1l5131 1240  
                                     i1l4165 081A                                       i1l4245 15CF  
                                     i1l4077 1596                                       i1l5221 0CD1  
                                     i1l5205 0CAF                                       i1l5213 0CC4  
                                     i1l5141 1254                                       i1l6005 0083  
                                     i1l4431 0671                                       i1l4503 0B34  
                                     i1l5223 0CD5                                       i1l5215 0CC7  
                                     i1l5143 126F                                       i1l5135 1252  
                                     i1l6015 00B9                                       i1l6007 0087  
                                     i1l4177 083D                                       i1l4185 0856  
                                     i1l4425 0650                                       i1l4409 0621  
                                     i1l4345 170C                                       i1l4337 0A79  
                                     i1l4601 13E5                                       i1l4281 14C9  
                                     i1l5401 0D74                                       i1l5145 1280  
                                     i1l4187 085A                                       i1l4195 0873  
                                     i1l4363 176D                                       i1l4355 1749  
                                     i1l4347 1716                                       i1l4603 13E8  
                                     i1l4507 0B38                                       i1l5163 0C55  
                                     i1l5235 1DFC                                       i1l6019 00C7  
                                     i1l4453 06B2                                       i1l4437 0685  
                                     i1l4365 1770                                       i1l4357 174C  
                                     i1l4381 134A                                       i1l4613 13F5  
                                     i1l4605 13EB                                       i1l4277 14B6  
                                     i1l4525 0B77                                       i1l4533 0B81  
                                     i1l4463 06DB                                       i1l4447 06A0  
                                     i1l4439 0690                                       i1l4391 1366  
                                     i1l4615 13F8                                       i1l4631 1422  
                                     i1l5183 0C7F                                       i1l4801 17FB  
                                     i1l3921 113B                                       i1l4473 06F6  
                                     i1l4465 06E1                                       i1l4449 06A7  
                                     i1l4369 1773                                       i1l4297 0A0C  
                                     i1l4617 13FB                                       i1l5361 0D14  
                                     i1l5353 0D08                                       i1l5345 0CF7  
                                     i1l5601 0F84                                       i1l5177 0C76  
                                     i1l4803 17FD                                       i1l4563 075A  
                                     i1l3923 1144                                       i1l3931 1F4D  
                                     i1l4627 1414                                       i1l5195 0C96  
                                     i1l4565 0777                                       i1l4477 0715  
                                     i1l5373 0D32                                       i1l5541 0F18  
                                     i1l4575 07AE                                       i1l3935 1F54  
                                     i1l6095 10AF                                       i1l4479 071E  
                                     i1l4577 07BB                                       i1l4753 10D7  
                                     i1l6097 10C9                                       i1l5609 0F9A  
                                     i1l5561 0F35                                       i1l5553 0F28  
                                     i1l3955 0916                                       i1l3947 0906  
                                     i1l5395 0D50                                       i1l5635 0FE4  
                                     i1l4781 17A5                                       i1l4589 07F5  
                                     i1l4765 1109                                       i1l3965 095F  
                                     i1l5637 0FF3                                       i1l5629 0FCB  
                                     i1l5573 0F4D                                       i1l4791 17CC  
                                     i1l3967 0977                                       i1l5671 16CB  
                                     i1l3993 1504                                       i1l3985 14F8  
                                     i1l4961 1F82                                       i1l5585 0F68  
                                     i1l5681 16EC                                       i1l4795 17DD  
                                     i1l4779 179F                                       i1l5595 0F7D  
                                     i1l5579 0F53                                       i1l5659 16B0  
                                     i1l3997 150B                                       i1l4991 101E  
                                     i1l4959 1F79                                       i1l4993 1020  
                                     i1l5689 16FE                                       i1l5999 0058  
                                     u314_25 1114                                       _FVRCON 0117  
                                     u315_25 111A                                       u316_25 1122  
                                     u342_25 11F2                      __end_of_USART_putcUSART 1D81  
                                     u344_25 11FE                                       u345_25 1212  
                                     u346_25 121E                                       u354_25 14C0  
                                     u450_25 143E                                       u611_25 007D  
                                     u613_24 0094                                       u509_25 0D17  
                                     u615_25 00AB                                       _OSCCON 0099  
                                     u386_25 118B                                       u395_25 0746  
                                     _PLLRDY 04D6                                       u585_25 1E3B  
                              CDCTxService@i 01AC                                       _TMR1IF 0088  
                                     _SPBRGH 019C                                       _SPBRGL 019B  
                                     _WDTCON 0097                 i1USBTransferOnePacket@handle 0079  
                  _main_CommunicationHandler 033C                                 ??_CDCInitEP2 007D  
                             __CFG_PWRTE$OFF 0000               __size_of_main_SetDcDcRegulator 0135  
              __end_of_main_SetDcDcRegulator 060D                            _shortPacketStatus 01EA  
                            USBDeviceTasks@i 00EF                  USBStdFeatureReqHandler@pUEP 00E8  
                   USBTransferOnePacket@data 01A1                   USBCtrlTrfInHandler@lastDTS 00EA  
                            ??_USBDeviceInit 01A0                                       ___lmul 1FD0  
                    __end_of_TMR1_StartTimer 1D71                                 ?_TMR1_Reload 0070  
                               ?_putUSBUSART 01A0                                    ??___aldiv 01B4  
                                     ___wmul 1F0A                               __CFG_STVREN$ON 0000  
                                  ??___lldiv 01B4          __size_of_main_overcurrentProtection 004A  
                       __end_of_getsUSBUSART 132A                            _USBEnableEndpoint 1F45  
            __size_of_USBStdGetStatusHandler 0055                             ?_PWM2_Initialize 0070  
                           __end_of_errorMsg 0311                                       _memset 1EBA  
                         ?_USBEnableEndpoint 0077               ??_USART_mySetLineCodingHandler 00E0  
              __size_of_USBTransferOnePacket 0084                            __end_ofi1___lldiv 1231  
                                  ??_isdigit 01A0                         __end_of_dividerArray 01A4  
                               _CDCTxService 0D98                             __end_of_my_uitoa 0B21  
                            ?_WDT_Initialize 0070                       _main_switchStepUp_Down 0BB5  
                         __end_of_CDCInitEP2 1093                          ??_USBEnableEndpoint 0078  
                             _RS232_Out_Data 05A0                      __end_of_TMR2_StartTimer 1D74  
            __end_of_main_CDC_to_RS485_Tasks 1701                                  _CtrlTrfData 00A8  
                           ?_USART_getcUSART 0070                             putUSBUSART2@data 0072  
                       _controlTransferState 01E8                             ?_TMR1_Initialize 0070  
                          _SYSTEM_Initialize 1ED3                      __end_of__initialization 0146  
                 i1USBTransferOnePacket@data 0071                           ?_SYSTEM_Initialize 0070  
                 __end_of_PWM2_LoadDutyValue 1EBA                     __size_of_USBStallHandler 0025  
                        __size_of_USBSuspend 001C                 __size_of_ADC_StartConversion 0003  
                             __pcstackCOMMON 0070                    __end_of_USBEnableEndpoint 1F65  
                              __end_of_sd000 0315                                __end_of_sd001 02F2  
                              __end_of_sd002 02AA                                __end_of_sd003 0278  
                              __end_of_sd004 02DC                                 __pidataBANK4 0800  
                        ??_SYSTEM_Initialize 01A0             __size_of_USBCtrlEPAllowDataStage 005D  
                              __end_of_okMsg 01B3                __size_of_USBConfigureEndpoint 0042  
                     _control_signal_bitmap2 0258                      __end_ofi1_USBDeviceInit 0D98  
                __end_of_USBCtrlTrfInHandler 1800                             ?_TMR2_Initialize 0070  
                       i1_PWM2_LoadDutyValue 1E2C           main_overcurrentProtection@Iadc_avg 0243  
                    _ADC_GetConversionResult 1D81                               _OPTION_REGbits 0095  
                                  ?i1_memset 0070                                   _cdc_notice 02A0  
                                 _cdc_rx_len 01E2                                   _cdc_tx_len 01E6  
                   ??_USBCtrlTrfSetupHandler 00EE                      _USBTicksSinceSuspendEnd 0254  
                             _USB_Out_Buffer 0420                    __end_of_SYSTEM_Initialize 1EEE  
                     _USBStdGetStatusHandler 132A                  __end_of_USBCheckCDCRequest2 15A9  
                                 __pbssBANK2 016E                                   __pbssBANK3 01CB  
                                 __pbssBANK4 0220                                   __pbssBANK5 02A0  
                                 __pbssBANK6 0320                                   __pbssBANK7 03A0  
                                 __pbssBANK8 0420                                   __pbssBANK9 04A0  
                           ?_USART_putcUSART 0070                                  _Uadc_target 0239  
                __size_of_USBWakeFromSuspend 0020                                  _pBDTEntryIn 01CB  
           __end_of_USBCtrlEPServiceComplete 0BB5                  __size_of_USBCheckCDCRequest 0060  
                           ??_FVR_Initialize 01A0                                   __pmaintext 1F26  
                              _cdc_mem_type2 0256                         USBCtrlTrfRxService@i 00EA  
                                    ?___lmul 01A0                              __CFG_PLLMULT$3x 0000  
                                    ?___wmul 01A0                             ?_TMR1_StartTimer 0070  
                                 __pintentry 0004                            _CDCDataOutHandle2 022D  
                           getsUSBUSART2@len 007B                                      _BAUDCON 019F  
                      ?i1_PWM2_LoadDutyValue 0070                                      ?_memset 01A0  
                             ___lmul@product 01A8                                   _device_dsc 02F2  
                           _USBCtrlEPService 142E                      ??i1_ADC_StartConversion 0070  
                                 _ep_data_in 02B4                      __size_of_ADC_Initialize 000A  
         __end_of_main_overcurrentProtection 11DF                   _main_overcurrentProtection 1195  
                __end_of_USBCtrlTrfRxService 07FE                           _USBCheckStdRequest 13D4  
                          _configDescriptor1 01B7                       __size_of_CDCTxService2 009E  
                                 ??i1_memset 0076                                      _RS232cp 024C  
                __end_of_USBCtrlTrfTxService 0877                          _USBStdSetCfgHandler 0A00  
                                    u452_2m0 1472              ??_main_Communication_Initialize 0070  
                             CDCTxService2@i 007C                                      _PWM2DCH 0615  
                                    _PWM2DCL 0614                                      _OSCTUNE 0098  
                                    _PWM2CON 0616                          ?_USBCheckStdRequest 0070  
                           ?_TMR2_StartTimer 0070                 __size_of_USBStdGetDscHandler 007F  
                                    _UIEbits 0E92                       __size_ofi1_TMR1_Reload 0009  
                                    _UIRbits 0E90                                _cdc_trf_state 01E4  
                   _PwmDutyCycleVoltageLimit 024A                     ??i1_USBTransferOnePacket 0074  
                                    _pCDCDst 023B                                      _pCDCSrc 023F  
                      __size_of_getsUSBUSART 0054              ??_USBIncrement1msInternalTimers 0070  
                       ?_USBStdSetCfgHandler 0070                                    _CDCInitEP 1025  
                 __size_of_USBEnableEndpoint 0020                                    ?_my_uitoa 01A6  
                                 _readBuffer 0520                         ??_USBCheckStdRequest 00ED  
                                    ___aldiv 0877                __size_of_USBCtrlTrfOutHandler 003D  
                            __size_of___lmul 0030                                      ___lldiv 1283  
                           ??_USBDeviceTasks 0163                              __size_of___wmul 001C  
         __size_of_main_CommunicationHandler 019C                                ?_putUSBUSART2 0070  
                          ??_USBStallHandler 0070                    ??_ADC_GetConversionResult 0072  
                           ?i1_USBDeviceInit 0070                         __size_of_TMR1_Reload 0009  
                       __size_of_putUSBUSART 0017                           getsUSBUSART@buffer 01AE  
                      __end_of_getsUSBUSART2 1283                              __size_of_memset 0019  
                  __end_of_configDescriptor1 0244                             USART_putcUSART@c 0070  
                                    __ptext1 1195                                      __ptext2 033C  
                                    __ptext3 1E59                                      __ptext4 0A8F  
                                    __ptext5 1EBA                                      __ptext6 04D8  
                                    __ptext7 0BB5                                      __ptext8 1FD0  
                                    __ptext9 0877                                      _inPipes 01D5  
                _USBDeferOUTDataStagePackets 0250                                    _T1CONbits 0018  
                      _OSCILLATOR_Initialize 1DBF                                 ??_USBSuspend 00E6  
                                  _T2CONbits 001C                                      _isdigit 1DE3  
                           ___aldiv@dividend 01B0                     ??_PIN_MANAGER_Initialize 01A0  
                               _LastRS232Out 0247                           __end_of_USB_CD_Ptr 01B7  
                 __size_of_SYSTEM_Initialize 001B              __size_of_USBCtrlTrfSetupHandler 0055  
                                    clrloop0 1D8E               main_overcurrentProtection@tOut 025C  
                       end_of_initialization 0146                                 _getsUSBUSART 12D6  
                         __end_of_USB_SD_Ptr 01AE                          _pBDTEntryEP0OutNext 016E  
                                    memset@c 01A2                                      memset@n 01A4  
                                    memset@p 01A6                              _USB1msTickCount 02C6  
            _dummy_encapsulated_cmd_response 02D4                     ?_USBStdFeatureReqHandler 0070  
                              _CDCTxService2 0C4A                            _EUSART_Initialize 1DCA  
                      ??_USBStdSetCfgHandler 00E6                              ___lldiv@divisor 01AC  
               __end_of_ADC_IsConversionDone 1D9A                                   ?_CDCInitEP 0070  
                            ___lldiv@counter 01B9                main_CommunicationHandler@step 025B  
                               _dividerArray 014A                           ?_EUSART_Initialize 0070  
                         __end_of_USBSuspend 1F0A                      _USBCtrlEPAllowDataStage 1488  
                                  _RCSTAbits 019D                                   ??_my_uitoa 01A8  
                           ___aldiv@quotient 01B7                               ??_putUSBUSART2 0071  
                     ??i1_PWM2_LoadDutyValue 0072                                 __pstringtext 014A  
                              i1_TMR1_Reload 1D9A                     _USBCtrlEPServiceComplete 0B21  
          __end_of_main_CommunicationHandler 04D8                   _USBStatusStageEnabledFlag1 0251  
                 _USBStatusStageEnabledFlag2 0252                          ??_EUSART_Initialize 01A0  
                               _MAIN_Iout_mA 0231                             ??_WDT_Initialize 01A0  
                         USBEnableEndpoint@p 007A                          my_uitoa@strIncremet 01B2  
                    ?_main_switchStepUp_Down 01BB                                  my_uitoa@num 01A6  
                                my_uitoa@str 01B3                             __CFG_FOSC$INTOSC 0000  
                               _MAIN_Uout_mV 0233             _dummy_encapsulated_cmd_response2 02DC  
main_CommunicationHandler@cmdRxBufferPointer 01EB                           _BothEP0OutUOWNsSet 0246  
                  USBStdSetCfgHandler@i_1459 00E9                          _ADC_StartConversion 1D6B  
                                  i1___lldiv 11DF                    USBConfigureEndpoint@EPNum 0075  
                 ?_USBCtrlEPAllowStatusStage 0070          USER_USB_CALLBACK_EVENT_HANDLER@size 00E4  
                                  _USTATcopy 01EF                    __end_of_EUSART_Initialize 1DD6  
                               _MAIN_ovcFlag 0248                     i1USBTransferOnePacket@ep 0078  
               __end_of_USBTransferOnePacket 0A00                               ?_CDCTxService2 0070  
            __size_ofi1_USBTransferOnePacket 0083                                    _TXSTAbits 019E  
                   ?_main_CDC_to_RS485_Tasks 0070                            putUSBUSART@length 01A2  
                         __CFG_PLLEN$ENABLED 0000                        i1USBDeviceInit@i_1118 0073  
                       ?_ADC_StartConversion 0070                       _USBCtrlTrfSetupHandler 137F  
                      _main_SetDcDcRegulator 04D8                               ?i1_TMR1_Reload 0070  
                      __end_of_USBDeviceInit 0F04        __end_of_USBIncrement1msInternalTimers 1EA1  
     __size_of_USBIncrement1msInternalTimers 0019                _USBIncrement1msInternalTimers 1E88  
                             __end_of___lmul 2000                               __end_of___wmul 1F26  
                                  i1memset@c 0072                                    i1memset@n 0074  
                                  i1memset@p 0076               __end_of_main_switchStepUp_Down 0C4A  
                         _PWM2_LoadDutyValue 1EA1                               _ADC_Initialize 1DB5  
                     ?_OSCILLATOR_Initialize 0070                               __end_of_memset 1ED3  
                          _USBBusIsSuspended 024E                          start_initialization 00EB  
                    ?_USBStdGetStatusHandler 0070                USBCtrlTrfRxService@byteToRead 00EB  
                   __size_of_PWM2_Initialize 0006                          ?_PWM2_LoadDutyValue 01A0  
            __size_of_PIN_MANAGER_Initialize 0017                                   ?i1___lldiv 0070  
                          __size_ofi1_memset 0018                                  _cdc_data_rx 0120  
                                _cdc_data_tx 00A0                 __end_of_USBConfigureEndpoint 114E  
            __end_of_USBStdFeatureReqHandler 0733            __end_of_USBCtrlEPAllowStatusStage 1617  
                   __end_of_USBCtrlEPService 1488         __end_of_USART_mySetLineCodingHandler 1195  
      __size_of_USART_mySetLineCodingHandler 0047                 _USART_mySetLineCodingHandler 114E  
                                _cdc_notice2 02CA                    ??_USBCtrlEPAllowDataStage 0073  
                                _cdc_rx_len2 01E3                                  ??_CDCInitEP 007D  
                             USBDeviceInit@i 01A4                               USBDeviceInit@p 01A1  
                                _cdc_tx_len2 01E7                        ??_ADC_StartConversion 01A0  
                   __size_of_USART_getcUSART 0010                         ??_PWM2_LoadDutyValue 01A2  
                  CDCTxService2@byte_to_send 007D                       _pBDTEntryEP0OutCurrent 01E9  
                   __size_of_TMR1_Initialize 0014                      USBTransferOnePacket@dir 01A0  
                    USBTransferOnePacket@len 01A3                  PWM2_LoadDutyValue@dutyValue 01A0  
                                   ??___lmul 01A8                                     ??___wmul 01A4  
                        _USBStdGetDscHandler 1701                       __end_of_ADC_Initialize 1DBF  
                                __pdataBANK4 026A                                     ??_memset 01A6  
                     i1_USBTransferOnePacket 08F9                          _MAIN_Uout_target_mV 0264  
             __size_ofi1_ADC_StartConversion 0003                                  __pbssBANK10 0520  
                                __pbssBANK11 05A0                       _USBActiveConfiguration 01EE  
             __end_of_USBStdGetStatusHandler 137F                  ?_main_overcurrentProtection 0070  
              __end_ofi1_ADC_StartConversion 1D6B                    i1USBTransferOnePacket@dir 0070  
                  i1USBTransferOnePacket@len 0073                                    ___latbits 0002  
                                _cmdRxBuffer 0320                                __pcstackBANK1 00E0  
                              __pcstackBANK2 0160                                __pcstackBANK3 01A0  
               __size_of_USBCtrlTrfInHandler 0080                         _ADC_IsConversionDone 1D93  
                   __size_of_TMR2_Initialize 0009                                 _isdigit$3010 01A0  
                       ?_USBStdGetDscHandler 0070                         __end_of_putUSBUSART2 1E2C  
                               _line_coding2 02E4                              ??_CDCTxService2 007B  
                 __end_of_USBWakeFromSuspend 1F85                   __size_of_EUSART_Initialize 000C  
                            _USBStallHandler 1000                                 _pBDTEntryOut 02AA  
       __end_of_main_CDC_to_RS485_Initialize 1FD0        __size_of_main_CDC_to_RS485_Initialize 0027  
               _main_CDC_to_RS485_Initialize 1FA9                   __end_of_USBCheckCDCRequest 1545  
                 main_CommunicationHandler@i 01C9                 __size_of_USBCheckCDCRequest2 0064  
                     _PIN_MANAGER_Initialize 1E42                              ??i1_TMR1_Reload 0070  
                     ?_main_SetDcDcRegulator 01C0                     __size_of_USART_putcUSART 0005  
                          _ADC_SelectChannel 1DD6                                     ?___aldiv 01AC  
                                   ?___lldiv 01AC                              ?_ADC_Initialize 0070  
                         ?_ADC_SelectChannel 0070                            __size_of_my_uitoa 0092  
               ??_INTERRUPT_InterruptManager 0165                                    __pswtext1 1800  
                       _USBTransferOnePacket 097C                     __size_of_TMR1_StartTimer 0003  
                                   ?_isdigit 0070                          ??_ADC_SelectChannel 0070  
                      ?_ADC_IsConversionDone 0070                 __end_of_USBCtrlTrfOutHandler 110C  
                      ??_USBStdGetDscHandler 0070                                  ??i1___lldiv 0078  
                                _ep_data_out 02B9                 __size_of_USBCtrlTrfRxService 00CB  
              USBConfigureEndpoint@direction 0070                              ___aldiv@divisor 01AC  
               __size_of_USBCtrlTrfTxService 0073                            ??_PWM2_Initialize 01A0  
                            ___aldiv@counter 01B5                               ___wmul@product 01A4  
                                   _LATAbits 010C                                     _LATCbits 010E  
                 ??_USBCtrlEPServiceComplete 0075                                    clear_ram0 1D8D  
                                   _PIE1bits 0091                                     _PIE2bits 0092  
                   __size_of_TMR2_StartTimer 0003                ?_main_CDC_to_RS485_Initialize 0070  
                  __end_of_ADC_SelectChannel 1DE3          __size_of_INTERRUPT_InterruptManager 00E5  
                         my_uitoa@powerOfTen 01B4                                     _PIR1bits 0011  
                                   _PIR2bits 0012                                ??_TMR1_Reload 01A0  
                              ??_putUSBUSART 01A3                                     _UEP0bits 0E98  
                 _USBDeferINDataStagePackets 024F                  __size_of_USBCheckStdRequest 005A  
                                   _UCONbits 0E8E        main_CommunicationHandler@numBytesRead 01C8  
                       _USBConfigureEndpoint 110C                            ??_USART_getcUSART 0070  
                 main_SetDcDcRegulator@pI_mA 01C0             __size_of_USBStdFeatureReqHandler 0126  
                 main_SetDcDcRegulator@pU_mV 01C5                            ??_TMR1_Initialize 01A0  
                                 _ADCON0bits 009D                            ___wmul@multiplier 01A0  
                      ?_USBTransferOnePacket 01A0                     ADC_SelectChannel@channel 0071  
                    __size_of_FVR_Initialize 0004               main_Communication_Initialize@i 0071  
                        getsUSBUSART2@buffer 00E0                                ?_CDCTxService 0070  
                                   i1_memset 1E70                                 _RemoteWakeup 024D  
                             _cdc_trf_state2 01E5                     __size_ofi1_USBDeviceInit 00B0  
                         _RS232_Out_Data_Rdy 024B                      __end_of_USBStallHandler 1025  
                          ___lmul@multiplier 01A0                  ??_USBCtrlEPAllowStatusStage 0070  
                __end_of_USBStdSetCfgHandler 0A8F                         _MAIN_upConverterFlag 0249  
                          ??_TMR2_Initialize 01A0                                     _pCDCDst2 023D  
                                   _pCDCSrc2 0241                       __size_of_getsUSBUSART2 0052  
                         __end_of_device_dsc 0304                                   _CDCInitEP2 105C  
                    ?_USBCtrlTrfSetupHandler 0070                      USBStdGetStatusHandler@p 0071  
                     USBTransferOnePacket@ep 01A8                     ?_ADC_GetConversionResult 0070  
                                   _SetupPkt 00A0                INTERRUPT_InterruptManager@pwm 016C  
    INTERRUPT_InterruptManager@pwmCorrection 0245                      ??_OSCILLATOR_Initialize 01A0  
                      ?_USBConfigureEndpoint 0070                             __size_of___aldiv 0082  
                           __size_of___lldiv 0053                __size_ofi1_PWM2_LoadDutyValue 0016  
                          ??_USART_putcUSART 0070                   ?_main_CommunicationHandler 0070  
                        __end_of_TMR1_Reload 1DB5                          __end_of_putUSBUSART 1E70  
                                _line_coding 025D                               ??_CDCTxService 01AB  
                      _TMR1_InterruptHandler 0235             __size_of_main_CDC_to_RS485_Tasks 0079  
                     ??_ADC_IsConversionDone 0070                        __size_of_putUSBUSART2 0016  
                           __size_of_isdigit 000F                      __size_of_USBDeviceTasks 00FC  
                                   __ptext10 1EA1                                     __ptext11 1283  
                                   __ptext20 1ED3                                     __ptext12 12D6  
                                   __ptext21 1D78                                     __ptext13 1617  
                                 _T1GCONbits 0019                                     __ptext30 1DCA  
                                   __ptext22 1DA3                                     __ptext14 1DE3  
                                   __ptext31 1DB5                                     __ptext23 1D71  
                                   __ptext15 1F0A                                     __ptext40 1DF2  
                                   __ptext32 1D6B                                     __ptext24 1E02  
                                   __ptext16 1DAC                                     __ptext41 0C4A  
                                   __ptext25 1D6E                                     __ptext17 0D98  
                                   __ptext50 0B21                                     __ptext42 0F04  
                                   __ptext34 1E2C                                     __ptext26 1D87  
                                   __ptext18 097C                                     __ptext51 1488  
                                   __ptext43 0CE8                                     __ptext35 1D68  
                                   __ptext27 1E42                                     __ptext19 0E4B  
                                   __ptext60 1D9A                                     __ptext52 13D4  
                                   __ptext44 1F65                                     __ptext36 1688  
                                   __ptext28 1DBF                                     __ptext61 1FA9  
                                   __ptext53 0A00                                     __ptext45 1EEE  
                                   __ptext37 1E16                                     __ptext29 1D74  
                                   __ptext70 0733                                     __ptext62 1545  
                                   __ptext54 1E70                                     __ptext46 1000  
                                   __ptext38 1231                                     __ptext71 15A9  
                                   __ptext63 14E5                                     __ptext55 132A  
                                   __ptext47 1E88                                     __ptext39 1D7C  
                                   __ptext72 1780                                     __ptext64 105C  
                                   __ptext56 1701                                     __ptext48 142E  
                                   __ptext73 0804                                     __ptext65 1025  
                                   __ptext57 060D                                     __ptext49 137F  
                                   __ptext74 114E                                     __ptext66 08F9  
                                   __ptext58 1093                                     __ptext75 11DF  
                                   __ptext67 1F45                                     __ptext59 1F85  
                                   __ptext76 1DD6                                     __ptext68 110C  
                                   __ptext77 1D93                                     __ptext69 10CF  
                                   __ptext78 1D81                            ??_TMR1_StartTimer 01A0  
                              __size_of_atoi 0071                                     _errorMsg 0304  
             __end_of_USBCtrlTrfSetupHandler 13D4                                __size_of_main 001F  
                          ?_USBCtrlEPService 0070                           ??_USBCtrlEPService 0160  
                 __size_of_ADC_SelectChannel 000D                          _USBCtrlTrfInHandler 1780  
                                   _my_uitoa 0A8F                                     _outPipes 0220  
                       _USBCtrlTrfOutHandler 10CF                                     int$flags 007E  
                                   atoi@sign 01AA                      ?i1_USBTransferOnePacket 0070  
                  _USBCtrlEPAllowStatusStage 15A9               ??_main_CDC_to_RS485_Initialize 0070  
                          ??_TMR2_StartTimer 01A0                                 _putUSBUSART2 1E16  
         __end_of_INTERRUPT_InterruptManager 00E9                   _INTERRUPT_InterruptManager 0004  
                     ??_USBTransferOnePacket 01A4                                _getsUSBUSART2 1231  
                  _USBDeferStatusStagePacket 01E0                     CDCTxService@byte_to_send 01AD  
                           i1USBDeviceInit@i 0074                             i1USBDeviceInit@p 0071  
                                 _INTCONbits 000B                          _USBCheckCDCRequest2 1545  
                       ?_USBCtrlTrfInHandler 0070                                   _FVRCONbits 0117  
              USBCtrlTrfTxService@byteToSend 0072                                     isdigit@c 01A1  
                                   memset@p1 01A0                             ?_USBStallHandler 0070  
                   USBStdFeatureReqHandler@p 00EB                      __size_of_WDT_Initialize 0004  
                   _PwmDutyCycleCurrentLimit 01DF                                     intlevel1 0000  
                     __size_of_USBDeviceInit 00B9                  __end_of_ADC_StartConversion 1D6E  
    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 10CF     __size_of_USER_USB_CALLBACK_EVENT_HANDLER 003C  
          ??_USER_USB_CALLBACK_EVENT_HANDLER 007E             ?_USER_USB_CALLBACK_EVENT_HANDLER 00E0  
            _USER_USB_CALLBACK_EVENT_HANDLER 1093                            ??i1_USBDeviceInit 0070  
                           ___lldiv@dividend 01B0                      ?_PIN_MANAGER_Initialize 0070  
            __end_of_ADC_GetConversionResult 1D87                      ??_main_SetDcDcRegulator 01C1  
                             my_uitoa@ziffer 01B5                            __CFG_CLKOUTEN$OFF 0000  
      __end_of_main_Communication_Initialize 1FA9       __size_of_main_Communication_Initialize 0024  
              _main_Communication_Initialize 1F85                                  ?_CDCInitEP2 0070  
                           ??_ADC_Initialize 01A0                         ?_USBCheckCDCRequest2 0070  
                __size_of_PWM2_LoadDutyValue 0019               __end_ofi1_USBTransferOnePacket 097C  
                     ??_USBConfigureEndpoint 0071                        ?_USBCtrlTrfOutHandler 0070  
                                _TMR1_Reload 1DAC                                  _putUSBUSART 1E59  
                       __CFG_CPUDIV$NOCLKDIV 0000                          _USBCtrlTrfRxService 0733  
                         _USBWakeFromSuspend 1F65                      _USBStdFeatureReqHandler 060D  
                         _USBCheckCDCRequest 14E5                               ?_getsUSBUSART2 007B  
                        _USBCtrlTrfTxService 0804                               _FVR_Initialize 1D74  
                        ?_USBWakeFromSuspend 0070                             ___lldiv@quotient 01B5  
                            _PWM2_Initialize 1D87                        ??_USBCtrlTrfInHandler 00E8  
                      _USBAlternateInterface 0268                          ?_USBCheckCDCRequest 0070  
                               ___aldiv@sign 01B6                        i1_ADC_StartConversion 1D68  
                        USBEnableEndpoint@ep 007C                              _endpoint_number 0259  
                       ?_USBCtrlTrfRxService 0070                                ?_getsUSBUSART 01AB  
             __end_of_PIN_MANAGER_Initialize 1E59                     ?_USBCtrlEPAllowDataStage 0070  
                       ?_USBCtrlTrfTxService 0070                        __end_of_CDCTxService2 0CE8  
                         putUSBUSART2@length 0070                           _MAIN_Iout_limit_mA 026A  
               _USBStatusStageTimeoutCounter 0253                        _TMR2_InterruptHandler 0237  
                       ??_USBWakeFromSuspend 00E6                   USBTransferOnePacket@handle 01A9  
              i1PWM2_LoadDutyValue@dutyValue 0070                              _USART_getcUSART 1DF2  
                      ??_USBCheckCDCRequest2 0070                         __end_of_CDCTxService 0E4B  
                            _TMR1_Initialize 1E02                         ??_USBCheckCDCRequest 0070  
                                 _USB_CD_Ptr 01B3                     ??_main_switchStepUp_Down 01BF  
